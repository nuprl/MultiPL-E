language: cs
name: HumanEval_18_how_many_times
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        // >>> HowManyTimes((\"\
    \"), (\"a\"))\n        // (0L)\n        // >>> HowManyTimes((\"aaa\"), (\"a\"\
    ))\n        // (3L)\n        // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n     \
    \   // (3L)\n        // >>> HowManyTimes((\"aaaa\"), (\"aaa\"))\n        // (2L)\n\
    \        // >>> HowManyTimes((\"aaaaa\"), (\"aaa\"))\n        // (3L)\n      \
    \  // >>> HowManyTimes((\"aaaaa\"), (\"aaaa\"))\n        // (2L)\n        // >>>\
    \ HowManyTimes((\"aaaaa\"), (\"aaaaa\"))\n        // (1L)\n        // >>> HowManyTimes((\"\
    aaaaaa\"), (\"aaaaa\"))\n        // (2L)\n        // >>> HowManyTimes((\"aaaaaa\"\
    ), (\"aaaaaa\"))\n        // (1L)\n        // >>> HowManyTimes((\"aaaaaaa\"),\
    \ (\"aaaaaa\"))\n        // (2L)\n        // >>> HowManyTimes((\"aaaaaaa\"), (\"\
    aaaaaaa\"))\n        // (1L)\n        // >>> HowManyTimes((\"aaaaaaaa\"), (\"\
    aaaaaaa\"))\n        // (2L)\n        // >>> HowManyTimes((\"aaaaaaaa\"), (\"\
    aaaaaaaa\"))\n        // (1L)\n        // >>> HowManyTimes((\"aaaaaaaaa\"), (\"\
    aaaaaaaa\"))\n        // (2L)\n        // >>> HowManyTimes((\"aaaaaaaaa\"), (\"\
    aaaaaaaaa\"))\n        // (1L)\n        // >>> HowManyTimes((\"aaaaaaaaaa\"),\
    \ (\"aaaaaaaaa\"))\n        // (2L)\n        // >>> HowManyTimes((\"aaaaaaaaaa\"\
    ), (\"aaaaaaaaaa\"))\n        // (1L)\n        // >>> HowManyTimes((\"aaaaaaaaaaa\"\
    ), (\"aaaaaaaaaa\"))\n        // (2L)\n        // >>> HowManyTimes((\"aaaaaaaaaaa\"\
    ), (\"aaaaaaaaaaa\"))\n        // (1L)\n        // >>> HowManyTimes((\"aaaaaaaaaaaa\"\
    ), (\"aaaaaaaaaaa\"))\n        // (2L)\n        // >>> HowManyTimes((\"aaaaaaaaaaaa\"\
    ), (\"aaaaaaaaaaaa\"))\n        // (1L)\n        // >>> HowManyTimes((\"aaaaaaaaaaaaa\"\
    ), (\"aaaaaaaaaaaa\"))\n        // (2L\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl7yi6t8l.cs(16,24): error CS0161: ''Problem.HowManyTimes(string, string)'':
    not all code paths return a value

    '
  timestamp: 1659797638
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long result\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                result++;\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long result\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                result++;\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        int n = str.Length;\n\
    \        int m = substring.Length;\n        long result = 0;\n        for (int\
    \ i = 0; i < n; i++) {\n            if (str[i] == substring[0]) {\n          \
    \      bool ok = true;\n                for (int j = 1; j < m; j++) {\n      \
    \              if (i + j >= n || str[i + j] != substring[j]) {\n             \
    \           ok = false;\n                        break;\n                    }\n\
    \                }\n                if (ok) {\n                    result++;\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        int pos = 0;\n        while (pos < str.Length) {\n           \
    \ int newPos = str.IndexOf(substring, pos);\n            if (newPos == -1) {\n\
    \                break;\n            }\n            count++;\n            pos\
    \ = newPos + 1;\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659797638
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (i + substring.Length\
    \ <= str.Length && str.Substring(i, substring.Length) == substring) {\n      \
    \          count++;\n            }\n        }\n        return count;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659797638
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ Math.Min(substring.Length, str.Length - i)) == substring) {\n              \
    \  count++;\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659797638
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long result\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                result++;\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long result\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                result++;\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long result\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                result++;\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long result\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                result++;\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long result\
    \ = 0;\n        for (int i = 0; i <= str.Length - substring.Length; i++) {\n \
    \           if (str.Substring(i, substring.Length) == substring) {\n         \
    \       result++;\n            }\n        }\n        return result;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long result\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                result++;\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long result\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                result++;\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i <= str.Length - substring.Length; i++) {\n \
    \           if (str.Substring(i, substring.Length) == substring) {\n         \
    \       count++;\n            }\n        }\n        return count;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"\
    ), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) ==\
    \ (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long result\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                result++;\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long result\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                result++;\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long result\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                result++;\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i <= str.Length - substring.Length; i++) {\n \
    \           if (str.Substring(i, substring.Length) == substring) {\n         \
    \       count++;\n            }\n        }\n        return count;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"\
    ), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) ==\
    \ (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i <= str.Length - substring.Length; i++) {\n \
    \           if (str.Substring(i, substring.Length) == substring) {\n         \
    \       count++;\n            }\n        }\n        return count;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"\
    ), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) ==\
    \ (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long result\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                result++;\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <98bff9aa765e4b0e94b684246c0d33e0>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        int count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00010]\
    \ in <2e215247a9bc41e28fa5b9b213e0479c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <2e215247a9bc41e28fa5b9b213e0479c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00010]\
    \ in <2e215247a9bc41e28fa5b9b213e0479c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <2e215247a9bc41e28fa5b9b213e0479c>:0 \n"
  stdout: ''
  timestamp: 1659797638
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        int i = 0;\n        while (i < str.Length) {\n            int\
    \ index = str.IndexOf(substring, i);\n            if (index == -1) {\n       \
    \         break;\n            }\n            count++;\n            i = index +\
    \ 1;\n        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659797638
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        // >>> HowManyTimes((\"\
    \"), (\"a\"))\n        // (0L)\n        // >>> HowManyTimes((\"aaa\"), (\"a\"\
    ))\n        // (3L)\n        // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n     \
    \   // (3L)\n        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <355a2a1d07e0400da64c5d611f1d23f0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <355a2a1d07e0400da64c5d611f1d23f0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <355a2a1d07e0400da64c5d611f1d23f0>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <355a2a1d07e0400da64c5d611f1d23f0>:0 \n"
  stdout: ''
  timestamp: 1659797638
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.ArgumentOutOfRangeException: Index and length must refer to\
    \ a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00011]\
    \ in <3516e2c026d549a19648a2f52a33c29c>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00033] in <3516e2c026d549a19648a2f52a33c29c>:0 \n"
  stdout: ''
  timestamp: 1659797551

name: HumanEval_140_fix_spaces
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a string text, replace all spaces in it with underscores,\
  \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
  \ all consecutive spaces with - \n    // >>> FixSpaces((\" Example\"))\n    // (\"\
  Example\")\n    // >>> FixSpaces((\" Example 1\"))\n    // (\"Example_1\")\n   \
  \ // >>> FixSpaces((\" Example 2\"))\n    // (\"_Example_2\")\n    // >>> FixSpaces((\"\
  \ Example 3\"))\n    // (\"_Example-3\")\n    public static string FixSpaces(string\
  \ text) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"\
  Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif\
  \ \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow Yellow\
  \  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"\
  Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1\
  \ 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
completions: ["        // Your code goes here\n        return \"\";", "        //\
    \ TODO: Implement this function\n        return \"\";", "        string result\
    \ = \"\";\n        int spaces = 0;\n        for (int i = 0; i < text.Length; i++)\
    \ {\n            if (text[i] == ' ') {\n                spaces++;\n          \
    \      if (spaces == 2) {\n                    result += '-';\n              \
    \  }\n            } else {\n                if (spaces == 1) {\n             \
    \       result += '_';\n                }\n                spaces = 0;\n     \
    \           result += text[i];\n            }\n        }\n        return result;",
  "        // TODO: Implement this function\n        return \"\";", '        return
    "";', "        string result = \"\";\n        int count = 0;\n        for (int\
    \ i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n        \
    \        count++;\n                if (count == 1) {\n                    result\
    \ += \"_\";\n                }\n                else if (count == 2) {\n     \
    \               result += \"_\";\n                }\n                else if (count\
    \ > 2) {\n                    result += \"-\";\n                }\n          \
    \  }\n            else {\n                count = 0;\n                result +=\
    \ text[i];\n            }\n        }\n        return result;", '        return
    text.Replace(" ", "_").Replace("__", "_").Replace("___", "-");', "        // TODO:\
    \ Implement this function\n        return \"\";", '        return text;', "  \
    \      string result = \"\";\n        int count = 0;\n        for (int i = 0;\
    \ i < text.Length; i++) {\n            if (text[i] == ' ') {\n               \
    \ count++;\n                if (count == 1) {\n                    result += \"\
    _\";\n                }\n                else if (count == 2) {\n            \
    \        result += \"_\";\n                }\n                else if (count >\
    \ 2) {\n                    result += \"-\";\n                }\n            }\n\
    \            else {\n                count = 0;\n                result += text[i];\n\
    \            }\n        }\n        return result;", "        // Your code goes\
    \ here\n        return text;", "        // Your code goes here\n        return\
    \ \"\";", "        // TODO: Implement this function\n        return \"\";", " \
    \       // TODO: Implement this function\n        return \"\";", "        int\
    \ count = 0;\n        string result = \"\";\n        for (int i = 0; i < text.Length;\
    \ i++) {\n            if (text[i] == ' ') {\n                count++;\n      \
    \          if (count > 2) {\n                    result += '-';\n            \
    \    } else {\n                    result += '_';\n                }\n       \
    \     } else {\n                count = 0;\n                result += text[i];\n\
    \            }\n        }\n        return result;", '        return "";', "  \
    \      // Your code goes here\n        return \"\";", "        // TODO: Implement\
    \ this function\n        return \"\";", "        // TODO: Implement this function\n\
    \        return \"\";", "        var sb = new StringBuilder();\n        var spaces\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           spaces++;\n            } else {\n                if (spaces == 1)\
    \ {\n                    sb.Append('_');\n                } else if (spaces >\
    \ 2) {\n                    sb.Append('-');\n                }\n             \
    \   sb.Append(c);\n                spaces = 0;\n            }\n        }\n   \
    \     return sb.ToString();", "        // TODO: Implement this function\n    \
    \    return \"\";", '        return text.Replace(" ", "_").Replace("__", "_").Replace("___",
    "-");', "        string result = \"\";\n        int count = 0;\n        for (int\
    \ i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n        \
    \        count++;\n                if (count > 2) {\n                    result\
    \ += '-';\n                } else {\n                    result += '_';\n    \
    \            }\n            } else {\n                count = 0;\n           \
    \     result += text[i];\n            }\n        }\n        return result;", " \
    \       string result = \"\";\n        int count = 0;\n        for (int i = 0;\
    \ i < text.Length; i++) {\n            if (text[i] == ' ') {\n               \
    \ count++;\n                if (count == 1) {\n                    result += \"\
    _\";\n                }\n                else if (count == 2) {\n            \
    \        result += \"_\";\n                }\n                else if (count >\
    \ 2) {\n                    result += \"-\";\n                }\n            }\n\
    \            else {\n                count = 0;\n                result += text[i];\n\
    \            }\n        }\n        return result;", "        string result = \"\
    \";\n        int count = 0;\n        for (int i = 0; i < text.Length; i++) {\n\
    \            if (text[i] == ' ') {\n                count++;\n               \
    \ if (count > 2) {\n                    result += '-';\n                } else\
    \ {\n                    result += '_';\n                }\n            } else\
    \ {\n                result += text[i];\n                count = 0;\n        \
    \    }\n        }\n        return result;", "        string result = \"\";\n \
    \       int count = 0;\n        for (int i = 0; i < text.Length; i++) {\n    \
    \        if (text[i] == ' ') {\n                count++;\n                if (count\
    \ == 1) {\n                    result += \"_\";\n                }\n         \
    \       else if (count == 2) {\n                    result += \"_\";\n       \
    \         }\n                else if (count > 2) {\n                    result\
    \ += \"-\";\n                }\n            }\n            else {\n          \
    \      count = 0;\n                result += text[i];\n            }\n       \
    \ }\n        return result;", "        string result = \"\";\n        int count\
    \ = 0;\n        for (int i = 0; i < text.Length; i++) {\n            if (text[i]\
    \ == ' ') {\n                count++;\n                if (count == 2) {\n   \
    \                 result += '-';\n                }\n            } else {\n  \
    \              if (count > 0) {\n                    result += '_';\n        \
    \        }\n                count = 0;\n                result += text[i];\n \
    \           }\n        }\n        return result;", "        // Your code goes\
    \ here.\n        return \"\";", '        return text.Replace(" ", "_").Replace("__",
    "_").Replace("___", "-");', "        // TODO: Implement this function\n      \
    \  return \"\";", "        // TODO: Implement this function\n        return \"\
    \";", '        return text.Replace(" ", "_").Replace("__", "_").Replace("___",
    "-");', "        // Your code here\n        return text;", "        // TODO: Implement\
    \ this function\n        return \"\";", "        // TODO: Implement this function\n\
    \        return \"\";", "        // TODO: Implement this function\n        return\
    \ \"\";", "        // Your code goes here\n        return \"\";", "        //\
    \ Your code here\n        return \"\";", "        string result = \"\";\n    \
    \    int count = 0;\n        for (int i = 0; i < text.Length; i++) {\n       \
    \     if (text[i] == ' ') {\n                count++;\n                if (count\
    \ == 1) {\n                    result += '_';\n                }\n           \
    \     else if (count == 2) {\n                    result += '_';\n           \
    \     }\n                else if (count > 2) {\n                    result +=\
    \ '-';\n                }\n            }\n            else {\n               \
    \ result += text[i];\n                count = 0;\n            }\n        }\n \
    \       return result;", '        return text;', "        string result = \"\"\
    ;\n        int count = 0;\n        for (int i = 0; i < text.Length; i++) {\n \
    \           if (text[i] == ' ') {\n                count++;\n                if\
    \ (count == 1) {\n                    result += '_';\n                }\n    \
    \            else if (count == 2) {\n                    result += '_';\n    \
    \            }\n                else if (count > 2) {\n                    result\
    \ += '-';\n                }\n            }\n            else {\n            \
    \    count = 0;\n                result += text[i];\n            }\n        }\n\
    \        return result;", "        string result = \"\";\n        int count =\
    \ 0;\n        for (int i = 0; i < text.Length; i++) {\n            if (text[i]\
    \ == ' ') {\n                count++;\n                if (count == 1) {\n   \
    \                 result += '_';\n                }\n                else if (count\
    \ == 2) {\n                    result += '_';\n                }\n           \
    \     else if (count > 2) {\n                    result += '-';\n            \
    \    }\n            }\n            else {\n                count = 0;\n      \
    \          result += text[i];\n            }\n        }\n        return result;",
  '        return text;', "        var result = new StringBuilder();\n        var\
    \ spaces = 0;\n        for (int i = 0; i < text.Length; i++) {\n            if\
    \ (text[i] == ' ') {\n                spaces++;\n            } else {\n      \
    \          if (spaces == 1) {\n                    result.Append('_');\n     \
    \           } else if (spaces > 2) {\n                    result.Append('-');\n\
    \                }\n                result.Append(text[i]);\n                spaces\
    \ = 0;\n            }\n        }\n        return result.ToString();", '        return
    text.Replace(" ", "_").Replace("__", "_").Replace("___", "-");', "        string\
    \ result = \"\";\n        int count = 0;\n        for (int i = 0; i < text.Length;\
    \ i++) {\n            if (text[i] == ' ') {\n                count++;\n      \
    \          if (count == 2) {\n                    result += \"-\";\n         \
    \       }\n            } else {\n                if (count == 1) {\n         \
    \           result += \"_\";\n                }\n                count = 0;\n\
    \                result += text[i];\n            }\n        }\n        return\
    \ result;", "        var sb = new StringBuilder();\n        var count = 0;\n \
    \       foreach (var c in text) {\n            if (c == ' ') {\n             \
    \   count++;\n                if (count == 2) {\n                    sb.Append('-');\n\
    \                }\n            } else {\n                if (count == 1) {\n\
    \                    sb.Append('_');\n                }\n                count\
    \ = 0;\n                sb.Append(c);\n            }\n        }\n        if (count\
    \ == 1) {\n            sb.Append('_');\n        }\n        return sb.ToString();",
  "        string result = \"\";\n        int spaceCount = 0;\n        for (int i\
    \ = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n          \
    \      spaceCount++;\n                if (spaceCount == 1) {\n               \
    \     result += \"_\";\n                } else if (spaceCount == 2) {\n      \
    \              result += \"_\";\n                } else if (spaceCount > 2) {\n\
    \                    result += \"-\";\n                }\n            } else {\n\
    \                spaceCount = 0;\n                result += text[i];\n       \
    \     }\n        }\n        return result;", "        // Your code goes here\n\
    \        return \"\";", '        return text;', "        // TODO: Implement this\
    \ function\n        return \"\";", "        string result = \"\";\n        int\
    \ count = 0;\n        for (int i = 0; i < text.Length; i++) {\n            if\
    \ (text[i] == ' ') {\n                count++;\n                if (count == 1)\
    \ {\n                    result += '_';\n                }\n                else\
    \ if (count == 2) {\n                    result += '_';\n                }\n \
    \               else if (count > 2) {\n                    result += '-';\n  \
    \              }\n            }\n            else {\n                count = 0;\n\
    \                result += text[i];\n            }\n        }\n        return\
    \ result;", '        return text.Replace(" ", "_").Replace("__", "_").Replace("___",
    "-");', "        string result = \"\";\n        int count = 0;\n        for (int\
    \ i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n        \
    \        count++;\n                if (count == 1) {\n                    result\
    \ += '_';\n                }\n                else if (count == 2) {\n       \
    \             result += '_';\n                }\n                else if (count\
    \ > 2) {\n                    result += '-';\n                }\n            }\n\
    \            else {\n                count = 0;\n                result += text[i];\n\
    \            }\n        }\n        return result;", "        // TODO: Implement\
    \ this function\n        return \"\";", "        // TODO: Implement this function\n\
    \        return \"\";", "        string result = \"\";\n        int count = 0;\n\
    \        for (int i = 0; i < text.Length; i++) {\n            if (text[i] == '\
    \ ') {\n                count++;\n                if (count == 2) {\n        \
    \            result += '-';\n                }\n            } else {\n       \
    \         if (count == 1) {\n                    result += '_';\n            \
    \    }\n                count = 0;\n                result += text[i];\n     \
    \       }\n        }\n        return result;", "        // TODO: Implement this\
    \ function\n        return \"\";", "        // TODO: Implement this method\n \
    \       return \"\";", '        return text;', "        string result = \"\";\n\
    \        int count = 0;\n        for (int i = 0; i < text.Length; i++) {\n   \
    \         if (text[i] == ' ') {\n                count++;\n                if\
    \ (count == 1) {\n                    result += \"_\";\n                }\n  \
    \              else if (count == 2) {\n                    result += \"_\";\n\
    \                }\n                else if (count > 2) {\n                  \
    \  result += \"-\";\n                }\n            }\n            else {\n  \
    \              count = 0;\n                result += text[i];\n            }\n\
    \        }\n        return result;", "        StringBuilder sb = new StringBuilder();\n\
    \        int spaces = 0;\n        foreach (char c in text) {\n            if (c\
    \ == ' ') {\n                spaces++;\n                if (spaces == 2) {\n \
    \                   sb.Append('-');\n                }\n            } else {\n\
    \                spaces = 0;\n                if (c == ' ') {\n              \
    \      sb.Append('_');\n                } else {\n                    sb.Append(c);\n\
    \                }\n            }\n        }\n        return sb.ToString();",
  "        // your code here\n        return \"\";", "        string result = \"\"\
    ;\n        int count = 0;\n        for (int i = 0; i < text.Length; i++) {\n \
    \           if (text[i] == ' ') {\n                count++;\n                if\
    \ (count == 2) {\n                    result += '-';\n                }\n    \
    \        } else {\n                if (count == 1) {\n                    result\
    \ += '_';\n                }\n                count = 0;\n                result\
    \ += text[i];\n            }\n        }\n        return result;", '        return
    text.Replace(" ", "_").Replace("  ", "_").Replace("   ", "-");', "        // TODO:\
    \ Implement this function\n        return \"\";", '        return text.Replace("
    ", "_").Replace("__", "_").Replace("___", "-");', "        // TODO: Implement\
    \ this function\n        return \"\";", "        string result = \"\";\n     \
    \   int count = 0;\n        for (int i = 0; i < text.Length; i++) {\n        \
    \    if (text[i] == ' ') {\n                count++;\n                if (count\
    \ == 1) {\n                    result += '_';\n                }\n           \
    \     else if (count == 2) {\n                    result += '_';\n           \
    \     }\n                else if (count > 2) {\n                    result +=\
    \ '-';\n                }\n            }\n            else {\n               \
    \ count = 0;\n                result += text[i];\n            }\n        }\n \
    \       return result;", "        // TODO: Implement this function\n        string\
    \ result = \"\";\n        int count = 0;\n        for (int i = 0; i < text.Length;\
    \ i++) {\n            if (text[i] == ' ') {\n                count++;\n      \
    \          if (count == 1) {\n                    result += \"_\";\n         \
    \       }\n                else if (count == 2) {\n                    result\
    \ += \"_\";\n                }\n                else if (count > 2) {\n      \
    \              result += \"-\";\n                }\n            }\n          \
    \  else {\n                count = 0;\n                result += text[i];\n  \
    \          }\n        }\n        return result;", "        // TODO: Implement\
    \ this function\n        return \"\";", "        // TODO: Implement this method\n\
    \        return \"\";", "        // Your code goes here\n        return \"\";",
  "        var sb = new StringBuilder();\n        var count = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                count++;\n \
    \               if (count == 2) {\n                    sb.Append('-');\n     \
    \           }\n            } else {\n                if (count > 0) {\n      \
    \              sb.Append('_');\n                }\n                sb.Append(c);\n\
    \                count = 0;\n            }\n        }\n        return sb.ToString();",
  "        // TODO: Implement this function\n        return \"\";", "        // TODO:\
    \ Implement this function\n        return \"\";", "        // TODO: Implement\n\
    \        return \"\";", "        // TODO: Implement this function\n        return\
    \ \"\";", '        return text;', "        // TODO: implement\n        return\
    \ \"\";", "        // TODO: Implement this function\n        return \"\";", " \
    \       // TODO: Implement\n        return \"\";", "        int count = 0;\n \
    \       string result = \"\";\n        for (int i = 0; i < text.Length; i++) {\n\
    \            if (text[i] == ' ') {\n                count++;\n               \
    \ if (count > 2) {\n                    result += '-';\n                } else\
    \ {\n                    result += '_';\n                }\n            } else\
    \ {\n                count = 0;\n                result += text[i];\n        \
    \    }\n        }\n        return result;", "        string result = \"\";\n \
    \       int count = 0;\n        for (int i = 0; i < text.Length; i++) {\n    \
    \        if (text[i] == ' ') {\n                count++;\n                if (count\
    \ == 1) {\n                    result += \"_\";\n                }\n         \
    \       else if (count == 2) {\n                    result += \"_\";\n       \
    \         }\n                else if (count > 2) {\n                    result\
    \ += \"-\";\n                }\n            }\n            else {\n          \
    \      count = 0;\n                result += text[i];\n            }\n       \
    \ }\n        return result;", "        // Your code goes here\n        return\
    \ \"\";", '        return text.Replace(" ", "_").Replace("__", "_").Replace("___",
    "-");', "        string result = \"\";\n        int count = 0;\n        for (int\
    \ i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n        \
    \        count++;\n                if (count == 2) {\n                    result\
    \ += '-';\n                }\n            } else {\n                if (count\
    \ > 0) {\n                    result += '_';\n                }\n            \
    \    count = 0;\n                result += text[i];\n            }\n        }\n\
    \        return result;", "        // Your code goes here\n        return \"\"\
    ;", "        string result = \"\";\n        int count = 0;\n        for (int i\
    \ = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n          \
    \      count++;\n                if (count == 1) {\n                    result\
    \ += \"_\";\n                }\n                else if (count == 2) {\n     \
    \               result += \"_\";\n                }\n                else if (count\
    \ > 2) {\n                    result += \"-\";\n                }\n          \
    \  }\n            else {\n                count = 0;\n                result +=\
    \ text[i];\n            }\n        }\n        return result;", "        // TODO:\
    \ Implement this function\n        return \"\";", '        return text.Replace("
    ", "_").Replace("__", "_").Replace("___", "-");', "        int count = 0;\n  \
    \      string result = \"\";\n        for (int i = 0; i < text.Length; i++) {\n\
    \            if (text[i] == ' ') {\n                count++;\n               \
    \ if (count > 2) {\n                    result += '-';\n                } else\
    \ {\n                    result += '_';\n                }\n            } else\
    \ {\n                count = 0;\n                result += text[i];\n        \
    \    }\n        }\n        return result;", "        // TODO: Implement this function\n\
    \        return \"\";", "        // your code here\n        return \"\";", '        return
    text.Replace(" ", "_").Replace("  ", "_").Replace("   ", "-");', "        int\
    \ count = 0;\n        string result = \"\";\n        for (int i = 0; i < text.Length;\
    \ i++) {\n            if (text[i] == ' ') {\n                count++;\n      \
    \          if (count == 2) {\n                    result += '-';\n           \
    \     }\n            } else {\n                count = 0;\n                result\
    \ += text[i];\n            }\n        }\n        return result;", "        //\
    \ TODO: Implement this function\n        return \"\";", "        string result\
    \ = \"\";\n        int count = 0;\n        for (int i = 0; i < text.Length; i++)\
    \ {\n            if (text[i] == ' ') {\n                count++;\n           \
    \     if (count > 2) {\n                    result += '-';\n                }\
    \ else {\n                    result += '_';\n                }\n            }\
    \ else {\n                result += text[i];\n                count = 0;\n   \
    \         }\n        }\n        return result;", "        string result = \"\"\
    ;\n        int count = 0;\n        for (int i = 0; i < text.Length; i++) {\n \
    \           if (text[i] == ' ') {\n                count++;\n                if\
    \ (count == 1) {\n                    result += \"_\";\n                }\n  \
    \              else if (count == 2) {\n                    result += \"_\";\n\
    \                }\n                else if (count > 2) {\n                  \
    \  result += \"-\";\n                }\n            }\n            else {\n  \
    \              count = 0;\n                result += text[i];\n            }\n\
    \        }\n        return result;", '        return text.Replace(" ", "_").Replace("__",
    "_").Replace("___", "-");', "        int count = 0;\n        string result = \"\
    \";\n        for (int i = 0; i < text.Length; i++) {\n            if (text[i]\
    \ == ' ') {\n                count++;\n                if (count == 1) {\n   \
    \                 result += \"_\";\n                }\n                if (count\
    \ > 2) {\n                    result += \"-\";\n                }\n          \
    \  } else {\n                count = 0;\n                result += text[i];\n\
    \            }\n        }\n        return result;", "        // TODO: Implement\
    \ this function\n        return \"\";", "        int count = 0;\n        for (int\
    \ i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n        \
    \        count++;\n            } else {\n                count = 0;\n        \
    \    }\n            if (count == 3) {\n                text = text.Substring(0,\
    \ i) + '-' + text.Substring(i + 1);\n                count = 1;\n            }\n\
    \        }\n        return text.Replace(\" \", \"_\");", "        string result\
    \ = \"\";\n        int count = 0;\n        for (int i = 0; i < text.Length; i++)\
    \ {\n            if (text[i] == ' ') {\n                count++;\n           \
    \     if (count == 1) {\n                    result += \"_\";\n              \
    \  }\n                else if (count == 2) {\n                    result += \"\
    _\";\n                }\n                else if (count > 2) {\n             \
    \       result += \"-\";\n                }\n            }\n            else {\n\
    \                count = 0;\n                result += text[i];\n            }\n\
    \        }\n        return result;", "        int count = 0;\n        string result\
    \ = \"\";\n        for (int i = 0; i < text.Length; i++) {\n            if (text[i]\
    \ == ' ') {\n                count++;\n                if (count == 2) {\n   \
    \                 result += '-';\n                }\n            } else {\n  \
    \              if (count == 1) {\n                    result += '_';\n       \
    \         }\n                count = 0;\n                result += text[i];\n\
    \            }\n        }\n        return result;", "        string result = \"\
    \";\n        int count = 0;\n        for (int i = 0; i < text.Length; i++) {\n\
    \            if (text[i] == ' ') {\n                count++;\n               \
    \ if (count == 2) {\n                    result += '-';\n                }\n \
    \           } else {\n                if (count == 1) {\n                    result\
    \ += '_';\n                }\n                count = 0;\n                result\
    \ += text[i];\n            }\n        }\n        return result;", "        string\
    \ result = \"\";\n        int count = 0;\n        for (int i = 0; i < text.Length;\
    \ i++) {\n            if (text[i] == ' ') {\n                count++;\n      \
    \          if (count == 1) {\n                    result += '_';\n           \
    \     }\n                else if (count == 2) {\n                    result +=\
    \ '_';\n                }\n                else if (count > 2) {\n           \
    \         result += '-';\n                }\n            }\n            else {\n\
    \                count = 0;\n                result += text[i];\n            }\n\
    \        }\n        return result;", "        // Your code goes here\n       \
    \ return \"\";", "        // TODO: Implement this function\n        return \"\"\
    ;", "        // TODO: Implement this function\n        return text;", "      \
    \  // TODO: Implement this function\n        return \"\";", "        // Your code\
    \ goes here\n        return \"\";", '        return text;', '        return text.Replace("
    ", "_").Replace("__", "_").Replace("___", "-");', "        int count = 0;\n  \
    \      for (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ')\
    \ {\n                count++;\n            } else {\n                count = 0;\n\
    \            }\n            if (count == 3) {\n                text = text.Substring(0,\
    \ i - 2) + \"-\";\n                count = 1;\n            }\n        }\n    \
    \    return text.Replace(\" \", \"_\");", "        // TODO: Implement this function\n\
    \        return text;", "        // your code here\n        return \"\";", " \
    \       // TODO: Implement this function\n        return \"\";", "        // TODO:\
    \ Implement this function\n        return \"\";", "        string result = \"\"\
    ;\n        int count = 0;\n        for (int i = 0; i < text.Length; i++) {\n \
    \           if (text[i] == ' ') {\n                count++;\n                if\
    \ (count == 1) {\n                    result += \"_\";\n                }\n  \
    \              else if (count == 2) {\n                    result += \"_\";\n\
    \                }\n                else if (count > 2) {\n                  \
    \  result += \"-\";\n                }\n            }\n            else {\n  \
    \              count = 0;\n                result += text[i];\n            }\n\
    \        }\n        return result;", "        var sb = new StringBuilder();\n\
    \        int count = 0;\n        foreach (var c in text) {\n            if (c\
    \ == ' ') {\n                count++;\n                if (count == 2) {\n   \
    \                 sb.Append('-');\n                }\n            } else {\n \
    \               if (count > 0) {\n                    sb.Append('_');\n      \
    \          }\n                sb.Append(c);\n                count = 0;\n    \
    \        }\n        }\n        return sb.ToString();", "        string result\
    \ = \"\";\n        int count = 0;\n        for (int i = 0; i < text.Length; i++)\
    \ {\n            if (text[i] == ' ') {\n                count++;\n           \
    \     if (count == 1) {\n                    result += \"_\";\n              \
    \  }\n                else if (count == 2) {\n                    result += \"\
    _\";\n                }\n                else if (count > 2) {\n             \
    \       result += \"-\";\n                }\n            }\n            else {\n\
    \                count = 0;\n                result += text[i];\n            }\n\
    \        }\n        return result;", "        string result = \"\";\n        int\
    \ count = 0;\n        for (int i = 0; i < text.Length; i++) {\n            if\
    \ (text[i] == ' ') {\n                count++;\n                if (count == 1)\
    \ {\n                    result += \"_\";\n                }\n               \
    \ else if (count == 2) {\n                    result += \"_\";\n             \
    \   }\n                else if (count > 2) {\n                    result += \"\
    -\";\n                }\n            }\n            else {\n                count\
    \ = 0;\n                result += text[i];\n            }\n        }\n       \
    \ return result;", "        var sb = new StringBuilder();\n        var spaces\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           spaces++;\n            } else {\n                if (spaces == 1)\
    \ {\n                    sb.Append('_');\n                } else if (spaces >\
    \ 2) {\n                    sb.Append('-');\n                }\n             \
    \   sb.Append(c);\n                spaces = 0;\n            }\n        }\n   \
    \     return sb.ToString();", "        // Your code goes here\n        return\
    \ \"\";", "        // TODO: Implement this function\n        return text;", '        return
    text.Replace(" ", "_").Replace("__", "_").Replace("___", "-");', "        // TODO\n\
    \        return \"\";", '        return text.Replace(" ", "_").Replace("__", "_").Replace("___",
    "-");', "        // TODO: Implement this function\n        return \"\";", "  \
    \      string result = \"\";\n        int count = 0;\n        for (int i = 0;\
    \ i < text.Length; i++) {\n            if (text[i] == ' ') {\n               \
    \ count++;\n                if (count == 1) {\n                    result += \"\
    _\";\n                }\n                else if (count == 2) {\n            \
    \        result += \"_\";\n                }\n                else if (count >\
    \ 2) {\n                    result += \"-\";\n                }\n            }\n\
    \            else {\n                count = 0;\n                result += text[i];\n\
    \            }\n        }\n        return result;", "        // Your code goes\
    \ here\n        return \"\";", "        // TODO: Implement this method\n     \
    \   return \"\";", "        // TODO: Implement this function\n        return \"\
    \";", "        if (text == null) {\n            return null;\n        }\n    \
    \    if (text.Length == 0) {\n            return \"\";\n        }\n        StringBuilder\
    \ sb = new StringBuilder();\n        int spaceCount = 0;\n        for (int i =\
    \ 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n            \
    \    spaceCount++;\n            } else {\n                if (spaceCount == 1)\
    \ {\n                    sb.Append('_');\n                } else if (spaceCount\
    \ > 2) {\n                    sb.Append('-');\n                }\n           \
    \     sb.Append(text[i]);\n                spaceCount = 0;\n            }\n  \
    \      }\n        if (spaceCount == 1) {\n            sb.Append('_');\n      \
    \  } else if (spaceCount > 2) {\n            sb.Append('-');\n        }\n    \
    \    return sb.ToString();", "        // TODO: Implement this function\n     \
    \   return \"\";", "        // TODO: Implement this method\n        return \"\"\
    ;", '        return text.Replace(" ", "_").Replace("__", "_").Replace("___", "-");',
  "        // Your code goes here\n        return text;", "        // Your code goes\
    \ here\n        return \"\";", '        return text.Replace(" ", "_").Replace("__",
    "_").Replace("___", "-");', '        return "";', '        return text;', "  \
    \      string result = \"\";\n        int counter = 0;\n        for (int i = 0;\
    \ i < text.Length; i++) {\n            if (text[i] == ' ') {\n               \
    \ counter++;\n                if (counter == 2) {\n                    result\
    \ += '-';\n                }\n            } else {\n                counter =\
    \ 0;\n                result += text[i];\n            }\n        }\n        return\
    \ result;", "        // TODO: Implement this function\n        return \"\";",
  "        // TODO: Implement this function\n        return \"\";", "        // TODO:\
    \ Implement this function\n        return \"\";", "        // TODO: Implement\
    \ this function\n        return \"\";", "        string result = \"\";\n     \
    \   int count = 0;\n        for (int i = 0; i < text.Length; i++) {\n        \
    \    if (text[i] == ' ') {\n                count++;\n                if (count\
    \ == 2) {\n                    result += '-';\n                }\n           \
    \ } else {\n                if (count == 1) {\n                    result += '_';\n\
    \                }\n                count = 0;\n                result += text[i];\n\
    \            }\n        }\n        return result;", "        string result = \"\
    \";\n        int count = 0;\n        for (int i = 0; i < text.Length; i++) {\n\
    \            if (text[i] == ' ') {\n                count++;\n               \
    \ if (count == 1) {\n                    result += \"_\";\n                }\n\
    \                else if (count == 2) {\n                    result += \"_\";\n\
    \                }\n                else if (count > 2) {\n                  \
    \  result += \"-\";\n                }\n            }\n            else {\n  \
    \              count = 0;\n                result += text[i];\n            }\n\
    \        }\n        return result;", "        string result = \"\";\n        int\
    \ count = 0;\n        for (int i = 0; i < text.Length; i++) {\n            if\
    \ (text[i] == ' ') {\n                count++;\n                if (count == 1)\
    \ {\n                    result += \"_\";\n                }\n               \
    \ else if (count == 2) {\n                    result += \"_\";\n             \
    \   }\n                else if (count > 2) {\n                    result += \"\
    -\";\n                }\n            }\n            else {\n                count\
    \ = 0;\n                result += text[i];\n            }\n        }\n       \
    \ return result;", "        // Your code goes here\n        return \"\";", " \
    \       // TODO: Implement this function\n        return \"\";", "        string\
    \ result = \"\";\n        int count = 0;\n        for (int i = 0; i < text.Length;\
    \ i++) {\n            if (text[i] == ' ') {\n                count++;\n      \
    \          if (count == 1) {\n                    result += \"_\";\n         \
    \       }\n                else if (count == 2) {\n                    result\
    \ += \"_\";\n                }\n                else if (count > 2) {\n      \
    \              result += \"-\";\n                }\n            }\n          \
    \  else {\n                count = 0;\n                result += text[i];\n  \
    \          }\n        }\n        return result;", "        // Your code here\n\
    \        return \"\";", "        // TODO: Implement this function\n        return\
    \ \"\";", '        return "";', "        // TODO: Implement this function\n  \
    \      return \"\";", '        return text.Replace(" ", "_").Replace("__", "_").Replace("___",
    "-");', "        string result = \"\";\n        int count = 0;\n        for (int\
    \ i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n        \
    \        count++;\n                if (count == 1) {\n                    result\
    \ += '_';\n                }\n                else if (count == 2) {\n       \
    \             result += '_';\n                }\n                else if (count\
    \ > 2) {\n                    result += '-';\n                }\n            }\n\
    \            else {\n                count = 0;\n                result += text[i];\n\
    \            }\n        }\n        return result;", "        // TODO: Implement\
    \ this function\n        return \"\";", "        // Your code goes here\n    \
    \    return \"\";", "        // TODO: Implement this method\n        return \"\
    \";", '        return text.Replace(" ", "_").Replace("__", "_").Replace("___",
    "-");', '        return "";', "        string result = \"\";\n        int spaces\
    \ = 0;\n        for (int i = 0; i < text.Length; i++) {\n            if (text[i]\
    \ == ' ') {\n                spaces++;\n                if (spaces > 2) {\n  \
    \                  result += '-';\n                }\n            } else {\n \
    \               spaces = 0;\n                result += text[i];\n            }\n\
    \        }\n        return result;", "        // TODO: Implement this function\n\
    \        return \"\";", "        // TODO: Implement this function\n        return\
    \ \"\";", "        // TODO: Implement this function\n        return \"\";", " \
    \       // TODO: Implement this method\n        return \"\";", '        return
    text.Replace(" ", "_").Replace("__", "_").Replace("___", "-");', "        // TODO:\
    \ Implement this function\n        return \"\";", "        // TODO: Implement\
    \ this method\n        return null;", "        // TODO: Implement this function\n\
    \        return \"\";", "        // TODO: Implement this method\n        return\
    \ \"\";", '        return text.Replace(" ", "_").Replace("___", "-");', "    \
    \    // TODO: Implement this function\n        return \"\";", '        return
    text.Replace(" ", "_").Replace("__", "_").Replace("___", "-");', '        return
    text.Replace(" ", "_").Replace("__", "_").Replace("___", "-");', "        // your\
    \ code here\n        return \"\";", "        // Your code goes here\n        return\
    \ \"\";", '        return text.Replace(" ", "_").Replace("__", "_").Replace("___",
    "-");', "        string result = \"\";\n        int count = 0;\n        for (int\
    \ i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n        \
    \        count++;\n                if (count == 1) {\n                    result\
    \ += \"_\";\n                }\n                else if (count == 2) {\n     \
    \               result += \"_\";\n                }\n                else if (count\
    \ > 2) {\n                    result += \"-\";\n                }\n          \
    \  }\n            else {\n                count = 0;\n                result +=\
    \ text[i];\n            }\n        }\n        return result;", "        // TODO:\
    \ Implement this function\n        return \"\";", "        // Your code here\n\
    \        return \"\";", '        return text;', "        // TODO: Implement\n\
    \        return \"\";", "        // TODO: Implement this function\n        return\
    \ \"\";", "        int count = 0;\n        string result = \"\";\n        for\
    \ (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n   \
    \             count++;\n                if (count == 1) {\n                  \
    \  result += \"_\";\n                }\n                if (count == 2) {\n  \
    \                  result += \"_\";\n                }\n                if (count\
    \ > 2) {\n                    result += \"-\";\n                }\n          \
    \  } else {\n                count = 0;\n                result += text[i];\n\
    \            }\n        }\n        return result;", '        return text;', '        return
    text.Replace(" ", "_").Replace("__", "_").Replace("___", "-");', "        // TODO:\
    \ Implement this method\n        return \"\";", "        // TODO: Implement this\
    \ function\n        return \"\";", '        return text.Replace(" ", "_").Replace("__",
    "_").Replace("___", "-");', "        // TODO: Implement this function\n      \
    \  return text;", "        // Your code goes here\n        return \"\";", "  \
    \      string result = \"\";\n        int count = 0;\n        for (int i = 0;\
    \ i < text.Length; i++) {\n            if (text[i] == ' ') {\n               \
    \ count++;\n                if (count == 1) {\n                    result += \"\
    _\";\n                }\n                else if (count == 2) {\n            \
    \        result += \"_\";\n                }\n                else if (count >\
    \ 2) {\n                    result += \"-\";\n                }\n            }\n\
    \            else {\n                count = 0;\n                result += text[i];\n\
    \            }\n        }\n        return result;", '        return text;', " \
    \       var sb = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces > 2) {\n                   \
    \ sb.Append('-');\n                } else if (spaces == 2) {\n               \
    \     sb.Append('_');\n                }\n                spaces = 0;\n      \
    \          sb.Append(c);\n            }\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces > 2) {\n                   \
    \ sb.Append('-');\n                } else if (spaces > 0) {\n                \
    \    sb.Append('_');\n                }\n                sb.Append(c);\n     \
    \           spaces = 0;\n            }\n        }\n        if (spaces > 2) {\n\
    \            sb.Append('-');\n        } else if (spaces > 0) {\n            sb.Append('_');\n\
    \        }\n        return sb.ToString();"]
stop_tokens:
- "\n    }\n"

language: cs
name: HumanEval_62_derivative
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            ret.Add(xs[i] * i);\n        }\n        return ret;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794558
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            ret.Add(xs[i] * i);\n        }\n        return ret;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794558
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ans = new List<long>();\n        long i = (long)1L;\n        while\
    \ (i < len(xs))\n        {\n            ans.Add(xs[i] * i);\n            i++;\n\
    \        }\n\n        return ans;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph7hdlpbu.cs(19,20): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmph7hdlpbu.cs(21,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (long i = (long)1L; i\
    \ < len(xs); i++)\n        {\n            result.Add(xs[i] * i);\n        }\n\n\
    \        return result;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptyg48lwx.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmptyg48lwx.cs(20,27): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ans = new List<long>();\n        for (long i = (long)1L; i < len(xs);\
    \ i++)\n        {\n            ans.Add(xs[i] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptukobtw5.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmptukobtw5.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ans = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ans.Add(xs[i] * i);\n      \
    \  }\n\n        return ans;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjgx_qm3m.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpjgx_qm3m.cs(21,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 0L;\n\
    \        while (true) {\n            if (!(i < n - 1L)) {\n                break;\n\
    \            }\n\n            ys.Add(xs[i + 1L] * (i + 1L));\n            i++;\n\
    \        }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1647_n7q.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp1647_n7q.cs(25,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            result.Add(xs[i] * i);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1eff47a56dc445782be22734b0bb1b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1eff47a56dc445782be22734b0bb1b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = 1L; i < n; i++) {\n            ys.append(xs[i] * i);\n        }\n        return\
    \ ys;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmh53wc5c.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpmh53wc5c.cs(20,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpmh53wc5c.cs(20,16): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (long i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4vhvnf7o.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp4vhvnf7o.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (long i = (long)1L; i < len(xs);\
    \ i++)\n        {\n            ans.Add(xs[i] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcu_znx1t.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpcu_znx1t.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var res = new List<long>();\n        for (long i = 1L; i < len(xs); i++)\
    \ {\n            res.Add(xs[i] * i);\n        }\n\n        return res;\n\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyft5fj3n.cs(18,31): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpyft5fj3n.cs(19,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794680
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 1L;\n\
    \        while (i < n) {\n            ys.append(xs[i] * i);\n            i++;\n\
    \        }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbqeolgdv.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpbqeolgdv.cs(21,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpbqeolgdv.cs(21,16): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (long i = (long)1L; i < (long)len(xs);\
    \ i++)\n        {\n            ys.Add(xs[i] * i);\n        }\n        return ys;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprgm_zjm_.cs(18,43): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmprgm_zjm_.cs(20,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> res = new List<long>();\n        for (long i = (long)1L; i < len(xs);\
    \ i++)\n        {\n            res.Add(xs[i] * i);\n        }\n\n        return\
    \ res;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp557o2nvt.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp557o2nvt.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 1L;\n\
    \        while (i < n) {\n            ys.Add(xs[i] * i);\n            i++;\n \
    \       }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpazkxgfu0.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpazkxgfu0.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ys = new List<long>();\n        for (long i = (long)1L; i < (long)len(xs);\
    \ i++)\n        {\n            ys.append(xs[i] * i);\n        }\n\n        return\
    \ ys;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqzc6f7qz.cs(18,43): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpqzc6f7qz.cs(20,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpqzc6f7qz.cs(20,16): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659794680
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = 1L; i < n; i++) {\n            ys.append(xs[i] * i);\n        }\n        return\
    \ ys;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmh53wc5c.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpmh53wc5c.cs(20,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpmh53wc5c.cs(20,16): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 1L;\n\
    \        while (i < n) {\n            ys.Add(xs[i] * i);\n            i++;\n \
    \       }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpazkxgfu0.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpazkxgfu0.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ans = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ans.Add(xs[i] * i);\n      \
    \  }\n\n        return ans;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjgx_qm3m.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpjgx_qm3m.cs(21,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (long i = (long)1L; i\
    \ < len(xs); i++)\n        {\n            result.Add(xs[i] * i);\n        }\n\n\
    \        return result;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptyg48lwx.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmptyg48lwx.cs(20,27): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (long i = 1L; i < xs.Count;\
    \ i++) {\n            result.Add(xs[(int)(i)] * i);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b697d1286a534694b7f820641dcb460f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b697d1286a534694b7f820641dcb460f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        {\n       \
    \     var i__prev1 = i;\n\n            for (var i = 1L; i < n; i++)\n        \
    \    {\n                ys.Add(xs[i] * i);\n            }\n\n\n            i =\
    \ i__prev1;\n        }\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6x0zqq6p.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp6x0zqq6p.cs(20,28): error CS0103: The name ''i'' does not exist in the
    current context

    /tmp/tmp6x0zqq6p.cs(24,27): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp6x0zqq6p.cs(28,13): error CS0103: The name ''i'' does not exist in the
    current context

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 1L;\n\
    \        while (i < n) {\n            ys.Add(xs[i] * i);\n            i++;\n \
    \       }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpazkxgfu0.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpazkxgfu0.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ans = new List<long>();\n        long i = (long)1L;\n        while\
    \ (i < len(xs))\n        {\n            ans.Add(xs[i] * i);\n            i++;\n\
    \        }\n\n        return ans;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph7hdlpbu.cs(19,20): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmph7hdlpbu.cs(21,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            result.Add(xs[i] * i);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1eff47a56dc445782be22734b0bb1b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1eff47a56dc445782be22734b0bb1b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (long i = (long)1L; i\
    \ < len(xs); i++)\n        {\n            result.Add(xs[i] * i);\n        }\n\n\
    \        return result;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptyg48lwx.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmptyg48lwx.cs(20,27): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (long i = (long)1L; i\
    \ < (long)xs.Count(); i++) {\n            result.Add(xs[(int)(i)] * i);\n    \
    \    }\n\n        return result;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a6f917f0abaf41e69cdaf476fb69f210>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a6f917f0abaf41e69cdaf476fb69f210>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794558
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = (long)1L;\n\
    \        while (i < n)\n        {\n            ys.Add(xs[i] * i);\n          \
    \  i++;\n        }\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsra9q2vp.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpsra9q2vp.cs(22,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794680
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 1L;\n\
    \        while (i < n) {\n            ys.append(xs[i] * i);\n            i = i\
    \ + 1L;\n        }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmbdlgwtn.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpmbdlgwtn.cs(21,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpmbdlgwtn.cs(21,16): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        {\n       \
    \     var i__prev1 = i;\n\n            for (var i = 1L; i < n; i++)\n        \
    \    {\n                ys.Add(xs[i] * i);\n            }\n\n\n            i =\
    \ i__prev1;\n        }\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6x0zqq6p.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp6x0zqq6p.cs(20,28): error CS0103: The name ''i'' does not exist in the
    current context

    /tmp/tmp6x0zqq6p.cs(24,27): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp6x0zqq6p.cs(28,13): error CS0103: The name ''i'' does not exist in the
    current context

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ans = new List<long>();\n        for (long i = (long)1L; i < (long)len(xs);\
    \ i++)\n        {\n            ans.Add(xs[i] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdjiy776m.cs(18,43): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpdjiy776m.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ans = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ans.Add(xs[i] * i);\n      \
    \  }\n\n        return ans;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjgx_qm3m.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpjgx_qm3m.cs(21,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = 1L; i < n; i++) {\n            ys.Add(xs[i] * i);\n        }\n        return\
    \ ys;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx8kxm46r.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpx8kxm46r.cs(20,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var res = new List<long>();\n        var i = (long)1L;\n\
    \        while (i < n)\n        {\n            res.Add(xs[i] * i);\n         \
    \   i++;\n        }\n\n        return res;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnf1ti5v8.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpnf1ti5v8.cs(22,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794680
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (long i = (long)1L; i\
    \ < len(xs); i++)\n        {\n            result.Add(xs[i] * i);\n        }\n\n\
    \        return result;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptyg48lwx.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmptyg48lwx.cs(20,27): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        long i = (long)1L;\n        while\
    \ (i < (long)xs.Count())\n        {\n            ret.Add(xs[(int)i] * i);\n  \
    \          i = i + (long)1L;\n        }\n\n        return ret;\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2a91cc2a4ac1428f8edc67d5cc5515d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2a91cc2a4ac1428f8edc67d5cc5515d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = 1L; i < n; i++) {\n            ys.append(xs[i] * i);\n        }\n        return\
    \ ys;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmh53wc5c.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpmh53wc5c.cs(20,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpmh53wc5c.cs(20,16): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            ret.Add(xs[i] * i);\n        }\n        return ret;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794558
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ans = new List<long>();\n        for (var i\
    \ = 1L; i < n; i++) {\n            ans.Add(xs[i] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkn4ng4_1.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpkn4ng4_1.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794558
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = 1L; i < n; i++) {\n            ys.append(xs[i] * i);\n        }\n        return\
    \ ys;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmh53wc5c.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpmh53wc5c.cs(20,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpmh53wc5c.cs(20,16): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 1L;\n\
    \        while (i < n) {\n            ys.append(xs[i] * i);\n            i++;\n\
    \        }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbqeolgdv.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpbqeolgdv.cs(21,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpbqeolgdv.cs(21,16): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ans = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ans.Add(xs[i] * i);\n      \
    \  }\n\n        return ans;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjgx_qm3m.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpjgx_qm3m.cs(21,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        var n = len(xs);\n        {\n       \
    \     long i__prev1 = i;\n\n            for (long i = 1L; i < n; i++)\n      \
    \      {\n                ys.Add(xs[i] * i);\n            }\n\n\n            i\
    \ = i__prev1;\n        }\n        return ys;\n\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi8ldvdia.cs(18,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpi8ldvdia.cs(20,29): error CS0103: The name ''i'' does not exist in the
    current context

    /tmp/tmpi8ldvdia.cs(24,27): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpi8ldvdia.cs(28,13): error CS0103: The name ''i'' does not exist in the
    current context

    '
  timestamp: 1659794680
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var result = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            result.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ result;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <56f6c3c118a549fb90d6cebff031c3ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <56f6c3c118a549fb90d6cebff031c3ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ys.Add(xs[(int)(i)] * i);\n        }\n\n        return ys;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d458489705194e2ebe8c0778770ea281>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d458489705194e2ebe8c0778770ea281>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (var i = 1L; i < xs.Count; i++) {\n\
    \            ys.Add(xs[i] * i);\n        }\n        return ys;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv8hq_lhf.cs(19,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ys.Add(xs[(int)(i)] * i);\n        }\n\n        return ys;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d458489705194e2ebe8c0778770ea281>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d458489705194e2ebe8c0778770ea281>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (long i = (long)1L; i < len(xs);\
    \ i++)\n        {\n            ans.Add(xs[i] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcu_znx1t.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpcu_znx1t.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 1L;\n\
    \        while (i < n) {\n            ys.append(xs[i] * i);\n            i = i\
    \ + 1L;\n        }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmbdlgwtn.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpmbdlgwtn.cs(21,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpmbdlgwtn.cs(21,16): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            result.Add(xs[i] * i);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1eff47a56dc445782be22734b0bb1b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1eff47a56dc445782be22734b0bb1b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (long i = (long)1L; i\
    \ < (long)xs.Count(); i++) {\n            result.Add(xs[(int)(i)] * i);\n    \
    \    }\n\n        return result;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a6f917f0abaf41e69cdaf476fb69f210>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a6f917f0abaf41e69cdaf476fb69f210>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794558
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            ret.Add(xs[i] * i);\n        }\n        return ret;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794558
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 0L;\n\
    \        while (true) {\n            if (!(i < n - 1L)) {\n                break;\n\
    \            }\n\n            ys.Add(xs[i + 1L] * (i + 1L));\n            i++;\n\
    \        }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1647_n7q.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp1647_n7q.cs(25,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (long i = (long)1L; i < len(xs);\
    \ i++)\n        {\n            ans.Add(xs[i] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcu_znx1t.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpcu_znx1t.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ans = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ans.Add(xs[i] * i);\n      \
    \  }\n\n        return ans;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjgx_qm3m.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpjgx_qm3m.cs(21,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        var n = xs.Count;\n        for (var\
    \ i = 1L; i < n; i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n \
    \       return ans;\n\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b2c5c26b8adf4973ad4f22b4831739c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b2c5c26b8adf4973ad4f22b4831739c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ys.Add(xs[(int)(i)] * i);\n        }\n\n        return ys;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d458489705194e2ebe8c0778770ea281>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d458489705194e2ebe8c0778770ea281>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ys = new List<long>();\n        for (long i = (long)1L; i < (long)len(xs);\
    \ i++)\n        {\n            ys.Add(xs[i] * i);\n        }\n\n        return\
    \ ys;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptkrlirh2.cs(18,43): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmptkrlirh2.cs(20,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794680
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> res = new List<long>();\n        long i = 1L;\n        while (i\
    \ < (long)xs.Count) {\n            res.Add(xs[(int)i] * i);\n            i++;\n\
    \        }\n        return res;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f6e2df12512418bb907745bf8784b6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4f6e2df12512418bb907745bf8784b6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = xs.Count;\n        var ans = new List<long>();\n        for (var\
    \ i = 1L; i < n; i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n \
    \       return ans;\n\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b3034f9756e45efbe290c46c1812591>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b3034f9756e45efbe290c46c1812591>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ans = new List<long>();\n        for (long i = (long)1L; i < (long)xs.Count();\
    \ i++)\n        {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n     \
    \   return ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60fefa6e114a4de4b0e1b65efb683294>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60fefa6e114a4de4b0e1b65efb683294>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> res = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            res.Add(xs[i] * i);\n        }\n        return res;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f56c112d6c3f4b5986964019fddc8483>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f56c112d6c3f4b5986964019fddc8483>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794558
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ans = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ans.Add(xs[i] * i);\n      \
    \  }\n\n        return ans;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjgx_qm3m.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpjgx_qm3m.cs(21,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ans = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ans.Add(xs[i] * i);\n      \
    \  }\n\n        return ans;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjgx_qm3m.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpjgx_qm3m.cs(21,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (long i = (long)1L; i < len(xs);\
    \ i++)\n        {\n            ys.Add(xs[i] * i);\n        }\n\n        return\
    \ ys;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd7brtdfx.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpd7brtdfx.cs(20,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ans = new List<long>();\n        for (long i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)i] * i);\n        }\n\n        return ans;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e16bcd83930f49f681319a7177023bb1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e16bcd83930f49f681319a7177023bb1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794558
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ans = new List<long>();\n        long i = (long)1L;\n        while\
    \ (i < len(xs))\n        {\n            ans.Add(xs[i] * i);\n            i++;\n\
    \        }\n\n        return ans;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph7hdlpbu.cs(19,20): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmph7hdlpbu.cs(21,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (var i = (long)1L; i < (long)len(xs);\
    \ i++) {\n            ans.Add(xs[i] * i);\n        }\n\n        return ans;\n\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwtofupdw.cs(18,42): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpwtofupdw.cs(19,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        {\n       \
    \     var i__prev1 = i;\n\n            for (var i = 1L; i < n; i++)\n        \
    \    {\n                ys.Add(xs[i] * i);\n            }\n\n\n            i =\
    \ i__prev1;\n        }\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6x0zqq6p.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp6x0zqq6p.cs(20,28): error CS0103: The name ''i'' does not exist in the
    current context

    /tmp/tmp6x0zqq6p.cs(24,27): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp6x0zqq6p.cs(28,13): error CS0103: The name ''i'' does not exist in the
    current context

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = xs.Count;\n        var ys = new List<long>();\n        for (var i\
    \ = 1L; i < n; i++) {\n            ys.Add(xs[(int)(i)] * i);\n        }\n    \
    \    return ys;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4828ddeb8d29425281f376963270b76f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4828ddeb8d29425281f376963270b76f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ans = new List<long>();\n        long n = (long)xs.Count();\n\
    \        long i = (long)1L;\n        while (i < n)\n        {\n            ans.Add(xs[(int)(i)]\
    \ * i);\n            i = i + (long)1L;\n        }\n\n        return ans;\n\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <64675341f3814b23aab72c4f4ee265f7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <64675341f3814b23aab72c4f4ee265f7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ans = new List<long>();\n        long i = (long)1L;\n        while\
    \ (i < (long)xs.Count())\n        {\n            ans.Add(xs[(int)(i)] * i);\n\
    \            i = i + (long)1L;\n        }\n\n        return ans;\n\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <605a6c8e0f5d40f1963efbaa6be64ab9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <605a6c8e0f5d40f1963efbaa6be64ab9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        var n = len(xs);\n        {\n      \
    \      var i__prev1 = i;\n\n            for (var i = 1L; i < n; i++)\n       \
    \     {\n                ans.Add(xs[i] * i);\n            }\n\n\n            i\
    \ = i__prev1;\n        }\n        return ans;\n\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_z7m1vkc.cs(18,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp_z7m1vkc.cs(20,28): error CS0103: The name ''i'' does not exist in the
    current context

    /tmp/tmp_z7m1vkc.cs(24,28): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp_z7m1vkc.cs(28,13): error CS0103: The name ''i'' does not exist in the
    current context

    '
  timestamp: 1659794680
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (var i = (long)1L; i < (long)len(xs);\
    \ i++)\n        {\n            ys.Add(xs[i] * i);\n        }\n        return ys;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsg1xj6p8.cs(18,42): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpsg1xj6p8.cs(20,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            ret.Add(xs[i] * i);\n        }\n        return ret;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794558
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (var i = (long)1L; i < (long)len(xs);\
    \ i++)\n        {\n            ys.Add(xs[i] * i);\n        }\n        return ys;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsg1xj6p8.cs(18,42): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpsg1xj6p8.cs(20,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ys.Add(xs[(int)(i)] * i);\n        }\n\n        return ys;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d458489705194e2ebe8c0778770ea281>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d458489705194e2ebe8c0778770ea281>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (long i = (long)1L; i < len(xs);\
    \ i++)\n        {\n            ans.Add(xs[i] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcu_znx1t.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpcu_znx1t.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ys.Add(xs[(int)(i)] * i);\n        }\n\n        return ys;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d458489705194e2ebe8c0778770ea281>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d458489705194e2ebe8c0778770ea281>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = xs.Count;\n        var ys = new List<long>();\n        for (var i\
    \ = 1L; i < n; i++) {\n            ys.Add(xs[(int)(i)] * i);\n        }\n    \
    \    return ys;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4828ddeb8d29425281f376963270b76f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4828ddeb8d29425281f376963270b76f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = xs.Count;\n        var ans = new List<long>();\n        for (var\
    \ i = 1L; i < n; i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n\
    \        return ans;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844eca4b75484229a246286663f39839>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <844eca4b75484229a246286663f39839>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            ret.Add(xs[i] * i);\n        }\n        return ret;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794558
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 1L;\n\
    \        while (i < n) {\n            ys.Add(xs[i] * i);\n            i++;\n \
    \       }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpazkxgfu0.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpazkxgfu0.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            ret.Add(xs[i] * i);\n        }\n        return ret;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794558
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 1L;\n\
    \        while (i < n) {\n            ys.Add(xs[i] * i);\n            i++;\n \
    \       }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpazkxgfu0.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpazkxgfu0.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (long i = (long)1L; i < len(xs);\
    \ i++)\n        {\n            ans.Add(xs[i] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcu_znx1t.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpcu_znx1t.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ans = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ans.Add(xs[i] * i);\n      \
    \  }\n\n        return ans;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjgx_qm3m.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpjgx_qm3m.cs(21,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ans = new List<long>();\n        for (var i\
    \ = 1L; i < n; i++) {\n            ans.Add(xs[i] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkn4ng4_1.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpkn4ng4_1.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794558
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = xs.Count;\n        var ys = new List<long>();\n        for (var i\
    \ = 1L; i < n; i++) {\n            ys.Add(xs[(int)(i)] * i);\n        }\n    \
    \    return ys;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4828ddeb8d29425281f376963270b76f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4828ddeb8d29425281f376963270b76f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ys.Add(xs[(int)(i)] * i);\n        }\n\n        return ys;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d458489705194e2ebe8c0778770ea281>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d458489705194e2ebe8c0778770ea281>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        {\n       \
    \     var i__prev1 = i;\n\n            for (var i = 1L; i < n; i++)\n        \
    \    {\n                ys.Add(xs[i] * i);\n            }\n\n\n            i =\
    \ i__prev1;\n        }\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6x0zqq6p.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp6x0zqq6p.cs(20,28): error CS0103: The name ''i'' does not exist in the
    current context

    /tmp/tmp6x0zqq6p.cs(24,27): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp6x0zqq6p.cs(28,13): error CS0103: The name ''i'' does not exist in the
    current context

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 1L;\n\
    \        while (i < n) {\n            ys.append(xs[i] * i);\n            i++;\n\
    \        }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbqeolgdv.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpbqeolgdv.cs(21,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpbqeolgdv.cs(21,16): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            ret.Add(xs[i] * i);\n        }\n        return ret;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794558
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ans = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ans.Add(xs[i] * i);\n      \
    \  }\n\n        return ans;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjgx_qm3m.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpjgx_qm3m.cs(21,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 1L;\n\
    \        while (i < n) {\n            ys.append(xs[i] * i);\n            i = i\
    \ + 1L;\n        }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmbdlgwtn.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpmbdlgwtn.cs(21,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpmbdlgwtn.cs(21,16): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            ret.Add(xs[i] * i);\n        }\n        return ret;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794558
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        {\n       \
    \     var i__prev1 = i;\n\n            for (var i = 1L; i < n; i++)\n        \
    \    {\n                ys.Add(xs[i] * i);\n            }\n\n\n            i =\
    \ i__prev1;\n        }\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6x0zqq6p.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp6x0zqq6p.cs(20,28): error CS0103: The name ''i'' does not exist in the
    current context

    /tmp/tmp6x0zqq6p.cs(24,27): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp6x0zqq6p.cs(28,13): error CS0103: The name ''i'' does not exist in the
    current context

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> res = new List<long>();\n        for (long i = (long)1L; i < len(xs);\
    \ i++)\n        {\n            res.Add(xs[i] * i);\n        }\n\n        return\
    \ res;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp557o2nvt.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp557o2nvt.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ans = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ans.Add(xs[i] * i);\n      \
    \  }\n\n        return ans;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjgx_qm3m.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpjgx_qm3m.cs(21,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = xs.Count;\n        var ys = new List<long>();\n        for (var i\
    \ = 1L; i < n; i++) {\n            ys.Add(xs[(int)(i)] * i);\n        }\n    \
    \    return ys;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4828ddeb8d29425281f376963270b76f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4828ddeb8d29425281f376963270b76f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ans = new List<long>();\n        for (long i = (long)1L; i < len(xs);\
    \ i++)\n        {\n            ans.Add(xs[i] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptukobtw5.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmptukobtw5.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (long i = (long)1L; i < len(xs);\
    \ i++)\n        {\n            ans.Add(xs[i] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcu_znx1t.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpcu_znx1t.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = xs.Count;\n        var ys = new List<long>();\n        for (var i\
    \ = 1L; i < n; i++) {\n            ys.Add(xs[(int)(i)] * i);\n        }\n    \
    \    return ys;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4828ddeb8d29425281f376963270b76f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4828ddeb8d29425281f376963270b76f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ys.Add(xs[(int)(i)] * i);\n        }\n\n        return ys;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d458489705194e2ebe8c0778770ea281>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d458489705194e2ebe8c0778770ea281>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 1L;\n\
    \        while (i < n) {\n            ys.append(xs[i] * i);\n            i = i\
    \ + 1L;\n        }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmbdlgwtn.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpmbdlgwtn.cs(21,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpmbdlgwtn.cs(21,16): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 0L;\n\
    \        while (true) {\n            if (!(i < n - 1L)) {\n                break;\n\
    \            }\n\n            ys.Add(xs[i + 1L] * (i + 1L));\n            i++;\n\
    \        }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1647_n7q.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp1647_n7q.cs(25,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            ret.Add(xs[i] * i);\n        }\n        return ret;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794558
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ans = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ans.Add(xs[i] * i);\n      \
    \  }\n\n        return ans;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjgx_qm3m.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpjgx_qm3m.cs(21,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 1L;\n\
    \        while (i < n) {\n            ys.Add(xs[i] * i);\n            i++;\n \
    \       }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpazkxgfu0.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpazkxgfu0.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (long i = (long)1L; i\
    \ < (long)xs.Count(); i++) {\n            result.Add(xs[(int)(i)] * i);\n    \
    \    }\n\n        return result;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a6f917f0abaf41e69cdaf476fb69f210>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a6f917f0abaf41e69cdaf476fb69f210>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794558
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        {\n       \
    \     var i__prev1 = i;\n\n            for (var i = 1L; i < n; i++)\n        \
    \    {\n                ys.Add(xs[i] * i);\n            }\n\n\n            i =\
    \ i__prev1;\n        }\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6x0zqq6p.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp6x0zqq6p.cs(20,28): error CS0103: The name ''i'' does not exist in the
    current context

    /tmp/tmp6x0zqq6p.cs(24,27): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp6x0zqq6p.cs(28,13): error CS0103: The name ''i'' does not exist in the
    current context

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 1L;\n\
    \        while (i < n) {\n            ys.append(xs[i] * i);\n            i = i\
    \ + 1L;\n        }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmbdlgwtn.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpmbdlgwtn.cs(21,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpmbdlgwtn.cs(21,16): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        long i = (long)1L;\n        while\
    \ (i < (long)xs.Count())\n        {\n            ret.Add(xs[(int)i] * i);\n  \
    \          i = i + (long)1L;\n        }\n\n        return ret;\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2a91cc2a4ac1428f8edc67d5cc5515d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2a91cc2a4ac1428f8edc67d5cc5515d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (long i = (long)1L; i < len(xs);\
    \ i++)\n        {\n            ys.Add(xs[i] * i);\n        }\n\n        return\
    \ ys;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd7brtdfx.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpd7brtdfx.cs(20,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ans = new List<long>();\n        for (long i = (long)1L; i < (long)xs.Count();\
    \ i++)\n        {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n     \
    \   return ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60fefa6e114a4de4b0e1b65efb683294>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60fefa6e114a4de4b0e1b65efb683294>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 1L;\n\
    \        while (i < n) {\n            ys.append(xs[(int)(i)] * i);\n         \
    \   i = i + 1L;\n        }\n\n        return ys;\n\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr7pm6rvr.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr7pm6rvr.cs(21,16): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659794680
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 1L;\n\
    \        while (i < n) {\n            ys.append(xs[i] * i);\n            i++;\n\
    \        }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbqeolgdv.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpbqeolgdv.cs(21,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpbqeolgdv.cs(21,16): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 1L;\n\
    \        while (i < n) {\n            ys.Add(xs[i] * i);\n            i++;\n \
    \       }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpazkxgfu0.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpazkxgfu0.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (long i = (long)1L; i < len(xs);\
    \ i++)\n        {\n            ans.Add(xs[i] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcu_znx1t.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpcu_znx1t.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.append(xs[i] * i);\n    \
    \    }\n        return ys;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7h9mgen0.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp7h9mgen0.cs(21,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmp7h9mgen0.cs(21,16): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659794558
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ans = new List<long>();\n        for (long i = (long)1L; i < len(xs);\
    \ i++)\n        {\n            ans.Add(xs[i] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptukobtw5.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmptukobtw5.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        long i = 1L;\n\
    \        while (i < n)\n        {\n            ys.Add(xs[i] * i);\n          \
    \  i++;\n        }\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjbmzxl0v.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpjbmzxl0v.cs(22,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (long i = (long)1L; i < (long)len(xs);\
    \ i++)\n        {\n            ans.Add(xs[i] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxuscu5pr.cs(18,43): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpxuscu5pr.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    long n = (long)xs.Count();\n        List<long> ans = new List<long>();\n\
    \        for (long i = (long)1L; i < n; i++)\n        {\n            ans.Add(xs[(int)(i)]\
    \ * i);\n        }\n\n        return ans;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd2fe52d1fe94b5b85d973ab7cd7fff2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd2fe52d1fe94b5b85d973ab7cd7fff2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 1L;\n\
    \        while (i < n) {\n            ys.Add(xs[i] * i);\n            i++;\n \
    \       }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpazkxgfu0.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpazkxgfu0.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        if (n == 0L)\n        {\n            return new\
    \ List<long>();\n        }\n\n        var ys = new List<long>();\n        for\
    \ (long i = 1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n     \
    \   }\n        return ys;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpg0vnvg9d.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpg0vnvg9d.cs(26,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794680
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ys.Add(xs[i] * i);\n       \
    \ }\n        return ys;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr19f9r10.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpr19f9r10.cs(21,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (long i = (long)1L; i\
    \ < len(xs); i++)\n        {\n            result.Add(xs[i] * i);\n        }\n\n\
    \        return result;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptyg48lwx.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmptyg48lwx.cs(20,27): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            result.Add(xs[i] * i);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1eff47a56dc445782be22734b0bb1b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1eff47a56dc445782be22734b0bb1b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ret = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            ret.Add(xs[i] * i);\n        }\n        return ret;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0d60462206ab4b5abcc81d2427642e30>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794558
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 0L;\n\
    \        while (true) {\n            if (!(i < n - 1L)) {\n                break;\n\
    \            }\n\n            ys.Add(xs[i + 1L] * (i + 1L));\n            i++;\n\
    \        }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1647_n7q.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp1647_n7q.cs(25,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ys.Add(xs[(int)(i)] * i);\n        }\n\n        return ys;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d458489705194e2ebe8c0778770ea281>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d458489705194e2ebe8c0778770ea281>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        long i = 1L;\n\
    \        while (i < n)\n        {\n            ys.append(xs[(int)(i)] * i);\n\
    \            i++;\n        }\n        return ys;\n\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph292uhvj.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmph292uhvj.cs(22,16): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659794680
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 1L;\n\
    \        while (i < n) {\n            ys.append(xs[i] * i);\n            i +=\
    \ 1L;\n        }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdzw8tk6y.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpdzw8tk6y.cs(21,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpdzw8tk6y.cs(21,16): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659794558
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (long i = (long)1L; i < len(xs);\
    \ i++)\n        {\n            ans.Add(xs[i] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcu_znx1t.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpcu_znx1t.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            result.Add(xs[i] * i);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1eff47a56dc445782be22734b0bb1b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1eff47a56dc445782be22734b0bb1b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (long i = (long)1L; i < (long)len(xs);\
    \ i++)\n        {\n            ans.Add(xs[i] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxuscu5pr.cs(18,43): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpxuscu5pr.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (var i = 1L; i < xs.Count; i++) {\n\
    \            ys.Add(xs[i] * i);\n        }\n        return ys;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv8hq_lhf.cs(19,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        var i = 1L;\n        while (i < xs.Count)\
    \ {\n            ys.Add(xs[(int)(i)] * i);\n            i = i + 1L;\n        }\n\
    \        return ys;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d0aa444ca8de43de963c44c03ccfa4cb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d0aa444ca8de43de963c44c03ccfa4cb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (var i = (long)1L; i < (long)len(xs);\
    \ i++)\n        {\n            ys.Add(xs[i] * i);\n        }\n        return ys;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsg1xj6p8.cs(18,42): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpsg1xj6p8.cs(20,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (long i = (long)1L; i < len(xs);\
    \ i++)\n        {\n            ans.Add(xs[i] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcu_znx1t.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpcu_znx1t.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = xs.Count;\n        var ans = new List<long>();\n        for (int\
    \ i = 1; i < n; i++) {\n            ans.Add(xs[i] * i);\n        }\n        return\
    \ ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3ebc5f4e4acd421f8e1d79b03efda8e6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3ebc5f4e4acd421f8e1d79b03efda8e6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ans = new List<long>();\n        for (long i = (long)1L; i < len(xs);\
    \ i++)\n        {\n            ans.Add(xs[i] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptukobtw5.cs(18,37): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmptukobtw5.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var result = new List<long>();\n        for (long i = 1L; i < (long)xs.Count;\
    \ i++) {\n            result.Add(i * xs[(int)i]);\n        }\n\n        return\
    \ result;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <407436703f66478e9f09f31945c88f7a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <407436703f66478e9f09f31945c88f7a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ys = new List<long>();\n        for (var i = 1L; i < xs.Count; i++) {\n\
    \            ys.Add(xs[i] * i);\n        }\n        return ys;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv8hq_lhf.cs(19,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        var n = xs.Count;\n        for (var\
    \ i = 1L; i < n; i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n \
    \       return ans;\n\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L, (long)2L,\
    \ (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)4L,\
    \ (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b2c5c26b8adf4973ad4f22b4831739c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b2c5c26b8adf4973ad4f22b4831739c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 0L;\n\
    \        while (true) {\n            var v = xs[i];\n            if (i > 0L) {\n\
    \                v *= i;\n            }\n\n            ys.Add(v);\n          \
    \  i++;\n            if (i >= n)\n            {\n                break;\n    \
    \        }\n\n        }\n\n        return ys;\n\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxm2feeln.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpxm2feeln.cs(21,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var res = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            res.Add(xs[i] * i);\n      \
    \  }\n\n        return res;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp972wnbgp.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp972wnbgp.cs(21,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (var i = (long)1L; i < (long)len(xs);\
    \ i++)\n        {\n            ans.Add(xs[i] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8ikai1s3.cs(18,42): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp8ikai1s3.cs(20,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794558
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 0L;\n\
    \        while (true) {\n            if (!(i < n - 1L)) {\n                break;\n\
    \            }\n\n            ys.Add(xs[i + 1L] * (i + 1L));\n            i++;\n\
    \        }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1647_n7q.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmp1647_n7q.cs(25,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        for (var i\
    \ = 1L; i < n; i++) {\n            ys.Add(xs[i] * i);\n        }\n        return\
    \ ys;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx8kxm46r.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpx8kxm46r.cs(20,23): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ans = new List<long>();\n        for (var i\
    \ = (long)1L; i < n; i++)\n        {\n            ans.Add(xs[i] * i);\n      \
    \  }\n\n        return ans;\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjgx_qm3m.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpjgx_qm3m.cs(21,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> result = new List<long>();\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            result.Add(xs[i] * i);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1eff47a56dc445782be22734b0bb1b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1eff47a56dc445782be22734b0bb1b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var ans = new List<long>();\n        for (var i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)(i)] * i);\n        }\n\n        return\
    \ ans;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <88256c7fbecb4019a5b5fef45ed1fe4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794557
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    var n = len(xs);\n        var ys = new List<long>();\n        var i = 1L;\n\
    \        while (i < n) {\n            ys.append(xs[i] * i);\n            i = i\
    \ + 1L;\n        }\n\n        return ys;\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)1L,\
    \ (long)2L, (long)4L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L}))));\n\
    \    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L, (long)2L, (long)1L,\
    \ (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)2L,\
    \ (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)1L}))).Equals((new\
    \ List<long>())));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmbdlgwtn.cs(17,17): error CS0103: The name ''len'' does not exist in the
    current context

    /tmp/tmpmbdlgwtn.cs(21,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpmbdlgwtn.cs(21,16): error CS1061: ''List<long>'' does not contain a definition
    for ''append'' and no accessible extension method ''append'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659794557
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0]\
    \ + xs[1] * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial\
    \ in the same form.\n    // >>> Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)1L, (long)2L, (long)4L, (long)5L})))\n    // (new List<long>(new long[]{(long)1L,\
    \ (long)4L, (long)12L, (long)20L}))\n    // >>> Derivative((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L})))\n    // (new List<long>(new long[]{(long)2L,\
    \ (long)6L}))\n    public static List<long> Derivative(List<long> xs) {\n    \
    \    List<long> ans = new List<long>();\n        for (long i = 1L; i < (long)xs.Count;\
    \ i++) {\n            ans.Add(xs[(int)i] * i);\n        }\n\n        return ans;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
    \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
    \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e16bcd83930f49f681319a7177023bb1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e16bcd83930f49f681319a7177023bb1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794558

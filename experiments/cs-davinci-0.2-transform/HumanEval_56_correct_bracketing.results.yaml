language: cs
name: HumanEval_56_correct_bracketing
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int depth = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                depth +=\
    \ 1;\n            } else {\n                depth -= 1;\n            }\n     \
    \       if (depth < 0) {\n                return false;\n            }\n     \
    \   }\n        return depth == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int depth = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                depth +=\
    \ 1;\n            } else {\n                depth -= 1;\n            }\n     \
    \       if (depth < 0) {\n                return false;\n            }\n     \
    \   }\n        return depth == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int balance = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                balance\
    \ += 1;\n            } else if (c == '>') {\n                balance -= 1;\n \
    \           }\n            if (balance < 0) {\n                return false;\n\
    \            }\n        }\n        return balance == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int balance = 0;\n        for\
    \ (int i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<')\
    \ {\n                balance++;\n            } else {\n                balance--;\n\
    \            }\n            if (balance < 0) {\n                return false;\n\
    \            }\n        }\n        return balance == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int depth = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                depth +=\
    \ 1;\n            } else {\n                depth -= 1;\n            }\n     \
    \       if (depth < 0) {\n                return false;\n            }\n     \
    \   }\n        return depth == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int depth = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                depth +=\
    \ 1;\n            } else {\n                depth -= 1;\n            }\n     \
    \       if (depth < 0) {\n                return false;\n            }\n     \
    \   }\n        return depth == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int depth = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                depth++;\n\
    \            } else {\n                depth--;\n            }\n            if\
    \ (depth < 0) {\n                return false;\n            }\n        }\n   \
    \     return depth == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int open = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                open++;\n\
    \            } else {\n                open--;\n            }\n            if\
    \ (open < 0) {\n                return false;\n            }\n        }\n    \
    \    return open == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n\
    \                count += 1;\n            } else {\n                count -= 1;\n\
    \            }\n            if (count < 0) {\n                return false;\n\
    \            }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '<') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int open = 0;\n        int close\
    \ = 0;\n        foreach (char c in brackets) {\n            if (c == '<') {\n\
    \                open++;\n            } else if (c == '>') {\n               \
    \ close++;\n            }\n            if (close > open) {\n                return\
    \ false;\n            }\n        }\n        return open == close;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"\
    <>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<<><>>\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"<><><<><>><>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<<><><>><>><<><><<>>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<<><>>>>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"><<>\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"<\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<<<\")) == (false));\n    Debug.Assert(CorrectBracketing((\">\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"<<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <><><<><>><>><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count++;\n\
    \            } else {\n                count--;\n            }\n            if\
    \ (count < 0) {\n                return false;\n            }\n        }\n   \
    \     return count == 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"<\" and \">\".\n    // return\
    \ True if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"<\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    <>\"))\n    // (true)\n    // >>> CorrectBracketing((\"<<><>>\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\"><<>\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '<') {\n                count +=\
    \ 1;\n            } else {\n                count -= 1;\n            }\n     \
    \       if (count < 0) {\n                return false;\n            }\n     \
    \   }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"<>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    <<><>>\")) == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"<><><<<><><>><>><<><><<>>>\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"<<<><>>>>\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"><<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<<<<\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\">\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    <<>\")) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>><<>\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"<><><<><>><>>><>\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799806

language: cs
name: HumanEval_27_flip_case
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        for (int i = 0; i < str.Length; i++) {\n            if (char.IsLower(str[i]))\
    \ {\n                result += char.ToUpper(str[i]);\n            } else {\n \
    \               result += char.ToLower(str[i]);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))\
    \ {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if\
    \ (Char.IsUpper(chars[i])) {\n                chars[i] = Char.ToLower(chars[i]);\n\
    \            }\n        }\n        return new string(chars);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        foreach (char c in str) {\n            if (char.IsLower(c)) {\n \
    \               result += char.ToUpper(c);\n            } else {\n           \
    \     result += char.ToLower(c);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToString();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2bf4fadb4d17495aaba424afe61058fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2bf4fadb4d17495aaba424afe61058fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))\
    \ {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if\
    \ (Char.IsUpper(chars[i])) {\n                chars[i] = Char.ToLower(chars[i]);\n\
    \            }\n        }\n        return new string(chars);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        for (int i = 0; i < str.Length; i++) {\n            if (char.IsLower(str[i]))\
    \ {\n                result += char.ToUpper(str[i]);\n            } else {\n \
    \               result += char.ToLower(str[i]);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsUpper(chars[i]))\
    \ {\n                chars[i] = Char.ToLower(chars[i]);\n            } else if\
    \ (Char.IsLower(chars[i])) {\n                chars[i] = Char.ToUpper(chars[i]);\n\
    \            }\n        }\n        return new string(chars);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        foreach (char c in str) {\n            if (char.IsLower(c)) {\n \
    \               result += char.ToUpper(c);\n            } else {\n           \
    \     result += char.ToLower(c);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        foreach (char c in str) {\n            if (Char.IsUpper(c)) {\n \
    \               result += Char.ToLower(c);\n            } else {\n           \
    \     result += Char.ToUpper(c);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        var sb = new StringBuilder();\n\
    \        foreach (var c in str) {\n            if (char.IsUpper(c)) {\n      \
    \          sb.Append(char.ToLower(c));\n            } else {\n               \
    \ sb.Append(char.ToUpper(c));\n            }\n        }\n        return sb.ToString();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        for (int i = 0; i < str.Length; i++) {\n            if (Char.IsLower(str[i]))\
    \ {\n                result += Char.ToUpper(str[i]);\n            } else {\n \
    \               result += Char.ToLower(str[i]);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return string.Join(\"\
    \", str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)));\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        foreach (char c in str) {\n            if (char.IsUpper(c)) {\n \
    \               result += char.ToLower(c);\n            } else {\n           \
    \     result += char.ToUpper(c);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        for (int i = 0; i < str.Length; i++) {\n            if (char.IsLower(str[i]))\
    \ {\n                result += char.ToUpper(str[i]);\n            } else {\n \
    \               result += char.ToLower(str[i]);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(x\
    \ => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        var sb = new StringBuilder();\n\
    \        foreach (var c in str) {\n            if (char.IsUpper(c)) {\n      \
    \          sb.Append(char.ToLower(c));\n            } else {\n               \
    \ sb.Append(char.ToUpper(c));\n            }\n        }\n        return sb.ToString();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        foreach (char c in str) {\n            if (char.IsUpper(c)) {\n \
    \               result += char.ToLower(c);\n            } else {\n           \
    \     result += char.ToUpper(c);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        foreach (char c in str) {\n            if (Char.IsUpper(c)) {\n \
    \               result += Char.ToLower(c);\n            } else {\n           \
    \     result += Char.ToUpper(c);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        // Your code goes\
    \ here.\n        return null;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <da80217fca4a44d6946288d5c1974536>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <da80217fca4a44d6946288d5c1974536>:0\
    \ \n"
  stdout: ''
  timestamp: 1659793668
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(x\
    \ => char.IsLower(x) ? char.ToUpper(x) : char.ToLower(x)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        foreach (char c in str) {\n            if (char.IsLower(c)) {\n \
    \               result += char.ToUpper(c);\n            } else {\n           \
    \     result += char.ToLower(c);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        foreach (char c in str) {\n            if (char.IsUpper(c)) {\n \
    \               result += char.ToLower(c);\n            } else {\n           \
    \     result += char.ToUpper(c);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(x\
    \ => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        char[] charArray =\
    \ str.ToCharArray();\n        for (int i = 0; i < charArray.Length; i++) {\n \
    \           if (char.IsUpper(charArray[i])) {\n                charArray[i] =\
    \ char.ToLower(charArray[i]);\n            } else if (char.IsLower(charArray[i]))\
    \ {\n                charArray[i] = char.ToUpper(charArray[i]);\n            }\n\
    \        }\n        return new string(charArray);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))\
    \ {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if\
    \ (Char.IsUpper(chars[i])) {\n                chars[i] = Char.ToLower(chars[i]);\n\
    \            }\n        }\n        return new string(chars);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(x\
    \ => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        for (int i = 0; i < str.Length; i++) {\n            if (char.IsUpper(str[i]))\
    \ {\n                result += char.ToLower(str[i]);\n            } else {\n \
    \               result += char.ToUpper(str[i]);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        for (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i]))\
    \ {\n                result += Char.ToLower(str[i]);\n            } else {\n \
    \               result += Char.ToUpper(str[i]);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToString();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2bf4fadb4d17495aaba424afe61058fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2bf4fadb4d17495aaba424afe61058fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToString();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2bf4fadb4d17495aaba424afe61058fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2bf4fadb4d17495aaba424afe61058fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        var result = new StringBuilder();\n\
    \        foreach (var c in str) {\n            if (char.IsUpper(c)) {\n      \
    \          result.Append(char.ToLower(c));\n            } else {\n           \
    \     result.Append(char.ToUpper(c));\n            }\n        }\n        return\
    \ result.ToString();\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793668
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        for (int i = 0; i < str.Length; i++) {\n            if (char.IsUpper(str[i]))\
    \ {\n                result += char.ToLower(str[i]);\n            } else {\n \
    \               result += char.ToUpper(str[i]);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(x\
    \ => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        var sb = new StringBuilder();\n\
    \        foreach (var c in str) {\n            if (c >= 'a' && c <= 'z') {\n \
    \               sb.Append((char)(c - 'a' + 'A'));\n            } else if (c >=\
    \ 'A' && c <= 'Z') {\n                sb.Append((char)(c - 'A' + 'a'));\n    \
    \        } else {\n                sb.Append(c);\n            }\n        }\n \
    \       return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        foreach (char c in str) {\n            if (char.IsUpper(c)) {\n \
    \               result += char.ToLower(c);\n            } else {\n           \
    \     result += char.ToUpper(c);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToString();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2bf4fadb4d17495aaba424afe61058fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2bf4fadb4d17495aaba424afe61058fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        for (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i]))\
    \ {\n                result += Char.ToLower(str[i]);\n            } else {\n \
    \               result += Char.ToUpper(str[i]);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToString();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2bf4fadb4d17495aaba424afe61058fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2bf4fadb4d17495aaba424afe61058fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        for (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i]))\
    \ {\n                result += Char.ToLower(str[i]);\n            } else {\n \
    \               result += Char.ToUpper(str[i]);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))\
    \ {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if\
    \ (Char.IsUpper(chars[i])) {\n                chars[i] = Char.ToLower(chars[i]);\n\
    \            }\n        }\n        return new string(chars);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return str.Aggregate(new\
    \ StringBuilder(), (acc, c) => acc.Append(char.IsUpper(c) ? char.ToLower(c) :\
    \ char.ToUpper(c))).ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793668
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        foreach (char c in str) {\n            if (char.IsUpper(c)) {\n \
    \               result += char.ToLower(c);\n            } else {\n           \
    \     result += char.ToUpper(c);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        foreach (char c in str) {\n            if (char.IsUpper(c)) {\n \
    \               result += char.ToLower(c);\n            } else {\n           \
    \     result += char.ToUpper(c);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(x\
    \ => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToString();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2bf4fadb4d17495aaba424afe61058fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2bf4fadb4d17495aaba424afe61058fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        for (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i]))\
    \ {\n                result += Char.ToLower(str[i]);\n            } else {\n \
    \               result += Char.ToUpper(str[i]);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        for (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i]))\
    \ {\n                result += Char.ToLower(str[i]);\n            } else {\n \
    \               result += Char.ToUpper(str[i]);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(x\
    \ => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(x\
    \ => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return \"\";\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73b1ed943484c759ea54b1acfbe0aef>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c73b1ed943484c759ea54b1acfbe0aef>:0 \n"
  stdout: ''
  timestamp: 1659793668
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return string.Concat(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)));\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return str.Select(x\
    \ => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToString();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8933fab1471e449b8007c31271f8d065>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8933fab1471e449b8007c31271f8d065>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        foreach (char c in str) {\n            if (char.IsUpper(c)) {\n \
    \               result += char.ToLower(c);\n            } else {\n           \
    \     result += char.ToUpper(c);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        StringBuilder sb =\
    \ new StringBuilder();\n        foreach (char c in str) {\n            if (char.IsUpper(c))\
    \ {\n                sb.Append(char.ToLower(c));\n            } else {\n     \
    \           sb.Append(char.ToUpper(c));\n            }\n        }\n        return\
    \ sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(x\
    \ => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        for (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i]))\
    \ {\n                result += Char.ToLower(str[i]);\n            } else {\n \
    \               result += Char.ToUpper(str[i]);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        for (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i]))\
    \ {\n                result += Char.ToLower(str[i]);\n            } else {\n \
    \               result += Char.ToUpper(str[i]);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToString();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2bf4fadb4d17495aaba424afe61058fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2bf4fadb4d17495aaba424afe61058fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(x\
    \ => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        for (int i = 0; i < str.Length; i++) {\n            if (Char.IsLower(str[i]))\
    \ {\n                result += Char.ToUpper(str[i]);\n            } else {\n \
    \               result += Char.ToLower(str[i]);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        foreach (char c in str) {\n            if (Char.IsLower(c)) {\n \
    \               result += Char.ToUpper(c);\n            } else {\n           \
    \     result += Char.ToLower(c);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToString();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2bf4fadb4d17495aaba424afe61058fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2bf4fadb4d17495aaba424afe61058fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        foreach (char c in str) {\n            if (char.IsUpper(c)) {\n \
    \               result += char.ToLower(c);\n            } else {\n           \
    \     result += char.ToUpper(c);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        for (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i]))\
    \ {\n                result += Char.ToLower(str[i]);\n            } else {\n \
    \               result += Char.ToUpper(str[i]);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(x\
    \ => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(x\
    \ => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))\
    \ {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if\
    \ (Char.IsUpper(chars[i])) {\n                chars[i] = Char.ToLower(chars[i]);\n\
    \            }\n        }\n        return new string(chars);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\
    \")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"\
    These violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS\
    \ HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return str.Select(c\
    \ => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToString();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b46cb231a1c4465abb5bd9874aa1551b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b46cb231a1c4465abb5bd9874aa1551b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793669
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        for (int i = 0; i < str.Length; i++) {\n            if (Char.IsLower(str[i]))\
    \ {\n                result += Char.ToUpper(str[i]);\n            } else {\n \
    \               result += Char.ToLower(str[i]);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(x\
    \ => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        for (int i = 0; i < str.Length; i++) {\n            if (Char.IsLower(str[i]))\
    \ {\n                result += Char.ToUpper(str[i]);\n            } else {\n \
    \               result += Char.ToLower(str[i]);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        foreach (char c in str) {\n            if (char.IsUpper(c)) {\n \
    \               result += char.ToLower(c);\n            } else {\n           \
    \     result += char.ToUpper(c);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
    \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        return new string(str.Select(c\
    \ => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
    )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\"\
    )).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\"\
    )\n    public static string FlipCase(string str) {\n        string result = \"\
    \";\n        for (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i]))\
    \ {\n                result += Char.ToLower(str[i]);\n            } else {\n \
    \               result += Char.ToUpper(str[i]);\n            }\n        }\n  \
    \      return result;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"\
    Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These violent\
    \ delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793621

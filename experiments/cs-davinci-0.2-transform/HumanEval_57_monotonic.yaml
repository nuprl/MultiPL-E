name: HumanEval_57_monotonic
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Return True is list elements are monotonically increasing or\
  \ decreasing.\n    // >>> Monotonic((new List<long>(new long[]{(long)1L, (long)2L,\
  \ (long)4L, (long)20L})))\n    // (true)\n    // >>> Monotonic((new List<long>(new\
  \ long[]{(long)1L, (long)20L, (long)4L, (long)10L})))\n    // (false)\n    // >>>\
  \ Monotonic((new List<long>(new long[]{(long)4L, (long)1L, (long)0L, (long)-10L})))\n\
  \    // (true)\n    public static bool Monotonic(List<long> l) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Monotonic((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)10L}))) == (true));\n\
  \    Debug.Assert(Monotonic((new List<long>(new long[]{(long)1L, (long)2L, (long)4L,\
  \ (long)20L}))) == (true));\n    Debug.Assert(Monotonic((new List<long>(new long[]{(long)1L,\
  \ (long)20L, (long)4L, (long)10L}))) == (false));\n    Debug.Assert(Monotonic((new\
  \ List<long>(new long[]{(long)4L, (long)1L, (long)0L, (long)-10L}))) == (true));\n\
  \    Debug.Assert(Monotonic((new List<long>(new long[]{(long)4L, (long)1L, (long)1L,\
  \ (long)0L}))) == (true));\n    Debug.Assert(Monotonic((new List<long>(new long[]{(long)1L,\
  \ (long)2L, (long)3L, (long)2L, (long)5L, (long)60L}))) == (false));\n    Debug.Assert(Monotonic((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)60L})))\
  \ == (true));\n    Debug.Assert(Monotonic((new List<long>(new long[]{(long)9L, (long)9L,\
  \ (long)9L, (long)9L}))) == (true));\n    }\n\n}\n"
completions: ["        if (l.Count == 0) {\n            return true;\n        }\n\
    \        long last = l[0];\n        bool increasing = true;\n        bool decreasing\
    \ = true;\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i] >\
    \ last) {\n                decreasing = false;\n            }\n            if\
    \ (l[i] < last) {\n                increasing = false;\n            }\n      \
    \      last = l[i];\n        }\n        return increasing || decreasing;", " \
    \       if (l.Count < 2) {\n            return true;\n        }\n        long\
    \ d = l[1] - l[0];\n        for (int i = 2; i < l.Count; i++) {\n            if\
    \ (d * (l[i] - l[i - 1]) < 0) {\n                return false;\n            }\n\
    \        }\n        return true;", "        if (l.Count < 2) {\n            return\
    \ true;\n        }\n        bool increasing = l[1] > l[0];\n        for (int i\
    \ = 2; i < l.Count; i++) {\n            if (increasing) {\n                if\
    \ (l[i] < l[i - 1]) {\n                    return false;\n                }\n\
    \            } else {\n                if (l[i] > l[i - 1]) {\n              \
    \      return false;\n                }\n            }\n        }\n        return\
    \ true;", "        if (l.Count < 2) {\n            return true;\n        }\n \
    \       bool increasing = l[1] > l[0];\n        for (int i = 2; i < l.Count; i++)\
    \ {\n            if (increasing) {\n                if (l[i] < l[i - 1]) {\n \
    \                   return false;\n                }\n            } else {\n \
    \               if (l[i] > l[i - 1]) {\n                    return false;\n  \
    \              }\n            }\n        }\n        return true;", "        if\
    \ (l.Count < 2) {\n            return true;\n        }\n        bool increasing\
    \ = l[1] > l[0];\n        for (int i = 2; i < l.Count; i++) {\n            if\
    \ (increasing && l[i] < l[i - 1]) {\n                return false;\n         \
    \   }\n            if (!increasing && l[i] > l[i - 1]) {\n                return\
    \ false;\n            }\n        }\n        return true;", "        if (l.Count\
    \ < 2) {\n            return true;\n        }\n        bool increasing = l[0]\
    \ < l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n            if (increasing\
    \ && l[i] > l[i + 1]) {\n                return false;\n            }\n      \
    \      if (!increasing && l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        if (l.Count == 0) {\n\
    \            return true;\n        }\n        long last = l[0];\n        bool\
    \ increasing = true;\n        bool decreasing = true;\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            increasing = increasing && (l[i] >= last);\n\
    \            decreasing = decreasing && (l[i] <= last);\n            last = l[i];\n\
    \        }\n        return increasing || decreasing;", "        if (l.Count ==\
    \ 0) {\n            return true;\n        }\n        long prev = l[0];\n     \
    \   bool increasing = true;\n        bool decreasing = true;\n        for (int\
    \ i = 1; i < l.Count; i++) {\n            if (l[i] < prev) {\n               \
    \ increasing = false;\n            }\n            if (l[i] > prev) {\n       \
    \         decreasing = false;\n            }\n            prev = l[i];\n     \
    \   }\n        return increasing || decreasing;", "        if (l.Count == 0) {\n\
    \            return true;\n        }\n        long last = l[0];\n        bool\
    \ increasing = true;\n        bool decreasing = true;\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > last) {\n                decreasing\
    \ = false;\n            }\n            if (l[i] < last) {\n                increasing\
    \ = false;\n            }\n            last = l[i];\n        }\n        return\
    \ increasing || decreasing;", "        if (l.Count == 0) {\n            return\
    \ true;\n        }\n        long prev = l[0];\n        bool increasing = true;\n\
    \        bool decreasing = true;\n        for (int i = 1; i < l.Count; i++) {\n\
    \            if (l[i] > prev) {\n                decreasing = false;\n       \
    \     }\n            if (l[i] < prev) {\n                increasing = false;\n\
    \            }\n            prev = l[i];\n        }\n        return increasing\
    \ || decreasing;", "        if (l.Count < 2) {\n            return true;\n   \
    \     }\n        bool increasing = l[0] < l[1];\n        for (int i = 1; i < l.Count\
    \ - 1; i++) {\n            if (increasing && l[i] > l[i + 1]) {\n            \
    \    return false;\n            }\n            if (!increasing && l[i] < l[i +\
    \ 1]) {\n                return false;\n            }\n        }\n        return\
    \ true;", "        if (l.Count < 2) {\n            return true;\n        }\n \
    \       bool increasing = l[0] < l[1];\n        for (int i = 1; i < l.Count -\
    \ 1; i++) {\n            if (increasing && l[i] > l[i + 1]) {\n              \
    \  return false;\n            }\n            if (!increasing && l[i] < l[i + 1])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        if (l.Count == 0) {\n            return true;\n        }\n        long\
    \ prev = l[0];\n        bool increasing = true;\n        bool decreasing = true;\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (l[i] < prev) {\n\
    \                increasing = false;\n            }\n            if (l[i] > prev)\
    \ {\n                decreasing = false;\n            }\n            prev = l[i];\n\
    \        }\n        return increasing || decreasing;", "        if (l.Count ==\
    \ 0) {\n            return true;\n        }\n        bool increasing = true;\n\
    \        bool decreasing = true;\n        for (int i = 1; i < l.Count; i++) {\n\
    \            if (l[i] < l[i - 1]) {\n                increasing = false;\n   \
    \         }\n            if (l[i] > l[i - 1]) {\n                decreasing =\
    \ false;\n            }\n        }\n        return increasing || decreasing;",
  "        if (l.Count == 0) {\n            return true;\n        }\n        long\
    \ prev = l[0];\n        bool increasing = true;\n        bool decreasing = true;\n\
    \        foreach (long x in l) {\n            if (x < prev) {\n              \
    \  increasing = false;\n            }\n            if (x > prev) {\n         \
    \       decreasing = false;\n            }\n            prev = x;\n        }\n\
    \        return increasing || decreasing;", "        if (l.Count < 2) {\n    \
    \        return true;\n        }\n        bool increasing = l[1] > l[0];\n   \
    \     for (int i = 2; i < l.Count; i++) {\n            if (increasing && l[i]\
    \ < l[i - 1]) {\n                return false;\n            }\n            if\
    \ (!increasing && l[i] > l[i - 1]) {\n                return false;\n        \
    \    }\n        }\n        return true;", "        if (l.Count <= 1) {\n     \
    \       return true;\n        }\n        bool increasing = l[0] < l[1];\n    \
    \    for (int i = 1; i < l.Count - 1; i++) {\n            if (increasing && l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n            if\
    \ (!increasing && l[i] < l[i + 1]) {\n                return false;\n        \
    \    }\n        }\n        return true;", "        if (l.Count <= 1) {\n     \
    \       return true;\n        }\n        bool increasing = l[1] > l[0];\n    \
    \    for (int i = 1; i < l.Count; i++) {\n            if (increasing && l[i] <\
    \ l[i - 1]) {\n                return false;\n            }\n            if (!increasing\
    \ && l[i] > l[i - 1]) {\n                return false;\n            }\n      \
    \  }\n        return true;", "        if (l.Count == 0) {\n            return\
    \ true;\n        }\n        long prev = l[0];\n        bool increasing = true;\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (l[i] != prev) {\n\
    \                increasing = l[i] > prev;\n                break;\n         \
    \   }\n        }\n        for (int i = 1; i < l.Count; i++) {\n            if\
    \ (increasing) {\n                if (l[i] < prev) {\n                    return\
    \ false;\n                }\n            } else {\n                if (l[i] >\
    \ prev) {\n                    return false;\n                }\n            }\n\
    \            prev = l[i];\n        }\n        return true;", "        if (l.Count\
    \ < 2) {\n            return true;\n        }\n        bool increasing = l[1]\
    \ > l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (increasing)\
    \ {\n                if (l[i] < l[i - 1]) {\n                    return false;\n\
    \                }\n            } else {\n                if (l[i] > l[i - 1])\
    \ {\n                    return false;\n                }\n            }\n   \
    \     }\n        return true;", "        bool increasing = true;\n        bool\
    \ decreasing = true;\n        for (int i = 0; i < l.Count - 1; i++) {\n      \
    \      if (l[i] > l[i + 1]) {\n                increasing = false;\n         \
    \   }\n            if (l[i] < l[i + 1]) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  if (l.Count == 0) {\n            return true;\n        }\n        long prev\
    \ = l[0];\n        bool increasing = true;\n        bool decreasing = true;\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (l[i] > prev) {\n\
    \                decreasing = false;\n            }\n            if (l[i] < prev)\
    \ {\n                increasing = false;\n            }\n            prev = l[i];\n\
    \        }\n        return increasing || decreasing;", "        if (l.Count <=\
    \ 1) {\n            return true;\n        }\n        bool increasing = l[0] <\
    \ l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n            if (increasing)\
    \ {\n                if (l[i] > l[i + 1]) {\n                    return false;\n\
    \                }\n            } else {\n                if (l[i] < l[i + 1])\
    \ {\n                    return false;\n                }\n            }\n   \
    \     }\n        return true;", "        var inc = true;\n        var dec = true;\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (l[i] < l[i - 1])\
    \ {\n                inc = false;\n            }\n            if (l[i] > l[i -\
    \ 1]) {\n                dec = false;\n            }\n        }\n        return\
    \ inc || dec;", "        if (l.Count <= 1) {\n            return true;\n     \
    \   }\n        bool increasing = l[0] < l[1];\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (increasing && l[i - 1] > l[i]) {\n                return\
    \ false;\n            }\n            if (!increasing && l[i - 1] < l[i]) {\n \
    \               return false;\n            }\n        }\n        return true;",
  "        bool increasing = true;\n        bool decreasing = true;\n        for (int\
    \ i = 1; i < l.Count; i++) {\n            if (l[i] < l[i - 1]) {\n           \
    \     increasing = false;\n            }\n            if (l[i] > l[i - 1]) {\n\
    \                decreasing = false;\n            }\n        }\n        return\
    \ increasing || decreasing;", "        bool inc = true;\n        bool dec = true;\n\
    \        for (int i = 1; i < l.Count; i++) {\n            inc = inc && (l[i] >=\
    \ l[i - 1]);\n            dec = dec && (l[i] <= l[i - 1]);\n        }\n      \
    \  return inc || dec;", "        if (l.Count <= 1) {\n            return true;\n\
    \        }\n        bool increasing = l[1] > l[0];\n        for (int i = 1; i\
    \ < l.Count; i++) {\n            if (increasing && l[i] < l[i - 1]) {\n      \
    \          return false;\n            }\n            if (!increasing && l[i] >\
    \ l[i - 1]) {\n                return false;\n            }\n        }\n     \
    \   return true;", "        if (l.Count <= 1) {\n            return true;\n  \
    \      }\n        bool increasing = l[0] < l[1];\n        for (int i = 1; i <\
    \ l.Count - 1; i++) {\n            if (increasing && l[i] > l[i + 1]) {\n    \
    \            return false;\n            }\n            if (!increasing && l[i]\
    \ < l[i + 1]) {\n                return false;\n            }\n        }\n   \
    \     return true;", "        if (l.Count < 2) {\n            return true;\n \
    \       }\n        bool increasing = l[0] < l[1];\n        for (int i = 1; i <\
    \ l.Count - 1; i++) {\n            if (increasing && l[i] > l[i + 1]) {\n    \
    \            return false;\n            }\n            if (!increasing && l[i]\
    \ < l[i + 1]) {\n                return false;\n            }\n        }\n   \
    \     return true;", "        if (l.Count < 2) {\n            return true;\n \
    \       }\n        bool increasing = l[0] < l[1];\n        for (int i = 1; i <\
    \ l.Count - 1; i++) {\n            if (increasing && l[i] > l[i + 1]) {\n    \
    \            return false;\n            }\n            if (!increasing && l[i]\
    \ < l[i + 1]) {\n                return false;\n            }\n        }\n   \
    \     return true;", "        if (l.Count <= 1) {\n            return true;\n\
    \        }\n        bool increasing = l[1] > l[0];\n        for (int i = 1; i\
    \ < l.Count; i++) {\n            if (increasing && l[i] < l[i - 1]) {\n      \
    \          return false;\n            }\n            if (!increasing && l[i] >\
    \ l[i - 1]) {\n                return false;\n            }\n        }\n     \
    \   return true;", "        if (l.Count <= 1) {\n            return true;\n  \
    \      }\n        long d = l[1] - l[0];\n        for (int i = 2; i < l.Count;\
    \ i++) {\n            if (d * (l[i] - l[i - 1]) < 0) {\n                return\
    \ false;\n            }\n        }\n        return true;", "        if (l.Count\
    \ == 0) {\n            return true;\n        }\n        long last = l[0];\n  \
    \      bool increasing = true;\n        bool decreasing = true;\n        for (int\
    \ i = 1; i < l.Count; i++) {\n            if (l[i] < last) {\n               \
    \ increasing = false;\n            }\n            if (l[i] > last) {\n       \
    \         decreasing = false;\n            }\n            last = l[i];\n     \
    \   }\n        return increasing || decreasing;", "        if (l.Count <= 1) {\n\
    \            return true;\n        }\n        bool increasing = l[0] < l[1];\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (increasing && l[i\
    \ - 1] > l[i]) {\n                return false;\n            }\n            if\
    \ (!increasing && l[i - 1] < l[i]) {\n                return false;\n        \
    \    }\n        }\n        return true;", "        if (l.Count <= 1) {\n     \
    \       return true;\n        }\n        long prev = l[0];\n        bool increasing\
    \ = true;\n        bool decreasing = true;\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (l[i] < prev) {\n                increasing = false;\n\
    \            }\n            if (l[i] > prev) {\n                decreasing = false;\n\
    \            }\n            prev = l[i];\n        }\n        return increasing\
    \ || decreasing;", "        if (l.Count <= 1) {\n            return true;\n  \
    \      }\n        bool increasing = l[1] > l[0];\n        for (int i = 1; i <\
    \ l.Count; i++) {\n            if (increasing && l[i] < l[i - 1]) {\n        \
    \        return false;\n            }\n            if (!increasing && l[i] > l[i\
    \ - 1]) {\n                return false;\n            }\n        }\n        return\
    \ true;", "        if (l.Count <= 1) {\n            return true;\n        }\n\
    \        bool increasing = l[1] > l[0];\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (increasing && l[i] < l[i - 1]) {\n                return\
    \ false;\n            }\n            if (!increasing && l[i] > l[i - 1]) {\n \
    \               return false;\n            }\n        }\n        return true;",
  "        bool increasing = true;\n        bool decreasing = true;\n        for (int\
    \ i = 1; i < l.Count; i++) {\n            if (l[i] < l[i - 1]) {\n           \
    \     increasing = false;\n            }\n            if (l[i] > l[i - 1]) {\n\
    \                decreasing = false;\n            }\n        }\n        return\
    \ increasing || decreasing;", "        if (l.Count == 0) {\n            return\
    \ true;\n        }\n        long prev = l[0];\n        bool increasing = true;\n\
    \        bool decreasing = true;\n        for (int i = 1; i < l.Count; i++) {\n\
    \            if (l[i] < prev) {\n                increasing = false;\n       \
    \     }\n            if (l[i] > prev) {\n                decreasing = false;\n\
    \            }\n            prev = l[i];\n        }\n        return increasing\
    \ || decreasing;", "        if (l.Count < 2) {\n            return true;\n   \
    \     }\n        long last = l[0];\n        bool increasing = true;\n        bool\
    \ decreasing = true;\n        for (int i = 1; i < l.Count; i++) {\n          \
    \  if (l[i] < last) {\n                increasing = false;\n            }\n  \
    \          if (l[i] > last) {\n                decreasing = false;\n         \
    \   }\n            last = l[i];\n        }\n        return increasing || decreasing;",
  "        bool increasing = true;\n        bool decreasing = true;\n        for (int\
    \ i = 1; i < l.Count; i++) {\n            if (l[i] < l[i - 1]) {\n           \
    \     increasing = false;\n            }\n            if (l[i] > l[i - 1]) {\n\
    \                decreasing = false;\n            }\n        }\n        return\
    \ increasing || decreasing;", "        if (l.Count <= 1) {\n            return\
    \ true;\n        }\n        bool increasing = l[0] < l[1];\n        for (int i\
    \ = 1; i < l.Count - 1; i++) {\n            if (increasing && l[i] > l[i + 1])\
    \ {\n                return false;\n            }\n            if (!increasing\
    \ && l[i] < l[i + 1]) {\n                return false;\n            }\n      \
    \  }\n        return true;", "        if (l.Count == 0) {\n            return\
    \ true;\n        }\n        long prev = l[0];\n        bool increasing = true;\n\
    \        bool decreasing = true;\n        for (int i = 1; i < l.Count; i++) {\n\
    \            if (l[i] < prev) {\n                increasing = false;\n       \
    \     }\n            if (l[i] > prev) {\n                decreasing = false;\n\
    \            }\n            prev = l[i];\n        }\n        return increasing\
    \ || decreasing;", "        if (l.Count <= 1) {\n            return true;\n  \
    \      }\n        bool increasing = l[0] < l[1];\n        for (int i = 1; i <\
    \ l.Count - 1; i++) {\n            if (increasing) {\n                if (l[i]\
    \ > l[i + 1]) {\n                    return false;\n                }\n      \
    \      } else {\n                if (l[i] < l[i + 1]) {\n                    return\
    \ false;\n                }\n            }\n        }\n        return true;",
  "        if (l.Count <= 1) {\n            return true;\n        }\n        bool\
    \ increasing = l[1] > l[0];\n        for (int i = 1; i < l.Count; i++) {\n   \
    \         if (increasing && l[i] < l[i - 1]) {\n                return false;\n\
    \            }\n            if (!increasing && l[i] > l[i - 1]) {\n          \
    \      return false;\n            }\n        }\n        return true;", "     \
    \   if (l.Count <= 1) {\n            return true;\n        }\n        bool increasing\
    \ = l[0] < l[1];\n        for (int i = 1; i < l.Count; i++) {\n            if\
    \ (increasing) {\n                if (l[i - 1] > l[i]) {\n                   \
    \ return false;\n                }\n            } else {\n                if (l[i\
    \ - 1] < l[i]) {\n                    return false;\n                }\n     \
    \       }\n        }\n        return true;", "        if (l.Count == 0) {\n  \
    \          return true;\n        }\n        long last = l[0];\n        bool increasing\
    \ = true;\n        foreach (long x in l) {\n            if (x != last) {\n   \
    \             increasing = x > last;\n            }\n            if (increasing\
    \ && x < last) {\n                return false;\n            }\n            if\
    \ (!increasing && x > last) {\n                return false;\n            }\n\
    \            last = x;\n        }\n        return true;", "        if (l.Count\
    \ <= 1) {\n            return true;\n        }\n        bool increasing = l[0]\
    \ < l[1];\n        for (int i = 1; i < l.Count; i++) {\n            if (increasing\
    \ && l[i - 1] > l[i]) {\n                return false;\n            }\n      \
    \      if (!increasing && l[i - 1] < l[i]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        if (l.Count < 2) {\n\
    \            return true;\n        }\n        long d = l[1] - l[0];\n        for\
    \ (int i = 1; i < l.Count; i++) {\n            if (d * (l[i] - l[i - 1]) < 0)\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        if (l.Count < 2) {\n            return true;\n        }\n        bool increasing\
    \ = l[1] > l[0];\n        for (int i = 2; i < l.Count; i++) {\n            if\
    \ (increasing && l[i] < l[i - 1]) {\n                return false;\n         \
    \   }\n            if (!increasing && l[i] > l[i - 1]) {\n                return\
    \ false;\n            }\n        }\n        return true;", "        if (l.Count\
    \ <= 1) {\n            return true;\n        }\n        bool increasing = l[1]\
    \ > l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (increasing\
    \ && l[i] < l[i - 1]) {\n                return false;\n            }\n      \
    \      if (!increasing && l[i] > l[i - 1]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        if (l.Count == 0) {\n\
    \            return true;\n        }\n        long last = l[0];\n        bool\
    \ increasing = true;\n        bool decreasing = true;\n        foreach (long x\
    \ in l) {\n            if (x > last) {\n                decreasing = false;\n\
    \            }\n            if (x < last) {\n                increasing = false;\n\
    \            }\n            last = x;\n        }\n        return increasing ||\
    \ decreasing;", "        if (l.Count < 2) {\n            return true;\n      \
    \  }\n        bool increasing = l[1] > l[0];\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (increasing) {\n                if (l[i] < l[i - 1])\
    \ {\n                    return false;\n                }\n            } else\
    \ {\n                if (l[i] > l[i - 1]) {\n                    return false;\n\
    \                }\n            }\n        }\n        return true;", "       \
    \ bool increasing = true;\n        bool decreasing = true;\n        for (int i\
    \ = 1; i < l.Count; i++) {\n            if (l[i] < l[i - 1]) {\n             \
    \   increasing = false;\n            }\n            if (l[i] > l[i - 1]) {\n \
    \               decreasing = false;\n            }\n        }\n        return\
    \ increasing || decreasing;", "        if (l.Count <= 1) {\n            return\
    \ true;\n        }\n        bool increasing = l[1] > l[0];\n        for (int i\
    \ = 1; i < l.Count; i++) {\n            if (increasing) {\n                if\
    \ (l[i] < l[i - 1]) {\n                    return false;\n                }\n\
    \            } else {\n                if (l[i] > l[i - 1]) {\n              \
    \      return false;\n                }\n            }\n        }\n        return\
    \ true;", "        if (l.Count == 0) {\n            return true;\n        }\n\
    \        long prev = l[0];\n        bool increasing = true;\n        bool decreasing\
    \ = true;\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i] <\
    \ prev) {\n                increasing = false;\n            }\n            if\
    \ (l[i] > prev) {\n                decreasing = false;\n            }\n      \
    \      prev = l[i];\n        }\n        return increasing || decreasing;", " \
    \       if (l.Count <= 1) {\n            return true;\n        }\n        bool\
    \ increasing = l[0] < l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n\
    \            if (increasing && l[i] > l[i + 1]) {\n                return false;\n\
    \            }\n            if (!increasing && l[i] < l[i + 1]) {\n          \
    \      return false;\n            }\n        }\n        return true;", "     \
    \   if (l.Count < 2) {\n            return true;\n        }\n        bool increasing\
    \ = l[0] < l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n          \
    \  if (increasing && l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n            if (!increasing && l[i] < l[i + 1]) {\n               \
    \ return false;\n            }\n        }\n        return true;", "        if\
    \ (l.Count == 0) {\n            return true;\n        }\n        long prev = l[0];\n\
    \        bool increasing = true;\n        bool decreasing = true;\n        for\
    \ (int i = 1; i < l.Count; i++) {\n            if (l[i] < prev) {\n          \
    \      increasing = false;\n            }\n            if (l[i] > prev) {\n  \
    \              decreasing = false;\n            }\n            prev = l[i];\n\
    \        }\n        return increasing || decreasing;", "        if (l.Count ==\
    \ 0) {\n            return true;\n        }\n        bool increasing = l[0] <\
    \ l[1];\n        for (int i = 1; i < l.Count; i++) {\n            if (increasing)\
    \ {\n                if (l[i - 1] > l[i]) {\n                    return false;\n\
    \                }\n            } else {\n                if (l[i - 1] < l[i])\
    \ {\n                    return false;\n                }\n            }\n   \
    \     }\n        return true;", "        if (l.Count <= 1) {\n            return\
    \ true;\n        }\n        bool increasing = l[0] < l[1];\n        for (int i\
    \ = 1; i < l.Count - 1; i++) {\n            if (increasing) {\n              \
    \  if (l[i] > l[i + 1]) {\n                    return false;\n               \
    \ }\n            } else {\n                if (l[i] < l[i + 1]) {\n          \
    \          return false;\n                }\n            }\n        }\n      \
    \  return true;", "        if (l.Count < 2) {\n            return true;\n    \
    \    }\n        bool increasing = l[0] < l[1];\n        for (int i = 1; i < l.Count\
    \ - 1; i++) {\n            if (increasing) {\n                if (l[i] > l[i +\
    \ 1]) {\n                    return false;\n                }\n            } else\
    \ {\n                if (l[i] < l[i + 1]) {\n                    return false;\n\
    \                }\n            }\n        }\n        return true;", "       \
    \ if (l.Count <= 1) {\n            return true;\n        }\n        bool increasing\
    \ = l[0] < l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n          \
    \  if (increasing) {\n                if (l[i] > l[i + 1]) {\n               \
    \     return false;\n                }\n            } else {\n               \
    \ if (l[i] < l[i + 1]) {\n                    return false;\n                }\n\
    \            }\n        }\n        return true;", "        if (l.Count <= 1) {\n\
    \            return true;\n        }\n        bool increasing = l[1] > l[0];\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (increasing && l[i]\
    \ < l[i - 1]) {\n                return false;\n            }\n            if\
    \ (!increasing && l[i] > l[i - 1]) {\n                return false;\n        \
    \    }\n        }\n        return true;", "        if (l.Count < 2) {\n      \
    \      return true;\n        }\n        long last = l[0];\n        bool increasing\
    \ = true;\n        bool decreasing = true;\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (l[i] > last) {\n                decreasing = false;\n\
    \            }\n            if (l[i] < last) {\n                increasing = false;\n\
    \            }\n            last = l[i];\n        }\n        return increasing\
    \ || decreasing;", "        bool increasing = true;\n        bool decreasing =\
    \ true;\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i] < l[i\
    \ - 1]) {\n                increasing = false;\n            }\n            if\
    \ (l[i] > l[i - 1]) {\n                decreasing = false;\n            }\n  \
    \      }\n        return increasing || decreasing;", "        if (l.Count <= 1)\
    \ {\n            return true;\n        }\n        bool increasing = l[1] > l[0];\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (increasing && l[i]\
    \ < l[i - 1]) {\n                return false;\n            }\n            if\
    \ (!increasing && l[i] > l[i - 1]) {\n                return false;\n        \
    \    }\n        }\n        return true;", "        if (l.Count < 2) {\n      \
    \      return true;\n        }\n        long d = l[(int)1L] - l[(int)0L];\n  \
    \      for (long i = (long)1L; i < len(l); i++) {\n            if (d * (l[(int)(i)]\
    \ - l[(int)(i - 1L)]) < (long)0L) {\n                return false;\n         \
    \   }\n        }\n        return true;", "        if (l.Count <= 1) {\n      \
    \      return true;\n        }\n        long prev = l[0];\n        bool increasing\
    \ = true;\n        bool decreasing = true;\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (l[i] < prev) {\n                increasing = false;\n\
    \            }\n            if (l[i] > prev) {\n                decreasing = false;\n\
    \            }\n            prev = l[i];\n        }\n        return increasing\
    \ || decreasing;", "        if (l.Count < 2) {\n            return true;\n   \
    \     }\n        bool increasing = l[0] < l[1];\n        for (int i = 1; i < l.Count\
    \ - 1; i++) {\n            if (increasing && l[i] > l[i + 1]) {\n            \
    \    return false;\n            }\n            if (!increasing && l[i] < l[i +\
    \ 1]) {\n                return false;\n            }\n        }\n        return\
    \ true;", "        if (l.Count < 2) {\n            return true;\n        }\n \
    \       bool increasing = l[1] > l[0];\n        for (int i = 1; i < l.Count; i++)\
    \ {\n            if (increasing && l[i] < l[i - 1]) {\n                return\
    \ false;\n            }\n            if (!increasing && l[i] > l[i - 1]) {\n \
    \               return false;\n            }\n        }\n        return true;",
  "        if (l.Count <= 1) {\n            return true;\n        }\n        bool\
    \ increasing = l[1] > l[0];\n        for (int i = 1; i < l.Count; i++) {\n   \
    \         if (increasing) {\n                if (l[i] < l[i - 1]) {\n        \
    \            return false;\n                }\n            } else {\n        \
    \        if (l[i] > l[i - 1]) {\n                    return false;\n         \
    \       }\n            }\n        }\n        return true;", "        bool increasing\
    \ = true;\n        bool decreasing = true;\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (l[i] < l[i - 1]) {\n                increasing = false;\n\
    \            }\n            if (l[i] > l[i - 1]) {\n                decreasing\
    \ = false;\n            }\n        }\n        return increasing || decreasing;",
  "        if (l.Count < 2) {\n            return true;\n        }\n        long prev\
    \ = l[0];\n        bool increasing = true;\n        bool decreasing = true;\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (l[i] < prev) {\n\
    \                increasing = false;\n            }\n            if (l[i] > prev)\
    \ {\n                decreasing = false;\n            }\n            prev = l[i];\n\
    \        }\n        return increasing || decreasing;", "        if (l.Count <=\
    \ 1) {\n            return true;\n        }\n        bool increasing = l[0] <\
    \ l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n            if (increasing\
    \ && l[i] > l[i + 1]) {\n                return false;\n            }\n      \
    \      if (!increasing && l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        if (l.Count < 2) {\n\
    \            return true;\n        }\n        long prev = l[0];\n        bool\
    \ increasing = true;\n        bool decreasing = true;\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > prev) {\n                decreasing\
    \ = false;\n            }\n            if (l[i] < prev) {\n                increasing\
    \ = false;\n            }\n            prev = l[i];\n        }\n        return\
    \ increasing || decreasing;", "        if (l.Count == 0) {\n            return\
    \ true;\n        }\n        long last = l[0];\n        bool increasing = true;\n\
    \        bool decreasing = true;\n        foreach (long x in l) {\n          \
    \  if (x < last) {\n                increasing = false;\n            }\n     \
    \       if (x > last) {\n                decreasing = false;\n            }\n\
    \            last = x;\n        }\n        return increasing || decreasing;",
  "        if (l.Count <= 1) {\n            return true;\n        }\n        bool\
    \ increasing = l[0] < l[1];\n        for (int i = 1; i < l.Count; i++) {\n   \
    \         if (increasing && l[i - 1] > l[i]) {\n                return false;\n\
    \            }\n            if (!increasing && l[i - 1] < l[i]) {\n          \
    \      return false;\n            }\n        }\n        return true;", "     \
    \   if (l.Count < 2) {\n            return true;\n        }\n        bool increasing\
    \ = l[0] < l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n          \
    \  if (increasing && l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n            if (!increasing && l[i] < l[i + 1]) {\n               \
    \ return false;\n            }\n        }\n        return true;", "        bool\
    \ increasing = true;\n        bool decreasing = true;\n        for (int i = 0;\
    \ i < l.Count - 1; i++) {\n            if (l[i] > l[i + 1]) {\n              \
    \  increasing = false;\n            }\n            if (l[i] < l[i + 1]) {\n  \
    \              decreasing = false;\n            }\n        }\n        return increasing\
    \ || decreasing;", "        if (l.Count < 2) {\n            return true;\n   \
    \     }\n        bool increasing = l[1] > l[0];\n        for (int i = 2; i < l.Count;\
    \ i++) {\n            if (increasing && l[i] < l[i - 1]) {\n                return\
    \ false;\n            }\n            if (!increasing && l[i] > l[i - 1]) {\n \
    \               return false;\n            }\n        }\n        return true;",
  "        if (l.Count == 0) {\n            return true;\n        }\n        long\
    \ prev = l[0];\n        bool increasing = true;\n        bool decreasing = true;\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (l[i] > prev) {\n\
    \                decreasing = false;\n            }\n            if (l[i] < prev)\
    \ {\n                increasing = false;\n            }\n            prev = l[i];\n\
    \        }\n        return increasing || decreasing;", "        if (l.Count <=\
    \ 1) {\n            return true;\n        }\n        long direction = l[(int)1L]\
    \ - l[(int)0L];\n        for (long i = (long)1L; i < l.Count; i++) {\n       \
    \     if (direction * (l[(int)(i)] - l[(int)(i - 1L)]) < (long)0L) {\n       \
    \         return false;\n            }\n        }\n        return true;", "  \
    \      if (l.Count == 0) {\n            return true;\n        }\n        long\
    \ prev = l[0];\n        bool increasing = true;\n        bool decreasing = true;\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (l[i] < prev) {\n\
    \                increasing = false;\n            }\n            if (l[i] > prev)\
    \ {\n                decreasing = false;\n            }\n            prev = l[i];\n\
    \        }\n        return increasing || decreasing;", "        if (l.Count <=\
    \ 1) {\n            return true;\n        }\n        bool increasing = l[1] >\
    \ l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if (increasing\
    \ && l[i] < l[i - 1]) {\n                return false;\n            }\n      \
    \      if (!increasing && l[i] > l[i - 1]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        if (l.Count <= 1) {\n\
    \            return true;\n        }\n        bool increasing = l[0] < l[1];\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (increasing) {\n\
    \                if (l[i - 1] > l[i]) {\n                    return false;\n \
    \               }\n            } else {\n                if (l[i - 1] < l[i])\
    \ {\n                    return false;\n                }\n            }\n   \
    \     }\n        return true;", "        if (l.Count == 0) {\n            return\
    \ true;\n        }\n        long last = l[0];\n        bool increasing = true;\n\
    \        bool decreasing = true;\n        for (int i = 1; i < l.Count; i++) {\n\
    \            if (l[i] > last) {\n                decreasing = false;\n       \
    \     }\n            if (l[i] < last) {\n                increasing = false;\n\
    \            }\n            last = l[i];\n        }\n        return increasing\
    \ || decreasing;", "        if (l.Count < 2) {\n            return true;\n   \
    \     }\n        bool increasing = l[1] >= l[0];\n        for (int i = 2; i <\
    \ l.Count; i++) {\n            if (increasing && l[i] < l[i - 1]) {\n        \
    \        return false;\n            }\n            if (!increasing && l[i] > l[i\
    \ - 1]) {\n                return false;\n            }\n        }\n        return\
    \ true;", "        if (l.Count <= 1) {\n            return true;\n        }\n\
    \        bool increasing = l[1] > l[0];\n        for (int i = 2; i < l.Count;\
    \ i++) {\n            if (increasing && l[i] < l[i - 1]) {\n                return\
    \ false;\n            }\n            if (!increasing && l[i] > l[i - 1]) {\n \
    \               return false;\n            }\n        }\n        return true;",
  "        if (l.Count == 0) {\n            return true;\n        }\n        long\
    \ prev = l[0];\n        bool increasing = true;\n        bool decreasing = true;\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (l[i] < prev) {\n\
    \                increasing = false;\n            }\n            if (l[i] > prev)\
    \ {\n                decreasing = false;\n            }\n            prev = l[i];\n\
    \        }\n        return increasing || decreasing;", "        if (l.Count <\
    \ 2) {\n            return true;\n        }\n        bool increasing = l[0] <\
    \ l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n            if (increasing\
    \ && l[i] > l[i + 1]) {\n                return false;\n            }\n      \
    \      if (!increasing && l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        if (l.Count <= 1) {\n\
    \            return true;\n        }\n        bool increasing = (l[1] > l[0]);\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (increasing) {\n\
    \                if (l[i] < l[i - 1]) {\n                    return false;\n \
    \               }\n            } else {\n                if (l[i] > l[i - 1])\
    \ {\n                    return false;\n                }\n            }\n   \
    \     }\n        return true;", "        bool increasing = true;\n        bool\
    \ decreasing = true;\n        for (int i = 1; i < l.Count; i++) {\n          \
    \  if (l[i] < l[i - 1]) {\n                increasing = false;\n            }\n\
    \            if (l[i] > l[i - 1]) {\n                decreasing = false;\n   \
    \         }\n        }\n        return increasing || decreasing;", "        if\
    \ (l.Count < 2) {\n            return true;\n        }\n        bool increasing\
    \ = l[0] < l[1];\n        for (int i = 1; i < l.Count; i++) {\n            if\
    \ (increasing && l[i - 1] > l[i]) {\n                return false;\n         \
    \   }\n            if (!increasing && l[i - 1] < l[i]) {\n                return\
    \ false;\n            }\n        }\n        return true;", "        if (l.Count\
    \ <= 1) {\n            return true;\n        }\n        long prev = l[0];\n  \
    \      bool increasing = true;\n        bool decreasing = true;\n        for (int\
    \ i = 1; i < l.Count; i++) {\n            if (l[i] < prev) {\n               \
    \ increasing = false;\n            }\n            if (l[i] > prev) {\n       \
    \         decreasing = false;\n            }\n            prev = l[i];\n     \
    \   }\n        return increasing || decreasing;", "        if (l.Count <= 1) {\n\
    \            return true;\n        }\n        long prev = l[0];\n        long\
    \ delta = l[1] - prev;\n        for (int i = 1; i < l.Count; i++) {\n        \
    \    if (delta == 0) {\n                if (l[i] != prev) {\n                \
    \    return false;\n                }\n            } else {\n                if\
    \ ((l[i] - prev) * delta < 0) {\n                    return false;\n         \
    \       }\n            }\n            prev = l[i];\n        }\n        return\
    \ true;", "        if (l.Count < 2) {\n            return true;\n        }\n \
    \       bool increasing = l[1] > l[0];\n        for (int i = 1; i < l.Count; i++)\
    \ {\n            if (increasing) {\n                if (l[i] < l[i - 1]) {\n \
    \                   return false;\n                }\n            } else {\n \
    \               if (l[i] > l[i - 1]) {\n                    return false;\n  \
    \              }\n            }\n        }\n        return true;", "        if\
    \ (l.Count == 0) {\n            return true;\n        }\n        long prev = l[0];\n\
    \        bool increasing = true;\n        bool decreasing = true;\n        foreach\
    \ (long x in l) {\n            if (x > prev) {\n                decreasing = false;\n\
    \            }\n            if (x < prev) {\n                increasing = false;\n\
    \            }\n            prev = x;\n        }\n        return increasing ||\
    \ decreasing;", "        if (l.Count <= 1) {\n            return true;\n     \
    \   }\n        long prev = l[0];\n        bool increasing = true;\n        bool\
    \ decreasing = true;\n        for (int i = 1; i < l.Count; i++) {\n          \
    \  if (l[i] > prev) {\n                decreasing = false;\n            }\n  \
    \          if (l[i] < prev) {\n                increasing = false;\n         \
    \   }\n            prev = l[i];\n        }\n        return increasing || decreasing;",
  "        bool increasing = true;\n        bool decreasing = true;\n        for (int\
    \ i = 1; i < l.Count; i++) {\n            increasing = increasing && (l[i] >=\
    \ l[i - 1]);\n            decreasing = decreasing && (l[i] <= l[i - 1]);\n   \
    \     }\n        return increasing || decreasing;", "        if (l.Count == 0)\
    \ {\n            return true;\n        }\n        long prev = l[0];\n        bool\
    \ increasing = true;\n        bool decreasing = true;\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] < prev) {\n                increasing\
    \ = false;\n            }\n            if (l[i] > prev) {\n                decreasing\
    \ = false;\n            }\n            prev = l[i];\n        }\n        return\
    \ increasing || decreasing;", "        if (l.Count < 2) {\n            return\
    \ true;\n        }\n        bool increasing = l[0] < l[1];\n        for (int i\
    \ = 1; i < l.Count - 1; i++) {\n            if (increasing && l[i] > l[i + 1])\
    \ {\n                return false;\n            }\n            if (!increasing\
    \ && l[i] < l[i + 1]) {\n                return false;\n            }\n      \
    \  }\n        return true;", "        if (l.Count == 0) {\n            return\
    \ true;\n        }\n        long prev = l[0];\n        bool increasing = true;\n\
    \        bool decreasing = true;\n        for (int i = 1; i < l.Count; i++) {\n\
    \            if (l[i] > prev) {\n                decreasing = false;\n       \
    \     }\n            if (l[i] < prev) {\n                increasing = false;\n\
    \            }\n            prev = l[i];\n        }\n        return increasing\
    \ || decreasing;", "        if (l.Count <= 1) {\n            return true;\n  \
    \      }\n        bool increasing = l[0] < l[1];\n        for (int i = 1; i <\
    \ l.Count; i++) {\n            if (increasing && l[i - 1] > l[i]) {\n        \
    \        return false;\n            }\n            if (!increasing && l[i - 1]\
    \ < l[i]) {\n                return false;\n            }\n        }\n       \
    \ return true;", "        if (l.Count < 2) {\n            return true;\n     \
    \   }\n        bool increasing = l[1] > l[0];\n        for (int i = 2; i < l.Count;\
    \ i++) {\n            if (increasing && l[i] < l[i - 1]) {\n                return\
    \ false;\n            }\n            if (!increasing && l[i] > l[i - 1]) {\n \
    \               return false;\n            }\n        }\n        return true;",
  "        bool increasing = true;\n        bool decreasing = true;\n        for (int\
    \ i = 1; i < l.Count; i++) {\n            if (l[i] < l[i - 1]) {\n           \
    \     increasing = false;\n            }\n            if (l[i] > l[i - 1]) {\n\
    \                decreasing = false;\n            }\n        }\n        return\
    \ increasing || decreasing;", "        bool increasing = true;\n        bool decreasing\
    \ = true;\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i -\
    \ 1] > l[i]) {\n                increasing = false;\n            }\n         \
    \   if (l[i - 1] < l[i]) {\n                decreasing = false;\n            }\n\
    \        }\n        return increasing || decreasing;", "        if (l.Count ==\
    \ 0) {\n            return true;\n        }\n        long last = l[0];\n     \
    \   bool increasing = true;\n        bool decreasing = true;\n        for (int\
    \ i = 0; i < l.Count; i++) {\n            if (l[i] < last) {\n               \
    \ increasing = false;\n            }\n            if (l[i] > last) {\n       \
    \         decreasing = false;\n            }\n            last = l[i];\n     \
    \   }\n        return increasing || decreasing;", "        bool increasing = true;\n\
    \        bool decreasing = true;\n        for (int i = 1; i < l.Count; i++) {\n\
    \            if (l[i] < l[i - 1]) {\n                increasing = false;\n   \
    \         }\n            if (l[i] > l[i - 1]) {\n                decreasing =\
    \ false;\n            }\n        }\n        return increasing || decreasing;",
  "        long last = l[0];\n        bool increasing = true;\n        bool decreasing\
    \ = true;\n        foreach (long x in l) {\n            if (x > last) {\n    \
    \            decreasing = false;\n            }\n            if (x < last) {\n\
    \                increasing = false;\n            }\n            last = x;\n \
    \       }\n        return increasing || decreasing;", "        if (l.Count <=\
    \ 1) {\n            return true;\n        }\n        bool increasing = l[1] >\
    \ l[0];\n        for (int i = 2; i < l.Count; i++) {\n            if (increasing)\
    \ {\n                if (l[i] < l[i - 1]) {\n                    return false;\n\
    \                }\n            } else {\n                if (l[i] > l[i - 1])\
    \ {\n                    return false;\n                }\n            }\n   \
    \     }\n        return true;", "        if (l.Count == 0) {\n            return\
    \ true;\n        }\n        long prev = l[0];\n        bool increasing = true;\n\
    \        bool decreasing = true;\n        for (int i = 1; i < l.Count; i++) {\n\
    \            if (l[i] < prev) {\n                increasing = false;\n       \
    \     }\n            if (l[i] > prev) {\n                decreasing = false;\n\
    \            }\n            prev = l[i];\n        }\n        return increasing\
    \ || decreasing;", "        if (l.Count == 0) {\n            return true;\n  \
    \      }\n        long prev = l[0];\n        bool increasing = true;\n       \
    \ bool decreasing = true;\n        for (int i = 1; i < l.Count; i++) {\n     \
    \       if (l[i] > prev) {\n                decreasing = false;\n            }\n\
    \            if (l[i] < prev) {\n                increasing = false;\n       \
    \     }\n            prev = l[i];\n        }\n        return increasing || decreasing;",
  "        if (l.Count < 2) {\n            return true;\n        }\n        bool increasing\
    \ = l[0] < l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n          \
    \  if (increasing && l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n            if (!increasing && l[i] < l[i + 1]) {\n               \
    \ return false;\n            }\n        }\n        return true;", "        bool\
    \ increasing = true;\n        bool decreasing = true;\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] < l[i - 1]) {\n                increasing\
    \ = false;\n            }\n            if (l[i] > l[i - 1]) {\n              \
    \  decreasing = false;\n            }\n        }\n        return increasing ||\
    \ decreasing;", "        if (l.Count == 0) {\n            return true;\n     \
    \   }\n        long prev = l[0];\n        bool increasing = true;\n        bool\
    \ decreasing = true;\n        for (int i = 1; i < l.Count; i++) {\n          \
    \  if (l[i] < prev) {\n                increasing = false;\n            }\n  \
    \          if (l[i] > prev) {\n                decreasing = false;\n         \
    \   }\n            prev = l[i];\n        }\n        return increasing || decreasing;",
  "        if (l.Count < 2) {\n            return true;\n        }\n        bool increasing\
    \ = l[0] < l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n          \
    \  if (increasing && l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n            if (!increasing && l[i] < l[i + 1]) {\n               \
    \ return false;\n            }\n        }\n        return true;", "        if\
    \ (l.Count <= 1) {\n            return true;\n        }\n        bool increasing\
    \ = l[1] > l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if\
    \ (increasing && l[i] < l[i - 1]) {\n                return false;\n         \
    \   }\n            if (!increasing && l[i] > l[i - 1]) {\n                return\
    \ false;\n            }\n        }\n        return true;", "        if (l.Count\
    \ <= 1) {\n            return true;\n        }\n        long last = l[0];\n  \
    \      bool increasing = true;\n        bool decreasing = true;\n        for (int\
    \ i = 1; i < l.Count; i++) {\n            if (l[i] > last) {\n               \
    \ decreasing = false;\n            }\n            if (l[i] < last) {\n       \
    \         increasing = false;\n            }\n            last = l[i];\n     \
    \   }\n        return increasing || decreasing;", "        if (l.Count < 2) {\n\
    \            return true;\n        }\n        bool increasing = l[1] > l[0];\n\
    \        for (int i = 2; i < l.Count; i++) {\n            if (increasing) {\n\
    \                if (l[i] < l[i - 1]) {\n                    return false;\n \
    \               }\n            } else {\n                if (l[i] > l[i - 1])\
    \ {\n                    return false;\n                }\n            }\n   \
    \     }\n        return true;", "        if (l.Count < 2) {\n            return\
    \ true;\n        }\n        bool increasing = l[1] > l[0];\n        for (int i\
    \ = 2; i < l.Count; i++) {\n            if (increasing && l[i] < l[i - 1]) {\n\
    \                return false;\n            }\n            if (!increasing &&\
    \ l[i] > l[i - 1]) {\n                return false;\n            }\n        }\n\
    \        return true;", "        if (l.Count < 2) {\n            return true;\n\
    \        }\n        long diff = l[1] - l[0];\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (diff * (l[i] - l[i - 1]) < 0) {\n                return\
    \ false;\n            }\n        }\n        return true;", "        if (l.Count\
    \ == 0) {\n            return true;\n        }\n        long last = l[0];\n  \
    \      bool increasing = true;\n        bool decreasing = true;\n        for (int\
    \ i = 1; i < l.Count; i++) {\n            if (l[i] < last) {\n               \
    \ increasing = false;\n            }\n            if (l[i] > last) {\n       \
    \         decreasing = false;\n            }\n            last = l[i];\n     \
    \   }\n        return increasing || decreasing;", "        if (l.Count < 2) {\n\
    \            return true;\n        }\n        long d = l[(int)1L] - l[(int)0L];\n\
    \        for (long i = (long)1L; i < len(l); i++) {\n            if (d * (l[(int)(i)]\
    \ - l[(int)(i - 1L)]) < (long)0L) {\n                return false;\n         \
    \   }\n        }\n        return true;", "        if (l.Count < 2) {\n       \
    \     return true;\n        }\n        bool increasing = l[1] > l[0];\n      \
    \  for (int i = 1; i < l.Count; i++) {\n            if (increasing && l[i] < l[i\
    \ - 1]) {\n                return false;\n            }\n            if (!increasing\
    \ && l[i] > l[i - 1]) {\n                return false;\n            }\n      \
    \  }\n        return true;", "        if (l.Count <= 1) {\n            return\
    \ true;\n        }\n        bool increasing = l[1] > l[0];\n        for (int i\
    \ = 1; i < l.Count; i++) {\n            if (increasing) {\n                if\
    \ (l[i] < l[i - 1]) {\n                    return false;\n                }\n\
    \            } else {\n                if (l[i] > l[i - 1]) {\n              \
    \      return false;\n                }\n            }\n        }\n        return\
    \ true;", "        long prev = l[0];\n        bool increasing = true;\n      \
    \  bool decreasing = true;\n        for (int i = 1; i < l.Count; i++) {\n    \
    \        if (l[i] > prev) {\n                decreasing = false;\n           \
    \ }\n            if (l[i] < prev) {\n                increasing = false;\n   \
    \         }\n            prev = l[i];\n        }\n        return increasing ||\
    \ decreasing;", "        if (l.Count <= 1) {\n            return true;\n     \
    \   }\n        bool increasing = l[1] > l[0];\n        for (int i = 2; i < l.Count;\
    \ i++) {\n            if (increasing && l[i] < l[i - 1]) {\n                return\
    \ false;\n            }\n            if (!increasing && l[i] > l[i - 1]) {\n \
    \               return false;\n            }\n        }\n        return true;",
  "        if (l.Count < 2) {\n            return true;\n        }\n        bool increasing\
    \ = l[0] < l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n          \
    \  if (increasing) {\n                if (l[i] > l[i + 1]) {\n               \
    \     return false;\n                }\n            } else {\n               \
    \ if (l[i] < l[i + 1]) {\n                    return false;\n                }\n\
    \            }\n        }\n        return true;", "        if (l.Count < 2) {\n\
    \            return true;\n        }\n        bool increasing = l[1] > l[0];\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (increasing) {\n\
    \                if (l[i] < l[i - 1]) {\n                    return false;\n \
    \               }\n            } else {\n                if (l[i] > l[i - 1])\
    \ {\n                    return false;\n                }\n            }\n   \
    \     }\n        return true;", "        if (l.Count < 2) {\n            return\
    \ true;\n        }\n        bool increasing = l[1] > l[0];\n        for (int i\
    \ = 2; i < l.Count; i++) {\n            if (increasing && l[i] < l[i - 1]) {\n\
    \                return false;\n            }\n            if (!increasing &&\
    \ l[i] > l[i - 1]) {\n                return false;\n            }\n        }\n\
    \        return true;", "        if (l.Count < 2) {\n            return true;\n\
    \        }\n        bool increasing = l[1] > l[0];\n        for (int i = 2; i\
    \ < l.Count; i++) {\n            if (increasing && l[i] < l[i - 1]) {\n      \
    \          return false;\n            }\n            if (!increasing && l[i] >\
    \ l[i - 1]) {\n                return false;\n            }\n        }\n     \
    \   return true;", "        if (l.Count <= 1) {\n            return true;\n  \
    \      }\n        bool increasing = l[0] < l[1];\n        for (int i = 1; i <\
    \ l.Count - 1; i++) {\n            if (increasing) {\n                if (l[i]\
    \ > l[i + 1]) {\n                    return false;\n                }\n      \
    \      } else {\n                if (l[i] < l[i + 1]) {\n                    return\
    \ false;\n                }\n            }\n        }\n        return true;",
  "        bool increasing = true;\n        bool decreasing = true;\n        for (int\
    \ i = 0; i < l.Count - 1; i++) {\n            if (l[i] > l[i + 1]) {\n       \
    \         increasing = false;\n            }\n            if (l[i] < l[i + 1])\
    \ {\n                decreasing = false;\n            }\n        }\n        return\
    \ increasing || decreasing;", "        long prev = l[0];\n        bool increasing\
    \ = true;\n        bool decreasing = true;\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (l[i] > prev) {\n                decreasing = false;\n\
    \            } else if (l[i] < prev) {\n                increasing = false;\n\
    \            }\n            prev = l[i];\n        }\n        return increasing\
    \ || decreasing;", "        if (l.Count <= 1) {\n            return true;\n  \
    \      }\n        bool increasing = l[0] < l[1];\n        for (int i = 1; i <\
    \ l.Count - 1; i++) {\n            if (increasing && l[i] > l[i + 1]) {\n    \
    \            return false;\n            }\n            if (!increasing && l[i]\
    \ < l[i + 1]) {\n                return false;\n            }\n        }\n   \
    \     return true;", "        bool increasing = true;\n        bool decreasing\
    \ = true;\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i] <\
    \ l[i - 1]) {\n                increasing = false;\n            }\n          \
    \  if (l[i] > l[i - 1]) {\n                decreasing = false;\n            }\n\
    \        }\n        return increasing || decreasing;", "        if (l.Count <\
    \ 2) {\n            return true;\n        }\n        bool increasing = l[1] >\
    \ l[0];\n        for (int i = 2; i < l.Count; i++) {\n            if (increasing\
    \ && l[i] < l[i - 1]) {\n                return false;\n            }\n      \
    \      if (!increasing && l[i] > l[i - 1]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        if (l.Count <= 1) {\n\
    \            return true;\n        }\n        bool increasing = true;\n      \
    \  bool decreasing = true;\n        for (int i = 1; i < l.Count; i++) {\n    \
    \        if (l[i] < l[i - 1]) {\n                increasing = false;\n       \
    \     }\n            if (l[i] > l[i - 1]) {\n                decreasing = false;\n\
    \            }\n        }\n        return increasing || decreasing;", "      \
    \  if (l.Count <= 1) {\n            return true;\n        }\n        bool increasing\
    \ = l[0] < l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n          \
    \  if (increasing) {\n                if (l[i] > l[i + 1]) {\n               \
    \     return false;\n                }\n            } else {\n               \
    \ if (l[i] < l[i + 1]) {\n                    return false;\n                }\n\
    \            }\n        }\n        return true;", "        if (l.Count <= 1) {\n\
    \            return true;\n        }\n        bool increasing = l[1] > l[0];\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (increasing && l[i]\
    \ < l[i - 1]) {\n                return false;\n            }\n            if\
    \ (!increasing && l[i] > l[i - 1]) {\n                return false;\n        \
    \    }\n        }\n        return true;", "        if (l.Count <= 1) {\n     \
    \       return true;\n        }\n        bool increasing = l[0] < l[1];\n    \
    \    for (int i = 1; i < l.Count; i++) {\n            if (increasing && l[i -\
    \ 1] > l[i]) {\n                return false;\n            }\n            if (!increasing\
    \ && l[i - 1] < l[i]) {\n                return false;\n            }\n      \
    \  }\n        return true;", "        if (l.Count == 0) {\n            return\
    \ true;\n        }\n        long prev = l[0];\n        bool increasing = true;\n\
    \        bool decreasing = true;\n        for (int i = 1; i < l.Count; i++) {\n\
    \            if (l[i] > prev) {\n                decreasing = false;\n       \
    \     }\n            if (l[i] < prev) {\n                increasing = false;\n\
    \            }\n            prev = l[i];\n        }\n        return increasing\
    \ || decreasing;", "        if (l.Count <= 1) {\n            return true;\n  \
    \      }\n        bool increasing = l[1] > l[0];\n        for (int i = 2; i <\
    \ l.Count; i++) {\n            if (increasing && l[i] < l[i - 1]) {\n        \
    \        return false;\n            }\n            if (!increasing && l[i] > l[i\
    \ - 1]) {\n                return false;\n            }\n        }\n        return\
    \ true;", "        if (l.Count < 2) {\n            return true;\n        }\n \
    \       bool increasing = l[1] > l[0];\n        for (int i = 2; i < l.Count; i++)\
    \ {\n            if (increasing && l[i] < l[i - 1]) {\n                return\
    \ false;\n            }\n            if (!increasing && l[i] > l[i - 1]) {\n \
    \               return false;\n            }\n        }\n        return true;",
  "        if (l.Count < 2) {\n            return true;\n        }\n        bool increasing\
    \ = l[0] < l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n          \
    \  if (increasing && l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n            if (!increasing && l[i] < l[i + 1]) {\n               \
    \ return false;\n            }\n        }\n        return true;", "        if\
    \ (l.Count < 2) {\n            return true;\n        }\n        bool increasing\
    \ = l[0] < l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n          \
    \  if (increasing && l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n            if (!increasing && l[i] < l[i + 1]) {\n               \
    \ return false;\n            }\n        }\n        return true;", "        if\
    \ (l.Count <= 1) {\n            return true;\n        }\n        bool increasing\
    \ = l[0] < l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n          \
    \  if (increasing && l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n            if (!increasing && l[i] < l[i + 1]) {\n               \
    \ return false;\n            }\n        }\n        return true;", "        if\
    \ (l.Count <= 1) {\n            return true;\n        }\n        bool increasing\
    \ = l[0] < l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n          \
    \  if (increasing && l[i] > l[i + 1]) {\n                return false;\n     \
    \       }\n            if (!increasing && l[i] < l[i + 1]) {\n               \
    \ return false;\n            }\n        }\n        return true;", "        if\
    \ (l.Count < 2) {\n            return true;\n        }\n        bool increasing\
    \ = l[1] > l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if\
    \ (increasing && l[i] < l[i - 1]) {\n                return false;\n         \
    \   }\n            if (!increasing && l[i] > l[i - 1]) {\n                return\
    \ false;\n            }\n        }\n        return true;", "        if (l.Count\
    \ < 2) {\n            return true;\n        }\n        bool increasing = l[0]\
    \ < l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n            if (increasing\
    \ && l[i] > l[i + 1]) {\n                return false;\n            }\n      \
    \      if (!increasing && l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        if (l.Count == 0) {\n\
    \            return true;\n        }\n        long prev = l[0];\n        bool\
    \ increasing = true;\n        bool decreasing = true;\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] < prev) {\n                increasing\
    \ = false;\n            }\n            if (l[i] > prev) {\n                decreasing\
    \ = false;\n            }\n            prev = l[i];\n        }\n        return\
    \ increasing || decreasing;", "        if (l.Count < 2) {\n            return\
    \ true;\n        }\n        long d = l[(int)1L] - l[(int)0L];\n        for (long\
    \ i = (long)1L; i < len(l); i++) {\n            if (d * (l[(int)(i)] - l[(int)(i\
    \ - 1L)]) < (long)0L) {\n                return false;\n            }\n      \
    \  }\n        return true;", "        if (l.Count <= 1) {\n            return\
    \ true;\n        }\n        bool increasing = l[0] < l[1];\n        for (int i\
    \ = 1; i < l.Count - 1; i++) {\n            if (increasing) {\n              \
    \  if (l[i] > l[i + 1]) {\n                    return false;\n               \
    \ }\n            } else {\n                if (l[i] < l[i + 1]) {\n          \
    \          return false;\n                }\n            }\n        }\n      \
    \  return true;", "        if (l.Count == 0) {\n            return true;\n   \
    \     }\n        long d = l[0];\n        for (int i = 1; i < l.Count; i++) {\n\
    \            if (d * l[i] < 0) {\n                return false;\n            }\n\
    \            d = l[i] - d;\n        }\n        return true;", "        if (l.Count\
    \ == 0) {\n            return true;\n        }\n        long prev = l[0];\n  \
    \      bool increasing = true;\n        bool decreasing = true;\n        foreach\
    \ (long x in l) {\n            if (x < prev) {\n                increasing = false;\n\
    \            }\n            if (x > prev) {\n                decreasing = false;\n\
    \            }\n            prev = x;\n        }\n        return increasing ||\
    \ decreasing;", "        if (l.Count <= 1) {\n            return true;\n     \
    \   }\n        bool increasing = l[1] > l[0];\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (increasing && l[i] < l[i - 1]) {\n                return\
    \ false;\n            }\n            if (!increasing && l[i] > l[i - 1]) {\n \
    \               return false;\n            }\n        }\n        return true;",
  "        if (l.Count == 0) {\n            return true;\n        }\n        long\
    \ prev = l[0];\n        bool increasing = true;\n        bool decreasing = true;\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (l[i] < prev) {\n\
    \                increasing = false;\n            }\n            if (l[i] > prev)\
    \ {\n                decreasing = false;\n            }\n            prev = l[i];\n\
    \        }\n        return increasing || decreasing;", "        if (l.Count <=\
    \ 1) {\n            return true;\n        }\n        long prev = l[0];\n     \
    \   bool increasing = true;\n        bool decreasing = true;\n        for (int\
    \ i = 1; i < l.Count; i++) {\n            if (l[i] < prev) {\n               \
    \ increasing = false;\n            }\n            if (l[i] > prev) {\n       \
    \         decreasing = false;\n            }\n            prev = l[i];\n     \
    \   }\n        return increasing || decreasing;", "        if (l.Count <= 1) {\n\
    \            return true;\n        }\n        bool increasing = l[0] < l[1];\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (increasing) {\n\
    \                if (l[i - 1] > l[i]) {\n                    return false;\n \
    \               }\n            } else {\n                if (l[i - 1] < l[i])\
    \ {\n                    return false;\n                }\n            }\n   \
    \     }\n        return true;", "        bool increasing = true;\n        bool\
    \ decreasing = true;\n        for (int i = 1; i < l.Count; i++) {\n          \
    \  if (l[i] < l[i - 1]) {\n                increasing = false;\n            }\n\
    \            if (l[i] > l[i - 1]) {\n                decreasing = false;\n   \
    \         }\n        }\n        return increasing || decreasing;", "        if\
    \ (l.Count < 2) {\n            return true;\n        }\n        bool increasing\
    \ = l[1] > l[0];\n        for (int i = 2; i < l.Count; i++) {\n            if\
    \ (increasing && l[i] < l[i - 1]) {\n                return false;\n         \
    \   }\n            if (!increasing && l[i] > l[i - 1]) {\n                return\
    \ false;\n            }\n        }\n        return true;", "        if (l.Count\
    \ < 2) {\n            return true;\n        }\n        bool increasing = l[0]\
    \ < l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n            if (increasing\
    \ && l[i] > l[i + 1]) {\n                return false;\n            }\n      \
    \      if (!increasing && l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        if (l.Count < 2) {\n\
    \            return true;\n        }\n        bool increasing = l[0] < l[1];\n\
    \        for (int i = 1; i < l.Count - 1; i++) {\n            if (increasing &&\
    \ l[i] > l[i + 1]) {\n                return false;\n            }\n         \
    \   if (!increasing && l[i] < l[i + 1]) {\n                return false;\n   \
    \         }\n        }\n        return true;", "        if (l.Count <= 1) {\n\
    \            return true;\n        }\n        long d = l[(int)1L] - l[(int)0L];\n\
    \        for (long i = (long)1L; i < (long)l.Count; i++) {\n            if (d\
    \ * (l[(int)(i)] - l[(int)(i - 1L)]) < (long)0L) {\n                return false;\n\
    \            }\n        }\n        return true;", "        if (l.Count <= 1) {\n\
    \            return true;\n        }\n        bool increasing = l[1] > l[0];\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (increasing && l[i]\
    \ < l[i - 1]) {\n                return false;\n            }\n            if\
    \ (!increasing && l[i] > l[i - 1]) {\n                return false;\n        \
    \    }\n        }\n        return true;", "        bool increasing = true;\n \
    \       bool decreasing = true;\n        for (int i = 1; i < l.Count; i++) {\n\
    \            if (l[i] < l[i - 1]) {\n                increasing = false;\n   \
    \         }\n            if (l[i] > l[i - 1]) {\n                decreasing =\
    \ false;\n            }\n        }\n        return increasing || decreasing;",
  "        if (l.Count <= 1) {\n            return true;\n        }\n        bool\
    \ increasing = l[0] < l[1];\n        for (int i = 1; i < l.Count; i++) {\n   \
    \         if (increasing && l[i - 1] > l[i]) {\n                return false;\n\
    \            }\n            if (!increasing && l[i - 1] < l[i]) {\n          \
    \      return false;\n            }\n        }\n        return true;", "     \
    \   if (l.Count < 2) {\n            return true;\n        }\n        long d =\
    \ l[(int)1L] - l[(int)0L];\n        for (long i = (long)1L; i < (long)l.Count;\
    \ i++) {\n            if (d * (l[(int)(i)] - l[(int)(i - 1L)]) < (long)0L) {\n\
    \                return false;\n            }\n        }\n        return true;",
  "        if (l.Count < 2) {\n            return true;\n        }\n        bool increasing\
    \ = l[0] < l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n          \
    \  if (increasing) {\n                if (l[i] > l[i + 1]) {\n               \
    \     return false;\n                }\n            } else {\n               \
    \ if (l[i] < l[i + 1]) {\n                    return false;\n                }\n\
    \            }\n        }\n        return true;", "        if (l.Count == 0) {\n\
    \            return true;\n        }\n        long prev = l[0];\n        bool\
    \ increasing = true;\n        bool decreasing = true;\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] < prev) {\n                increasing\
    \ = false;\n            }\n            if (l[i] > prev) {\n                decreasing\
    \ = false;\n            }\n            prev = l[i];\n        }\n        return\
    \ increasing || decreasing;", "        if (l.Count == 0) {\n            return\
    \ true;\n        }\n        long last = l[0];\n        bool increasing = true;\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (l[i] == last) {\n\
    \                continue;\n            }\n            if (increasing) {\n   \
    \             if (l[i] < last) {\n                    increasing = false;\n  \
    \              }\n            } else {\n                if (l[i] > last) {\n \
    \                   return false;\n                }\n            }\n        \
    \    last = l[i];\n        }\n        return true;", "        bool increasing\
    \ = true;\n        bool decreasing = true;\n        for (int i = 1; i < l.Count;\
    \ i++) {\n            if (l[i] < l[i - 1]) {\n                increasing = false;\n\
    \            }\n            if (l[i] > l[i - 1]) {\n                decreasing\
    \ = false;\n            }\n        }\n        return increasing || decreasing;",
  "        if (l.Count == 0) {\n            return true;\n        }\n        long\
    \ prev = l[0];\n        bool increasing = true;\n        bool decreasing = true;\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (l[i] < prev) {\n\
    \                increasing = false;\n            }\n            if (l[i] > prev)\
    \ {\n                decreasing = false;\n            }\n            prev = l[i];\n\
    \        }\n        return increasing || decreasing;", "        if (l.Count <\
    \ 2) {\n            return true;\n        }\n        bool increasing = l[0] <\
    \ l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n            if (increasing\
    \ && l[i] > l[i + 1]) {\n                return false;\n            }\n      \
    \      if (!increasing && l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        if (l.Count <= 1) {\n\
    \            return true;\n        }\n        bool increasing = l[0] < l[1];\n\
    \        for (int i = 1; i < l.Count - 1; i++) {\n            if (increasing)\
    \ {\n                if (l[i] > l[i + 1]) {\n                    return false;\n\
    \                }\n            } else {\n                if (l[i] < l[i + 1])\
    \ {\n                    return false;\n                }\n            }\n   \
    \     }\n        return true;", "        bool increasing = true;\n        bool\
    \ decreasing = true;\n        for (int i = 1; i < l.Count; i++) {\n          \
    \  if (l[i] < l[i - 1]) {\n                increasing = false;\n            }\n\
    \            if (l[i] > l[i - 1]) {\n                decreasing = false;\n   \
    \         }\n        }\n        return increasing || decreasing;", "        if\
    \ (l.Count <= 1) return true;\n        var sign = Math.Sign(l[1] - l[0]);\n  \
    \      for (int i = 1; i < l.Count; i++) {\n            if (sign == 0) {\n   \
    \             sign = Math.Sign(l[i] - l[i - 1]);\n            } else if (sign\
    \ != Math.Sign(l[i] - l[i - 1])) {\n                return false;\n          \
    \  }\n        }\n        return true;", "        long prev = l[0];\n        bool\
    \ increasing = true;\n        bool decreasing = true;\n        foreach (long i\
    \ in l) {\n            if (i < prev) {\n                increasing = false;\n\
    \            }\n            if (i > prev) {\n                decreasing = false;\n\
    \            }\n            prev = i;\n        }\n        return increasing ||\
    \ decreasing;", "        if (l.Count < 2) {\n            return true;\n      \
    \  }\n        bool increasing = l[0] < l[1];\n        for (int i = 1; i < l.Count\
    \ - 1; i++) {\n            if (increasing) {\n                if (l[i] > l[i +\
    \ 1]) {\n                    return false;\n                }\n            } else\
    \ {\n                if (l[i] < l[i + 1]) {\n                    return false;\n\
    \                }\n            }\n        }\n        return true;", "       \
    \ if (l.Count == 0) {\n            return true;\n        }\n        long last\
    \ = l[0];\n        bool increasing = true;\n        bool decreasing = true;\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (l[i] < last) {\n\
    \                increasing = false;\n            }\n            if (l[i] > last)\
    \ {\n                decreasing = false;\n            }\n            last = l[i];\n\
    \        }\n        return increasing || decreasing;", "        if (l.Count <\
    \ 2) {\n            return true;\n        }\n        bool increasing = l[0] <\
    \ l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n            if (increasing\
    \ && l[i] > l[i + 1]) {\n                return false;\n            }\n      \
    \      if (!increasing && l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        if (l.Count == 0) {\n\
    \            return true;\n        }\n        long prev = l[0];\n        bool\
    \ increasing = true;\n        bool decreasing = true;\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] < prev) {\n                increasing\
    \ = false;\n            }\n            if (l[i] > prev) {\n                decreasing\
    \ = false;\n            }\n            prev = l[i];\n        }\n        return\
    \ increasing || decreasing;", "        bool increasing = true;\n        bool decreasing\
    \ = true;\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i] <\
    \ l[i - 1]) {\n                increasing = false;\n            }\n          \
    \  if (l[i] > l[i - 1]) {\n                decreasing = false;\n            }\n\
    \        }\n        return increasing || decreasing;", "        if (l.Count <=\
    \ 1) {\n            return true;\n        }\n        bool increasing = l[0] <\
    \ l[1];\n        for (int i = 1; i < l.Count - 1; i++) {\n            if (increasing\
    \ && l[i] > l[i + 1]) {\n                return false;\n            }\n      \
    \      if (!increasing && l[i] < l[i + 1]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        if (l.Count == 0) {\n\
    \            return true;\n        }\n        long prev = l[0];\n        bool\
    \ increasing = true;\n        bool decreasing = true;\n        for (int i = 1;\
    \ i < l.Count; i++) {\n            if (l[i] > prev) {\n                decreasing\
    \ = false;\n            }\n            if (l[i] < prev) {\n                increasing\
    \ = false;\n            }\n            prev = l[i];\n        }\n        return\
    \ increasing || decreasing;", "        if (l.Count <= 1) {\n            return\
    \ true;\n        }\n        bool increasing = l[0] < l[1];\n        for (int i\
    \ = 1; i < l.Count; i++) {\n            if (increasing) {\n                if\
    \ (l[i - 1] > l[i]) {\n                    return false;\n                }\n\
    \            } else {\n                if (l[i - 1] < l[i]) {\n              \
    \      return false;\n                }\n            }\n        }\n        return\
    \ true;", "        if (l.Count < 2) {\n            return true;\n        }\n \
    \       bool increasing = l[0] < l[1];\n        for (int i = 1; i < l.Count -\
    \ 1; i++) {\n            if (increasing) {\n                if (l[i] > l[i + 1])\
    \ {\n                    return false;\n                }\n            } else\
    \ {\n                if (l[i] < l[i + 1]) {\n                    return false;\n\
    \                }\n            }\n        }\n        return true;", "       \
    \ if (l.Count <= 1) {\n            return true;\n        }\n        bool increasing\
    \ = l[1] > l[0];\n        for (int i = 1; i < l.Count; i++) {\n            if\
    \ (increasing && l[i] < l[i - 1]) {\n                return false;\n         \
    \   }\n            if (!increasing && l[i] > l[i - 1]) {\n                return\
    \ false;\n            }\n        }\n        return true;", "        if (l.Count\
    \ < 2) {\n            return true;\n        }\n        long d = l[1] - l[0];\n\
    \        for (int i = 2; i < l.Count; i++) {\n            if (d * (l[i] - l[i\
    \ - 1]) < 0) {\n                return false;\n            }\n        }\n    \
    \    return true;", "        if (l.Count < 2) {\n            return true;\n  \
    \      }\n        bool increasing = l[0] < l[1];\n        for (int i = 1; i <\
    \ l.Count - 1; i++) {\n            if (increasing) {\n                if (l[i]\
    \ > l[i + 1]) {\n                    return false;\n                }\n      \
    \      } else {\n                if (l[i] < l[i + 1]) {\n                    return\
    \ false;\n                }\n            }\n        }\n        return true;",
  "        long prev = l[0];\n        bool increasing = true;\n        bool decreasing\
    \ = true;\n        for (int i = 1; i < l.Count; i++) {\n            if (l[i] >\
    \ prev) {\n                decreasing = false;\n            } else if (l[i] <\
    \ prev) {\n                increasing = false;\n            }\n            prev\
    \ = l[i];\n        }\n        return increasing || decreasing;", "        if (l.Count\
    \ == 0) {\n            return true;\n        }\n        long prev = l[0];\n  \
    \      bool increasing = true;\n        bool decreasing = true;\n        for (int\
    \ i = 1; i < l.Count; i++) {\n            if (l[i] < prev) {\n               \
    \ increasing = false;\n            }\n            if (l[i] > prev) {\n       \
    \         decreasing = false;\n            }\n            prev = l[i];\n     \
    \   }\n        return increasing || decreasing;", "        if (l.Count < 2) {\n\
    \            return true;\n        }\n        bool increasing = l[0] < l[1];\n\
    \        for (int i = 1; i < l.Count - 1; i++) {\n            if (increasing &&\
    \ l[i] > l[i + 1]) {\n                return false;\n            }\n         \
    \   if (!increasing && l[i] < l[i + 1]) {\n                return false;\n   \
    \         }\n        }\n        return true;", "        if (l.Count == 0) {\n\
    \            return true;\n        }\n        long last = l[0];\n        bool\
    \ increasing = true;\n        bool decreasing = true;\n        foreach (long x\
    \ in l) {\n            if (x < last) {\n                increasing = false;\n\
    \            }\n            if (x > last) {\n                decreasing = false;\n\
    \            }\n            last = x;\n        }\n        return increasing ||\
    \ decreasing;", "        bool increasing = true;\n        bool decreasing = true;\n\
    \        for (int i = 1; i < l.Count; i++) {\n            if (l[i] < l[i - 1])\
    \ {\n                increasing = false;\n            }\n            if (l[i]\
    \ > l[i - 1]) {\n                decreasing = false;\n            }\n        }\n\
    \        return increasing || decreasing;", "        if (l.Count < 2) {\n    \
    \        return true;\n        }\n        bool increasing = l[1] > l[0];\n   \
    \     for (int i = 1; i < l.Count; i++) {\n            if (increasing && l[i]\
    \ < l[i - 1]) {\n                return false;\n            }\n            if\
    \ (!increasing && l[i] > l[i - 1]) {\n                return false;\n        \
    \    }\n        }\n        return true;", "        if (l.Count < 2) {\n      \
    \      return true;\n        }\n        bool increasing = l[0] < l[1];\n     \
    \   for (int i = 1; i < l.Count - 1; i++) {\n            if (increasing && l[i]\
    \ > l[i + 1]) {\n                return false;\n            }\n            if\
    \ (!increasing && l[i] < l[i + 1]) {\n                return false;\n        \
    \    }\n        }\n        return true;", "        if (l.Count < 2) {\n      \
    \      return true;\n        }\n        bool increasing = l[1] > l[0];\n     \
    \   for (int i = 1; i < l.Count; i++) {\n            if (increasing) {\n     \
    \           if (l[i] < l[i - 1]) {\n                    return false;\n      \
    \          }\n            } else {\n                if (l[i] > l[i - 1]) {\n \
    \                   return false;\n                }\n            }\n        }\n\
    \        return true;"]
stop_tokens:
- "\n    }\n"

language: cs
name: HumanEval_1_separate_paren_groups
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open++;\n            } else if (paren_string[i] == ')') {\n\
    \                open--;\n            }\n            if (open == 0) {\n      \
    \          end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int open = 0;\n        int start = 0;\n        for (int i = 0; i < paren_string.Length;\
    \ i++) {\n            if (paren_string[i] == '(') {\n                if (open\
    \ == 0) {\n                    start = i;\n                }\n               \
    \ open++;\n            } else if (paren_string[i] == ')') {\n                open--;\n\
    \                if (open == 0) {\n                    result.Add(paren_string.Substring(start,\
    \ i - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85cf5a565b924011860b6f44f9e6fdd9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85cf5a565b924011860b6f44f9e6fdd9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (count == 0) {\n                    start = i;\n     \
    \           }\n                count++;\n            } else if (paren_string[i]\
    \ == ')') {\n                count--;\n                if (count == 0) {\n   \
    \                 end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int open = 0;\n        for (int i = 0; i < paren_string.Length;\
    \ i++) {\n            if (paren_string[i] == '(') {\n                open++;\n\
    \            } else if (paren_string[i] == ')') {\n                open--;\n \
    \           }\n            if (open == 0) {\n                groups.Add(paren_string.Substring(start,\
    \ i - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return groups;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f50f0c1358f842ea92a9edc31086e06c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f50f0c1358f842ea92a9edc31086e06c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        List<string>\
    \ result = new List<string>();\n        int start = 0;\n        int end = 0;\n\
    \        int count = 0;\n        for (int i = 0; i < paren_string.Length; i++)\
    \ {\n            if (paren_string[i] == '(') {\n                count++;\n   \
    \         } else if (paren_string[i] == ')') {\n                count--;\n   \
    \         }\n            if (count == 0) {\n                end = i;\n       \
    \         result.Add(paren_string.Substring(start, end - start + 1));\n      \
    \          start = end + 1;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2363fb721fc54460ad82298d9a8ee027>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2363fb721fc54460ad82298d9a8ee027>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (count == 0) {\n                    start = i;\n     \
    \           }\n                count++;\n            } else if (paren_string[i]\
    \ == ')') {\n                count--;\n                if (count == 0) {\n   \
    \                 end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca1bf5fe68fc4fe0a2ca91d605e0f40c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca1bf5fe68fc4fe0a2ca91d605e0f40c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (open == 0) {\n                    start = i;\n      \
    \          }\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                open--;\n                if (open == 0) {\n     \
    \               end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9acf37afcd474c108d2fa6bea775ded0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9acf37afcd474c108d2fa6bea775ded0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795074
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (open == 0) {\n                    start = i;\n      \
    \          }\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                open--;\n                if (open == 0) {\n     \
    \               end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9acf37afcd474c108d2fa6bea775ded0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9acf37afcd474c108d2fa6bea775ded0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795074
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open++;\n            } else if (paren_string[i] == ')') {\n\
    \                open--;\n            }\n            if (open == 0) {\n      \
    \          end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cc6d91a8fbc4a9db63af47a11895f06>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cc6d91a8fbc4a9db63af47a11895f06>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = end + 1;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int depth = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (depth == 0) {\n                    start = i;\n     \
    \           }\n                depth++;\n            } else if (paren_string[i]\
    \ == ')') {\n                depth--;\n                if (depth == 0) {\n   \
    \                 end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> paren_groups = new List<string>();\n \
    \       int start_index = 0;\n        int end_index = 0;\n        int open_parens\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                if (open_parens == 0) {\n      \
    \              start_index = i;\n                }\n                open_parens++;\n\
    \            } else if (paren_string[i] == ')') {\n                open_parens--;\n\
    \                if (open_parens == 0) {\n                    end_index = i;\n\
    \                    paren_groups.Add(paren_string.Substring(start_index, end_index\
    \ - start_index + 1));\n                }\n            }\n        }\n        return\
    \ paren_groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c074d404a8243f99c94e44523c7baa6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c074d404a8243f99c94e44523c7baa6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795074
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open++;\n            } else if (paren_string[i] == ')') {\n\
    \                open--;\n            }\n            if (open == 0) {\n      \
    \          end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (count == 0) {\n                    start = i;\n     \
    \           }\n                count++;\n            } else if (paren_string[i]\
    \ == ')') {\n                count--;\n                if (count == 0) {\n   \
    \                 end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (open == 0) {\n                    start = i;\n      \
    \          }\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                open--;\n                if (open == 0) {\n     \
    \               end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                result.Add(paren_string.Substring(start, end - start\
    \ + 1));\n                start = i + 1;\n                end = i + 1;\n     \
    \           open = 0;\n                close = 0;\n            } else {\n    \
    \            end++;\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4851c5b630cf4adcb6d29e8f01e51364>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4851c5b630cf4adcb6d29e8f01e51364>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795074
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open++;\n            } else if (paren_string[i] == ')') {\n\
    \                open--;\n            }\n            if (open == 0) {\n      \
    \          end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                groups.Add(paren_string.Substring(start, end - start\
    \ + 1));\n                start = i + 1;\n                end = i + 1;\n     \
    \           open = 0;\n                close = 0;\n            } else {\n    \
    \            end++;\n            }\n        }\n        return groups;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29547c2366504fdc885a0754701616ff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29547c2366504fdc885a0754701616ff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open++;\n            } else if (paren_string[i] == ')') {\n\
    \                open--;\n            }\n            if (open == 0) {\n      \
    \          end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open++;\n            } else if (paren_string[i] == ')') {\n\
    \                open--;\n            }\n            if (open == 0) {\n      \
    \          end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (open == 0) {\n                    start = i;\n      \
    \          }\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                open--;\n                if (open == 0) {\n     \
    \               end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9acf37afcd474c108d2fa6bea775ded0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9acf37afcd474c108d2fa6bea775ded0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795074
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> paren_groups = new List<string>();\n \
    \       int start_index = 0;\n        int end_index = 0;\n        int open_parens\
    \ = 0;\n        int close_parens = 0;\n        for (int i = 0; i < paren_string.Length;\
    \ i++) {\n            if (paren_string[i] == '(') {\n                open_parens++;\n\
    \            } else if (paren_string[i] == ')') {\n                close_parens++;\n\
    \            }\n            if (open_parens == close_parens) {\n             \
    \   end_index = i;\n                paren_groups.Add(paren_string.Substring(start_index,\
    \ end_index - start_index + 1));\n                start_index = i + 1;\n     \
    \       }\n        }\n        return paren_groups;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((()))\
    \ () ((())()())\")).Equals((new List<string>(new string[]{(string)\"(()())\",\
    \ (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    () (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5f3081442a654edc9ee02d3f40c52f66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5f3081442a654edc9ee02d3f40c52f66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return groups;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13e6799802b741ea97acbb08afc533fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13e6799802b741ea97acbb08afc533fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = end + 1;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> paren_groups = new List<string>();\n \
    \       int start = 0;\n        int end = 0;\n        int open_parens = 0;\n \
    \       for (int i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i]\
    \ == '(') {\n                if (open_parens == 0) {\n                    start\
    \ = i;\n                }\n                open_parens++;\n            } else\
    \ if (paren_string[i] == ')') {\n                open_parens--;\n            \
    \    if (open_parens == 0) {\n                    end = i;\n                 \
    \   paren_groups.Add(paren_string.Substring(start, end - start + 1));\n      \
    \          }\n            }\n        }\n        return paren_groups;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <64e661306dc240bb8909dde1edf35f18>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <64e661306dc240bb8909dde1edf35f18>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (open == 0) {\n                    start = i;\n      \
    \          }\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                open--;\n                if (open == 0) {\n     \
    \               end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9acf37afcd474c108d2fa6bea775ded0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9acf37afcd474c108d2fa6bea775ded0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795074
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> ret = new List<string>();\n        int\
    \ start = 0;\n        int end = 0;\n        int count = 0;\n        for (int i\
    \ = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                ret.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return ret;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe12431f30d4468bae014b7863754884>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe12431f30d4468bae014b7863754884>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int depth = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (depth == 0) {\n                    start = i;\n     \
    \           }\n                depth++;\n            } else if (paren_string[i]\
    \ == ')') {\n                depth--;\n                if (depth == 0) {\n   \
    \                 end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (open == 0) {\n                    start = i;\n      \
    \          }\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                open--;\n                if (open == 0) {\n     \
    \               end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (count == 0) {\n                    start = i;\n     \
    \           }\n                count++;\n            } else if (paren_string[i]\
    \ == ')') {\n                count--;\n                if (count == 0) {\n   \
    \                 end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return groups;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13e6799802b741ea97acbb08afc533fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13e6799802b741ea97acbb08afc533fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> paren_groups = new List<string>();\n \
    \       int start_index = 0;\n        int end_index = 0;\n        int open_parens\
    \ = 0;\n        int close_parens = 0;\n        for (int i = 0; i < paren_string.Length;\
    \ i++) {\n            if (paren_string[i] == '(') {\n                open_parens++;\n\
    \            } else if (paren_string[i] == ')') {\n                close_parens++;\n\
    \            }\n            if (open_parens == close_parens) {\n             \
    \   end_index = i;\n                paren_groups.Add(paren_string.Substring(start_index,\
    \ end_index - start_index + 1));\n                start_index = i + 1;\n     \
    \       }\n        }\n        return paren_groups;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((()))\
    \ () ((())()())\")).Equals((new List<string>(new string[]{(string)\"(()())\",\
    \ (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    () (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5f3081442a654edc9ee02d3f40c52f66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5f3081442a654edc9ee02d3f40c52f66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return groups;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13e6799802b741ea97acbb08afc533fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13e6799802b741ea97acbb08afc533fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (open == 0) {\n                    start = i;\n      \
    \          }\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                open--;\n                if (open == 0) {\n     \
    \               end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (open == 0) {\n                    start = i;\n      \
    \          }\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                open--;\n                if (open == 0) {\n     \
    \               end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start_index = 0;\n        int end_index = 0;\n        int open_parens =\
    \ 0;\n        int close_parens = 0;\n        for (int i = 0; i < paren_string.Length;\
    \ i++) {\n            if (paren_string[i] == '(') {\n                open_parens++;\n\
    \            } else if (paren_string[i] == ')') {\n                close_parens++;\n\
    \            }\n            if (open_parens == close_parens) {\n             \
    \   end_index = i;\n                result.Add(paren_string.Substring(start_index,\
    \ end_index - start_index + 1));\n                start_index = i + 1;\n     \
    \       }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\"\
    )).Equals((new List<string>(new string[]{(string)\"(()())\", (string)\"((()))\"\
    , (string)\"()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    () (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a1f65cf2a6fe46248b6140b19372cb8a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a1f65cf2a6fe46248b6140b19372cb8a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> ret = new List<string>();\n        int\
    \ start = 0;\n        int end = 0;\n        int depth = 0;\n        for (int i\
    \ = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (depth == 0) {\n                    start = i;\n     \
    \           }\n                depth++;\n            } else if (paren_string[i]\
    \ == ')') {\n                depth--;\n                if (depth == 0) {\n   \
    \                 end = i;\n                    ret.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f63ddd075e9a41f298032796dcc526ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f63ddd075e9a41f298032796dcc526ae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = end + 1;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function.\n        // Hint:\
    \ You can use a stack to keep track of open parentheses.\n        List<string>\
    \ result = new List<string>();\n        Stack<char> stack = new Stack<char>();\n\
    \        StringBuilder sb = new StringBuilder();\n        foreach (char c in paren_string)\
    \ {\n            if (c == ' ') {\n                continue;\n            }\n \
    \           if (c == '(') {\n                stack.Push(c);\n            } else\
    \ if (c == ')') {\n                if (stack.Count == 0) {\n                 \
    \   throw new ArgumentException(\"Invalid input\");\n                }\n     \
    \           stack.Pop();\n            }\n            sb.Append(c);\n         \
    \   if (stack.Count == 0) {\n                result.Add(sb.ToString());\n    \
    \            sb.Clear();\n            }\n        }\n        if (stack.Count !=\
    \ 0) {\n            throw new ArgumentException(\"Invalid input\");\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e515bd0cd8ef4cb6ad156b9c84822842>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e515bd0cd8ef4cb6ad156b9c84822842>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (open == 0) {\n                    start = i;\n      \
    \          }\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                open--;\n                if (open == 0) {\n     \
    \               end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int depth = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (depth == 0) {\n                    start = i;\n     \
    \           }\n                depth++;\n            } else if (paren_string[i]\
    \ == ')') {\n                depth--;\n                if (depth == 0) {\n   \
    \                 end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int depth = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (depth == 0) {\n                    start = i;\n     \
    \           }\n                depth++;\n            } else if (paren_string[i]\
    \ == ')') {\n                depth--;\n                if (depth == 0) {\n   \
    \                 end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <225bb48d690a4848b3fbf5ba10c6e169>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <225bb48d690a4848b3fbf5ba10c6e169>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (count == 0) {\n                    start = i;\n     \
    \           }\n                count++;\n            } else if (paren_string[i]\
    \ == ')') {\n                count--;\n                if (count == 0) {\n   \
    \                 end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int depth = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (depth == 0) {\n                    start = i;\n     \
    \           }\n                depth++;\n            } else if (paren_string[i]\
    \ == ')') {\n                depth--;\n                if (depth == 0) {\n   \
    \                 end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = end + 1;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = end + 1;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = end + 1;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (count == 0) {\n                    start = i;\n     \
    \           }\n                count++;\n            } else if (paren_string[i]\
    \ == ')') {\n                count--;\n                if (count == 0) {\n   \
    \                 end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (count == 0) {\n                    start = i;\n     \
    \           }\n                count++;\n            } else if (paren_string[i]\
    \ == ')') {\n                count--;\n                if (count == 0) {\n   \
    \                 end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca1bf5fe68fc4fe0a2ca91d605e0f40c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca1bf5fe68fc4fe0a2ca91d605e0f40c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function.\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <4de230c97135420abb095993d8a89b72>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <4de230c97135420abb095993d8a89b72>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795074
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = end + 1;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int depth = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (depth == 0) {\n                    start = i;\n     \
    \           }\n                depth++;\n            } else if (paren_string[i]\
    \ == ')') {\n                depth--;\n                if (depth == 0) {\n   \
    \                 end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <225bb48d690a4848b3fbf5ba10c6e169>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <225bb48d690a4848b3fbf5ba10c6e169>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int open_paren_count = 0;\n        int start_index = 0;\n        for (int i\
    \ = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open_paren_count++;\n            } else if (paren_string[i]\
    \ == ')') {\n                open_paren_count--;\n            }\n            if\
    \ (open_paren_count == 0) {\n                result.Add(paren_string.Substring(start_index,\
    \ i - start_index + 1));\n                start_index = i + 1;\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\"\
    )).Equals((new List<string>(new string[]{(string)\"(()())\", (string)\"((()))\"\
    , (string)\"()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    () (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25396cd76a6649698e89f2060b9ce2c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25396cd76a6649698e89f2060b9ce2c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (open == 0) {\n                    start = i;\n      \
    \          }\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                open--;\n                if (open == 0) {\n     \
    \               end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9acf37afcd474c108d2fa6bea775ded0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9acf37afcd474c108d2fa6bea775ded0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795074
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function.\n        List<string>\
    \ result = new List<string>();\n        int start = 0;\n        int end = 0;\n\
    \        int count = 0;\n        for (int i = 0; i < paren_string.Length; i++)\
    \ {\n            if (paren_string[i] == '(') {\n                count++;\n   \
    \         }\n            if (paren_string[i] == ')') {\n                count--;\n\
    \            }\n            if (count == 0) {\n                end = i;\n    \
    \            result.Add(paren_string.Substring(start, end - start + 1));\n   \
    \             start = i + 1;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <953f044fcbcb4bb9ac2b7c87cccef781>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <953f044fcbcb4bb9ac2b7c87cccef781>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return groups;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f6975fcc9ab4b15804d1d2e22995747>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f6975fcc9ab4b15804d1d2e22995747>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795074
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open++;\n            } else if (paren_string[i] == ')') {\n\
    \                open--;\n            }\n            if (open == 0) {\n      \
    \          end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open++;\n            } else if (paren_string[i] == ')') {\n\
    \                open--;\n            }\n            if (open == 0) {\n      \
    \          end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (open == 0) {\n                    start = i;\n      \
    \          }\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                open--;\n                if (open == 0) {\n     \
    \               end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9acf37afcd474c108d2fa6bea775ded0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9acf37afcd474c108d2fa6bea775ded0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795074
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = end + 1;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = end + 1;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int depth = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (depth == 0) {\n                    start = i;\n     \
    \           }\n                depth++;\n            } else if (paren_string[i]\
    \ == ')') {\n                depth--;\n                if (depth == 0) {\n   \
    \                 end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (count == 0) {\n                    start = i;\n     \
    \           }\n                count++;\n            } else if (paren_string[i]\
    \ == ')') {\n                count--;\n                if (count == 0) {\n   \
    \                 end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // Your code here\n        return null;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <30c91b634ded47deb0fe36ad82582e35>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <30c91b634ded47deb0fe36ad82582e35>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        var result = new List<string>();\n        var current\
    \ = new StringBuilder();\n        int depth = 0;\n        foreach (var c in paren_string)\
    \ {\n            if (c == ' ') {\n                continue;\n            }\n \
    \           if (c == '(') {\n                depth++;\n            } else if (c\
    \ == ')') {\n                depth--;\n            }\n            current.Append(c);\n\
    \            if (depth == 0) {\n                result.Add(current.ToString());\n\
    \                current.Clear();\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <22c4eecc718b475f817c14eea12cc58d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <22c4eecc718b475f817c14eea12cc58d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (open == 0) {\n                    start = i;\n      \
    \          }\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                open--;\n                if (open == 0) {\n     \
    \               end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (count == 0) {\n                    start = i;\n     \
    \           }\n                count++;\n            } else if (paren_string[i]\
    \ == ')') {\n                count--;\n                if (count == 0) {\n   \
    \                 end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (count == 0) {\n                    start = i;\n     \
    \           }\n                count++;\n            } else if (paren_string[i]\
    \ == ')') {\n                count--;\n                if (count == 0) {\n   \
    \                 end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (count == 0) {\n                    start = i;\n     \
    \           }\n                count++;\n            } else if (paren_string[i]\
    \ == ')') {\n                count--;\n                if (count == 0) {\n   \
    \                 end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca1bf5fe68fc4fe0a2ca91d605e0f40c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca1bf5fe68fc4fe0a2ca91d605e0f40c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open++;\n            } else if (paren_string[i] == ')') {\n\
    \                open--;\n            }\n            if (open == 0) {\n      \
    \          end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int open_count = 0;\n        int start_index = 0;\n        for (int i = 0; i\
    \ < paren_string.Length; i++) {\n            if (paren_string[i] == '(') {\n \
    \               open_count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                open_count--;\n            }\n            if (open_count\
    \ == 0) {\n                groups.Add(paren_string.Substring(start_index, i -\
    \ start_index + 1));\n                start_index = i + 1;\n            }\n  \
    \      }\n        return groups;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\"\
    )).Equals((new List<string>(new string[]{(string)\"(()())\", (string)\"((()))\"\
    , (string)\"()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    () (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f04e42b7273542c59dc557f9a95b7c32>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f04e42b7273542c59dc557f9a95b7c32>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return groups;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13e6799802b741ea97acbb08afc533fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13e6799802b741ea97acbb08afc533fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (open == 0) {\n                    start = i;\n      \
    \          }\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                open--;\n                if (open == 0) {\n     \
    \               end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // Replace this with your code\n        return new\
    \ List<string>();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6d4cecdef932411b815adc6447a27fd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6d4cecdef932411b815adc6447a27fd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int open = 0;\n        int start = 0;\n        for (int i = 0; i < paren_string.Length;\
    \ i++) {\n            if (paren_string[i] == '(') {\n                if (open\
    \ == 0) {\n                    start = i;\n                }\n               \
    \ open++;\n            } else if (paren_string[i] == ')') {\n                open--;\n\
    \                if (open == 0) {\n                    groups.Add(paren_string.Substring(start,\
    \ i - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fb1fc9258e5b490fa82a8117f0d9e9ed>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fb1fc9258e5b490fa82a8117f0d9e9ed>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795074
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int open = 0;\n        for (int i = 0; i < paren_string.Length;\
    \ i++) {\n            if (paren_string[i] == '(') {\n                open++;\n\
    \            } else if (paren_string[i] == ')') {\n                open--;\n \
    \           }\n            if (open == 0) {\n                groups.Add(paren_string.Substring(start,\
    \ i - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return groups;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f50f0c1358f842ea92a9edc31086e06c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f50f0c1358f842ea92a9edc31086e06c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = end + 1;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int open = 0;\n        int start = 0;\n        for (int i = 0; i < paren_string.Length;\
    \ i++) {\n            if (paren_string[i] == '(') {\n                if (open\
    \ == 0) {\n                    start = i;\n                }\n               \
    \ open++;\n            } else if (paren_string[i] == ')') {\n                open--;\n\
    \                if (open == 0) {\n                    groups.Add(paren_string.Substring(start,\
    \ i - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fb1fc9258e5b490fa82a8117f0d9e9ed>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fb1fc9258e5b490fa82a8117f0d9e9ed>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795074
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int depth = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (depth == 0) {\n                    start = i;\n     \
    \           }\n                depth++;\n            } else if (paren_string[i]\
    \ == ')') {\n                depth--;\n                if (depth == 0) {\n   \
    \                 end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return groups;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f6975fcc9ab4b15804d1d2e22995747>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f6975fcc9ab4b15804d1d2e22995747>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795074
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return groups;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13e6799802b741ea97acbb08afc533fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13e6799802b741ea97acbb08afc533fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        var ret = new List<string>();\n        var cur = new\
    \ StringBuilder();\n        var depth = 0;\n        foreach (var c in paren_string)\
    \ {\n            if (c == ' ') {\n                continue;\n            }\n \
    \           if (c == '(') {\n                depth++;\n            } else if (c\
    \ == ')') {\n                depth--;\n            }\n            cur.Append(c);\n\
    \            if (depth == 0) {\n                ret.Add(cur.ToString());\n   \
    \             cur.Clear();\n            }\n        }\n        return ret;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <08118096515c45cb944a3a6ef3ce7a6f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <08118096515c45cb944a3a6ef3ce7a6f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open++;\n            } else if (paren_string[i] == ')') {\n\
    \                open--;\n            }\n            if (open == 0) {\n      \
    \          end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int depth = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (depth == 0) {\n                    start = i;\n     \
    \           }\n                depth++;\n            } else if (paren_string[i]\
    \ == ')') {\n                depth--;\n                if (depth == 0) {\n   \
    \                 end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> paren_groups = new List<string>();\n \
    \       int start = 0;\n        int end = 0;\n        int count = 0;\n       \
    \ for (int i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i]\
    \ == '(') {\n                if (count == 0) {\n                    start = i;\n\
    \                }\n                count++;\n            } else if (paren_string[i]\
    \ == ')') {\n                count--;\n                if (count == 0) {\n   \
    \                 end = i;\n                    paren_groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ paren_groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e632fb65da048008f0765efbffd117d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e632fb65da048008f0765efbffd117d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int depth = 0;\n        int start = 0;\n        for (int i = 0; i < paren_string.Length;\
    \ i++) {\n            if (paren_string[i] == '(') {\n                depth++;\n\
    \            } else if (paren_string[i] == ')') {\n                depth--;\n\
    \            }\n            if (depth == 0) {\n                groups.Add(paren_string.Substring(start,\
    \ i - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return groups;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7cbd6f4e6df34516aa75619676c14dbf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7cbd6f4e6df34516aa75619676c14dbf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (count == 0) {\n                    start = i;\n     \
    \           }\n                count++;\n            } else if (paren_string[i]\
    \ == ')') {\n                count--;\n                if (count == 0) {\n   \
    \                 end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca1bf5fe68fc4fe0a2ca91d605e0f40c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca1bf5fe68fc4fe0a2ca91d605e0f40c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open++;\n            } else if (paren_string[i] == ')') {\n\
    \                open--;\n            }\n            if (open == 0) {\n      \
    \          end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open++;\n            } else if (paren_string[i] == ')') {\n\
    \                open--;\n            }\n            if (open == 0) {\n      \
    \          end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return groups;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f6975fcc9ab4b15804d1d2e22995747>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f6975fcc9ab4b15804d1d2e22995747>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795074
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int depth = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (depth == 0) {\n                    start = i;\n     \
    \           }\n                depth++;\n            } else if (paren_string[i]\
    \ == ')') {\n                depth--;\n                if (depth == 0) {\n   \
    \                 end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <225bb48d690a4848b3fbf5ba10c6e169>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <225bb48d690a4848b3fbf5ba10c6e169>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = end + 1;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int depth = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (depth == 0) {\n                    start = i;\n     \
    \           }\n                depth++;\n            } else if (paren_string[i]\
    \ == ')') {\n                depth--;\n                if (depth == 0) {\n   \
    \                 end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        for (int i = 0; i < paren_string.Length;\
    \ i++) {\n            if (paren_string[i] == '(') {\n                start = i;\n\
    \            }\n            if (paren_string[i] == ')') {\n                end\
    \ = i;\n                groups.Add(paren_string.Substring(start, end - start +\
    \ 1));\n            }\n        }\n        return groups;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((()))\
    \ () ((())()())\")).Equals((new List<string>(new string[]{(string)\"(()())\",\
    \ (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    () (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <574da8ef078547b2b5b32b1624479845>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <574da8ef078547b2b5b32b1624479845>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int depth = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (depth == 0) {\n                    start = i;\n     \
    \           }\n                depth++;\n            } else if (paren_string[i]\
    \ == ')') {\n                depth--;\n                if (depth == 0) {\n   \
    \                 end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int depth = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (depth == 0) {\n                    start = i;\n     \
    \           }\n                depth++;\n            } else if (paren_string[i]\
    \ == ')') {\n                depth--;\n                if (depth == 0) {\n   \
    \                 end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (open == 0) {\n                    start = i;\n      \
    \          }\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                open--;\n                if (open == 0) {\n     \
    \               end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n                open = 0;\n\
    \                close = 0;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b029663da0fc4cbdb9d00d559b61feba>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b029663da0fc4cbdb9d00d559b61feba>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795074
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        return null;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\"\
    )).Equals((new List<string>(new string[]{(string)\"(()())\", (string)\"((()))\"\
    , (string)\"()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    () (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <9d20e11d8b494b829d3d168d490e6017>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <9d20e11d8b494b829d3d168d490e6017>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n                if (count == 1) {\n           \
    \         start = i;\n                }\n            } else if (paren_string[i]\
    \ == ')') {\n                count--;\n                if (count == 0) {\n   \
    \                 end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dc2596ea76264fb5a969e49021684930>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dc2596ea76264fb5a969e49021684930>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795074
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (open == 0) {\n                    start = i;\n      \
    \          }\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                open--;\n                if (open == 0) {\n     \
    \               end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int open = 0;\n        for (int i = 0; i < paren_string.Length;\
    \ i++) {\n            if (paren_string[i] == '(') {\n                open++;\n\
    \            } else if (paren_string[i] == ')') {\n                open--;\n \
    \           }\n            if (open == 0) {\n                result.Add(paren_string.Substring(start,\
    \ i - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c091922b8ff5479ca9b9f7a3585a150d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c091922b8ff5479ca9b9f7a3585a150d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open++;\n            } else if (paren_string[i] == ')') {\n\
    \                open--;\n            }\n            if (open == 0) {\n      \
    \          end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open++;\n            } else if (paren_string[i] == ')') {\n\
    \                open--;\n            }\n            if (open == 0) {\n      \
    \          end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open++;\n            } else if (paren_string[i] == ')') {\n\
    \                open--;\n            }\n            if (open == 0) {\n      \
    \          end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cc6d91a8fbc4a9db63af47a11895f06>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cc6d91a8fbc4a9db63af47a11895f06>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        while (end < paren_string.Length) {\n            if (paren_string[end]\
    \ == '(') {\n                open++;\n            } else if (paren_string[end]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                result.Add(paren_string.Substring(start, end - start\
    \ + 1));\n                start = end + 1;\n            }\n            end++;\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\"\
    )).Equals((new List<string>(new string[]{(string)\"(()())\", (string)\"((()))\"\
    , (string)\"()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    () (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c83c6372805e4f0188dd42440408a598>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c83c6372805e4f0188dd42440408a598>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return groups;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13e6799802b741ea97acbb08afc533fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13e6799802b741ea97acbb08afc533fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // Your code here\n        return null;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <30c91b634ded47deb0fe36ad82582e35>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <30c91b634ded47deb0fe36ad82582e35>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cc6d91a8fbc4a9db63af47a11895f06>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1cc6d91a8fbc4a9db63af47a11895f06>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open++;\n            } else if (paren_string[i] == ')') {\n\
    \                open--;\n            }\n            if (open == 0) {\n      \
    \          end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        var result = new List<string>();\n        var current\
    \ = new StringBuilder();\n        var depth = 0;\n        foreach (var c in paren_string)\
    \ {\n            if (c == ' ') continue;\n            if (c == '(') {\n      \
    \          depth++;\n            } else if (c == ')') {\n                depth--;\n\
    \            }\n            current.Append(c);\n            if (depth == 0) {\n\
    \                result.Add(current.ToString());\n                current.Clear();\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((()))\
    \ () ((())()())\")).Equals((new List<string>(new string[]{(string)\"(()())\",\
    \ (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    () (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d418cb29ecca4c608ee2e50ed3347b6f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d418cb29ecca4c608ee2e50ed3347b6f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (count == 0) {\n                    start = i;\n     \
    \           }\n                count++;\n            } else if (paren_string[i]\
    \ == ')') {\n                count--;\n                if (count == 0) {\n   \
    \                 end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open++;\n            } else if (paren_string[i] == ')') {\n\
    \                open--;\n            }\n            if (open == 0) {\n      \
    \          end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (count == 0) {\n                    start = i;\n     \
    \           }\n                count++;\n            } else if (paren_string[i]\
    \ == ')') {\n                count--;\n                if (count == 0) {\n   \
    \                 end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (count == 0) {\n                    start = i;\n     \
    \           }\n                count++;\n            } else if (paren_string[i]\
    \ == ')') {\n                count--;\n                if (count == 0) {\n   \
    \                 end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (count == 0) {\n                    start = i;\n     \
    \           }\n                count++;\n            } else if (paren_string[i]\
    \ == ')') {\n                count--;\n                if (count == 0) {\n   \
    \                 end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca1bf5fe68fc4fe0a2ca91d605e0f40c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca1bf5fe68fc4fe0a2ca91d605e0f40c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open++;\n            } else if (paren_string[i] == ')') {\n\
    \                open--;\n            }\n            if (open == 0) {\n      \
    \          end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // Your code here\n        return null;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <30c91b634ded47deb0fe36ad82582e35>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <30c91b634ded47deb0fe36ad82582e35>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open++;\n            } else if (paren_string[i] == ')') {\n\
    \                open--;\n            }\n            if (open == 0) {\n      \
    \          end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (count == 0) {\n                    start = i;\n     \
    \           }\n                count++;\n            } else if (paren_string[i]\
    \ == ')') {\n                count--;\n                if (count == 0) {\n   \
    \                 end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (open == 0) {\n                    start = i;\n      \
    \          }\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                open--;\n                if (open == 0) {\n     \
    \               end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int depth = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (depth == 0) {\n                    start = i;\n     \
    \           }\n                depth++;\n            } else if (paren_string[i]\
    \ == ')') {\n                depth--;\n                if (depth == 0) {\n   \
    \                 end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = end + 1;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open++;\n            } else if (paren_string[i] == ')') {\n\
    \                open--;\n            }\n            if (open == 0) {\n      \
    \          end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (open == 0) {\n                    start = i;\n      \
    \          }\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                open--;\n                if (open == 0) {\n     \
    \               end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9acf37afcd474c108d2fa6bea775ded0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9acf37afcd474c108d2fa6bea775ded0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795074
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (open == 0) {\n                    start = i;\n      \
    \          }\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                open--;\n                if (open == 0) {\n     \
    \               end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> paren_groups = new List<string>();\n \
    \       int start_index = 0;\n        int end_index = 0;\n        int paren_count\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                paren_count++;\n            } else\
    \ if (paren_string[i] == ')') {\n                paren_count--;\n            }\n\
    \            if (paren_count == 0) {\n                end_index = i;\n       \
    \         paren_groups.Add(paren_string.Substring(start_index, end_index - start_index\
    \ + 1));\n                start_index = i + 1;\n            }\n        }\n   \
    \     return paren_groups;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <431f1b8c6370452395b12af1f95114b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <431f1b8c6370452395b12af1f95114b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int open = 0;\n        StringBuilder sb = new StringBuilder();\n        foreach\
    \ (char c in paren_string) {\n            if (c == '(') {\n                open++;\n\
    \                sb.Append(c);\n            } else if (c == ')') {\n         \
    \       open--;\n                sb.Append(c);\n            } else if (c == '\
    \ ') {\n                continue;\n            } else {\n                throw\
    \ new Exception(\"Invalid character\");\n            }\n            if (open ==\
    \ 0) {\n                groups.Add(sb.ToString());\n                sb.Clear();\n\
    \            }\n        }\n        return groups;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((()))\
    \ () ((())()())\")).Equals((new List<string>(new string[]{(string)\"(()())\",\
    \ (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    () (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <64842ec04f3a4dee8af881bb809720d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <64842ec04f3a4dee8af881bb809720d0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> paren_groups = new List<string>();\n \
    \       int start_index = 0;\n        int end_index = 0;\n        int open_parens\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open_parens++;\n               \
    \ if (open_parens == 1) {\n                    start_index = i;\n            \
    \    }\n            } else if (paren_string[i] == ')') {\n                open_parens--;\n\
    \                if (open_parens == 0) {\n                    end_index = i;\n\
    \                    paren_groups.Add(paren_string.Substring(start_index, end_index\
    \ - start_index + 1));\n                }\n            }\n        }\n        return\
    \ paren_groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <30e401c751be40a59189a6b2f2925e96>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <30e401c751be40a59189a6b2f2925e96>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795232
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // Your code here\n        return null;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <30c91b634ded47deb0fe36ad82582e35>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <30c91b634ded47deb0fe36ad82582e35>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return groups;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f6975fcc9ab4b15804d1d2e22995747>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f6975fcc9ab4b15804d1d2e22995747>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795074
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int open = 0;\n        for (int i = 0; i < paren_string.Length;\
    \ i++) {\n            if (paren_string[i] == '(') {\n                open++;\n\
    \            } else if (paren_string[i] == ')') {\n                open--;\n \
    \           }\n            if (open == 0) {\n                result.Add(paren_string.Substring(start,\
    \ i - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c091922b8ff5479ca9b9f7a3585a150d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c091922b8ff5479ca9b9f7a3585a150d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = end + 1;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return groups;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f6975fcc9ab4b15804d1d2e22995747>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f6975fcc9ab4b15804d1d2e22995747>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795074
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                open++;\n            } else if (paren_string[i] == ')') {\n\
    \                open--;\n            }\n            if (open == 0) {\n      \
    \          end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e6cc2a5c8b34e83a5f84d9f6c3e976f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (count == 0) {\n                    start = i;\n     \
    \           }\n                count++;\n            } else if (paren_string[i]\
    \ == ')') {\n                count--;\n                if (count == 0) {\n   \
    \                 end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13262a6c7e0d4313a73e9b08bece1f28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (open == 0) {\n                    start = i;\n      \
    \          }\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                open--;\n                if (open == 0) {\n     \
    \               end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <485476f1f5834292bb42d128afec3cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> ret = new List<string>();\n        int\
    \ start = 0;\n        int end = 0;\n        int count = 0;\n        for (int i\
    \ = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                ret.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return ret;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe12431f30d4468bae014b7863754884>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe12431f30d4468bae014b7863754884>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795231
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> ret = new List<string>();\n        int\
    \ start = 0;\n        int end = 0;\n        int open = 0;\n        for (int i\
    \ = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (open == 0) {\n                    start = i;\n      \
    \          }\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                open--;\n                if (open == 0) {\n     \
    \               end = i;\n                    ret.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <46e1f11cd39c473792ad0aa9aefdcbe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <46e1f11cd39c473792ad0aa9aefdcbe9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795074
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> groups = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int depth = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (depth == 0) {\n                    start = i;\n     \
    \           }\n                depth++;\n            } else if (paren_string[i]\
    \ == ')') {\n                depth--;\n                if (depth == 0) {\n   \
    \                 end = i;\n                    groups.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ groups;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f2b79f36bdd441789eaf5c4e9193bdea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int open = 0;\n        int close\
    \ = 0;\n        for (int i = 0; i < paren_string.Length; i++) {\n            if\
    \ (paren_string[i] == '(') {\n                open++;\n            } else if (paren_string[i]\
    \ == ')') {\n                close++;\n            }\n            if (open ==\
    \ close) {\n                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = end + 1;\n            }\n      \
    \  }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd19d41475e94343bf589c7c70320a5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        var result = new List<string>();\n        var current\
    \ = new StringBuilder();\n        var open_count = 0;\n        foreach (var c\
    \ in paren_string) {\n            if (c == ' ') {\n                continue;\n\
    \            }\n            if (c == '(') {\n                open_count++;\n \
    \           } else if (c == ')') {\n                open_count--;\n          \
    \  }\n            current.Append(c);\n            if (open_count == 0) {\n   \
    \             result.Add(current.ToString());\n                current.Clear();\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"(()()) ((()))\
    \ () ((())()())\")).Equals((new List<string>(new string[]{(string)\"(()())\",\
    \ (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    () (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65c811cbae22427aafbec92ba126aae4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65c811cbae22427aafbec92ba126aae4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795232
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                count++;\n            } else if (paren_string[i] == ')')\
    \ {\n                count--;\n            }\n            if (count == 0) {\n\
    \                end = i;\n                result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                start = i + 1;\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8820418debbc45f7b7d128a6219d53ac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int count = 0;\n        while\
    \ (end < paren_string.Length) {\n            if (paren_string[end] == '(') {\n\
    \                count++;\n            } else if (paren_string[end] == ')') {\n\
    \                count--;\n            }\n            if (count == 0) {\n    \
    \            result.Add(paren_string.Substring(start, end - start + 1));\n   \
    \             start = end + 1;\n            }\n            end++;\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SeparateParenGroups((\"(()()) ((())) () ((())()())\")).Equals((new\
    \ List<string>(new string[]{(string)\"(()())\", (string)\"((()))\", (string)\"\
    ()\", (string)\"((())()())\"}))));\n    Debug.Assert(SeparateParenGroups((\"()\
    \ (()) ((())) (((())))\")).Equals((new List<string>(new string[]{(string)\"()\"\
    , (string)\"(())\", (string)\"((()))\", (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"\
    (()(())((())))\")).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"\
    }))));\n    Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"\
    }))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <35208289395c4a27bff57746a79d7bba>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <35208289395c4a27bff57746a79d7bba>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795232
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        List<string> result = new List<string>();\n       \
    \ int start = 0;\n        int end = 0;\n        int depth = 0;\n        for (int\
    \ i = 0; i < paren_string.Length; i++) {\n            if (paren_string[i] == '(')\
    \ {\n                if (depth == 0) {\n                    start = i;\n     \
    \           }\n                depth++;\n            } else if (paren_string[i]\
    \ == ')') {\n                depth--;\n                if (depth == 0) {\n   \
    \                 end = i;\n                    result.Add(paren_string.Substring(start,\
    \ end - start + 1));\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <225bb48d690a4848b3fbf5ba10c6e169>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <225bb48d690a4848b3fbf5ba10c6e169>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795073
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input to this function is a string containing multiple\
    \ groups of nested parentheses. Your goal is to\n    // separate those group into\
    \ separate strings and return the list of those.\n    // Separate groups are balanced\
    \ (each open brace is properly closed) and not nested within each other\n    //\
    \ Ignore any spaces in the input string.\n    // >>> SeparateParenGroups((\"(\
    \ ) (( )) (( )( ))\"))\n    // (new List<string>(new string[]{(string)\"()\",\
    \ (string)\"(())\", (string)\"(()())\"}))\n    public static List<string> SeparateParenGroups(string\
    \ paren_string) {\n        // TODO: Implement this function\n        return null;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SeparateParenGroups((\"\
    (()()) ((())) () ((())()())\")).Equals((new List<string>(new string[]{(string)\"\
    (()())\", (string)\"((()))\", (string)\"()\", (string)\"((())()())\"}))));\n \
    \   Debug.Assert(SeparateParenGroups((\"() (()) ((())) (((())))\")).Equals((new\
    \ List<string>(new string[]{(string)\"()\", (string)\"(())\", (string)\"((()))\"\
    , (string)\"(((())))\"}))));\n    Debug.Assert(SeparateParenGroups((\"(()(())((())))\"\
    )).Equals((new List<string>(new string[]{(string)\"(()(())((())))\"}))));\n  \
    \  Debug.Assert(SeparateParenGroups((\"( ) (( )) (( )( ))\")).Equals((new List<string>(new\
    \ string[]{(string)\"()\", (string)\"(())\", (string)\"(()())\"}))));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00036] in <2d7b8b69048f4fada99955b50c041ccf>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795073

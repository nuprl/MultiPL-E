name: HumanEval_127_intersection
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // You are given two intervals,\n    // where each interval is\
  \ a pair of integers. For example, interval = (start, end) = (1, 2).\n    // The\
  \ given intervals are closed which means that the interval (start, end)\n    //\
  \ includes both start and end.\n    // For each given interval, it is assumed that\
  \ its start is less or equal its end.\n    // Your task is to determine whether\
  \ the length of intersection of these two \n    // intervals is a prime number.\n\
  \    // Example, the intersection of the intervals (1, 3), (2, 4) is (2, 3)\n  \
  \  // which its length is 1, which not a prime number.\n    // If the length of\
  \ the intersection is a prime number, return \"YES\",\n    // otherwise, return\
  \ \"NO\".\n    // If the two intervals don't intersect, return \"NO\".\n    // [input/output]\
  \ samples:\n    // >>> Intersection((Tuple.Create(1L, 2L)), (Tuple.Create(2L, 3L)))\n\
  \    // (\"NO\")\n    // >>> Intersection((Tuple.Create(-1L, 1L)), (Tuple.Create(0L,\
  \ 4L)))\n    // (\"NO\")\n    // >>> Intersection((Tuple.Create(-3L, -1L)), (Tuple.Create(-5L,\
  \ 5L)))\n    // (\"YES\")\n    public static string Intersection(Tuple<long, long>\
  \ interval1, Tuple<long, long> interval2) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Intersection((Tuple.Create(1L,\
  \ 2L)), (Tuple.Create(2L, 3L))).Equals((\"NO\")));\n    Debug.Assert(Intersection((Tuple.Create(-1L,\
  \ 1L)), (Tuple.Create(0L, 4L))).Equals((\"NO\")));\n    Debug.Assert(Intersection((Tuple.Create(-3L,\
  \ -1L)), (Tuple.Create(-5L, 5L))).Equals((\"YES\")));\n    Debug.Assert(Intersection((Tuple.Create(-2L,\
  \ 2L)), (Tuple.Create(-4L, 0L))).Equals((\"YES\")));\n    Debug.Assert(Intersection((Tuple.Create(-11L,\
  \ 2L)), (Tuple.Create(-1L, -1L))).Equals((\"NO\")));\n    Debug.Assert(Intersection((Tuple.Create(1L,\
  \ 2L)), (Tuple.Create(3L, 5L))).Equals((\"NO\")));\n    Debug.Assert(Intersection((Tuple.Create(1L,\
  \ 2L)), (Tuple.Create(1L, 2L))).Equals((\"NO\")));\n    Debug.Assert(Intersection((Tuple.Create(-2L,\
  \ -2L)), (Tuple.Create(-3L, -2L))).Equals((\"NO\")));\n    }\n\n}\n"
completions: ["        var start = Math.Max(interval1.Item1, interval2.Item1);\n \
    \       var end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        var length = end -\
    \ start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\";", "        //\
    \ your code here\n        return \"\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start + 1;\n        if (length <= 0) {\n        \
    \    return \"NO\";\n        }\n        if (IsPrime(length)) {\n            return\
    \ \"YES\";\n        }\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "        // Your code goes here\n\
    \        long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end)\
    \ {\n            return \"NO\";\n        }\n        long length = end - start\
    \ + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\";", "        // your\
    \ code here\n        return \"\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start + 1;\n        if (length < 0) {\n         \
    \   return \"NO\";\n        }\n        return IsPrime(length) ? \"YES\" : \"NO\"\
    ;", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n      \
    \  long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start >\
    \ end) {\n            return \"NO\";\n        }\n        return IsPrime(end -\
    \ start + 1) ? \"YES\" : \"NO\";", "        var start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        var end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        var\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        if (length % 2 == 0) {\n            return \"NO\";\n       \
    \ }\n        var sqrt = Math.Sqrt(length);\n        for (var i = 3; i <= sqrt;\
    \ i += 2) {\n            if (length % i == 0) {\n                return \"NO\"\
    ;\n            }\n        }\n        return \"YES\";", "        // your code here\n\
    \        return \"\";", "        var start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        var end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        var length = end -\
    \ start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\";", "        long\
    \ start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n        long\
    \ start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n        long\
    \ start = Math.Max(start1, start2);\n        long end = Math.Min(end1, end2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        long\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        if (length % 2 == 0) {\n            return \"NO\";\n       \
    \ }\n        for (long i = 3; i * i <= length; i += 2) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        // your code here\n        return \"\";", "  \
    \      long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end)\
    \ {\n            return \"NO\";\n        }\n        return IsPrime(end - start\
    \ + 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        long length = end -\
    \ start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\";", "        var\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        var end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end) return \"NO\";\n        var length\
    \ = end - start + 1;\n        if (length == 1) return \"NO\";\n        if (length\
    \ == 2) return \"YES\";\n        if (length % 2 == 0) return \"NO\";\n       \
    \ for (var i = 3; i * i <= length; i += 2) {\n            if (length % i == 0)\
    \ return \"NO\";\n        }\n        return \"YES\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "        // Your code goes here\n\
    \        long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end)\
    \ {\n            return \"NO\";\n        }\n        return IsPrime(end - start\
    \ + 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        return IsPrime(end\
    \ - start + 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        long\
    \ length = end - start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\"\
    ;", "        var start = Math.Max(interval1.Item1, interval2.Item1);\n       \
    \ var end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end)\
    \ return \"NO\";\n        var len = end - start + 1;\n        return IsPrime(len)\
    \ ? \"YES\" : \"NO\";", "        // Your code here\n        return \"\";", " \
    \       // The intersection of two intervals is the largest interval that is contained\
    \ in both intervals.\n        // If the two intervals don't intersect, return\
    \ \"NO\".\n        // If the length of the intersection is a prime number, return\
    \ \"YES\",\n        // otherwise, return \"NO\".\n        // The length of an\
    \ interval is the number of integers contained in the interval.\n        // For\
    \ example, the length of the interval (1, 3) is 3 - 1 = 2.\n        // If the\
    \ length of the intersection is a prime number, return \"YES\",\n        // otherwise,\
    \ return \"NO\".\n        // If the two intervals don't intersect, return \"NO\"\
    .\n        // The length of an interval is the number of integers contained in\
    \ the interval.\n        // For example, the length of the interval (1, 3) is\
    \ 3 - 1 = 2.\n        // If the length of the intersection is a prime number,\
    \ return \"YES\",\n        // otherwise, return \"NO\".\n        // If the two\
    \ intervals don't intersect, return \"NO\".\n        // The length of an interval\
    \ is the number of integers contained in the interval.\n        // For example,\
    \ the length of the interval (1, 3) is 3 - 1 = 2.\n        // If the length of\
    \ the intersection is a prime number, return \"YES\",\n        // otherwise, return\
    \ \"NO\".\n        // If the two intervals don't intersect, return \"NO\".\n \
    \       // The length of an interval is the number of integers contained in the\
    \ interval.\n        // For example, the length of the interval (1, 3) is 3 -\
    \ 1 = 2.\n        // If the length of the intersection is a prime number, return\
    \ \"YES\",\n        // otherwise, return \"NO\".\n        // If the two intervals\
    \ don't intersect, return \"NO\".\n        // The length of an interval is the\
    \ number of integers contained in the interval.\n        // For example, the length\
    \ of the interval (1, 3) is 3 - 1 = 2.\n        // If the length of the intersection\
    \ is a prime number, return \"YES\",\n        // otherwise, return \"NO\".\n \
    \       // If the two intervals don't intersect, return \"NO\".\n        // The\
    \ length of an interval is the number of integers contained in the interval.\n\
    \        // For example, the length of the interval (1, 3) is 3", "        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end) {\n            return \"NO\";\n\
    \        }\n        return IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "  \
    \      // Your code here\n        return \"\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "        var start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        var end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        var\
    \ length = end - start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\"\
    ;", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n      \
    \  long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start >\
    \ end) {\n            return \"NO\";\n        }\n        return IsPrime(end -\
    \ start + 1) ? \"YES\" : \"NO\";", "        // your code here\n        return\
    \ \"\";", "        // Your code goes here\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        long\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        if (length % 2 == 0) {\n            return \"NO\";\n       \
    \ }\n        for (long i = 3; i * i <= length; i += 2) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        var start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        var end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        var length = end -\
    \ start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\";", "        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start + 1;\n        if (length\
    \ < 0) {\n            return \"NO\";\n        }\n        if (length == 1) {\n\
    \            return \"YES\";\n        }\n        if (length == 2) {\n        \
    \    return \"NO\";\n        }\n        for (long i = 2; i * i <= length; i++)\
    \ {\n            if (length % i == 0) {\n                return \"NO\";\n    \
    \        }\n        }\n        return \"YES\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start + 1;\n        if (length <= 0) {\n        \
    \    return \"NO\";\n        }\n        return IsPrime(length) ? \"YES\" : \"\
    NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n  \
    \      long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        return IsPrime(end\
    \ - start + 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "        var start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        var end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        var\
    \ length = end - start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\"\
    ;", "        // your code here\n        return \"\";", "        // your code here\n\
    \        return \"\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start + 1;\n        if (length <= 0) {\n            return \"\
    NO\";\n        }\n        return IsPrime(length) ? \"YES\" : \"NO\";", "     \
    \   long start = Math.Max(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end) {\n\
    \            return \"NO\";\n        }\n        return IsPrime(end - start + 1)\
    \ ? \"YES\" : \"NO\";", "        // your code here\n        return \"\";", " \
    \       long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end)\
    \ {\n            return \"NO\";\n        }\n        long length = end - start\
    \ + 1;\n        if (IsPrime(length)) {\n            return \"YES\";\n        }\n\
    \        return \"NO\";", "        // your code here\n        return \"\";", " \
    \       var start = Math.Max(interval1.Item1, interval2.Item1);\n        var end\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end) {\n\
    \            return \"NO\";\n        }\n        var length = end - start + 1;\n\
    \        return IsPrime(length) ? \"YES\" : \"NO\";", "        // your code here\n\
    \        return \"\";", "        var start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        var end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        var length = end -\
    \ start + 1;\n        if (length == 1) {\n            return \"NO\";\n       \
    \ }\n        if (length == 2) {\n            return \"YES\";\n        }\n    \
    \    if (length % 2 == 0) {\n            return \"NO\";\n        }\n        for\
    \ (var i = 3; i * i <= length; i += 2) {\n            if (length % i == 0) {\n\
    \                return \"NO\";\n            }\n        }\n        return \"YES\"\
    ;", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n      \
    \  long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start >\
    \ end) {\n            return \"NO\";\n        }\n        return IsPrime(end -\
    \ start + 1) ? \"YES\" : \"NO\";", "        // your code here\n        return\
    \ \"\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        long length = end -\
    \ start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\";", "        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end) return \"NO\";\n        if (start\
    \ == end) return \"YES\";\n        return IsPrime(end - start + 1) ? \"YES\" :\
    \ \"NO\";", "        // your code here\n        return \"\";", "        // your\
    \ code here\n        return \"\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) return \"NO\";\n        return IsPrime(end - start +\
    \ 1) ? \"YES\" : \"NO\";", "        // your code here\n        return \"\";",
  "        // Your code goes here\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start + 1;\n        if (length < 1) {\n         \
    \   return \"NO\";\n        }\n        return IsPrime(length) ? \"YES\" : \"NO\"\
    ;", "        // Your code goes here\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) return \"NO\";\n        return IsPrime(end - start +\
    \ 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        long length = end -\
    \ start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\";", "        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end) {\n            return \"NO\";\n\
    \        }\n        long length = end - start + 1;\n        if (length == 1) {\n\
    \            return \"NO\";\n        }\n        if (length == 2) {\n         \
    \   return \"YES\";\n        }\n        for (long i = 2; i * i <= length; i++)\
    \ {\n            if (length % i == 0) {\n                return \"NO\";\n    \
    \        }\n        }\n        return \"YES\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "        // Your code goes here\n\
    \        long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end)\
    \ {\n            return \"NO\";\n        }\n        return IsPrime(end - start\
    \ + 1) ? \"YES\" : \"NO\";", "        var start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        var end = Math.Min(interval1.Item2, interval2.Item2);\n        var length\
    \ = end - start + 1;\n        if (length < 0) {\n            return \"NO\";\n\
    \        }\n        return IsPrime(length) ? \"YES\" : \"NO\";", "        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end) {\n            return \"NO\";\n\
    \        }\n        return IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "  \
    \      long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start + 1;\n        if (length < 0) {\n            return \"NO\";\n      \
    \  }\n        if (length == 1) {\n            return \"YES\";\n        }\n   \
    \     if (length == 2) {\n            return \"NO\";\n        }\n        for (long\
    \ i = 2; i * i <= length; i++) {\n            if (length % i == 0) {\n       \
    \         return \"NO\";\n            }\n        }\n        return \"YES\";",
  "        long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start + 1;\n        if (length < 0) {\n            return \"NO\";\n      \
    \  }\n        return IsPrime(length) ? \"YES\" : \"NO\";", "        var start\
    \ = Math.Max(interval1.Item1, interval2.Item1);\n        var end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end) {\n            return \"NO\";\n\
    \        }\n        var length = end - start + 1;\n        if (length == 1) {\n\
    \            return \"NO\";\n        }\n        var isPrime = true;\n        for\
    \ (var i = 2; i < length; i++) {\n            if (length % i == 0) {\n       \
    \         isPrime = false;\n                break;\n            }\n        }\n\
    \        return isPrime ? \"YES\" : \"NO\";", "        // Your code here\n   \
    \     return \"\";", "        // your code here\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long len = end - start + 1;\n        if (len <= 0) return \"NO\";\n \
    \       return IsPrime(len) ? \"YES\" : \"NO\";", "        var start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        var end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) return \"NO\";\n        var length = end - start + 1;\n\
    \        return IsPrime(length) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        long\
    \ length = end - start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\"\
    ;", "        var start = Math.Max(interval1.Item1, interval2.Item1);\n       \
    \ var end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end)\
    \ {\n            return \"NO\";\n        }\n        return IsPrime(end - start\
    \ + 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start + 1;\n        if (length <= 0) {\n            return \"\
    NO\";\n        }\n        return IsPrime(length) ? \"YES\" : \"NO\";", "     \
    \   long start = Math.Max(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end) {\n\
    \            return \"NO\";\n        }\n        return IsPrime(end - start + 1)\
    \ ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        if (start == end) {\n\
    \            return \"YES\";\n        }\n        return IsPrime(end - start +\
    \ 1) ? \"YES\" : \"NO\";", "        // your code here\n        return \"\";",
  "        long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end)\
    \ {\n            return \"NO\";\n        }\n        return IsPrime(end - start\
    \ + 1) ? \"YES\" : \"NO\";", "        if (interval1.Item1 > interval2.Item2 ||\
    \ interval2.Item1 > interval1.Item2) {\n            return \"NO\";\n        }\n\
    \        var start = Math.Max(interval1.Item1, interval2.Item1);\n        var\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        var length = end\
    \ - start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\";", "       \
    \ var start = Math.Max(interval1.Item1, interval2.Item1);\n        var end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end) {\n            return \"NO\";\n\
    \        }\n        return IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "  \
    \      // your code here\n        return \"\";", "        // your code here\n\
    \        long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end)\
    \ return \"NO\";\n        return IsPrime(end - start + 1) ? \"YES\" : \"NO\";",
  "        var start = Math.Max(interval1.Item1, interval2.Item1);\n        var end\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end) {\n\
    \            return \"NO\";\n        }\n        return IsPrime(end - start + 1)\
    \ ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        long length = end -\
    \ start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\";", "        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end) {\n            return \"NO\";\n\
    \        }\n        return IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "  \
    \      // your code here\n        return \"\";", "        var start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        var end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        var\
    \ length = end - start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\"\
    ;", "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start1 > end1 || start2 > end2) {\n            return \"NO\";\n \
    \       }\n        if (start1 > start2) {\n            long tmp = start1;\n  \
    \          start1 = start2;\n            start2 = tmp;\n        }\n        if\
    \ (end1 < end2) {\n            long tmp = end1;\n            end1 = end2;\n  \
    \          end2 = tmp;\n        }\n        if (start2 > end1) {\n            return\
    \ \"NO\";\n        }\n        long len = end1 - start2 + 1;\n        if (len <=\
    \ 1) {\n            return \"NO\";\n        }\n        if (len == 2) {\n     \
    \       return \"YES\";\n        }\n        for (long i = 2; i * i <= len; i++)\
    \ {\n            if (len % i == 0) {\n                return \"NO\";\n       \
    \     }\n        }\n        return \"YES\";", "        // your code here\n   \
    \     return \"\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        return IsPrime(end\
    \ - start + 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        if\
    \ (start == end) {\n            return \"YES\";\n        }\n        return IsPrime(end\
    \ - start + 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "        // your code here\n\
    \        return \"\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        return IsPrime(end\
    \ - start + 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        if\
    \ (IsPrime(end - start + 1)) {\n            return \"YES\";\n        }\n     \
    \   return \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        long length = end -\
    \ start + 1;\n        if (length == 1) {\n            return \"NO\";\n       \
    \ }\n        if (length == 2) {\n            return \"YES\";\n        }\n    \
    \    for (long i = 2; i * i <= length; i++) {\n            if (length % i == 0)\
    \ {\n                return \"NO\";\n            }\n        }\n        return\
    \ \"YES\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        return IsPrime(end\
    \ - start + 1) ? \"YES\" : \"NO\";", "        // your code here\n        return\
    \ \"\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start + 1;\n        if (length <= 0) {\n            return \"\
    NO\";\n        }\n        if (length == 1) {\n            return \"YES\";\n  \
    \      }\n        if (length == 2) {\n            return \"NO\";\n        }\n\
    \        for (long i = 2; i * i <= length; i++) {\n            if (length % i\
    \ == 0) {\n                return \"NO\";\n            }\n        }\n        return\
    \ \"YES\";", "        // your code here\n        return \"\";", "        var start\
    \ = Math.Max(interval1.Item1, interval2.Item1);\n        var end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end) {\n            return \"NO\";\n\
    \        }\n        var length = end - start + 1;\n        if (length == 1) {\n\
    \            return \"NO\";\n        }\n        if (length == 2) {\n         \
    \   return \"YES\";\n        }\n        if (length % 2 == 0) {\n            return\
    \ \"NO\";\n        }\n        for (var i = 3; i * i <= length; i += 2) {\n   \
    \         if (length % i == 0) {\n                return \"NO\";\n           \
    \ }\n        }\n        return \"YES\";", "        var start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        var end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        var\
    \ length = end - start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\"\
    ;", "        // your code here\n        return \"\";", "        // your code here\n\
    \        long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end)\
    \ {\n            return \"NO\";\n        }\n        return IsPrime(end - start\
    \ + 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        long length = end -\
    \ start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\";", "        var\
    \ a = interval1.Item1;\n        var b = interval1.Item2;\n        var c = interval2.Item1;\n\
    \        var d = interval2.Item2;\n        var x = Math.Max(a, c);\n        var\
    \ y = Math.Min(b, d);\n        if (x > y) {\n            return \"NO\";\n    \
    \    }\n        var length = y - x + 1;\n        if (length == 1) {\n        \
    \    return \"NO\";\n        }\n        if (length == 2) {\n            return\
    \ \"YES\";\n        }\n        if (length % 2 == 0) {\n            return \"NO\"\
    ;\n        }\n        var sqrt = Math.Sqrt(length);\n        for (var i = 3; i\
    \ <= sqrt; i += 2) {\n            if (length % i == 0) {\n                return\
    \ \"NO\";\n            }\n        }\n        return \"YES\";", "        long start\
    \ = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end) return \"NO\";\n        return IsPrime(end\
    \ - start + 1) ? \"YES\" : \"NO\";", "        // your code here\n        return\
    \ \"\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start + 1;\n        if (length < 0) {\n            return \"\
    NO\";\n        }\n        return IsPrime(length) ? \"YES\" : \"NO\";", "     \
    \   // your code here\n        return \"\";", "        // your code here\n   \
    \     return \"\";", "        var start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        var end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        var length = end -\
    \ start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\";", "        var\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        var end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end) return \"NO\";\n        var length\
    \ = end - start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\";", " \
    \       var start = Math.Max(interval1.Item1, interval2.Item1);\n        var end\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end) {\n\
    \            return \"NO\";\n        }\n        var length = end - start + 1;\n\
    \        return IsPrime(length) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        long\
    \ length = end - start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\"\
    ;", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n      \
    \  long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start >\
    \ end) {\n            return \"NO\";\n        }\n        return IsPrime(end -\
    \ start + 1) ? \"YES\" : \"NO\";", "        // your code here\n        return\
    \ \"\";", "        var start = Math.Max(interval1.Item1, interval2.Item1);\n \
    \       var end = Math.Min(interval1.Item2, interval2.Item2);\n        var length\
    \ = end - start + 1;\n        if (length < 0) {\n            return \"NO\";\n\
    \        }\n        return IsPrime(length) ? \"YES\" : \"NO\";", "        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end) {\n            return \"NO\";\n\
    \        }\n        return IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "  \
    \      // your code goes here\n        return \"\";", "        var start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        var end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        var\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        if (length % 2 == 0) {\n            return \"NO\";\n       \
    \ }\n        for (var i = 3; i <= Math.Sqrt(length); i += 2) {\n            if\
    \ (length % i == 0) {\n                return \"NO\";\n            }\n       \
    \ }\n        return \"YES\";", "        var start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        var end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) return \"NO\";\n        return IsPrime(end - start +\
    \ 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        return IsPrime(end\
    \ - start + 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        long\
    \ length = end - start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\"\
    ;", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n      \
    \  long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start >\
    \ end) {\n            return \"NO\";\n        }\n        return IsPrime(end -\
    \ start + 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        long\
    \ length = end - start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\"\
    ;", "        // your code here\n        return \"\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        long\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        if (length == 2) {\n            return \"YES\";\n  \
    \      }\n        for (long i = 2; i * i <= length; i++) {\n            if (length\
    \ % i == 0) {\n                return \"NO\";\n            }\n        }\n    \
    \    return \"YES\";", "        var start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        var end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        var length = end -\
    \ start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\";", "        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end) {\n            return \"NO\";\n\
    \        }\n        long length = end - start + 1;\n        return IsPrime(length)\
    \ ? \"YES\" : \"NO\";", "        // your code here\n        return \"\";", " \
    \       // Your code goes here\n        return \"\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start + 1;\n        if (length <= 0) {\n        \
    \    return \"NO\";\n        }\n        return IsPrime(length) ? \"YES\" : \"\
    NO\";", "        var start = Math.Max(interval1.Item1, interval2.Item1);\n   \
    \     var end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) return \"NO\";\n        return IsPrime(end - start + 1) ? \"YES\" : \"\
    NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n  \
    \      long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        long len = end - start\
    \ + 1;\n        if (IsPrime(len)) {\n            return \"YES\";\n        }\n\
    \        return \"NO\";", "        var start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        var end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        var length = end -\
    \ start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\";", "        var\
    \ a = interval1.Item1;\n        var b = interval1.Item2;\n        var c = interval2.Item1;\n\
    \        var d = interval2.Item2;\n        if (a > b) {\n            var t = a;\n\
    \            a = b;\n            b = t;\n        }\n        if (c > d) {\n   \
    \         var t = c;\n            c = d;\n            d = t;\n        }\n    \
    \    if (a > d || b < c) {\n            return \"NO\";\n        }\n        var\
    \ e = Math.Max(a, c);\n        var f = Math.Min(b, d);\n        return IsPrime(f\
    \ - e + 1) ? \"YES\" : \"NO\";", "        // Your code goes here\n        return\
    \ \"\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start + 1;\n        if (length < 0) {\n            return \"\
    NO\";\n        }\n        return IsPrime(length) ? \"YES\" : \"NO\";", "     \
    \   // your code here\n        return \"\";", "        // Your code here\n   \
    \     return \"\";", "        // your code here\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "        var start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        var end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        var\
    \ length = end - start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\"\
    ;", "        var start = Math.Max(interval1.Item1, interval2.Item1);\n       \
    \ var end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end)\
    \ {\n            return \"NO\";\n        }\n        var length = end - start +\
    \ 1;\n        if (length == 1) {\n            return \"NO\";\n        }\n    \
    \    if (length == 2) {\n            return \"YES\";\n        }\n        for (var\
    \ i = 2; i < length; i++) {\n            if (length % i == 0) {\n            \
    \    return \"NO\";\n            }\n        }\n        return \"YES\";", "   \
    \     // your code here\n        return \"\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        long\
    \ length = end - start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\"\
    ;", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n      \
    \  long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start >\
    \ end) {\n            return \"NO\";\n        }\n        return IsPrime(end -\
    \ start + 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start + 1;\n        if (length <= 0) {\n        \
    \    return \"NO\";\n        }\n        return IsPrime(length) ? \"YES\" : \"\
    NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n  \
    \      long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        long length = end -\
    \ start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\";", "        //\
    \ Your code goes here\n        return \"\";", "        var start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        var end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        var\
    \ length = end - start + 1;\n        if (length == 1) {\n            return \"\
    NO\";\n        }\n        var sqrt = Math.Sqrt(length);\n        for (var i =\
    \ 2; i <= sqrt; i++) {\n            if (length % i == 0) {\n                return\
    \ \"NO\";\n            }\n        }\n        return \"YES\";", "        // your\
    \ code here\n        return \"\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) return \"NO\";\n        return IsPrime(end - start +\
    \ 1) ? \"YES\" : \"NO\";", "        var start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        var end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        var len = end - start\
    \ + 1;\n        return IsPrime(len) ? \"YES\" : \"NO\";", "        long start\
    \ = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start + 1;\n        if (length\
    \ <= 0) {\n            return \"NO\";\n        }\n        if (length == 1) {\n\
    \            return \"YES\";\n        }\n        if (length == 2) {\n        \
    \    return \"NO\";\n        }\n        for (long i = 2; i * i <= length; i++)\
    \ {\n            if (length % i == 0) {\n                return \"NO\";\n    \
    \        }\n        }\n        return \"YES\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "        // your code here\n\
    \        return \"\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        long length = end -\
    \ start + 1;\n        if (length == 1) {\n            return \"NO\";\n       \
    \ }\n        if (length == 2) {\n            return \"YES\";\n        }\n    \
    \    if (length % 2 == 0) {\n            return \"NO\";\n        }\n        for\
    \ (long i = 3; i * i <= length; i += 2) {\n            if (length % i == 0) {\n\
    \                return \"NO\";\n            }\n        }\n        return \"YES\"\
    ;", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n      \
    \  long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start >\
    \ end) {\n            return \"NO\";\n        }\n        long length = end - start\
    \ + 1;\n        if (length == 1) {\n            return \"NO\";\n        }\n  \
    \      if (length == 2) {\n            return \"YES\";\n        }\n        for\
    \ (long i = 2; i < length; i++) {\n            if (length % i == 0) {\n      \
    \          return \"NO\";\n            }\n        }\n        return \"YES\";",
  "        long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end)\
    \ {\n            return \"NO\";\n        }\n        long length = end - start\
    \ + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\";", "        long start\
    \ = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start + 1;\n        if (length\
    \ <= 0) {\n            return \"NO\";\n        }\n        if (length == 1) {\n\
    \            return \"YES\";\n        }\n        if (length == 2) {\n        \
    \    return \"NO\";\n        }\n        for (long i = 2; i * i <= length; i++)\
    \ {\n            if (length % i == 0) {\n                return \"NO\";\n    \
    \        }\n        }\n        return \"YES\";", "        var start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        var end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "        // Your code goes here\n\
    \        var start = Math.Max(interval1.Item1, interval2.Item1);\n        var\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end)\
    \ return \"NO\";\n        var len = end - start + 1;\n        if (len == 1) return\
    \ \"NO\";\n        if (len == 2) return \"YES\";\n        if (len % 2 == 0) return\
    \ \"NO\";\n        if (len % 3 == 0) return \"NO\";\n        if (len % 5 == 0)\
    \ return \"NO\";\n        if (len % 7 == 0) return \"NO\";\n        if (len %\
    \ 11 == 0) return \"NO\";\n        if (len % 13 == 0) return \"NO\";\n       \
    \ if (len % 17 == 0) return \"NO\";\n        if (len % 19 == 0) return \"NO\"\
    ;\n        if (len % 23 == 0) return \"NO\";\n        if (len % 29 == 0) return\
    \ \"NO\";\n        if (len % 31 == 0) return \"NO\";\n        if (len % 37 ==\
    \ 0) return \"NO\";\n        if (len % 41 == 0) return \"NO\";\n        if (len\
    \ % 43 == 0) return \"NO\";\n        if (len % 47 == 0) return \"NO\";\n     \
    \   if (len % 53 == 0) return \"NO\";\n        if (len % 59 == 0) return \"NO\"\
    ;\n        if (len % 61 == 0) return \"NO\";\n        if (len % 67 == 0) return\
    \ \"NO\";\n        if (len % 71 == 0) return \"NO\";\n        if (len % 73 ==\
    \ 0) return \"NO\";\n        if (len % 79 == 0) return \"NO\";\n        if (len\
    \ % 83 == 0) return \"NO\";\n        if (len % 89 == 0) return \"NO\";\n     \
    \   if (len % 97 == 0) return \"NO\";\n        return \"YES\";", "        var\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        var end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end) return \"NO\";\n        var length\
    \ = end - start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\";", " \
    \       // your code here\n        return \"\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        long\
    \ length = end - start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\"\
    ;", "        // your code here\n        return \"\";", "        // your code here\n\
    \        long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end)\
    \ {\n            return \"NO\";\n        }\n        return IsPrime(end - start\
    \ + 1) ? \"YES\" : \"NO\";", "        // your code here\n        return \"\";",
  "        // your code here\n        return \"\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        long\
    \ length = end - start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\"\
    ;", "        var start = Math.Max(interval1.Item1, interval2.Item1);\n       \
    \ var end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end)\
    \ {\n            return \"NO\";\n        }\n        var length = end - start +\
    \ 1;\n        if (length == 1) {\n            return \"NO\";\n        }\n    \
    \    return IsPrime(length) ? \"YES\" : \"NO\";", "        // Your code goes here\n\
    \        return \"\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        long length = end -\
    \ start + 1;\n        if (length == 1) {\n            return \"NO\";\n       \
    \ }\n        if (length == 2) {\n            return \"YES\";\n        }\n    \
    \    for (long i = 2; i * i <= length; i++) {\n            if (length % i == 0)\
    \ {\n                return \"NO\";\n            }\n        }\n        return\
    \ \"YES\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        long length = end -\
    \ start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\";", "        //\
    \ Your code goes here\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        return IsPrime(end\
    \ - start + 1) ? \"YES\" : \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        if (start > end) {\n            return \"NO\";\n        }\n        return\
    \ IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "        // Your code here\n\
    \        return \"\";", "        // your code here\n        return \"\";", " \
    \       var start = Math.Max(interval1.Item1, interval2.Item1);\n        var end\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end) {\n\
    \            return \"NO\";\n        }\n        return IsPrime(end - start + 1)\
    \ ? \"YES\" : \"NO\";", "        var start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        var end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        var length = end -\
    \ start + 1;\n        if (length == 1) {\n            return \"NO\";\n       \
    \ }\n        return IsPrime(length) ? \"YES\" : \"NO\";", "        var start =\
    \ Math.Max(interval1.Item1, interval2.Item1);\n        var end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end) {\n            return \"NO\";\n\
    \        }\n        var length = end - start + 1;\n        return IsPrime(length)\
    \ ? \"YES\" : \"NO\";", "        var start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        var end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) return \"NO\";\n        var length = end - start + 1;\n        if (length\
    \ == 1) return \"NO\";\n        if (length == 2) return \"YES\";\n        if (length\
    \ % 2 == 0) return \"NO\";\n        for (var i = 3; i * i <= length; i += 2) {\n\
    \            if (length % i == 0) return \"NO\";\n        }\n        return \"\
    YES\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n \
    \       long end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        long length = end -\
    \ start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\";", "        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        if (start > end) {\n            return \"NO\";\n\
    \        }\n        return IsPrime(end - start + 1) ? \"YES\" : \"NO\";", "  \
    \      var start = Math.Max(interval1.Item1, interval2.Item1);\n        var end\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end) {\n\
    \            return \"NO\";\n        }\n        var length = end - start + 1;\n\
    \        if (length == 1) {\n            return \"NO\";\n        }\n        if\
    \ (length == 2) {\n            return \"YES\";\n        }\n        if (length\
    \ % 2 == 0) {\n            return \"NO\";\n        }\n        for (var i = 3;\
    \ i * i <= length; i += 2) {\n            if (length % i == 0) {\n           \
    \     return \"NO\";\n            }\n        }\n        return \"YES\";", "  \
    \      long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end)\
    \ {\n            return \"NO\";\n        }\n        return IsPrime(end - start\
    \ + 1) ? \"YES\" : \"NO\";", "        var (start1, end1) = interval1;\n      \
    \  var (start2, end2) = interval2;\n        var start = Math.Max(start1, start2);\n\
    \        var end = Math.Min(end1, end2);\n        if (start > end) {\n       \
    \     return \"NO\";\n        }\n        var length = end - start + 1;\n     \
    \   if (length == 1) {\n            return \"NO\";\n        }\n        if (length\
    \ == 2) {\n            return \"YES\";\n        }\n        for (var i = 2; i *\
    \ i <= length; i++) {\n            if (length % i == 0) {\n                return\
    \ \"NO\";\n            }\n        }\n        return \"YES\";", "        // interval1\
    \ = (start1, end1)\n        // interval2 = (start2, end2)\n        // intersection\
    \ = (start, end)\n        // start = max(start1, start2)\n        // end = min(end1,\
    \ end2)\n        // length = end - start + 1\n        // if length < 0, then the\
    \ two intervals don't intersect\n        // if length == 0, then the two intervals\
    \ are the same\n        // if length > 0, then the two intervals intersect\n \
    \       // if length is prime, return \"YES\", otherwise, return \"NO\"\n    \
    \    long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n  \
    \      long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        long start = Math.Max(start1, start2);\n        long end = Math.Min(end1,\
    \ end2);\n        long length = end - start + 1;\n        if (length < 0) {\n\
    \            return \"NO\";\n        }\n        if (length == 0) {\n         \
    \   return \"YES\";\n        }\n        if (length > 0) {\n            return\
    \ IsPrime(length) ? \"YES\" : \"NO\";\n        }\n        return \"NO\";", " \
    \       // Your code goes here\n        return \"\";", "        // your code here\n\
    \        long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start > end)\
    \ return \"NO\";\n        return IsPrime(end - start + 1) ? \"YES\" : \"NO\";",
  "        // your code here\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start + 1;\n        if (length < 0) {\n            return \"\
    NO\";\n        }\n        if (length == 1) {\n            return \"YES\";\n  \
    \      }\n        if (length == 2) {\n            return \"NO\";\n        }\n\
    \        for (long i = 2; i * i <= length; i++) {\n            if (length % i\
    \ == 0) {\n                return \"NO\";\n            }\n        }\n        return\
    \ \"YES\";", "        var start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        var end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        var length = end -\
    \ start + 1;\n        return IsPrime(length) ? \"YES\" : \"NO\";", "        var\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        var end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        var length = end - start + 1;\n        if (length\
    \ < 0) {\n            return \"NO\";\n        }\n        return IsPrime(length)\
    \ ? \"YES\" : \"NO\";", "        var start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        var end = Math.Min(interval1.Item2, interval2.Item2);\n        if (start\
    \ > end) {\n            return \"NO\";\n        }\n        var length = end -\
    \ start + 1;\n        if (length == 1) {\n            return \"NO\";\n       \
    \ }\n        if (length == 2) {\n            return \"YES\";\n        }\n    \
    \    if (length % 2 == 0) {\n            return \"NO\";\n        }\n        for\
    \ (var i = 3; i * i <= length; i += 2) {\n            if (length % i == 0) {\n\
    \                return \"NO\";\n            }\n        }\n        return \"YES\"\
    ;", "        // your code here\n        return \"\";"]
stop_tokens:
- "\n    }\n"

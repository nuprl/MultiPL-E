name: HumanEval_144_simplify
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Your task is to implement a function that will simplify the\
  \ expression\n    // x * n. The function returns True if x * n evaluates to a whole\
  \ number and False\n    // otherwise. Both x and n, are string representation of\
  \ a fraction, and have the following format,\n    // <numerator>/<denominator> where\
  \ both numerator and denominator are positive whole numbers.\n    // You can assume\
  \ that x, and n are valid fractions, and do not have zero as denominator.\n    //\
  \ >>> Simplify((\"1/5\"), (\"5/1\"))\n    // (true)\n    // >>> Simplify((\"1/6\"\
  ), (\"2/1\"))\n    // (false)\n    // >>> Simplify((\"7/10\"), (\"10/2\"))\n   \
  \ // (false)\n    public static bool Simplify(string x, string n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Simplify((\"\
  1/5\"), (\"5/1\")) == (true));\n    Debug.Assert(Simplify((\"1/6\"), (\"2/1\"))\
  \ == (false));\n    Debug.Assert(Simplify((\"5/1\"), (\"3/1\")) == (true));\n  \
  \  Debug.Assert(Simplify((\"7/10\"), (\"10/2\")) == (false));\n    Debug.Assert(Simplify((\"\
  2/10\"), (\"50/10\")) == (true));\n    Debug.Assert(Simplify((\"7/2\"), (\"4/2\"\
  )) == (true));\n    Debug.Assert(Simplify((\"11/6\"), (\"6/1\")) == (true));\n \
  \   Debug.Assert(Simplify((\"2/3\"), (\"5/2\")) == (false));\n    Debug.Assert(Simplify((\"\
  5/2\"), (\"3/5\")) == (false));\n    Debug.Assert(Simplify((\"2/4\"), (\"8/4\"))\
  \ == (true));\n    Debug.Assert(Simplify((\"2/4\"), (\"4/2\")) == (true));\n   \
  \ Debug.Assert(Simplify((\"1/5\"), (\"5/1\")) == (true));\n    Debug.Assert(Simplify((\"\
  1/5\"), (\"1/5\")) == (false));\n    }\n\n}\n"
completions: ["        var x_numerator = int.Parse(x.Split('/')[0]);\n        var\
    \ x_denominator = int.Parse(x.Split('/')[1]);\n        var n_numerator = int.Parse(n.Split('/')[0]);\n\
    \        var n_denominator = int.Parse(n.Split('/')[1]);\n        var x_numerator_new\
    \ = x_numerator * n_denominator;\n        var x_denominator_new = x_denominator\
    \ * n_numerator;\n        return x_numerator_new % x_denominator_new == 0;", " \
    \       var xParts = x.Split('/');\n        var nParts = n.Split('/');\n     \
    \   var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator =\
    \ BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var numerator\
    \ = xNumerator * nDenominator;\n        var denominator = xDenominator * nNumerator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        return gcd == 1;", "        var x_parts = x.Split('/');\n        var\
    \ n_parts = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_parts[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_parts[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_parts[0]);\n        var n_denominator = BigInteger.Parse(n_parts[1]);\n\
    \        var result_numerator = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result_numerator,\
    \ result_denominator);\n        var simplified_numerator = result_numerator /\
    \ gcd;\n        var simplified_denominator = result_denominator / gcd;\n     \
    \   return simplified_numerator % simplified_denominator == 0;", "        var\
    \ x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n        var x_numerator\
    \ = BigInteger.Parse(x_parts[0]);\n        var x_denominator = BigInteger.Parse(x_parts[1]);\n\
    \        var n_numerator = BigInteger.Parse(n_parts[0]);\n        var n_denominator\
    \ = BigInteger.Parse(n_parts[1]);\n        var result_numerator = x_numerator\
    \ * n_numerator;\n        var result_denominator = x_denominator * n_denominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(result_numerator, result_denominator);\n\
    \        result_numerator /= gcd;\n        result_denominator /= gcd;\n      \
    \  return result_denominator == 1;", "        var xFraction = ParseFraction(x);\n\
    \        var nFraction = ParseFraction(n);\n        var result = xFraction * nFraction;\n\
    \        return result.Denominator == 1;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var product = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        return product % denominator == 0;", "        var x_numerator\
    \ = BigInteger.Parse(x.Split('/')[0]);\n        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n\
    \        var n_numerator = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator\
    \ = BigInteger.Parse(n.Split('/')[1]);\n        var result = x_numerator * n_numerator;\n\
    \        var result_denominator = x_denominator * n_denominator;\n        return\
    \ result % result_denominator == 0;", "        var xParts = x.Split('/');\n  \
    \      var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nDenominator;\n        var denominator =\
    \ xDenominator * nNumerator;\n        return numerator % denominator == 0;", " \
    \       var xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n     \
    \   var xNum = BigInteger.Parse(xSplit[0]);\n        var xDen = BigInteger.Parse(xSplit[1]);\n\
    \        var nNum = BigInteger.Parse(nSplit[0]);\n        var nDen = BigInteger.Parse(nSplit[1]);\n\
    \        var num = xNum * nNum;\n        var den = xDen * nDen;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n       \
    \ den /= gcd;\n        return num % den == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var xNumeratorTimesNumerator = xNumerator * nNumerator;\n        var\
    \ xDenominatorTimesDenominator = xDenominator * nDenominator;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(xNumeratorTimesNumerator, xDenominatorTimesDenominator);\n\
    \        var simplifiedNumerator = xNumeratorTimesNumerator / gcd;\n        var\
    \ simplifiedDenominator = xDenominatorTimesDenominator / gcd;\n        return\
    \ simplifiedNumerator % simplifiedDenominator == 0;", "        var x_n = x.Split('/');\n\
    \        var n_n = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_n[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_n[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_n[0]);\n        var n_denominator = BigInteger.Parse(n_n[1]);\n\
    \        var product_numerator = x_numerator * n_numerator;\n        var product_denominator\
    \ = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(product_numerator,\
    \ product_denominator);\n        return product_numerator % product_denominator\
    \ == 0;", "        var xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n\
    \        var xNum = BigInteger.Parse(xSplit[0]);\n        var xDen = BigInteger.Parse(xSplit[1]);\n\
    \        var nNum = BigInteger.Parse(nSplit[0]);\n        var nDen = BigInteger.Parse(nSplit[1]);\n\
    \        var num = xNum * nNum;\n        var den = xDen * nDen;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n       \
    \ den /= gcd;\n        return num % den == 0;", "        var x_parts = x.Split('/');\n\
    \        var n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var result = (x_num\
    \ * n_num) / (x_den * n_den);\n        return result % 1 == 0;", "        var\
    \ xParts = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var numerator = xNumerator * nDenominator;\n\
    \        var denominator = xDenominator * nNumerator;\n        return numerator\
    \ % denominator == 0;", "        var x_numerator = int.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = int.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = int.Parse(n.Split('/')[0]);\n        var n_denominator = int.Parse(n.Split('/')[1]);\n\
    \        var result = (x_numerator * n_numerator) / (x_denominator * n_denominator);\n\
    \        return result % 1 == 0;", "        var x_parts = x.Split('/');\n    \
    \    var n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        return gcd == 1;", "        var x_n = x.Split('/');\n       \
    \ var n_n = n.Split('/');\n        var x_n_n = BigInteger.Parse(x_n[0]) * BigInteger.Parse(n_n[1]);\n\
    \        var n_n_n = BigInteger.Parse(n_n[0]) * BigInteger.Parse(x_n[1]);\n  \
    \      return x_n_n == n_n_n;", "        var x_ = x.Split('/');\n        var n_\
    \ = n.Split('/');\n        var x_n = new BigInteger(int.Parse(x_[0])) * new BigInteger(int.Parse(n_[1]));\n\
    \        var x_d = new BigInteger(int.Parse(x_[1])) * new BigInteger(int.Parse(n_[0]));\n\
    \        return x_n % x_d == 0;", "        var x_numerator = int.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = int.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = int.Parse(n.Split('/')[0]);\n        var n_denominator = int.Parse(n.Split('/')[1]);\n\
    \        var x_n = x_numerator * n_denominator;\n        var n_n = n_numerator\
    \ * x_denominator;\n        return x_n % n_n == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var xs\
    \ = x.Split('/');\n        var ns = n.Split('/');\n        var xn = BigInteger.Parse(xs[0])\
    \ * BigInteger.Parse(ns[1]);\n        var nx = BigInteger.Parse(ns[0]) * BigInteger.Parse(xs[1]);\n\
    \        return xn == nx;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result = (x_numerator * n_numerator) / (x_denominator * n_denominator);\n\
    \        return result % 1 == 0;", "        // Your code goes here\n        return\
    \ false;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var numerator\
    \ = xNumerator * nDenominator;\n        var denominator = xDenominator * nNumerator;\n\
    \        return numerator % denominator == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nDenominator;\n        var denominator =\
    \ xDenominator * nNumerator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var xSplit\
    \ = x.Split('/');\n        var nSplit = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xSplit[0]);\n        var xDenominator = BigInteger.Parse(xSplit[1]);\n\
    \        var nNumerator = BigInteger.Parse(nSplit[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nSplit[1]);\n        var xNumeratorTimesNumerator = xNumerator\
    \ * nNumerator;\n        var xDenominatorTimesDenominator = xDenominator * nDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(xNumeratorTimesNumerator,\
    \ xDenominatorTimesDenominator);\n        return xNumeratorTimesNumerator % gcd\
    \ == 0 && xDenominatorTimesDenominator % gcd == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = (xNumerator * nDenominator) * (nNumerator * xDenominator);\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var xParts\
    \ = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var result = xNumerator * nDenominator\
    \ * nNumerator * xDenominator;\n        return result % (xDenominator * nDenominator)\
    \ == 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNum = BigInteger.Parse(xParts[0]);\n        var xDen = BigInteger.Parse(xParts[1]);\n\
    \        var nNum = BigInteger.Parse(nParts[0]);\n        var nDen = BigInteger.Parse(nParts[1]);\n\
    \        var num = xNum * nDen;\n        var den = xDen * nNum;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(num, den);\n        return num % gcd == 0\
    \ && den % gcd == 0;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        return result % result_denominator\
    \ == 0;", "        var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_parts[0]);\n        var x_den = BigInteger.Parse(x_parts[1]);\n\
    \        var n_num = BigInteger.Parse(n_parts[0]);\n        var n_den = BigInteger.Parse(n_parts[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        // Your code here\n\
    \        return false;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result = (x_numerator * n_numerator) / (x_denominator * n_denominator);\n\
    \        return result % 1 == 0;", "        var xParts = x.Split('/');\n     \
    \   var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var xs\
    \ = x.Split('/');\n        var ns = n.Split('/');\n        var xn = BigInteger.Parse(xs[0])\
    \ * BigInteger.Parse(ns[1]);\n        var nx = BigInteger.Parse(ns[0]) * BigInteger.Parse(xs[1]);\n\
    \        return xn == nx;", "        var x_parts = x.Split('/');\n        var\
    \ n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var x_num_n = x_num\
    \ * n_den;\n        var x_den_n = x_den * n_num;\n        var gcd = BigInteger.GreatestCommonDivisor(x_num_n,\
    \ x_den_n);\n        x_num_n /= gcd;\n        x_den_n /= gcd;\n        return\
    \ x_num_n % x_den_n == 0;", "        var x_n = x.Split('/');\n        var n_n\
    \ = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_n[0]);\n     \
    \   var x_denominator = BigInteger.Parse(x_n[1]);\n        var n_numerator = BigInteger.Parse(n_n[0]);\n\
    \        var n_denominator = BigInteger.Parse(n_n[1]);\n        var x_numerator_n\
    \ = x_numerator * n_denominator;\n        var x_denominator_n = x_denominator\
    \ * n_numerator;\n        var gcd = BigInteger.GreatestCommonDivisor(x_numerator_n,\
    \ x_denominator_n);\n        return x_numerator_n % gcd == 0 && x_denominator_n\
    \ % gcd == 0;", "        var x_num = BigInteger.Parse(x.Split('/')[0]);\n    \
    \    var x_den = BigInteger.Parse(x.Split('/')[1]);\n        var n_num = BigInteger.Parse(n.Split('/')[0]);\n\
    \        var n_den = BigInteger.Parse(n.Split('/')[1]);\n        var res_num =\
    \ x_num * n_num;\n        var res_den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(res_num,\
    \ res_den);\n        return res_num % gcd == 0 && res_den % gcd == 0;", "    \
    \    var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n      \
    \  var x_num = BigInteger.Parse(x_parts[0]);\n        var x_den = BigInteger.Parse(x_parts[1]);\n\
    \        var n_num = BigInteger.Parse(n_parts[0]);\n        var n_den = BigInteger.Parse(n_parts[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        // Your code goes\
    \ here\n        return false;", "        var xParts = x.Split('/');\n        var\
    \ nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var xParts\
    \ = x.Split('/');\n        var nParts = n.Split('/');\n        var xNum = BigInteger.Parse(xParts[0]);\n\
    \        var xDen = BigInteger.Parse(xParts[1]);\n        var nNum = BigInteger.Parse(nParts[0]);\n\
    \        var nDen = BigInteger.Parse(nParts[1]);\n        var num = xNum * nDen;\n\
    \        var den = xDen * nNum;\n        return num % den == 0;", "        var\
    \ xParts = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var result = xNumerator * nDenominator\
    \ * nNumerator * xDenominator;\n        return result % (xDenominator * nDenominator)\
    \ == 0;", "        var xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xSplit[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xSplit[1]);\n        var nNumerator = BigInteger.Parse(nSplit[0]);\n\
    \        var nDenominator = BigInteger.Parse(nSplit[1]);\n        var xNumeratorN\
    \ = xNumerator * nDenominator;\n        var xDenominatorN = xDenominator * nNumerator;\n\
    \        return xNumeratorN % xDenominatorN == 0;", "        var x_parts = x.Split('/');\n\
    \        var n_parts = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_parts[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_parts[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_parts[0]);\n        var n_denominator = BigInteger.Parse(n_parts[1]);\n\
    \        var x_n = x_numerator * n_denominator;\n        var n_n = n_numerator\
    \ * x_denominator;\n        return x_n % n_n == 0;", "        var xs = x.Split('/');\n\
    \        var ns = n.Split('/');\n        var xn = BigInteger.Parse(xs[0]) * BigInteger.Parse(ns[1]);\n\
    \        var nx = BigInteger.Parse(ns[0]) * BigInteger.Parse(xs[1]);\n       \
    \ return xn % nx == 0;", "        var xParts = x.Split('/');\n        var nParts\
    \ = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n   \
    \     var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var xNumeratorTimesNumerator = xNumerator * nNumerator;\n        var\
    \ xDenominatorTimesDenominator = xDenominator * nDenominator;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(xNumeratorTimesNumerator, xDenominatorTimesDenominator);\n\
    \        var simplifiedNumerator = xNumeratorTimesNumerator / gcd;\n        var\
    \ simplifiedDenominator = xDenominatorTimesDenominator / gcd;\n        return\
    \ simplifiedNumerator % simplifiedDenominator == 0;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNumerator = BigInteger.Parse(xSplit[0]);\n\
    \        var xDenominator = BigInteger.Parse(xSplit[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nSplit[0]);\n        var nDenominator = BigInteger.Parse(nSplit[1]);\n\
    \        var xFraction = xNumerator / xDenominator;\n        var nFraction = nNumerator\
    \ / nDenominator;\n        var result = xFraction * nFraction;\n        return\
    \ result % 1 == 0;", "        var x_n = x.Split('/');\n        var n_n = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_n[0]);\n        var x_den = BigInteger.Parse(x_n[1]);\n\
    \        var n_num = BigInteger.Parse(n_n[0]);\n        var n_den = BigInteger.Parse(n_n[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var x_n = x.Split('/');\n\
    \        var x_numerator = BigInteger.Parse(x_n[0]);\n        var x_denominator\
    \ = BigInteger.Parse(x_n[1]);\n        var n_n = n.Split('/');\n        var n_numerator\
    \ = BigInteger.Parse(n_n[0]);\n        var n_denominator = BigInteger.Parse(n_n[1]);\n\
    \        var result = x_numerator * n_denominator * n_numerator * x_denominator;\n\
    \        return result % (x_denominator * n_denominator) == 0;", "        var\
    \ xParts = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var numerator = xNumerator * nDenominator;\n\
    \        var denominator = xDenominator * nNumerator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        var x_num = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_den = BigInteger.Parse(x.Split('/')[1]);\n        var n_num = BigInteger.Parse(n.Split('/')[0]);\n\
    \        var n_den = BigInteger.Parse(n.Split('/')[1]);\n        var result =\
    \ (x_num * n_num) / (x_den * n_den);\n        return result % 1 == 0;", "    \
    \    var xParts = x.Split('/');\n        var nParts = n.Split('/');\n        var\
    \ xNum = BigInteger.Parse(xParts[0]);\n        var xDen = BigInteger.Parse(xParts[1]);\n\
    \        var nNum = BigInteger.Parse(nParts[0]);\n        var nDen = BigInteger.Parse(nParts[1]);\n\
    \        var xN = xNum * nDen;\n        var nX = nNum * xDen;\n        return\
    \ xN == nX;", "        var x_num = BigInteger.Parse(x.Split('/')[0]);\n      \
    \  var x_den = BigInteger.Parse(x.Split('/')[1]);\n        var n_num = BigInteger.Parse(n.Split('/')[0]);\n\
    \        var n_den = BigInteger.Parse(n.Split('/')[1]);\n        var result =\
    \ x_num * n_num;\n        var result_den = x_den * n_den;\n        return result\
    \ % result_den == 0;", "        var xParts = x.Split('/');\n        var nParts\
    \ = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n   \
    \     var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var product = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        return product % denominator == 0;", "        var x_parts\
    \ = x.Split('/');\n        var n_parts = n.Split('/');\n        var x_numerator\
    \ = BigInteger.Parse(x_parts[0]);\n        var x_denominator = BigInteger.Parse(x_parts[1]);\n\
    \        var n_numerator = BigInteger.Parse(n_parts[0]);\n        var n_denominator\
    \ = BigInteger.Parse(n_parts[1]);\n        var x_numerator_multiplied = x_numerator\
    \ * n_numerator;\n        var x_denominator_multiplied = x_denominator * n_denominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(x_numerator_multiplied, x_denominator_multiplied);\n\
    \        var x_numerator_multiplied_simplified = x_numerator_multiplied / gcd;\n\
    \        var x_denominator_multiplied_simplified = x_denominator_multiplied /\
    \ gcd;\n        return x_numerator_multiplied_simplified % x_denominator_multiplied_simplified\
    \ == 0;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n    \
    \    var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        return result % result_denominator\
    \ == 0;", "        var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n\
    \        var x_numerator = BigInteger.Parse(x_parts[0]);\n        var x_denominator\
    \ = BigInteger.Parse(x_parts[1]);\n        var n_numerator = BigInteger.Parse(n_parts[0]);\n\
    \        var n_denominator = BigInteger.Parse(n_parts[1]);\n        var numerator\
    \ = x_numerator * n_numerator;\n        var denominator = x_denominator * n_denominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        return gcd == 1;", "        var x_numerator = int.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = int.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = int.Parse(n.Split('/')[0]);\n        var n_denominator = int.Parse(n.Split('/')[1]);\n\
    \        var result = (x_numerator * n_numerator) / (x_denominator * n_denominator);\n\
    \        return result % 1 == 0;", "        var x_num = int.Parse(x.Split('/')[0]);\n\
    \        var x_den = int.Parse(x.Split('/')[1]);\n        var n_num = int.Parse(n.Split('/')[0]);\n\
    \        var n_den = int.Parse(n.Split('/')[1]);\n        var x_num_n = x_num\
    \ * n_num;\n        var x_den_n = x_den * n_den;\n        var gcd = GCD(x_num_n,\
    \ x_den_n);\n        return x_num_n / gcd == x_den_n / gcd;", "        var xParts\
    \ = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var result = xNumerator * nDenominator\
    \ * nNumerator * xDenominator;\n        return result % (xDenominator * nDenominator)\
    \ == 0;", "        var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_parts[0]);\n        var x_den = BigInteger.Parse(x_parts[1]);\n\
    \        var n_num = BigInteger.Parse(n_parts[0]);\n        var n_den = BigInteger.Parse(n_parts[1]);\n\
    \        var x_num_n = x_num * n_den;\n        var x_den_n = x_den * n_num;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(x_num_n, x_den_n);\n     \
    \   return x_num_n % gcd == 0 && x_den_n % gcd == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(result, xDenominator * nDenominator);\n\
    \        return result % gcd == 0;", "        var x_n = x.Split('/');\n      \
    \  var n_n = n.Split('/');\n        var x_num = BigInteger.Parse(x_n[0]);\n  \
    \      var x_den = BigInteger.Parse(x_n[1]);\n        var n_num = BigInteger.Parse(n_n[0]);\n\
    \        var n_den = BigInteger.Parse(n_n[1]);\n        var num = x_num * n_num;\n\
    \        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var x_n = x.Split('/');\n        var n_n = n.Split('/');\n   \
    \     var x_num = BigInteger.Parse(x_n[0]);\n        var x_den = BigInteger.Parse(x_n[1]);\n\
    \        var n_num = BigInteger.Parse(n_n[0]);\n        var n_den = BigInteger.Parse(n_n[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var x_split = x.Split('/');\n\
    \        var n_split = n.Split('/');\n        var x_num = BigInteger.Parse(x_split[0]);\n\
    \        var x_den = BigInteger.Parse(x_split[1]);\n        var n_num = BigInteger.Parse(n_split[0]);\n\
    \        var n_den = BigInteger.Parse(n_split[1]);\n        var x_num_n = x_num\
    \ * n_den;\n        var x_den_n = x_den * n_num;\n        var gcd = BigInteger.GreatestCommonDivisor(x_num_n,\
    \ x_den_n);\n        return x_num_n % gcd == 0 && x_den_n % gcd == 0;", "    \
    \    var xParts = x.Split('/');\n        var nParts = n.Split('/');\n        var\
    \ xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var resultNumerator = xNumerator * nNumerator;\n\
    \        var resultDenominator = xDenominator * nDenominator;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(resultNumerator, resultDenominator);\n  \
    \      var simplifiedNumerator = resultNumerator / gcd;\n        var simplifiedDenominator\
    \ = resultDenominator / gcd;\n        return simplifiedDenominator == 1;", " \
    \       var xParts = x.Split('/');\n        var nParts = n.Split('/');\n     \
    \   var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator =\
    \ BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var xNumeratorTimesNumerator\
    \ = xNumerator * nNumerator;\n        var xDenominatorTimesDenominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(xNumeratorTimesNumerator,\
    \ xDenominatorTimesDenominator);\n        return xNumeratorTimesNumerator % gcd\
    \ == 0 && xDenominatorTimesDenominator % gcd == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var xNumeratorTimesNumerator = xNumerator * nNumerator;\n        var\
    \ xDenominatorTimesDenominator = xDenominator * nDenominator;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(xNumeratorTimesNumerator, xDenominatorTimesDenominator);\n\
    \        return xNumeratorTimesNumerator % gcd == 0 && xDenominatorTimesDenominator\
    \ % gcd == 0;", "        var x_n = x.Split('/');\n        var n_n = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_n[0]);\n        var x_den = BigInteger.Parse(x_n[1]);\n\
    \        var n_num = BigInteger.Parse(n_n[0]);\n        var n_den = BigInteger.Parse(n_n[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        return den / gcd\
    \ == 1;", "        var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_parts[0]);\n        var x_den = BigInteger.Parse(x_parts[1]);\n\
    \        var n_num = BigInteger.Parse(n_parts[0]);\n        var n_den = BigInteger.Parse(n_parts[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        return gcd == 1;",
  "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n        var x_denominator\
    \ = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator = BigInteger.Parse(n.Split('/')[0]);\n\
    \        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n        var result\
    \ = x_numerator * n_numerator;\n        var result_denominator = x_denominator\
    \ * n_denominator;\n        return result % result_denominator == 0;", "     \
    \   var x_n = x.Split('/');\n        var n_n = n.Split('/');\n        var x_num\
    \ = BigInteger.Parse(x_n[0]);\n        var x_den = BigInteger.Parse(x_n[1]);\n\
    \        var n_num = BigInteger.Parse(n_n[0]);\n        var n_den = BigInteger.Parse(n_n[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        return\
    \ (num % den == 0);", "        var xParts = x.Split('/');\n        var nParts\
    \ = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n   \
    \     var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var xParts\
    \ = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var numerator = xNumerator * nDenominator;\n\
    \        var denominator = xDenominator * nNumerator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        var x_parts = x.Split('/');\n\
    \        var n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        return gcd == 1;", "        var xParts = x.Split('/');\n    \
    \    var nParts = n.Split('/');\n        var xNum = BigInteger.Parse(xParts[0]);\n\
    \        var xDen = BigInteger.Parse(xParts[1]);\n        var nNum = BigInteger.Parse(nParts[0]);\n\
    \        var nDen = BigInteger.Parse(nParts[1]);\n        var num = xNum * nDen;\n\
    \        var den = xDen * nNum;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        return num % gcd == 0 && den % gcd == 0;", "        var x_numerator\
    \ = int.Parse(x.Split('/')[0]);\n        var x_denominator = int.Parse(x.Split('/')[1]);\n\
    \        var n_numerator = int.Parse(n.Split('/')[0]);\n        var n_denominator\
    \ = int.Parse(n.Split('/')[1]);\n        var result = (x_numerator * n_numerator)\
    \ / (x_denominator * n_denominator);\n        return result % 1 == 0;", "    \
    \    // Your code goes here\n        return false;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var xParts\
    \ = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var result = xNumerator * nDenominator\
    \ * nNumerator * xDenominator;\n        return result % (xDenominator * nDenominator)\
    \ == 0;", "        var xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n\
    \        var xNum = BigInteger.Parse(xSplit[0]);\n        var xDen = BigInteger.Parse(xSplit[1]);\n\
    \        var nNum = BigInteger.Parse(nSplit[0]);\n        var nDen = BigInteger.Parse(nSplit[1]);\n\
    \        var num = xNum * nNum;\n        var den = xDen * nDen;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(num, den);\n        return num % den == 0;",
  "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n      \
    \  var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var numerator = xNumerator * nDenominator;\n\
    \        var denominator = xDenominator * nNumerator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        return gcd == 1;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n\
    \        var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var xNumN = xNum * nDen;\n\
    \        var xDenN = xDen * nNum;\n        return xNumN % xDenN == 0;", "    \
    \    var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n      \
    \  var x_num = int.Parse(x_parts[0]);\n        var x_den = int.Parse(x_parts[1]);\n\
    \        var n_num = int.Parse(n_parts[0]);\n        var n_den = int.Parse(n_parts[1]);\n\
    \        var result = x_num * n_num;\n        var result_den = x_den * n_den;\n\
    \        return result % result_den == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNum = BigInteger.Parse(xParts[0]);\n\
    \        var xDen = BigInteger.Parse(xParts[1]);\n        var nNum = BigInteger.Parse(nParts[0]);\n\
    \        var nDen = BigInteger.Parse(nParts[1]);\n        var num = xNum * nDen;\n\
    \        var den = xDen * nNum;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        return num % gcd == 0 && den % gcd == 0;", "        var x_ =\
    \ x.Split('/');\n        var n_ = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_[0]);\n        var n_denominator = BigInteger.Parse(n_[1]);\n\
    \        var x_n = x_numerator * n_denominator;\n        var n_n = n_numerator\
    \ * x_denominator;\n        return x_n % n_n == 0;", "        var x_parts = x.Split('/');\n\
    \        var n_parts = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_parts[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_parts[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_parts[0]);\n        var n_denominator = BigInteger.Parse(n_parts[1]);\n\
    \        var numerator = x_numerator * n_numerator;\n        var denominator =\
    \ x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        return gcd == 1;", "        var x_parts = x.Split('/');\n\
    \        var n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        return num % den == 0;", " \
    \       var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n   \
    \     var x_numerator = BigInteger.Parse(x_parts[0]);\n        var x_denominator\
    \ = BigInteger.Parse(x_parts[1]);\n        var n_numerator = BigInteger.Parse(n_parts[0]);\n\
    \        var n_denominator = BigInteger.Parse(n_parts[1]);\n        var result_numerator\
    \ = x_numerator * n_numerator;\n        var result_denominator = x_denominator\
    \ * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result_numerator,\
    \ result_denominator);\n        result_numerator /= gcd;\n        result_denominator\
    \ /= gcd;\n        return result_denominator == 1;", "        var x_n = x.Split('/');\n\
    \        var n_n = n.Split('/');\n        var x_num = BigInteger.Parse(x_n[0]);\n\
    \        var x_den = BigInteger.Parse(x_n[1]);\n        var n_num = BigInteger.Parse(n_n[0]);\n\
    \        var n_den = BigInteger.Parse(n_n[1]);\n        var num = x_num * n_num;\n\
    \        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xSplit[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xSplit[1]);\n        var nNumerator = BigInteger.Parse(nSplit[0]);\n\
    \        var nDenominator = BigInteger.Parse(nSplit[1]);\n        var product\
    \ = xNumerator * nNumerator;\n        var productDenominator = xDenominator *\
    \ nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(product, productDenominator);\n\
    \        return gcd == productDenominator;", "        var x_parts = x.Split('/');\n\
    \        var n_parts = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_parts[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_parts[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_parts[0]);\n        var n_denominator = BigInteger.Parse(n_parts[1]);\n\
    \        var x_n = x_numerator * n_denominator;\n        var n_n = n_numerator\
    \ * x_denominator;\n        var x_n_n = x_n * n_n;\n        var x_n_d = x_denominator\
    \ * n_denominator;\n        return x_n_n % x_n_d == 0;", "        var xNumerator\
    \ = int.Parse(x.Split('/')[0]);\n        var xDenominator = int.Parse(x.Split('/')[1]);\n\
    \        var nNumerator = int.Parse(n.Split('/')[0]);\n        var nDenominator\
    \ = int.Parse(n.Split('/')[1]);\n        var result = (xNumerator * nDenominator)\
    \ * (nNumerator * xDenominator);\n        return result % (xDenominator * nDenominator)\
    \ == 0;", "        var x_split = x.Split('/');\n        var n_split = n.Split('/');\n\
    \        var x_numerator = BigInteger.Parse(x_split[0]);\n        var x_denominator\
    \ = BigInteger.Parse(x_split[1]);\n        var n_numerator = BigInteger.Parse(n_split[0]);\n\
    \        var n_denominator = BigInteger.Parse(n_split[1]);\n        var x_n =\
    \ x_numerator * n_denominator;\n        var n_n = n_numerator * x_denominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(x_n, n_n);\n        return\
    \ x_n / gcd == n_n / gcd;", "        var x_parts = x.Split('/');\n        var\
    \ n_parts = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_parts[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_parts[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_parts[0]);\n        var n_denominator = BigInteger.Parse(n_parts[1]);\n\
    \        var result_numerator = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result_numerator,\
    \ result_denominator);\n        result_numerator /= gcd;\n        result_denominator\
    \ /= gcd;\n        return result_numerator % result_denominator == 0;", "    \
    \    var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n      \
    \  var x_num = BigInteger.Parse(x_parts[0]);\n        var x_den = BigInteger.Parse(x_parts[1]);\n\
    \        var n_num = BigInteger.Parse(n_parts[0]);\n        var n_den = BigInteger.Parse(n_parts[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        return\
    \ num % den == 0;", "        var x_num = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_den = BigInteger.Parse(x.Split('/')[1]);\n        var n_num = BigInteger.Parse(n.Split('/')[0]);\n\
    \        var n_den = BigInteger.Parse(n.Split('/')[1]);\n        var num = x_num\
    \ * n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        return num % den == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nDenominator;\n        var denominator =\
    \ xDenominator * nNumerator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        var x_parts = x.Split('/');\n\
    \        var n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var x_num_n = x_num\
    \ * n_den;\n        var x_den_n = x_den * n_num;\n        return x_num_n % x_den_n\
    \ == 0;", "        var xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xSplit[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xSplit[1]);\n        var nNumerator = BigInteger.Parse(nSplit[0]);\n\
    \        var nDenominator = BigInteger.Parse(nSplit[1]);\n        var xNumeratorDouble\
    \ = (double)xNumerator;\n        var xDenominatorDouble = (double)xDenominator;\n\
    \        var nNumeratorDouble = (double)nNumerator;\n        var nDenominatorDouble\
    \ = (double)nDenominator;\n        var xDouble = xNumeratorDouble / xDenominatorDouble;\n\
    \        var nDouble = nNumeratorDouble / nDenominatorDouble;\n        var result\
    \ = xDouble * nDouble;\n        return result % 1 == 0;", "        // Your code\
    \ goes here\n        return false;", "        var x_parts = x.Split('/');\n  \
    \      var n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var productNumerator\
    \ = xNumerator * nNumerator;\n        var productDenominator = xDenominator *\
    \ nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(productNumerator,\
    \ productDenominator);\n        return productDenominator == gcd;", "        //\
    \ Your code goes here\n        return false;", "        var x_numerator = int.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = int.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = int.Parse(n.Split('/')[0]);\n        var n_denominator = int.Parse(n.Split('/')[1]);\n\
    \        var result = (x_numerator * n_numerator) / (x_denominator * n_denominator);\n\
    \        return result % 1 == 0;", "        var xParts = x.Split('/');\n     \
    \   var nParts = n.Split('/');\n        var xNum = BigInteger.Parse(xParts[0]);\n\
    \        var xDen = BigInteger.Parse(xParts[1]);\n        var nNum = BigInteger.Parse(nParts[0]);\n\
    \        var nDen = BigInteger.Parse(nParts[1]);\n        var xnNum = xNum * nNum;\n\
    \        var xnDen = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(xnNum,\
    \ xnDen);\n        return xnNum % xnDen == 0;", "        var x_ = x.Split('/');\n\
    \        var n_ = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_[0]);\n        var n_denominator = BigInteger.Parse(n_[1]);\n\
    \        var numerator = x_numerator * n_numerator;\n        var denominator =\
    \ x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        return gcd == 1;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNumerator = BigInteger.Parse(xSplit[0]);\n\
    \        var xDenominator = BigInteger.Parse(xSplit[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nSplit[0]);\n        var nDenominator = BigInteger.Parse(nSplit[1]);\n\
    \        var xNumeratorTimesNumerator = xNumerator * nNumerator;\n        var\
    \ xDenominatorTimesDenominator = xDenominator * nDenominator;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(xNumeratorTimesNumerator, xDenominatorTimesDenominator);\n\
    \        var simplifiedNumerator = xNumeratorTimesNumerator / gcd;\n        var\
    \ simplifiedDenominator = xDenominatorTimesDenominator / gcd;\n        return\
    \ simplifiedNumerator % simplifiedDenominator == 0;", "        // Your code goes\
    \ here\n        return false;", "        var x_split = x.Split('/');\n       \
    \ var n_split = n.Split('/');\n        var x_num = BigInteger.Parse(x_split[0]);\n\
    \        var x_den = BigInteger.Parse(x_split[1]);\n        var n_num = BigInteger.Parse(n_split[0]);\n\
    \        var n_den = BigInteger.Parse(n_split[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        return gcd == 1;", "        var xFrac = x.Split('/');\n     \
    \   var nFrac = n.Split('/');\n        var xNum = BigInteger.Parse(xFrac[0]);\n\
    \        var xDen = BigInteger.Parse(xFrac[1]);\n        var nNum = BigInteger.Parse(nFrac[0]);\n\
    \        var nDen = BigInteger.Parse(nFrac[1]);\n        var xNumN = xNum * nDen;\n\
    \        var xDenN = xDen * nNum;\n        var gcd = BigInteger.GreatestCommonDivisor(xNumN,\
    \ xDenN);\n        return xNumN / gcd == xDenN / gcd;", "        var x_n = x.Split('/');\n\
    \        var n_n = n.Split('/');\n        var x_num = BigInteger.Parse(x_n[0]);\n\
    \        var x_den = BigInteger.Parse(x_n[1]);\n        var n_num = BigInteger.Parse(n_n[0]);\n\
    \        var n_den = BigInteger.Parse(n_n[1]);\n        var num = x_num * n_num;\n\
    \        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var result =\
    \ xNumerator * nDenominator * nNumerator * xDenominator;\n        return result\
    \ % (xDenominator * nDenominator) == 0;", "        // Your code goes here\n  \
    \      return false;", "        var xParts = x.Split('/');\n        var nParts\
    \ = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n   \
    \     var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var xNumeratorTimesNumerator = xNumerator * nNumerator;\n        var\
    \ xDenominatorTimesDenominator = xDenominator * nDenominator;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(xNumeratorTimesNumerator, xDenominatorTimesDenominator);\n\
    \        return xNumeratorTimesNumerator % gcd == 0 && xDenominatorTimesDenominator\
    \ % gcd == 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var numerator\
    \ = xNumerator * nDenominator;\n        var denominator = xDenominator * nNumerator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        numerator /= gcd;\n        denominator /= gcd;\n        return numerator\
    \ % denominator == 0;", "        var x_parts = x.Split('/');\n        var n_parts\
    \ = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n       \
    \ var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_parts[0]);\n        var x_den = BigInteger.Parse(x_parts[1]);\n\
    \        var n_num = BigInteger.Parse(n_parts[0]);\n        var n_den = BigInteger.Parse(n_parts[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var xFraction = x.Split('/');\n\
    \        var nFraction = n.Split('/');\n        var xNumerator = BigInteger.Parse(xFraction[0]);\n\
    \        var xDenominator = BigInteger.Parse(xFraction[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nFraction[0]);\n        var nDenominator = BigInteger.Parse(nFraction[1]);\n\
    \        var product = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        return product % denominator == 0;", "        var xSplit\
    \ = x.Split('/');\n        var nSplit = n.Split('/');\n        var xNumerator\
    \ = int.Parse(xSplit[0]);\n        var xDenominator = int.Parse(xSplit[1]);\n\
    \        var nNumerator = int.Parse(nSplit[0]);\n        var nDenominator = int.Parse(nSplit[1]);\n\
    \        var xFraction = xNumerator / (double)xDenominator;\n        var nFraction\
    \ = nNumerator / (double)nDenominator;\n        var result = xFraction * nFraction;\n\
    \        return result % 1 == 0;", "        var xParts = x.Split('/');\n     \
    \   var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var xNumeratorTimesNumerator = xNumerator * nNumerator;\n        var\
    \ xDenominatorTimesDenominator = xDenominator * nDenominator;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(xNumeratorTimesNumerator, xDenominatorTimesDenominator);\n\
    \        var xNumeratorTimesNumeratorDividedByGcd = xNumeratorTimesNumerator /\
    \ gcd;\n        var xDenominatorTimesDenominatorDividedByGcd = xDenominatorTimesDenominator\
    \ / gcd;\n        return xNumeratorTimesNumeratorDividedByGcd % xDenominatorTimesDenominatorDividedByGcd\
    \ == 0;", "        // Your code goes here\n        return false;", "        var\
    \ xParts = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var result = xNumerator * nDenominator\
    \ * nNumerator * xDenominator;\n        return result % (xDenominator * nDenominator)\
    \ == 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var xNumeratorTimesNumerator\
    \ = xNumerator * nNumerator;\n        var xDenominatorTimesDenominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(xNumeratorTimesNumerator,\
    \ xDenominatorTimesDenominator);\n        return xNumeratorTimesNumerator % gcd\
    \ == 0 && xDenominatorTimesDenominator % gcd == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var xNumeratorTimesNumerator = xNumerator * nNumerator;\n        var\
    \ xDenominatorTimesDenominator = xDenominator * nDenominator;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(xNumeratorTimesNumerator, xDenominatorTimesDenominator);\n\
    \        var simplifiedNumerator = xNumeratorTimesNumerator / gcd;\n        var\
    \ simplifiedDenominator = xDenominatorTimesDenominator / gcd;\n        return\
    \ simplifiedNumerator % simplifiedDenominator == 0;", "        var x_numerator\
    \ = BigInteger.Parse(x.Split('/')[0]);\n        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n\
    \        var n_numerator = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator\
    \ = BigInteger.Parse(n.Split('/')[1]);\n        var result = x_numerator * n_numerator;\n\
    \        var result_denominator = x_denominator * n_denominator;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(result, result_denominator);\n      \
    \  result /= gcd;\n        result_denominator /= gcd;\n        return result %\
    \ result_denominator == 0;", "        var xParts = x.Split('/');\n        var\
    \ nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nDenominator;\n        var denominator =\
    \ xDenominator * nNumerator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        // Your code goes here\n\
    \        return false;", "        var xParts = x.Split('/');\n        var nParts\
    \ = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n   \
    \     var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var xProduct = xNumerator * nDenominator;\n        var nProduct = nNumerator\
    \ * xDenominator;\n        return xProduct % nProduct == 0;", "        var x_split\
    \ = x.Split('/');\n        var n_split = n.Split('/');\n        var x_num = BigInteger.Parse(x_split[0]);\n\
    \        var x_den = BigInteger.Parse(x_split[1]);\n        var n_num = BigInteger.Parse(n_split[0]);\n\
    \        var n_den = BigInteger.Parse(n_split[1]);\n        var x_num_n = x_num\
    \ * n_den;\n        var x_den_n = x_den * n_num;\n        var gcd = BigInteger.GreatestCommonDivisor(x_num_n,\
    \ x_den_n);\n        var x_num_n_simplified = x_num_n / gcd;\n        var x_den_n_simplified\
    \ = x_den_n / gcd;\n        return x_num_n_simplified % x_den_n_simplified ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var result =\
    \ xNumerator * nDenominator * nNumerator * xDenominator;\n        return result\
    \ % (xDenominator * nDenominator) == 0;", "        var x_num = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_den = BigInteger.Parse(x.Split('/')[1]);\n        var n_num = BigInteger.Parse(n.Split('/')[0]);\n\
    \        var n_den = BigInteger.Parse(n.Split('/')[1]);\n        var num = x_num\
    \ * n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n\
    \        var x_numerator = BigInteger.Parse(x_parts[0]);\n        var x_denominator\
    \ = BigInteger.Parse(x_parts[1]);\n        var n_numerator = BigInteger.Parse(n_parts[0]);\n\
    \        var n_denominator = BigInteger.Parse(n_parts[1]);\n        var numerator\
    \ = x_numerator * n_numerator;\n        var denominator = x_denominator * n_denominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        numerator /= gcd;\n        denominator /= gcd;\n        return numerator\
    \ % denominator == 0;", "        var x_parts = x.Split('/');\n        var n_parts\
    \ = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_parts[0]);\n \
    \       var x_denominator = BigInteger.Parse(x_parts[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_parts[0]);\n        var n_denominator = BigInteger.Parse(n_parts[1]);\n\
    \        var result_numerator = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result_numerator,\
    \ result_denominator);\n        result_numerator /= gcd;\n        result_denominator\
    \ /= gcd;\n        return result_denominator == 1;", "        // Your code goes\
    \ here.\n        return false;", "        var xParts = x.Split('/');\n       \
    \ var nParts = n.Split('/');\n        var xNum = BigInteger.Parse(xParts[0]);\n\
    \        var xDen = BigInteger.Parse(xParts[1]);\n        var nNum = BigInteger.Parse(nParts[0]);\n\
    \        var nDen = BigInteger.Parse(nParts[1]);\n        var num = xNum * nDen;\n\
    \        var den = xDen * nNum;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n       \
    \ var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result = (x_numerator * n_numerator) / (x_denominator * n_denominator);\n\
    \        return result % 1 == 0;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result,\
    \ result_denominator);\n        result /= gcd;\n        result_denominator /=\
    \ gcd;\n        return result_denominator == 1;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNumerator = BigInteger.Parse(xSplit[0]);\n\
    \        var xDenominator = BigInteger.Parse(xSplit[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nSplit[0]);\n        var nDenominator = BigInteger.Parse(nSplit[1]);\n\
    \        var result = (xNumerator * nDenominator) * (nNumerator * xDenominator);\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var xs\
    \ = x.Split('/');\n        var ns = n.Split('/');\n        var xn = BigInteger.Parse(xs[0])\
    \ * BigInteger.Parse(ns[1]);\n        var nx = BigInteger.Parse(ns[0]) * BigInteger.Parse(xs[1]);\n\
    \        return xn == nx;", "        var x_parts = x.Split('/');\n        var\
    \ n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var x_num_n = x_num\
    \ * n_den;\n        var x_den_n = x_den * n_num;\n        return x_num_n % x_den_n\
    \ == 0;", "        var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n\
    \        var x_numerator = BigInteger.Parse(x_parts[0]);\n        var x_denominator\
    \ = BigInteger.Parse(x_parts[1]);\n        var n_numerator = BigInteger.Parse(n_parts[0]);\n\
    \        var n_denominator = BigInteger.Parse(n_parts[1]);\n        var x_n =\
    \ x_numerator * n_denominator;\n        var n_n = n_numerator * x_denominator;\n\
    \        return x_n % n_n == 0;", "        var x_parts = x.Split('/');\n     \
    \   var n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var result =\
    \ xNumerator * nDenominator * nNumerator * xDenominator;\n        return result\
    \ % (xDenominator * nDenominator) == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var xNumeratorN = xNumerator * nDenominator;\n        var nNumeratorX\
    \ = nNumerator * xDenominator;\n        var denominator = xDenominator * nDenominator;\n\
    \        var numerator = xNumeratorN + nNumeratorX;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        return denominator / gcd == numerator / gcd;", "    \
    \    var x_numerator = int.Parse(x.Split('/')[0]);\n        var x_denominator\
    \ = int.Parse(x.Split('/')[1]);\n        var n_numerator = int.Parse(n.Split('/')[0]);\n\
    \        var n_denominator = int.Parse(n.Split('/')[1]);\n        var result =\
    \ (x_numerator * n_numerator) / (x_denominator * n_denominator);\n        return\
    \ result % 1 == 0;", "        var x_parts = x.Split('/');\n        var n_parts\
    \ = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_parts[0]);\n \
    \       var x_denominator = BigInteger.Parse(x_parts[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_parts[0]);\n        var n_denominator = BigInteger.Parse(n_parts[1]);\n\
    \        var result_numerator = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result_numerator,\
    \ result_denominator);\n        result_numerator /= gcd;\n        result_denominator\
    \ /= gcd;\n        return result_denominator == 1;", "        var x_parts = x.Split('/');\n\
    \        var n_parts = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_parts[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_parts[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_parts[0]);\n        var n_denominator = BigInteger.Parse(n_parts[1]);\n\
    \        var numerator = x_numerator * n_numerator;\n        var denominator =\
    \ x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        return gcd == 1;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var x_parts\
    \ = x.Split('/');\n        var n_parts = n.Split('/');\n        var x_numerator\
    \ = BigInteger.Parse(x_parts[0]);\n        var x_denominator = BigInteger.Parse(x_parts[1]);\n\
    \        var n_numerator = BigInteger.Parse(n_parts[0]);\n        var n_denominator\
    \ = BigInteger.Parse(n_parts[1]);\n        var product_numerator = x_numerator\
    \ * n_numerator;\n        var product_denominator = x_denominator * n_denominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(product_numerator, product_denominator);\n\
    \        var simplified_numerator = product_numerator / gcd;\n        var simplified_denominator\
    \ = product_denominator / gcd;\n        return simplified_numerator % simplified_denominator\
    \ == 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var product\
    \ = xNumerator * nNumerator;\n        var productDenominator = xDenominator *\
    \ nDenominator;\n        return product % productDenominator == 0;", "       \
    \ var xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n        var\
    \ xNum = BigInteger.Parse(xSplit[0]);\n        var xDen = BigInteger.Parse(xSplit[1]);\n\
    \        var nNum = BigInteger.Parse(nSplit[0]);\n        var nDen = BigInteger.Parse(nSplit[1]);\n\
    \        var num = xNum * nNum;\n        var den = xDen * nDen;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(num, den);\n        var num2 = num / gcd;\n\
    \        var den2 = den / gcd;\n        return num2 % den2 == 0;", "        //\
    \ Your code goes here\n        return false;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var xNumeratorTimesNumerator = xNumerator * nNumerator;\n        var\
    \ xDenominatorTimesDenominator = xDenominator * nDenominator;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(xNumeratorTimesNumerator, xDenominatorTimesDenominator);\n\
    \        return xNumeratorTimesNumerator % gcd == 0 && xDenominatorTimesDenominator\
    \ % gcd == 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNum = BigInteger.Parse(xParts[0]);\n        var xDen = BigInteger.Parse(xParts[1]);\n\
    \        var nNum = BigInteger.Parse(nParts[0]);\n        var nDen = BigInteger.Parse(nParts[1]);\n\
    \        var num = xNum * nDen;\n        var den = xDen * nNum;\n        return\
    \ den % num == 0;", "        var xParts = x.Split('/');\n        var nParts =\
    \ n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n     \
    \   var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator =\
    \ BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        // Your\
    \ code goes here\n        return false;", "        var x_n = x.Split('/');\n \
    \       var n_n = n.Split('/');\n        var x_num = BigInteger.Parse(x_n[0]);\n\
    \        var x_den = BigInteger.Parse(x_n[1]);\n        var n_num = BigInteger.Parse(n_n[0]);\n\
    \        var n_den = BigInteger.Parse(n_n[1]);\n        var num = x_num * n_num;\n\
    \        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNum = BigInteger.Parse(xParts[0]);\n        var xDen = BigInteger.Parse(xParts[1]);\n\
    \        var nNum = BigInteger.Parse(nParts[0]);\n        var nDen = BigInteger.Parse(nParts[1]);\n\
    \        var xNumN = xNum * nDen;\n        var xDenN = xDen * nNum;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(xNumN, xDenN);\n        return xNumN\
    \ % gcd == 0 && xDenN % gcd == 0;", "        var xSplit = x.Split('/');\n    \
    \    var nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n\
    \        var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        return num % den == 0;", "        var\
    \ x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n        var x_num\
    \ = BigInteger.Parse(x_parts[0]);\n        var x_den = BigInteger.Parse(x_parts[1]);\n\
    \        var n_num = BigInteger.Parse(n_parts[0]);\n        var n_den = BigInteger.Parse(n_parts[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var x_parts = x.Split('/');\n\
    \        var n_parts = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_parts[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_parts[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_parts[0]);\n        var n_denominator = BigInteger.Parse(n_parts[1]);\n\
    \        var x_n = x_numerator * n_denominator;\n        var n_d = n_numerator\
    \ * x_denominator;\n        return x_n % n_d == 0;", "        // Your code here\n\
    \        return false;", "        var xParts = x.Split('/');\n        var nParts\
    \ = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n   \
    \     var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nDenominator;\n        var denominator =\
    \ xDenominator * nNumerator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var x_parts\
    \ = x.Split('/');\n        var n_parts = n.Split('/');\n        var x_numerator\
    \ = BigInteger.Parse(x_parts[0]);\n        var x_denominator = BigInteger.Parse(x_parts[1]);\n\
    \        var n_numerator = BigInteger.Parse(n_parts[0]);\n        var n_denominator\
    \ = BigInteger.Parse(n_parts[1]);\n        var product_numerator = x_numerator\
    \ * n_numerator;\n        var product_denominator = x_denominator * n_denominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(product_numerator, product_denominator);\n\
    \        return product_numerator % product_denominator == 0;", "        var xParts\
    \ = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var xProduct = xNumerator * nDenominator;\n\
    \        var nProduct = nNumerator * xDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(xProduct,\
    \ nProduct);\n        return xProduct % gcd == 0 && nProduct % gcd == 0;", " \
    \       var xParts = x.Split('/');\n        var nParts = n.Split('/');\n     \
    \   var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator =\
    \ BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var productNumerator\
    \ = xNumerator * nNumerator;\n        var productDenominator = xDenominator *\
    \ nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(productNumerator,\
    \ productDenominator);\n        var simplifiedNumerator = productNumerator / gcd;\n\
    \        var simplifiedDenominator = productDenominator / gcd;\n        return\
    \ simplifiedDenominator == 1;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        return result % result_denominator\
    \ == 0;", "        // Your code goes here\n        return false;", "        var\
    \ xParts = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var result = (xNumerator * nDenominator)\
    \ * (nNumerator * xDenominator);\n        return result % (xDenominator * nDenominator)\
    \ == 0;", "        var x_n = x.Split('/');\n        var n_n = n.Split('/');\n\
    \        var x_n_n = BigInteger.Parse(x_n[0]) * BigInteger.Parse(n_n[1]);\n  \
    \      var n_n_n = BigInteger.Parse(n_n[0]) * BigInteger.Parse(x_n[1]);\n    \
    \    return x_n_n == n_n_n;", "        var x_num = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_den = BigInteger.Parse(x.Split('/')[1]);\n        var n_num = BigInteger.Parse(n.Split('/')[0]);\n\
    \        var n_den = BigInteger.Parse(n.Split('/')[1]);\n        var result =\
    \ x_num * n_num;\n        var den = x_den * n_den;\n        return result % den\
    \ == 0;", "        var x_numerator = int.Parse(x.Split('/')[0]);\n        var\
    \ x_denominator = int.Parse(x.Split('/')[1]);\n        var n_numerator = int.Parse(n.Split('/')[0]);\n\
    \        var n_denominator = int.Parse(n.Split('/')[1]);\n        var product_numerator\
    \ = x_numerator * n_numerator;\n        var product_denominator = x_denominator\
    \ * n_denominator;\n        return product_numerator % product_denominator ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var xNumeratorTimesNumerator\
    \ = xNumerator * nNumerator;\n        var xDenominatorTimesDenominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(xNumeratorTimesNumerator,\
    \ xDenominatorTimesDenominator);\n        return xNumeratorTimesNumerator % gcd\
    \ == 0 && xDenominatorTimesDenominator % gcd == 0;", "        var x_parts = x.Split('/');\n\
    \        var n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var x_num_n = x_num\
    \ * n_den;\n        var n_num_x = n_num * x_den;\n        return x_num_n % n_num_x\
    \ == 0;", "        var x_numerator = int.Parse(x.Split('/')[0]);\n        var\
    \ x_denominator = int.Parse(x.Split('/')[1]);\n        var n_numerator = int.Parse(n.Split('/')[0]);\n\
    \        var n_denominator = int.Parse(n.Split('/')[1]);\n        var result =\
    \ (x_numerator * n_numerator) / (x_denominator * n_denominator);\n        return\
    \ result % 1 == 0;", "        var x_numerator = long.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = long.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = long.Parse(n.Split('/')[0]);\n        var n_denominator = long.Parse(n.Split('/')[1]);\n\
    \        var result = x_numerator * n_denominator * n_numerator * x_denominator;\n\
    \        return result % (x_denominator * n_denominator) == 0;", "        var\
    \ x_n = x.Split('/');\n        var n_n = n.Split('/');\n        var x_num = BigInteger.Parse(x_n[0]);\n\
    \        var x_den = BigInteger.Parse(x_n[1]);\n        var n_num = BigInteger.Parse(n_n[0]);\n\
    \        var n_den = BigInteger.Parse(n_n[1]);\n        var num = x_num * n_num;\n\
    \        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n\
    \        var xNum = BigInteger.Parse(xSplit[0]);\n        var xDen = BigInteger.Parse(xSplit[1]);\n\
    \        var nNum = BigInteger.Parse(nSplit[0]);\n        var nDen = BigInteger.Parse(nSplit[1]);\n\
    \        var num = xNum * nNum;\n        var den = xDen * nDen;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n       \
    \ den /= gcd;\n        return num % den == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var productNumerator = xNumerator * nNumerator;\n        var productDenominator\
    \ = xDenominator * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(productNumerator,\
    \ productDenominator);\n        return productDenominator / gcd == 1;", "    \
    \    var xParts = x.Split('/');\n        var nParts = n.Split('/');\n        var\
    \ xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var result = xNumerator * nDenominator\
    \ * nNumerator * xDenominator;\n        return result % (xDenominator * nDenominator)\
    \ == 0;", "        var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_parts[0]);\n        var x_den = BigInteger.Parse(x_parts[1]);\n\
    \        var n_num = BigInteger.Parse(n_parts[0]);\n        var n_den = BigInteger.Parse(n_parts[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var xParts\
    \ = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var numerator = xNumerator * nDenominator;\n\
    \        var denominator = xDenominator * nNumerator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        var x_num = int.Parse(x.Split('/')[0]);\n\
    \        var x_den = int.Parse(x.Split('/')[1]);\n        var n_num = int.Parse(n.Split('/')[0]);\n\
    \        var n_den = int.Parse(n.Split('/')[1]);\n        var num = x_num * n_num;\n\
    \        var den = x_den * n_den;\n        return num % den == 0;", "        var\
    \ xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n        var xNum\
    \ = BigInteger.Parse(xSplit[0]);\n        var xDen = BigInteger.Parse(xSplit[1]);\n\
    \        var nNum = BigInteger.Parse(nSplit[0]);\n        var nDen = BigInteger.Parse(nSplit[1]);\n\
    \        var result = xNum * nDen * nNum * xDen;\n        return result % (xDen\
    \ * nDen) == 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var numerator\
    \ = xNumerator * nDenominator;\n        var denominator = xDenominator * nNumerator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        numerator /= gcd;\n        denominator /= gcd;\n        return numerator\
    \ % denominator == 0;", "        var xParts = x.Split('/');\n        var nParts\
    \ = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n   \
    \     var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var xFraction = xNumerator / xDenominator;\n        var nFraction = nNumerator\
    \ / nDenominator;\n        var result = xFraction * nFraction;\n        return\
    \ result % 1 == 0;", "        var xSplit = x.Split('/');\n        var nSplit =\
    \ n.Split('/');\n        var xNumerator = BigInteger.Parse(xSplit[0]);\n     \
    \   var xDenominator = BigInteger.Parse(xSplit[1]);\n        var nNumerator =\
    \ BigInteger.Parse(nSplit[0]);\n        var nDenominator = BigInteger.Parse(nSplit[1]);\n\
    \        var product = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(product,\
    \ denominator);\n        return denominator / gcd == 1;", "        var x_numerator\
    \ = BigInteger.Parse(x.Split('/')[0]);\n        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n\
    \        var n_numerator = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator\
    \ = BigInteger.Parse(n.Split('/')[1]);\n        var result = x_numerator * n_numerator;\n\
    \        var result_denominator = x_denominator * n_denominator;\n        return\
    \ result % result_denominator == 0;", "        var xSplit = x.Split('/');\n  \
    \      var nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n\
    \        var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var xNumN = xNum * nDen;\n\
    \        var xDenN = xDen * nNum;\n        return xNumN % xDenN == 0;", "    \
    \    var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n        var x_denominator\
    \ = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator = BigInteger.Parse(n.Split('/')[0]);\n\
    \        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n        var result\
    \ = x_numerator * n_numerator;\n        var result_denominator = x_denominator\
    \ * n_denominator;\n        return result % result_denominator == 0;", "     \
    \   var xParts = x.Split('/');\n        var nParts = n.Split('/');\n        var\
    \ xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var product = (xNumerator * nNumerator)\
    \ / (xDenominator * nDenominator);\n        return product % 1 == 0;", "     \
    \   var x_split = x.Split('/');\n        var n_split = n.Split('/');\n       \
    \ var x_num = BigInteger.Parse(x_split[0]);\n        var x_den = BigInteger.Parse(x_split[1]);\n\
    \        var n_num = BigInteger.Parse(n_split[0]);\n        var n_den = BigInteger.Parse(n_split[1]);\n\
    \        var x_num_n_den = x_num * n_den;\n        var n_num_x_den = n_num * x_den;\n\
    \        var x_den_n_den = x_den * n_den;\n        if (x_num_n_den % x_den_n_den\
    \ == 0) {\n            return true;\n        }\n        return false;", "    \
    \    var xParts = x.Split('/');\n        var nParts = n.Split('/');\n        var\
    \ xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var result = xNumerator * nDenominator\
    \ * nNumerator * xDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result,\
    \ xDenominator * nDenominator);\n        return result % gcd == 0;", "       \
    \ var xParts = x.Split('/');\n        var nParts = n.Split('/');\n        var\
    \ xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var result = xNumerator * nDenominator\
    \ * nNumerator * xDenominator;\n        return result % (xDenominator * nDenominator)\
    \ == 0;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n    \
    \    var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result = (x_numerator * n_numerator) / (x_denominator * n_denominator);\n\
    \        return result % 1 == 0;"]
stop_tokens:
- "\n    }\n"

language: cs
name: HumanEval_86_anti_shuffle
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string[] newWords = new string[words.Length];\n
    \       for (int i = 0; i < words.Length; i++) {\n            char[] chars = words[i].ToCharArray();\n
    \           Array.Sort(chars);\n            newWords[i] = new string(chars);\n
    \       }\n        return string.Join(\" \", newWords);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800339
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code goes here.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f7903c53a76744f085c82750d55bdfd4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f7903c53a76744f085c82750d55bdfd4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code goes here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a3198c9f4d474449925be360dcaae719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a3198c9f4d474449925be360dcaae719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800212
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            char[] chars = word.ToCharArray();\n            Array.Sort(chars);\n
    \           result += new string(chars) + \" \";\n        }\n        return result.Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c7b966bc1b32437082ba93bb5debcbe9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c7b966bc1b32437082ba93bb5debcbe9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        var words
    = s.Split(' ');\n        var result = new StringBuilder();\n        foreach (var
    word in words) {\n            result.Append(new string(word.OrderBy(c => c).ToArray()));\n
    \           result.Append(' ');\n        }\n        return result.ToString().Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800339
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            char[] chars = word.ToCharArray();\n            Array.Sort(chars);\n
    \           result += new string(chars) + \" \";\n        }\n        return result.Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            char[] chars = word.ToCharArray();\n            Array.Sort(chars);\n
    \           result += new string(chars) + \" \";\n        }\n        return result.Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c7b966bc1b32437082ba93bb5debcbe9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c7b966bc1b32437082ba93bb5debcbe9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code goes here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            char[] chars = word.ToCharArray();\n            Array.Sort(chars);\n
    \           result += new string(chars) + \" \";\n        }\n        return result.Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return null;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0000b] in <e46bbc37686a4b8ca5a5b94075877c57>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0000b] in <e46bbc37686a4b8ca5a5b94075877c57>:0
    \n"
  stdout: ''
  timestamp: 1659800212
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            char[] chars = word.ToCharArray();\n            Array.Sort(chars);\n
    \           result += new string(chars) + \" \";\n        }\n        return result.Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            char[] chars = word.ToCharArray();\n            Array.Sort(chars);\n
    \           result += new string(chars) + \" \";\n        }\n        return result.Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            char[] chars = word.ToCharArray();\n            Array.Sort(chars);\n
    \           result += new string(chars) + \" \";\n        }\n        return result.Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string[] newWords = new string[words.Length];\n
    \       for (int i = 0; i < words.Length; i++) {\n            newWords[i] = String.Concat(words[i].OrderBy(c
    => c));\n        }\n        return String.Join(\" \", newWords);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800339
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return null;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0000b] in <e46bbc37686a4b8ca5a5b94075877c57>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0000b] in <e46bbc37686a4b8ca5a5b94075877c57>:0
    \n"
  stdout: ''
  timestamp: 1659800212
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code goes here\n        return s;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d62dc27550a9468696c7151e80655ea6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d62dc27550a9468696c7151e80655ea6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800339
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            char[] chars = word.ToCharArray();\n            Array.Sort(chars);\n
    \           result += new string(chars) + \" \";\n        }\n        return result.Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function.\n        return \"\";\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <909b91ffa913412581029479c0c58583>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <909b91ffa913412581029479c0c58583>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800339
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function.\n        return \"\";\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <909b91ffa913412581029479c0c58583>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <909b91ffa913412581029479c0c58583>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800339
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        var words
    = s.Split(' ');\n        var sb = new StringBuilder();\n        foreach (var word
    in words) {\n            var chars = word.ToCharArray();\n            Array.Sort(chars);\n
    \           sb.Append(new string(chars));\n            sb.Append(' ');\n        }\n
    \       return sb.ToString().Trim();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800339
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return null;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0000b] in <e46bbc37686a4b8ca5a5b94075877c57>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0000b] in <e46bbc37686a4b8ca5a5b94075877c57>:0
    \n"
  stdout: ''
  timestamp: 1659800212
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code goes here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string[] newWords = new string[words.Length];\n
    \       for (int i = 0; i < words.Length; i++) {\n            char[] chars = words[i].ToCharArray();\n
    \           Array.Sort(chars);\n            newWords[i] = new string(chars);\n
    \       }\n        return string.Join(\" \", newWords);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800339
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code goes here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string[] newWords = new string[words.Length];\n
    \       for (int i = 0; i < words.Length; i++) {\n            newWords[i] = new
    string(words[i].OrderBy(c => c).ToArray());\n        }\n        return string.Join(\"
    \", newWords);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39f9edfefbea40608ffd4eca340557d4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39f9edfefbea40608ffd4eca340557d4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            char[] chars = word.ToCharArray();\n            Array.Sort(chars);\n
    \           result += new string(chars) + \" \";\n        }\n        return result.Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function.\n        return \"\";\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <909b91ffa913412581029479c0c58583>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <909b91ffa913412581029479c0c58583>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800339
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            char[] chars = word.ToCharArray();\n            Array.Sort(chars);\n
    \           result += new string(chars) + \" \";\n        }\n        return result.Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            char[] chars = word.ToCharArray();\n            Array.Sort(chars);\n
    \           result += new string(chars) + \" \";\n        }\n        return result.Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement me!\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e5e5ce38df904592ae4e359776f56d9a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e5e5ce38df904592ae4e359776f56d9a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800339
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            char[] chars = word.ToCharArray();\n            Array.Sort(chars);\n
    \           result += new string(chars) + \" \";\n        }\n        return result.Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Write your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ffb4dc0d87164747bb3110aa99770a9a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ffb4dc0d87164747bb3110aa99770a9a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement your solution here\n        return \"\";\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5bbd0ef0072b401e86439c5293662d12>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5bbd0ef0072b401e86439c5293662d12>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            char[] chars = word.ToCharArray();\n            Array.Sort(chars);\n
    \           result += new string(chars) + \" \";\n        }\n        return result.Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        for (int i = 0;
    i < words.Length; i++) {\n            result += new string(words[i].OrderBy(c
    => c).ToArray());\n            if (i != words.Length - 1) {\n                result
    += \" \";\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800339
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return null;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0000b] in <e46bbc37686a4b8ca5a5b94075877c57>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0000b] in <e46bbc37686a4b8ca5a5b94075877c57>:0
    \n"
  stdout: ''
  timestamp: 1659800212
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            char[]
    chars = words[i].ToCharArray();\n            Array.Sort(chars);\n            words[i]
    = new string(chars);\n        }\n        return string.Join(\" \", words);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800339
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code goes here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code goes here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a3198c9f4d474449925be360dcaae719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a3198c9f4d474449925be360dcaae719>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800212
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code goes here.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f7903c53a76744f085c82750d55bdfd4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f7903c53a76744f085c82750d55bdfd4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return s;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b97de36d3d914a75904e3f4b316ebc0f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b97de36d3d914a75904e3f4b316ebc0f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code goes here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string[] newWords = new string[words.Length];\n
    \       for (int i = 0; i < words.Length; i++) {\n            newWords[i] = new
    string(words[i].OrderBy(c => c).ToArray());\n        }\n        return string.Join(\"
    \", newWords);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code goes here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code goes here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += String.Concat(word.OrderBy(c => c)) +
    \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // your
    code goes here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <482c05aa1d1d4c649094a5af3c1bc256>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <482c05aa1d1d4c649094a5af3c1bc256>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800339
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code goes here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39f9edfefbea40608ffd4eca340557d4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39f9edfefbea40608ffd4eca340557d4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function.\n        return \"\";\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <909b91ffa913412581029479c0c58583>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <909b91ffa913412581029479c0c58583>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800339
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code goes here.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f7903c53a76744f085c82750d55bdfd4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f7903c53a76744f085c82750d55bdfd4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            char[] chars = word.ToCharArray();\n            Array.Sort(chars);\n
    \           result += new string(chars) + \" \";\n        }\n        return result.Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c7b966bc1b32437082ba93bb5debcbe9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c7b966bc1b32437082ba93bb5debcbe9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            char[] chars = word.ToCharArray();\n            Array.Sort(chars);\n
    \           result += new string(chars) + \" \";\n        }\n        return result.Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function.\n        return \"\";\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <909b91ffa913412581029479c0c58583>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <909b91ffa913412581029479c0c58583>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800339
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function.\n        return \"\";\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <909b91ffa913412581029479c0c58583>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <909b91ffa913412581029479c0c58583>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800339
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function.\n        return \"\";\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <909b91ffa913412581029479c0c58583>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <909b91ffa913412581029479c0c58583>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800339
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            char[] chars = word.ToCharArray();\n            Array.Sort(chars);\n
    \           result += new string(chars) + \" \";\n        }\n        return result.Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            words[i]
    = new string(words[i].OrderBy(c => c).ToArray());\n        }\n        return string.Join(\"
    \", words);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800339
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += String.Concat(word.OrderBy(c => c)) +
    \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code goes here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            char[] chars = word.ToCharArray();\n            Array.Sort(chars);\n
    \           result += new string(chars) + \" \";\n        }\n        return result.Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0000b] in <e4365d2c7d3d4cb8a94d83017cf4deaf>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0000b] in <e4365d2c7d3d4cb8a94d83017cf4deaf>:0
    \n"
  stdout: ''
  timestamp: 1659800339
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return null;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0000b] in <e46bbc37686a4b8ca5a5b94075877c57>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0000b] in <e46bbc37686a4b8ca5a5b94075877c57>:0
    \n"
  stdout: ''
  timestamp: 1659800212
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code goes here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b54a5b689d614c408adf0261b16151cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string[] sortedWords = new string[words.Length];\n
    \       for (int i = 0; i < words.Length; i++) {\n            sortedWords[i] =
    String.Concat(words[i].OrderBy(c => c));\n        }\n        return String.Join(\"
    \", sortedWords);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800339
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            char[] chars = word.ToCharArray();\n            Array.Sort(chars);\n
    \           result += new string(chars) + \" \";\n        }\n        return result.Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f38019ab5c544ec5862776fefed88c65>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Write
    your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c0cc5e3a574f0fb94257182ed1a3e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            char[] chars = word.ToCharArray();\n            Array.Sort(chars);\n
    \           result += new string(chars) + \" \";\n        }\n        return result.Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // Your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n
    \   Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n
    \   Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n
    \   Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi.
    My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot
    How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <12594a7752d54d728d062f3b4294dd14>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            result += new string(word.OrderBy(c => c).ToArray())
    + \" \";\n        }\n        return result.Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        // TODO:
    Implement this function.\n        return \"\";\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <909b91ffa913412581029479c0c58583>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <909b91ffa913412581029479c0c58583>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800339
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes a string and returns an ordered
    version of it.\n    // Ordered version of string, is a string where all words
    (separated by space)\n    // are replaced by a new word where all the characters
    arranged in\n    // ascending order based on ascii value.\n    // Note: You should
    keep the order of words and blank spaces in the sentence.\n    // For example:\n
    \   // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"hello\"))\n
    \   // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n    // (\"Hello
    !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n        string[]
    words = s.Split(' ');\n        string result = \"\";\n        foreach (string
    word in words) {\n            char[] chars = word.ToCharArray();\n            Array.Sort(chars);\n
    \           result += new string(chars) + \" \";\n        }\n        return result.Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n
    \   Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n
    \   Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello
    World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n
    \   Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi
    My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800211

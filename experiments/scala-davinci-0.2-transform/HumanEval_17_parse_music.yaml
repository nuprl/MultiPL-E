name: HumanEval_17_parse_music
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Input to this function is a string representing musical notes in a special\
  \ ASCII format.\n    // Your task is to parse this string and return list of integers\
  \ corresponding to how many beats does each\n    // not last.\n    // Here is a\
  \ legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|' - half note, lasts\
  \ two beats\n    // '.|' - quater note, lasts one beat\n    // >>> parseMusic((\"\
  o o| .| o| o| .| .| .| .| o o\"))\n    // (List[Long](4l.toLong, 2l.toLong, 1l.toLong,\
  \ 2l.toLong, 2l.toLong, 1l.toLong, 1l.toLong, 1l.toLong, 1l.toLong, 4l.toLong, 4l.toLong))\n\
  \    def parseMusic(music_string : String) : List[Long] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(parseMusic((\"\"\
  )).equals((List[Long]())));\n    assert(parseMusic((\"o o o o\")).equals((List[Long](4l.toLong,\
  \ 4l.toLong, 4l.toLong, 4l.toLong))));\n    assert(parseMusic((\".| .| .| .|\")).equals((List[Long](1l.toLong,\
  \ 1l.toLong, 1l.toLong, 1l.toLong))));\n    assert(parseMusic((\"o| o| .| .| o o\
  \ o o\")).equals((List[Long](2l.toLong, 2l.toLong, 1l.toLong, 1l.toLong, 4l.toLong,\
  \ 4l.toLong, 4l.toLong, 4l.toLong))));\n    assert(parseMusic((\"o| .| o| .| o o|\
  \ o o|\")).equals((List[Long](2l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 4l.toLong,\
  \ 2l.toLong, 4l.toLong, 2l.toLong))));\n    }\n\n}\n"
completions: ["        val beats = ListBuffer[Long]()\n        for (c <- music_string)\
    \ {\n            if (c == 'o') beats += 4\n            else if (c == '|') beats\
    \ += 2\n            else if (c == '.') beats += 1\n        }\n        beats.toList",
  "        val beats = ListBuffer[Long]()\n        for (i <- 0 until music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    beats += 2\n         \
    \           i += 1\n                } else {\n                    beats += 4\n\
    \                }\n            } else if (music_string(i) == '.') {\n       \
    \         beats += 1\n            }\n        }\n        beats.toList", "     \
    \   val beats = ListBuffer[Long]()\n        for (i <- 0 until music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    beats += 2\n         \
    \           i += 1\n                } else {\n                    beats += 4\n\
    \                }\n            } else if (music_string(i) == '.') {\n       \
    \         beats += 1\n            }\n        }\n        beats.toList", "     \
    \   // Write your code here\n        val notes = music_string.split(\" \")\n \
    \       var beats = List[Long]()\n        for (note <- notes) {\n            if\
    \ (note.equals(\"o\")) {\n                beats = beats :+ 4\n            } else\
    \ if (note.equals(\"o|\")) {\n                beats = beats :+ 2\n           \
    \ } else if (note.equals(\".|\")) {\n                beats = beats :+ 1\n    \
    \        }\n        }\n        beats", "        val beats = ListBuffer[Long]()\n\
    \        for (c <- music_string) {\n            c match {\n                case\
    \ 'o' => beats += 4\n                case '|' => beats += 2\n                case\
    \ '.' => beats += 1\n                case _ =>\n            }\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        var\
    \ beats = List[Long]()\n        for (note <- notes) {\n            if (note ==\
    \ \"o\") beats = beats :+ 4\n            else if (note == \"o|\") beats = beats\
    \ :+ 2\n            else if (note == \".|\") beats = beats :+ 1\n        }\n \
    \       beats", "        val beats = ListBuffer[Long]()\n        val notes = music_string.split(\"\
    \ \")\n        for (note <- notes) {\n            if (note == \"o\") beats +=\
    \ 4\n            else if (note == \"o|\") beats += 2\n            else if (note\
    \ == \".|\") beats += 1\n        }\n        beats.toList", "        val notes\
    \ = music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n      \
    \  for (note <- notes) {\n            if (note == \"o\") beats += 4\n        \
    \    else if (note == \"o|\") beats += 2\n            else if (note == \".|\"\
    ) beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val beats = ListBuffer[Long]()\n        for (i <-\
    \ 0 until music_string.length) {\n            if (music_string(i) == 'o') {\n\
    \                if (i + 1 < music_string.length && music_string(i + 1) == '|')\
    \ {\n                    beats += 2\n                    i += 1\n            \
    \    } else {\n                    beats += 4\n                }\n           \
    \ } else if (music_string(i) == '.') {\n                beats += 1\n         \
    \   }\n        }\n        beats.toList", "        return music_string.split(\"\
    \ \").map(x => x match {\n            case \"o\" => 4\n            case \"o|\"\
    \ => 2\n            case \".|\" => 1\n        }).toList", "        val notes =\
    \ music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n        for\
    \ (note <- notes) {\n            note match {\n                case \"o\" => beats\
    \ += 4\n                case \"o|\" => beats += 2\n                case \".|\"\
    \ => beats += 1\n            }\n        }\n        beats.toList", "        val\
    \ notes = music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        var result = List[Long]()\n\
    \        var i = 0\n        while (i < music_string.length) {\n            if\
    \ (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    result = result :+ 2\n\
    \                    i += 2\n                } else {\n                    result\
    \ = result :+ 4\n                    i += 1\n                }\n            }\
    \ else {\n                result = result :+ 1\n                i += 2\n     \
    \       }\n        }\n        result", "        val beats = ListBuffer[Long]()\n\
    \        for (i <- 0 until music_string.length) {\n            if (music_string(i)\
    \ == 'o') {\n                beats += 4\n            } else if (music_string(i)\
    \ == '|') {\n                beats += 2\n            } else if (music_string(i)\
    \ == '.') {\n                beats += 1\n            }\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ArrayBuffer[Long]\n        for (note <- notes)\
    \ {\n            if (note == \"o\") beats += 4\n            else if (note == \"\
    o|\") beats += 2\n            else if (note == \".|\") beats += 1\n        }\n\
    \        beats.toList", "        val notes = music_string.split(\" \")\n     \
    \   val beats = new ListBuffer[Long]\n        for (note <- notes) {\n        \
    \    if (note == \"o\") beats += 4\n            else if (note == \"o|\") beats\
    \ += 2\n            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val beats = new ListBuffer[Long]\n        var i = 0\n        while (i <\
    \ music_string.length) {\n            if (music_string(i) == 'o') {\n        \
    \        if (i + 1 < music_string.length && music_string(i + 1) == '|') {\n  \
    \                  beats += 2\n                    i += 2\n                } else\
    \ {\n                    beats += 4\n                    i += 1\n            \
    \    }\n            } else {\n                beats += 1\n                i +=\
    \ 2\n            }\n        }\n        beats.toList", "        // TODO: Implement\
    \ this function.\n        var result = List[Long]()\n        var temp = \"\"\n\
    \        for (i <- 0 until music_string.length) {\n            if (music_string(i)\
    \ == ' ') {\n                if (temp == \"o\") {\n                    result\
    \ = result :+ 4\n                } else if (temp == \"o|\") {\n              \
    \      result = result :+ 2\n                } else if (temp == \".|\") {\n  \
    \                  result = result :+ 1\n                }\n                temp\
    \ = \"\"\n            } else {\n                temp = temp + music_string(i)\n\
    \            }\n        }\n        if (temp == \"o\") {\n            result =\
    \ result :+ 4\n        } else if (temp == \"o|\") {\n            result = result\
    \ :+ 2\n        } else if (temp == \".|\") {\n            result = result :+ 1\n\
    \        }\n        result"]
stop_tokens:
- "\n    }\n"

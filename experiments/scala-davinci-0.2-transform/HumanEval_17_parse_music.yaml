name: HumanEval_17_parse_music
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Input to this function is a string representing musical notes in a special\
  \ ASCII format.\n    // Your task is to parse this string and return list of integers\
  \ corresponding to how many beats does each\n    // not last.\n    // Here is a\
  \ legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|' - half note, lasts\
  \ two beats\n    // '.|' - quater note, lasts one beat\n    // >>> parseMusic((\"\
  o o| .| o| o| .| .| .| .| o o\"))\n    // (List[Long](4l.toLong, 2l.toLong, 1l.toLong,\
  \ 2l.toLong, 2l.toLong, 1l.toLong, 1l.toLong, 1l.toLong, 1l.toLong, 4l.toLong, 4l.toLong))\n\
  \    def parseMusic(music_string : String) : List[Long] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(parseMusic((\"\"\
  )).equals((List[Long]())));\n    assert(parseMusic((\"o o o o\")).equals((List[Long](4l.toLong,\
  \ 4l.toLong, 4l.toLong, 4l.toLong))));\n    assert(parseMusic((\".| .| .| .|\")).equals((List[Long](1l.toLong,\
  \ 1l.toLong, 1l.toLong, 1l.toLong))));\n    assert(parseMusic((\"o| o| .| .| o o\
  \ o o\")).equals((List[Long](2l.toLong, 2l.toLong, 1l.toLong, 1l.toLong, 4l.toLong,\
  \ 4l.toLong, 4l.toLong, 4l.toLong))));\n    assert(parseMusic((\"o| .| o| .| o o|\
  \ o o|\")).equals((List[Long](2l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 4l.toLong,\
  \ 2l.toLong, 4l.toLong, 2l.toLong))));\n    }\n\n}\n"
completions: ["        val beats = ListBuffer[Long]()\n        for (c <- music_string)\
    \ {\n            if (c == 'o') beats += 4\n            else if (c == '|') beats\
    \ += 2\n            else if (c == '.') beats += 1\n        }\n        beats.toList",
  "        val beats = ListBuffer[Long]()\n        for (i <- 0 until music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    beats += 2\n         \
    \           i += 1\n                } else {\n                    beats += 4\n\
    \                }\n            } else if (music_string(i) == '.') {\n       \
    \         beats += 1\n            }\n        }\n        beats.toList", "     \
    \   val beats = ListBuffer[Long]()\n        for (i <- 0 until music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    beats += 2\n         \
    \           i += 1\n                } else {\n                    beats += 4\n\
    \                }\n            } else if (music_string(i) == '.') {\n       \
    \         beats += 1\n            }\n        }\n        beats.toList", "     \
    \   // Write your code here\n        val notes = music_string.split(\" \")\n \
    \       var beats = List[Long]()\n        for (note <- notes) {\n            if\
    \ (note.equals(\"o\")) {\n                beats = beats :+ 4\n            } else\
    \ if (note.equals(\"o|\")) {\n                beats = beats :+ 2\n           \
    \ } else if (note.equals(\".|\")) {\n                beats = beats :+ 1\n    \
    \        }\n        }\n        beats", "        val beats = ListBuffer[Long]()\n\
    \        for (c <- music_string) {\n            c match {\n                case\
    \ 'o' => beats += 4\n                case '|' => beats += 2\n                case\
    \ '.' => beats += 1\n                case _ =>\n            }\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        var\
    \ beats = List[Long]()\n        for (note <- notes) {\n            if (note ==\
    \ \"o\") beats = beats :+ 4\n            else if (note == \"o|\") beats = beats\
    \ :+ 2\n            else if (note == \".|\") beats = beats :+ 1\n        }\n \
    \       beats", "        val beats = ListBuffer[Long]()\n        val notes = music_string.split(\"\
    \ \")\n        for (note <- notes) {\n            if (note == \"o\") beats +=\
    \ 4\n            else if (note == \"o|\") beats += 2\n            else if (note\
    \ == \".|\") beats += 1\n        }\n        beats.toList", "        val notes\
    \ = music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n      \
    \  for (note <- notes) {\n            if (note == \"o\") beats += 4\n        \
    \    else if (note == \"o|\") beats += 2\n            else if (note == \".|\"\
    ) beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val beats = ListBuffer[Long]()\n        for (i <-\
    \ 0 until music_string.length) {\n            if (music_string(i) == 'o') {\n\
    \                if (i + 1 < music_string.length && music_string(i + 1) == '|')\
    \ {\n                    beats += 2\n                    i += 1\n            \
    \    } else {\n                    beats += 4\n                }\n           \
    \ } else if (music_string(i) == '.') {\n                beats += 1\n         \
    \   }\n        }\n        beats.toList", "        return music_string.split(\"\
    \ \").map(x => x match {\n            case \"o\" => 4\n            case \"o|\"\
    \ => 2\n            case \".|\" => 1\n        }).toList", "        val notes =\
    \ music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n        for\
    \ (note <- notes) {\n            note match {\n                case \"o\" => beats\
    \ += 4\n                case \"o|\" => beats += 2\n                case \".|\"\
    \ => beats += 1\n            }\n        }\n        beats.toList", "        val\
    \ notes = music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        var result = List[Long]()\n\
    \        var i = 0\n        while (i < music_string.length) {\n            if\
    \ (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    result = result :+ 2\n\
    \                    i += 2\n                } else {\n                    result\
    \ = result :+ 4\n                    i += 1\n                }\n            }\
    \ else {\n                result = result :+ 1\n                i += 2\n     \
    \       }\n        }\n        result", "        val beats = ListBuffer[Long]()\n\
    \        for (i <- 0 until music_string.length) {\n            if (music_string(i)\
    \ == 'o') {\n                beats += 4\n            } else if (music_string(i)\
    \ == '|') {\n                beats += 2\n            } else if (music_string(i)\
    \ == '.') {\n                beats += 1\n            }\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ArrayBuffer[Long]\n        for (note <- notes)\
    \ {\n            if (note == \"o\") beats += 4\n            else if (note == \"\
    o|\") beats += 2\n            else if (note == \".|\") beats += 1\n        }\n\
    \        beats.toList", "        val notes = music_string.split(\" \")\n     \
    \   val beats = new ListBuffer[Long]\n        for (note <- notes) {\n        \
    \    if (note == \"o\") beats += 4\n            else if (note == \"o|\") beats\
    \ += 2\n            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val beats = new ListBuffer[Long]\n        var i = 0\n        while (i <\
    \ music_string.length) {\n            if (music_string(i) == 'o') {\n        \
    \        if (i + 1 < music_string.length && music_string(i + 1) == '|') {\n  \
    \                  beats += 2\n                    i += 2\n                } else\
    \ {\n                    beats += 4\n                    i += 1\n            \
    \    }\n            } else {\n                beats += 1\n                i +=\
    \ 2\n            }\n        }\n        beats.toList", "        // TODO: Implement\
    \ this function.\n        var result = List[Long]()\n        var temp = \"\"\n\
    \        for (i <- 0 until music_string.length) {\n            if (music_string(i)\
    \ == ' ') {\n                if (temp == \"o\") {\n                    result\
    \ = result :+ 4\n                } else if (temp == \"o|\") {\n              \
    \      result = result :+ 2\n                } else if (temp == \".|\") {\n  \
    \                  result = result :+ 1\n                }\n                temp\
    \ = \"\"\n            } else {\n                temp = temp + music_string(i)\n\
    \            }\n        }\n        if (temp == \"o\") {\n            result =\
    \ result :+ 4\n        } else if (temp == \"o|\") {\n            result = result\
    \ :+ 2\n        } else if (temp == \".|\") {\n            result = result :+ 1\n\
    \        }\n        result", "        val notes = music_string.split(\" \").toList\n\
    \        notes.map(note => {\n            if (note == \"o\") 4\n            else\
    \ if (note == \"o|\") 2\n            else 1\n        })", "        val notes =\
    \ music_string.split(\" \")\n        val beats = new ArrayBuffer[Long]\n     \
    \   for (note <- notes) {\n            if (note.equals(\"o\")) beats += 4\n  \
    \          else if (note.equals(\"o|\")) beats += 2\n            else if (note.equals(\"\
    .|\")) beats += 1\n        }\n        beats.toList", "        val beats = ListBuffer[Long]()\n\
    \        val notes = music_string.split(\" \")\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = new ListBuffer[Long]\n        for (note <- notes) {\n            if\
    \ (note.equals(\"o\")) beats += 4\n            else if (note.equals(\"o|\")) beats\
    \ += 2\n            else if (note.equals(\".|\")) beats += 1\n        }\n    \
    \    beats.toList", "        val beats = ListBuffer[Long]()\n        for (i <-\
    \ 0 until music_string.length) {\n            if (music_string(i) == 'o') {\n\
    \                if (i + 1 < music_string.length && music_string(i + 1) == '|')\
    \ {\n                    beats += 2\n                    i += 1\n            \
    \    } else {\n                    beats += 4\n                }\n           \
    \ } else if (music_string(i) == '.') {\n                beats += 1\n         \
    \   }\n        }\n        beats.toList", "        val beats = ListBuffer[Long]()\n\
    \        for (i <- 0 until music_string.length) {\n            if (music_string(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length && music_string(i\
    \ + 1) == '|') {\n                    beats += 2\n                    i += 1\n\
    \                } else {\n                    beats += 4\n                }\n\
    \            } else if (music_string(i) == '.') {\n                beats += 1\n\
    \            }\n        }\n        beats.toList", "        music_string.split(\"\
    \ \").map(x => x match {\n            case \"o\" => 4\n            case \"o|\"\
    \ => 2\n            case \".|\" => 1\n        }).toList", "        val notes =\
    \ music_string.split(\" \")\n        var result = List[Long]()\n        for (note\
    \ <- notes) {\n            if (note == \"o\") result = result :+ 4\n         \
    \   else if (note == \"o|\") result = result :+ 2\n            else if (note ==\
    \ \".|\") result = result :+ 1\n        }\n        return result", "        var\
    \ result = List[Long]()\n        for (i <- 0 until music_string.length) {\n  \
    \          if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    result = result :+ 2\n\
    \                    i += 1\n                } else {\n                    result\
    \ = result :+ 4\n                }\n            } else if (music_string(i) ==\
    \ '.') {\n                result = result :+ 1\n                i += 1\n     \
    \       }\n        }\n        return result", "        val notes = music_string.split(\"\
    \ \")\n        var beats = List[Long]()\n        for (note <- notes) {\n     \
    \       if (note == \"o\") beats = beats :+ 4\n            else if (note == \"\
    o|\") beats = beats :+ 2\n            else if (note == \".|\") beats = beats :+\
    \ 1\n        }\n        beats", "        val notes = music_string.split(\" \"\
    )\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n \
    \           if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = new ListBuffer[Long]\n        for (note <- notes) {\n            if\
    \ (note == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n\
    \            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        // Write your code here\n        return List[Long]()", "        var result\
    \ = List[Long]()\n        for (i <- 0 until music_string.length) {\n         \
    \   if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    result = result :+ 2\n\
    \                    i += 1\n                } else {\n                    result\
    \ = result :+ 4\n                }\n            } else if (music_string(i) ==\
    \ '.') {\n                result = result :+ 1\n                i += 1\n     \
    \       }\n        }\n        return result", "        val beats = ListBuffer[Long]()\n\
    \        for (i <- 0 until music_string.length) {\n            val c = music_string.charAt(i)\n\
    \            if (c == 'o') {\n                beats += 4\n            } else if\
    \ (c == '|') {\n                beats += 2\n            } else if (c == '.') {\n\
    \                beats += 1\n            }\n        }\n        beats.toList",
  "        // Write your code here\n        val notes = music_string.split(\" \")\n\
    \        val beats = notes.map(note => {\n            if (note == \"o\") 4\n \
    \           else if (note == \"o|\") 2\n            else 1\n        })\n     \
    \   beats.toList", "        val notes = music_string.split(\" \")\n        notes.map(note\
    \ => {\n            note match {\n                case \"o\" => 4l\n         \
    \       case \"o|\" => 2l\n                case \".|\" => 1l\n            }\n\
    \        }).toList", "        val beats = ListBuffer[Long]()\n        for (note\
    \ <- music_string.split(\" \")) {\n            note match {\n                case\
    \ \"o\" => beats += 4\n                case \"o|\" => beats += 2\n           \
    \     case \".|\" => beats += 1\n            }\n        }\n        beats.toList",
  "        val beats = ListBuffer[Long]()\n        for (i <- 0 until music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    beats += 2\n         \
    \           i += 1\n                } else {\n                    beats += 4\n\
    \                }\n            } else if (music_string(i) == '.') {\n       \
    \         beats += 1\n            }\n        }\n        beats.toList", "     \
    \   val notes = music_string.split(\" \")\n        val result = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            if (note == \"o\") result += 4\n \
    \           else if (note == \"o|\") result += 2\n            else if (note ==\
    \ \".|\") result += 1\n        }\n        result.toList", "        val notes =\
    \ music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n        for\
    \ (note <- notes) {\n            if (note == \"o\") beats += 4\n            else\
    \ if (note == \"o|\") beats += 2\n            else if (note == \".|\") beats +=\
    \ 1\n        }\n        beats.toList", "        // Write your code here\n    \
    \    null", "        var result = List[Long]()\n        for (i <- 0 until music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    result = result :+ 2\n\
    \                    i += 1\n                } else {\n                    result\
    \ = result :+ 4\n                }\n            } else if (music_string(i) ==\
    \ '.') {\n                if (i + 1 < music_string.length && music_string(i +\
    \ 1) == '|') {\n                    result = result :+ 1\n                   \
    \ i += 1\n                }\n            }\n        }\n        result", "    \
    \    val notes = music_string.split(\" \")\n        notes.map(note => {\n    \
    \        if (note == \"o\") 4\n            else if (note == \"o|\") 2\n      \
    \      else 1\n        }).toList", "        val result = new ListBuffer[Long]\n\
    \        var i = 0\n        while (i < music_string.length) {\n            if\
    \ (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    result += 2\n        \
    \            i += 2\n                } else {\n                    result += 4\n\
    \                    i += 1\n                }\n            } else {\n       \
    \         result += 1\n                i += 2\n            }\n        }\n    \
    \    result.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = notes.map(note => {\n            if (note == \"o\") 4\n            else\
    \ if (note == \"o|\") 2\n            else 1\n        })\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            note match {\n                case\
    \ \"o\" => beats += 4\n                case \"o|\" => beats += 2\n           \
    \     case \".|\" => beats += 1\n            }\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        var beats = List[Long]()\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats = beats :+\
    \ 4\n            else if (note == \"o|\") beats = beats :+ 2\n            else\
    \ if (note == \".|\") beats = beats :+ 1\n        }\n        beats", "       \
    \ // Write your code here\n        var list = List[Long]()\n        var i = 0\n\
    \        while (i < music_string.length()) {\n            if (music_string.charAt(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length() && music_string.charAt(i\
    \ + 1) == '|') {\n                    list = list :+ 2\n                    i\
    \ += 2\n                } else {\n                    list = list :+ 4\n     \
    \               i += 1\n                }\n            } else {\n            \
    \    list = list :+ 1\n                i += 2\n            }\n        }\n    \
    \    list", "        val notes = music_string.split(\" \")\n        val beats\
    \ = new ListBuffer[Long]\n        for (note <- notes) {\n            if (note\
    \ == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n    \
    \        else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val beats = new ListBuffer[Long]\n        var i = 0\n        while (i <\
    \ music_string.length) {\n            if (music_string(i) == 'o') {\n        \
    \        if (i + 1 < music_string.length && music_string(i + 1) == '|') {\n  \
    \                  beats += 2\n                    i += 2\n                } else\
    \ {\n                    beats += 4\n                    i += 1\n            \
    \    }\n            } else {\n                beats += 1\n                i +=\
    \ 2\n            }\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        var\
    \ beats = List[Long]()\n        for (note <- notes) {\n            if (note ==\
    \ \"o\") beats = beats :+ 4\n            else if (note == \"o|\") beats = beats\
    \ :+ 2\n            else if (note == \".|\") beats = beats :+ 1\n        }\n \
    \       beats", "        val notes = music_string.split(\" \")\n        notes.map(note\
    \ => {\n            if (note == \"o\") 4\n            else if (note == \"o|\"\
    ) 2\n            else 1\n        }).toList", "        val result = new ListBuffer[Long]()\n\
    \        val notes = music_string.split(\" \")\n        for (note <- notes) {\n\
    \            if (note == \"o\") result += 4\n            else if (note == \"o|\"\
    ) result += 2\n            else if (note == \".|\") result += 1\n        }\n \
    \       result.toList", "        // Write your code here\n        return List[Long]()",
  "        return music_string.split(\" \").map(x => x match {\n            case \"\
    o\" => 4l\n            case \"o|\" => 2l\n            case \".|\" => 1l\n    \
    \    }).toList", "        val notes = music_string.split(\" \")\n        val beats\
    \ = new ListBuffer[Long]\n        for (note <- notes) {\n            note match\
    \ {\n                case \"o\" => beats += 4\n                case \"o|\" =>\
    \ beats += 2\n                case \".|\" => beats += 1\n            }\n     \
    \   }\n        beats.toList", "        val notes = music_string.split(\" \").toList\n\
    \        val beats = notes.map(note => note match {\n            case \"o\" =>\
    \ 4l\n            case \"o|\" => 2l\n            case \".|\" => 1l\n        })\n\
    \        beats", "        val notes = music_string.split(\" \")\n        val beats\
    \ = new ListBuffer[Long]\n        for (note <- notes) {\n            if (note\
    \ == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n    \
    \        else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        music_string.split(\"\
    \ \").map(x => x match {\n            case \"o\" => 4l\n            case \"o|\"\
    \ => 2l\n            case \".|\" => 1l\n        }).toList", "        // Write\
    \ your code here\n        val notes = music_string.split(\" \")\n        val beats\
    \ = new ListBuffer[Long]\n        for (note <- notes) {\n            if (note\
    \ == \"o\") {\n                beats += 4\n            } else if (note == \"o|\"\
    ) {\n                beats += 2\n            } else if (note == \".|\") {\n  \
    \              beats += 1\n            }\n        }\n        beats.toList", " \
    \       // Implement this function\n        return List[Long]()", "        val\
    \ beats = music_string.split(\" \").map(x => x match {\n            case \"o\"\
    \ => 4\n            case \"o|\" => 2\n            case \".|\" => 1\n        }).toList\n\
    \        beats", "        val notes = music_string.split(\" \")\n        val beats\
    \ = new ListBuffer[Long]\n        for (note <- notes) {\n            if (note\
    \ == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n    \
    \        else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        var beats = List[Long]()\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats = beats :+\
    \ 4\n            else if (note == \"o|\") beats = beats :+ 2\n            else\
    \ if (note == \".|\") beats = beats :+ 1\n        }\n        beats", "       \
    \ val beats = ListBuffer[Long]()\n        val notes = music_string.split(\" \"\
    )\n        for (note <- notes) {\n            if (note.contains(\"o\")) {\n  \
    \              if (note.contains(\"|\")) beats += 2\n                else beats\
    \ += 4\n            }\n            else beats += 1\n        }\n        beats.toList",
  "        var res = List[Long]()\n        var i = 0\n        while (i < music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    res = 2l :: res\n    \
    \                i += 2\n                } else {\n                    res = 4l\
    \ :: res\n                    i += 1\n                }\n            } else {\n\
    \                res = 1l :: res\n                i += 2\n            }\n    \
    \    }\n        res.reverse", "        var result = List[Long]()\n        var\
    \ i = 0\n        while (i < music_string.length) {\n            if (music_string(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length && music_string(i\
    \ + 1) == '|') {\n                    result = result :+ 2\n                 \
    \   i += 2\n                } else {\n                    result = result :+ 4\n\
    \                    i += 1\n                }\n            } else {\n       \
    \         result = result :+ 1\n                i += 2\n            }\n      \
    \  }\n        result", "        var result = List[Long]()\n        for (i <- 0\
    \ until music_string.length) {\n            if (music_string(i) == 'o') {\n  \
    \              if (i + 1 < music_string.length && music_string(i + 1) == '|')\
    \ {\n                    result = result :+ 2\n                    i += 1\n  \
    \              } else {\n                    result = result :+ 4\n          \
    \      }\n            } else if (music_string(i) == '.') {\n                result\
    \ = result :+ 1\n            }\n        }\n        return result", "        val\
    \ beats = ListBuffer[Long]()\n        val notes = music_string.split(\" \")\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = notes.map(note => {\n            if (note == \"o\") 4l\n           \
    \ else if (note == \"o|\") 2l\n            else 1l\n        })\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        // Write your code\
    \ here\n        val beats = ListBuffer[Long]()\n        var i = 0\n        while\
    \ (i < music_string.length) {\n            if (music_string(i) == 'o') {\n   \
    \             if (i + 1 < music_string.length && music_string(i + 1) == '|') {\n\
    \                    beats += 2\n                    i += 2\n                }\
    \ else {\n                    beats += 4\n                    i += 1\n       \
    \         }\n            } else {\n                beats += 1\n              \
    \  i += 2\n            }\n        }\n        beats.toList", "        // Your code\
    \ goes here\n        var result = List[Long]()\n        var i = 0\n        while\
    \ (i < music_string.length) {\n            if (music_string(i) == 'o') {\n   \
    \             if (i + 1 < music_string.length && music_string(i + 1) == '|') {\n\
    \                    result = result :+ 2\n                    i += 2\n      \
    \          } else {\n                    result = result :+ 4\n              \
    \      i += 1\n                }\n            } else {\n                result\
    \ = result :+ 1\n                i += 2\n            }\n        }\n        result",
  "        // Fill in your code here\n        return List()", "        val notes =\
    \ music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n        for\
    \ (note <- notes) {\n            if (note == \"o\") beats += 4\n            else\
    \ if (note == \"o|\") beats += 2\n            else if (note == \".|\") beats +=\
    \ 1\n        }\n        beats.toList", "        val beats = ListBuffer[Long]()\n\
    \        for (note <- music_string.split(\" \")) {\n            note match {\n\
    \                case \"o\" => beats += 4\n                case \"o|\" => beats\
    \ += 2\n                case \".|\" => beats += 1\n            }\n        }\n\
    \        beats.toList", "        val notes = music_string.split(\" \")\n     \
    \   val beats = new ListBuffer[Long]\n        for (note <- notes) {\n        \
    \    if (note == \"o\") beats += 4\n            else if (note == \"o|\") beats\
    \ += 2\n            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val music = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (i <- 0 until music.length)\
    \ {\n            if (music(i) == \"o\") beats += 4\n            else if (music(i)\
    \ == \"o|\") beats += 2\n            else if (music(i) == \".|\") beats += 1\n\
    \        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        // Write your code here\n        val notes = music_string.split(\"\
    \ \")\n        val beats = ListBuffer[Long]()\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val beats = new ListBuffer[Long]\n        for (note\
    \ <- music_string.split(\" \")) {\n            if (note == \"o\") beats += 4\n\
    \            else if (note == \"o|\") beats += 2\n            else if (note ==\
    \ \".|\") beats += 1\n        }\n        beats.toList", "        val beats = ListBuffer[Long]()\n\
    \        for (i <- 0 until music_string.length) {\n            if (music_string(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length && music_string(i\
    \ + 1) == '|') {\n                    beats += 2\n                    i += 1\n\
    \                } else {\n                    beats += 4\n                }\n\
    \            } else if (music_string(i) == '.') {\n                beats += 1\n\
    \            }\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            note match {\n                case \"o\" => beats += 4\n        \
    \        case \"o|\" => beats += 2\n                case \".|\" => beats += 1\n\
    \            }\n        }\n        beats.toList", "        // Your code here\n\
    \        val beats = music_string.split(\" \")\n        var result = List[Long]()\n\
    \        for (beat <- beats) {\n            if (beat == \"o\") result = result\
    \ :+ 4\n            else if (beat == \"o|\") result = result :+ 2\n          \
    \  else if (beat == \".|\") result = result :+ 1\n        }\n        result",
  "        var result = List[Long]()\n        for (i <- 0 until music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    result = 2 :: result\n\
    \                    i += 1\n                } else {\n                    result\
    \ = 4 :: result\n                }\n            } else if (music_string(i) ==\
    \ '.') {\n                result = 1 :: result\n            }\n        }\n   \
    \     result.reverse", "        val beats = ListBuffer[Long]()\n        for (i\
    \ <- 0 until music_string.length) {\n            if (music_string(i) == 'o') {\n\
    \                if (i + 1 < music_string.length && music_string(i + 1) == '|')\
    \ {\n                    beats += 2\n                    i += 1\n            \
    \    } else {\n                    beats += 4\n                }\n           \
    \ } else if (music_string(i) == '.') {\n                beats += 1\n         \
    \   }\n        }\n        beats.toList", "        // Write your code here\n  \
    \      return null", "        var result = List[Long]()\n        for (i <- 0 until\
    \ music_string.length) {\n            if (music_string(i) == 'o') {\n        \
    \        if (i + 1 < music_string.length && music_string(i + 1) == '|') {\n  \
    \                  result = 2l.toLong :: result\n                    i += 1\n\
    \                } else {\n                    result = 4l.toLong :: result\n\
    \                }\n            } else if (music_string(i) == '.') {\n       \
    \         result = 1l.toLong :: result\n            }\n        }\n        result.reverse",
  "        val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = new ListBuffer[Long]\n        for (note <- notes) {\n            if\
    \ (note == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n\
    \            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        notes.map(note => {\n  \
    \          if (note == \"o\") 4\n            else if (note == \"o|\") 2\n    \
    \        else 1\n        }).toList", "        val beats = ListBuffer[Long]()\n\
    \        for (c <- music_string) {\n            if (c == 'o') beats += 4\n   \
    \         else if (c == '|') beats += 2\n            else if (c == '.') beats\
    \ += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        notes.map(note => {\n            if (note == \"o\") 4\n       \
    \     else if (note == \"o|\") 2\n            else 1\n        }).toList", "  \
    \      val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val beats = ListBuffer[Long]()\n        for (i <-\
    \ 0 until music_string.length) {\n            if (music_string(i) == 'o') {\n\
    \                if (i + 1 < music_string.length && music_string(i + 1) == '|')\
    \ {\n                    beats += 2\n                    i += 1\n            \
    \    } else {\n                    beats += 4\n                }\n           \
    \ } else if (music_string(i) == '.') {\n                beats += 1\n         \
    \   }\n        }\n        beats.toList", "        val beats = ListBuffer[Long]()\n\
    \        for (c <- music_string) {\n            c match {\n                case\
    \ 'o' => beats += 4\n                case 'o' | '|' => beats += 2\n          \
    \      case '.' | '|' => beats += 1\n                case _ =>\n            }\n\
    \        }\n        beats.toList", "        // Your code here\n        val beats\
    \ = ListBuffer[Long]()\n        for (i <- 0 until music_string.length) {\n   \
    \         if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    beats += 2\n         \
    \           i += 1\n                } else {\n                    beats += 4\n\
    \                }\n            } else if (music_string(i) == '.') {\n       \
    \         beats += 1\n            }\n        }\n        beats.toList", "     \
    \   var result = List[Long]()\n        var temp = \"\"\n        for (i <- 0 until\
    \ music_string.length) {\n            if (music_string(i) == ' ') {\n        \
    \        if (temp == \"o\") result = result :+ 4\n                else if (temp\
    \ == \"o|\") result = result :+ 2\n                else if (temp == \".|\") result\
    \ = result :+ 1\n                temp = \"\"\n            }\n            else\
    \ temp = temp + music_string(i)\n        }\n        if (temp == \"o\") result\
    \ = result :+ 4\n        else if (temp == \"o|\") result = result :+ 2\n     \
    \   else if (temp == \".|\") result = result :+ 1\n        result", "        val\
    \ beats = ListBuffer[Long]()\n        for (note <- music_string.split(\" \"))\
    \ {\n            if (note == \"o\") beats += 4\n            else if (note == \"\
    o|\") beats += 2\n            else if (note == \".|\") beats += 1\n        }\n\
    \        beats.toList", "        val notes = music_string.split(\" \")\n     \
    \   val beats = new ListBuffer[Long]\n        for (note <- notes) {\n        \
    \    if (note == \"o\") beats += 4\n            else if (note == \"o|\") beats\
    \ += 2\n            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        var result = List[Long]()\n\
    \        for (i <- 0 until music_string.length) {\n            if (music_string(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length && music_string(i\
    \ + 1) == '|') {\n                    result = result :+ 2\n                 \
    \   i += 1\n                } else {\n                    result = result :+ 4\n\
    \                }\n            } else if (music_string(i) == '.') {\n       \
    \         result = result :+ 1\n            }\n        }\n        return result",
  "        val beats = ListBuffer[Long]()\n        for (note <- music_string.split(\"\
    \ \")) {\n            note match {\n                case \"o\" => beats += 4\n\
    \                case \"o|\" => beats += 2\n                case \".|\" => beats\
    \ += 1\n            }\n        }\n        beats.toList", "        // Write your\
    \ code here\n        return List[Long]()", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        var result = List[Long]()\n        for (i <- 0 until\
    \ music_string.length) {\n            if (music_string(i) == 'o') {\n        \
    \        if (i + 1 < music_string.length && music_string(i + 1) == '|') {\n  \
    \                  result = result :+ 2\n                    i += 1\n        \
    \        } else {\n                    result = result :+ 4\n                }\n\
    \            } else if (music_string(i) == '.') {\n                result = result\
    \ :+ 1\n            }\n        }\n        return result", "        val notes =\
    \ music_string.split(\" \")\n        var beats = List[Long]()\n        for (note\
    \ <- notes) {\n            if (note == \"o\") beats = beats :+ 4\n           \
    \ else if (note == \"o|\") beats = beats :+ 2\n            else if (note == \"\
    .|\") beats = beats :+ 1\n        }\n        beats", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = ListBuffer[Long]()\n        for (note <- notes) {\n            note\
    \ match {\n                case \"o\" => beats += 4\n                case \"o|\"\
    \ => beats += 2\n                case \".|\" => beats += 1\n            }\n  \
    \      }\n        beats.toList", "        val beats = ListBuffer[Long]()\n   \
    \     for (note <- music_string.split(\" \")) {\n            note match {\n  \
    \              case \"o\" => beats += 4\n                case \"o|\" => beats\
    \ += 2\n                case \".|\" => beats += 1\n            }\n        }\n\
    \        beats.toList", "        val notes = music_string.split(\" \")\n     \
    \   val beats = new ListBuffer[Long]\n        for (note <- notes) {\n        \
    \    if (note == \"o\") beats += 4\n            else if (note == \"o|\") beats\
    \ += 2\n            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        music_string.split(\" \").map(x => {\n            if (x == \"o\") 4\n \
    \           else if (x == \"o|\") 2\n            else 1\n        }).toList", " \
    \       val music_string_list = music_string.split(\" \").toList\n        val\
    \ music_list = music_string_list.map(x => {\n            if (x == \"o\") 4\n \
    \           else if (x == \"o|\") 2\n            else if (x == \".|\") 1\n   \
    \         else 0\n        })\n        music_list", "        // Your code here\n\
    \        val notes = music_string.split(\" \")\n        notes.map(note => {\n\
    \            if (note == \"o\") 4\n            else if (note == \"o|\") 2\n  \
    \          else 1\n        }).toList", "        val beats = ListBuffer[Long]()\n\
    \        var i = 0\n        while (i < music_string.length) {\n            if\
    \ (music_string(i) == 'o') {\n                beats += 4\n                i +=\
    \ 1\n            } else if (music_string(i) == '.') {\n                beats +=\
    \ 1\n                i += 2\n            }\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            note match {\n                case\
    \ \"o\" => beats += 4\n                case \"o|\" => beats += 2\n           \
    \     case \".|\" => beats += 1\n            }\n        }\n        beats.toList",
  "        // Your code here\n        val notes = music_string.split(\" \")\n    \
    \    val beats = ListBuffer[Long]()\n        for (note <- notes) {\n         \
    \   if (note == \"o\") beats += 4\n            else if (note == \"o|\") beats\
    \ += 2\n            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        var result = List[Long]()\n\
    \        var current_note = \"\"\n        for (c <- music_string) {\n        \
    \    if (c == ' ') {\n                if (current_note == \"o\") result = result\
    \ :+ 4\n                else if (current_note == \"o|\") result = result :+ 2\n\
    \                else if (current_note == \".|\") result = result :+ 1\n     \
    \           current_note = \"\"\n            } else {\n                current_note\
    \ = current_note + c\n            }\n        }\n        if (current_note == \"\
    o\") result = result :+ 4\n        else if (current_note == \"o|\") result = result\
    \ :+ 2\n        else if (current_note == \".|\") result = result :+ 1\n      \
    \  result", "        val music = music_string.split(\" \")\n        var result\
    \ = List[Long]()\n        for (i <- 0 until music.length) {\n            if (music(i)\
    \ == \"o\") result = result :+ 4\n            else if (music(i) == \"o|\") result\
    \ = result :+ 2\n            else if (music(i) == \".|\") result = result :+ 1\n\
    \        }\n        return result", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val beats = ListBuffer[Long]()\n        for (i <-\
    \ 0 until music_string.length) {\n            if (music_string(i) == 'o') {\n\
    \                if (i + 1 < music_string.length && music_string(i + 1) == '|')\
    \ {\n                    beats += 2\n                    i += 1\n            \
    \    } else {\n                    beats += 4\n                }\n           \
    \ } else if (music_string(i) == '.') {\n                beats += 1\n         \
    \   }\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val beats = ListBuffer[Long]()\n        val notes\
    \ = music_string.split(\" \")\n        for (note <- notes) {\n            if (note\
    \ == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n    \
    \        else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        // Write your code here\n        val beats = ListBuffer[Long]()\n     \
    \   var i = 0\n        while (i < music_string.length) {\n            if (music_string(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length && music_string(i\
    \ + 1) == '|') {\n                    beats += 2\n                    i += 2\n\
    \                } else {\n                    beats += 4\n                  \
    \  i += 1\n                }\n            } else {\n                beats += 1\n\
    \                i += 2\n            }\n        }\n        beats.toList", "  \
    \      // Write your code here\n        // Return list of integers corresponding\
    \ to how many beats does each not last.\n        // Example:\n        // >>> parseMusic((\"\
    o o| .| o| o| .| .| .| .| o o\"))\n        // (List[Long](4l.toLong, 2l.toLong,\
    \ 1l.toLong, 2l.toLong, 2l.toLong, 1l.toLong, 1l.toLong, 1l.toLong, 1l.toLong,\
    \ 4l.toLong, 4l.toLong))\n        val beats = ListBuffer[Long]()\n        music_string.split(\"\
    \ \").foreach(note => {\n            if (note == \"o\") beats += 4\n         \
    \   else if (note == \"o|\") beats += 2\n            else if (note == \".|\")\
    \ beats += 1\n        })\n        beats.toList", "        val beats = ListBuffer[Long]()\n\
    \        for (i <- 0 until music_string.length) {\n            if (music_string(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length && music_string(i\
    \ + 1) == '|') {\n                    beats += 2\n                    i += 1\n\
    \                } else {\n                    beats += 4\n                }\n\
    \            } else if (music_string(i) == '.') {\n                beats += 1\n\
    \            }\n        }\n        beats.toList", "        // Fill in your code\
    \ here\n        return List[Long]()", "        val beats = ListBuffer[Long]()\n\
    \        for (i <- 0 until music_string.length) {\n            if (music_string(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length && music_string(i\
    \ + 1) == '|') {\n                    beats += 2\n                    i += 1\n\
    \                } else {\n                    beats += 4\n                }\n\
    \            } else if (music_string(i) == '.') {\n                beats += 1\n\
    \            }\n        }\n        beats.toList", "        // Your code here\n\
    \        return List(1l.toLong)", "        val notes = music_string.split(\" \"\
    )\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n \
    \           if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = new ListBuffer[Long]\n        for (note <- notes) {\n            if\
    \ (note == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n\
    \            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val beats = ListBuffer[Long]()\n        for (c <- music_string) {\n   \
    \         if (c == 'o') beats += 4\n            else if (c == '|') beats += 1\n\
    \        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \").toList\n        notes.map(note => {\n            if (note == \"o\") 4\n\
    \            else if (note == \"o|\") 2\n            else 1\n        })", "  \
    \      val beats = ListBuffer[Long]()\n        val notes = music_string.split(\"\
    \ \")\n        for (note <- notes) {\n            if (note.contains(\"o\")) {\n\
    \                if (note.length == 1) beats += 4\n                else beats\
    \ += 2\n            }\n            else beats += 1\n        }\n        beats.toList",
  "        val beats = ListBuffer[Long]()\n        for (i <- 0 until music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    beats += 2\n         \
    \           i += 1\n                } else {\n                    beats += 4\n\
    \                }\n            } else if (music_string(i) == '.') {\n       \
    \         beats += 1\n            }\n        }\n        beats.toList", "     \
    \   val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val notes = music_string.split(\" \")\n        val\
    \ beats = new ListBuffer[Long]\n        for (note <- notes) {\n            note\
    \ match {\n                case \"o\" => beats += 4\n                case \"o|\"\
    \ => beats += 2\n                case \".|\" => beats += 1\n            }\n  \
    \      }\n        beats.toList", "        music_string.split(\" \").map(x => x\
    \ match {\n            case \"o\" => 4\n            case \"o|\" => 2\n       \
    \     case \".|\" => 1\n        }).toList", "        // Write your code here\n\
    \        return List[Long]()", "        // Write your code here\n        List[Long]()",
  "        val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        var result = List[Long]()\n        for (note <- notes) {\n    \
    \        if (note == \"o\") {\n                result = result :+ 4\n        \
    \    } else if (note == \"o|\") {\n                result = result :+ 2\n    \
    \        } else if (note == \".|\") {\n                result = result :+ 1\n\
    \            }\n        }\n        return result", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note.equals(\"o\")) beats += 4\n            else if (note.equals(\"\
    o|\")) beats += 2\n            else if (note.equals(\".|\")) beats += 1\n    \
    \    }\n        beats.toList", "        var result = List[Long]()\n        for\
    \ (i <- 0 until music_string.length) {\n            if (music_string(i) == 'o')\
    \ {\n                if (i + 1 < music_string.length && music_string(i + 1) ==\
    \ '|') {\n                    result = 2l.toLong :: result\n                 \
    \   i += 1\n                } else {\n                    result = 4l.toLong ::\
    \ result\n                }\n            } else if (music_string(i) == '.') {\n\
    \                if (i + 1 < music_string.length && music_string(i + 1) == '|')\
    \ {\n                    result = 1l.toLong :: result\n                    i +=\
    \ 1\n                }\n            }\n        }\n        result.reverse", " \
    \       val beats = ListBuffer[Long]()\n        for (i <- 0 until music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    beats += 2\n         \
    \           i += 1\n                } else {\n                    beats += 4\n\
    \                }\n            } else if (music_string(i) == '.') {\n       \
    \         beats += 1\n            }\n        }\n        beats.toList", "     \
    \   val beats = ListBuffer[Long]()\n        for (i <- 0 until music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    beats += 2\n         \
    \           i += 1\n                } else {\n                    beats += 4\n\
    \                }\n            } else if (music_string(i) == '.') {\n       \
    \         beats += 1\n            }\n        }\n        beats.toList", "     \
    \   val beats = ListBuffer[Long]()\n        for (i <- 0 until music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    beats += 2\n         \
    \           i += 1\n                } else {\n                    beats += 4\n\
    \                }\n            } else if (music_string(i) == '.') {\n       \
    \         beats += 1\n            }\n        }\n        beats.toList", "     \
    \   val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val beats = ListBuffer[Long]()\n\
    \        for (note <- music_string.split(\" \")) {\n            note match {\n\
    \                case \"o\" => beats += 4\n                case \"o|\" => beats\
    \ += 2\n                case \".|\" => beats += 1\n            }\n        }\n\
    \        beats.toList", "        val notes = music_string.split(\" \")\n     \
    \   val beats = notes.map(note => {\n            if (note == \"o\") 4\n      \
    \      else if (note == \"o|\") 2\n            else 1\n        })\n        beats.toList",
  "        val beats = ListBuffer[Long]()\n        for (i <- 0 until music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    beats += 2\n         \
    \           i += 1\n                } else {\n                    beats += 4\n\
    \                }\n            } else if (music_string(i) == '.') {\n       \
    \         beats += 1\n            }\n        }\n        beats.toList", "     \
    \   val beats = ListBuffer[Long]()\n        val notes = music_string.split(\"\
    \ \")\n        for (note <- notes) {\n            if (note == \"o\") beats +=\
    \ 4\n            else if (note == \"o|\") beats += 2\n            else if (note\
    \ == \".|\") beats += 1\n        }\n        beats.toList", "        val notes\
    \ = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n    \
    \    for (note <- notes) {\n            if (note == \"o\") beats += 4\n      \
    \      else if (note == \"o|\") beats += 2\n            else if (note == \".|\"\
    ) beats += 1\n        }\n        beats.toList", "        val beats = ListBuffer[Long]()\n\
    \        for (i <- 0 until music_string.length) {\n            if (music_string(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length && music_string(i\
    \ + 1) == '|') {\n                    beats += 2\n                    i += 1\n\
    \                } else {\n                    beats += 4\n                }\n\
    \            } else if (music_string(i) == '.') {\n                beats += 1\n\
    \            }\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        var result = List[Long]()\n        for (i <- 0 until\
    \ music_string.length) {\n            if (music_string(i) == 'o') {\n        \
    \        if (i + 1 < music_string.length && music_string(i + 1) == '|') {\n  \
    \                  result = result :+ 2\n                    i += 1\n        \
    \        } else {\n                    result = result :+ 4\n                }\n\
    \            } else if (music_string(i) == '.') {\n                if (i + 1 <\
    \ music_string.length && music_string(i + 1) == '|') {\n                    result\
    \ = result :+ 1\n                    i += 1\n                }\n            }\n\
    \        }\n        result", "        val beats = ListBuffer[Long]()\n       \
    \ var i = 0\n        while (i < music_string.length) {\n            if (music_string(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length && music_string(i\
    \ + 1) == '|') {\n                    beats += 2\n                    i += 2\n\
    \                } else {\n                    beats += 4\n                  \
    \  i += 1\n                }\n            } else {\n                beats += 1\n\
    \                i += 2\n            }\n        }\n        beats.toList", "  \
    \      val notes = music_string.split(\" \")\n        notes.map(note => {\n  \
    \          if (note == \"o\") 4\n            else if (note == \"o|\") 2\n    \
    \        else 1\n        }).toList", "        val beats = ListBuffer[Long]()\n\
    \        for (i <- 0 until music_string.length) {\n            if (music_string(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length && music_string(i\
    \ + 1) == '|') {\n                    beats += 2\n                    i += 1\n\
    \                } else {\n                    beats += 4\n                }\n\
    \            } else if (music_string(i) == '.') {\n                beats += 1\n\
    \            }\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val beats = ListBuffer[Long]()\n        for (i <-\
    \ 0 until music_string.length) {\n            if (music_string(i) == 'o') {\n\
    \                if (i + 1 < music_string.length && music_string(i + 1) == '|')\
    \ {\n                    beats += 2\n                    i += 1\n            \
    \    } else {\n                    beats += 4\n                }\n           \
    \ } else if (music_string(i) == '.') {\n                beats += 1\n         \
    \   }\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n\
    \            if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val beats = ListBuffer[Long]()\n        for (i <-\
    \ 0 until music_string.length) {\n            if (music_string(i) == 'o') {\n\
    \                if (i + 1 < music_string.length && music_string(i + 1) == '|')\
    \ {\n                    beats += 2\n                    i += 1\n            \
    \    } else {\n                    beats += 4\n                }\n           \
    \ } else if (music_string(i) == '.') {\n                beats += 1\n         \
    \   }\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        notes.map(note => {\n            if (note == \"o\") 4\n       \
    \     else if (note == \"o|\") 2\n            else 1\n        }).toList", "  \
    \      val beats = ListBuffer[Long]()\n        for (c <- music_string) {\n   \
    \         c match {\n                case 'o' => beats += 4\n                case\
    \ 'o' => beats += 2\n                case '.' => beats += 1\n            }\n \
    \       }\n        beats.toList", "        val beats = ListBuffer[Long]()\n  \
    \      for (note <- music_string.split(\" \")) {\n            note match {\n \
    \               case \"o\" => beats += 4\n                case \"o|\" => beats\
    \ += 2\n                case \".|\" => beats += 1\n            }\n        }\n\
    \        beats.toList", "        val notes = music_string.split(\" \")\n     \
    \   val beats = ListBuffer[Long]()\n        for (note <- notes) {\n          \
    \  if (note == \"o\") beats += 4\n            else if (note == \"o|\") beats +=\
    \ 2\n            else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val beats = ListBuffer[Long]()\n        val notes = music_string.split(\"\
    \ \")\n        for (note <- notes) {\n            if (note == \"o\") beats +=\
    \ 4\n            else if (note == \"o|\") beats += 2\n            else if (note\
    \ == \".|\") beats += 1\n        }\n        beats.toList", "        val beats\
    \ = new ListBuffer[Long]\n        for (note <- music_string.split(\" \")) {\n\
    \            note match {\n                case \"o\" => beats += 4\n        \
    \        case \"o|\" => beats += 2\n                case \".|\" => beats += 1\n\
    \            }\n        }\n        beats.toList", "        val notes = music_string.split(\"\
    \ \")\n        var beats = List[Long]()\n        for (note <- notes) {\n     \
    \       if (note == \"o\") beats = beats :+ 4\n            else if (note == \"\
    o|\") beats = beats :+ 2\n            else if (note == \".|\") beats = beats :+\
    \ 1\n        }\n        beats", "        val notes = music_string.split(\" \"\
    )\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n \
    \           if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val music_list = music_string.split(\" \").toList\n\
    \        val music_map = Map(\"o\" -> 4l, \"o|\" -> 2l, \".|\" -> 1l)\n      \
    \  music_list.map(music_map(_))", "        val notes = music_string.split(\" \"\
    )\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n \
    \           if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        // Write your code here\n        var result = List[Long]()\n\
    \        var i = 0\n        while (i < music_string.length) {\n            if\
    \ (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    result = result :+ 2\n\
    \                    i += 2\n                } else {\n                    result\
    \ = result :+ 4\n                    i += 1\n                }\n            }\
    \ else {\n                result = result :+ 1\n                i += 2\n     \
    \       }\n        }\n        result", "        val beats = ListBuffer[Long]()\n\
    \        for (c <- music_string) {\n            if (c == 'o') beats += 4\n   \
    \         else if (c == '|') beats += 1\n        }\n        beats.toList", " \
    \       val notes = music_string.split(\" \")\n        val beats = new ListBuffer[Long]\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        // Your code goes\
    \ here\n        return List()", "        val notes = music_string.split(\" \"\
    )\n        val beats = new ListBuffer[Long]\n        for (note <- notes) {\n \
    \           if (note == \"o\") beats += 4\n            else if (note == \"o|\"\
    ) beats += 2\n            else if (note == \".|\") beats += 1\n        }\n   \
    \     beats.toList", "        val beats = ListBuffer[Long]()\n        val notes\
    \ = music_string.split(\" \")\n        for (note <- notes) {\n            if (note\
    \ == \"o\") beats += 4\n            else if (note == \"o|\") beats += 2\n    \
    \        else if (note == \".|\") beats += 1\n        }\n        beats.toList",
  "        val notes = music_string.split(\" \")\n        var beats = List[Long]()\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats = beats :+\
    \ 4\n            else if (note == \"o|\") beats = beats :+ 2\n            else\
    \ if (note == \".|\") beats = beats :+ 1\n        }\n        beats", "       \
    \ val beats = ListBuffer[Long]()\n        for (i <- 0 until music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    beats += 2\n         \
    \           i += 1\n                } else {\n                    beats += 4\n\
    \                }\n            } else if (music_string(i) == '.') {\n       \
    \         beats += 1\n            }\n        }\n        beats.toList", "     \
    \   // Write your code here\n        var result = List[Long]()\n        var note\
    \ = \"\"\n        for (i <- 0 until music_string.length) {\n            if (music_string(i)\
    \ == ' ') {\n                if (note == \"o\") result = result :+ 4\n       \
    \         else if (note == \"o|\") result = result :+ 2\n                else\
    \ if (note == \".|\") result = result :+ 1\n                note = \"\"\n    \
    \        }\n            else note = note + music_string(i)\n        }\n      \
    \  if (note == \"o\") result = result :+ 4\n        else if (note == \"o|\") result\
    \ = result :+ 2\n        else if (note == \".|\") result = result :+ 1\n     \
    \   result", "        val beats = ListBuffer[Long]()\n        var i = 0\n    \
    \    while (i < music_string.length) {\n            if (music_string(i) == 'o')\
    \ {\n                if (i + 1 < music_string.length && music_string(i + 1) ==\
    \ '|') {\n                    beats += 2\n                    i += 2\n       \
    \         } else {\n                    beats += 4\n                    i += 1\n\
    \                }\n            } else {\n                beats += 1\n       \
    \         i += 2\n            }\n        }\n        beats.toList", "        val\
    \ notes = music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        val beats = ListBuffer[Long]()\n\
    \        for (note <- music_string.split(\" \")) {\n            if (note == \"\
    o\") beats += 4\n            else if (note == \"o|\") beats += 2\n           \
    \ else if (note == \".|\") beats += 1\n        }\n        beats.toList", "   \
    \     // Write your code here\n        val beats = ListBuffer[Long]()\n      \
    \  for (i <- 0 until music_string.length) {\n            if (music_string(i) ==\
    \ 'o') {\n                if (i + 1 < music_string.length && music_string(i +\
    \ 1) == '|') {\n                    beats += 2\n                    i += 1\n \
    \               } else {\n                    beats += 4\n                }\n\
    \            } else if (music_string(i) == '.') {\n                beats += 1\n\
    \            }\n        }\n        beats.toList", "        val beats = ListBuffer[Long]()\n\
    \        for (i <- 0 until music_string.length) {\n            if (music_string(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length && music_string(i\
    \ + 1) == '|') {\n                    beats += 2\n                    i += 1\n\
    \                } else {\n                    beats += 4\n                }\n\
    \            } else if (music_string(i) == '.') {\n                beats += 1\n\
    \            }\n        }\n        beats.toList", "        // Write your code\
    \ here\n        val notes = music_string.split(\" \")\n        val beats = ListBuffer[Long]()\n\
    \        for (note <- notes) {\n            if (note == \"o\") beats += 4\n  \
    \          else if (note == \"o|\") beats += 2\n            else if (note == \"\
    .|\") beats += 1\n        }\n        beats.toList", "        var result = List[Long]()\n\
    \        var i = 0\n        while (i < music_string.length) {\n            if\
    \ (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    result = result :+ 2\n\
    \                    i += 2\n                } else {\n                    result\
    \ = result :+ 4\n                    i += 1\n                }\n            }\
    \ else {\n                result = result :+ 1\n                i += 2\n     \
    \       }\n        }\n        result", "        val beats = ListBuffer[Long]()\n\
    \        for (c <- music_string) {\n            c match {\n                case\
    \ 'o' => beats += 4\n                case 'o' => beats += 2\n                case\
    \ '.' => beats += 1\n            }\n        }\n        beats.toList", "      \
    \  val beats = ListBuffer[Long]()\n        for (i <- 0 until music_string.length)\
    \ {\n            if (music_string(i) == 'o') {\n                if (i + 1 < music_string.length\
    \ && music_string(i + 1) == '|') {\n                    beats += 2\n         \
    \           i += 1\n                } else {\n                    beats += 4\n\
    \                }\n            } else if (music_string(i) == '.') {\n       \
    \         beats += 1\n            }\n        }\n        beats.toList"]
stop_tokens:
- "\n    }\n"

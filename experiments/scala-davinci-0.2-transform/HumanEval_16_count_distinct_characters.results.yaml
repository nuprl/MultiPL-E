language: scala
name: HumanEval_16_count_distinct_characters
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        return string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.map(_.toLower).toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805638
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        return string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        return string.toLowerCase.distinct.length.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        val distinctCharacters\
    \ = string.toLowerCase.toSet\n        distinctCharacters.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\")) ==\
    \ (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n    assert(countDistinctCharacters((\"\
    abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805638
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        var set\
    \ = Set[Char]()\n        for (c <- string) {\n            set += c.toLower\n \
    \       }\n        return set.size\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(countDistinctCharacters((\"\")) == (0l));\n    assert(countDistinctCharacters((\"\
    abcde\")) == (5l));\n    assert(countDistinctCharacters((\"abcdecadeCADE\")) ==\
    \ (5l));\n    assert(countDistinctCharacters((\"aaaaAAAAaaaa\")) == (1l));\n \
    \   assert(countDistinctCharacters((\"Jerry jERRY JeRRRY\")) == (5l));\n    }\n\
    \n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805638
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.toSet.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    // >>> countDistinctCharacters((\"xyzXYZ\"\
    ))\n    // (3l)\n    // >>> countDistinctCharacters((\"Jerry\"))\n    // (4l)\n\
    \    def countDistinctCharacters(string : String) : Long = {\n        string.toLowerCase.distinct.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(countDistinctCharacters((\"\
    \")) == (0l));\n    assert(countDistinctCharacters((\"abcde\")) == (5l));\n  \
    \  assert(countDistinctCharacters((\"abcdecadeCADE\")) == (5l));\n    assert(countDistinctCharacters((\"\
    aaaaAAAAaaaa\")) == (1l));\n    assert(countDistinctCharacters((\"Jerry jERRY\
    \ JeRRRY\")) == (5l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805590

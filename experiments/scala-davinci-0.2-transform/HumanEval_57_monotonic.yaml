name: HumanEval_57_monotonic
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Return True is list elements are monotonically increasing or decreasing.\n\
  \    // >>> monotonic((List[Long](1l.toLong, 2l.toLong, 4l.toLong, 20l.toLong)))\n\
  \    // (true)\n    // >>> monotonic((List[Long](1l.toLong, 20l.toLong, 4l.toLong,\
  \ 10l.toLong)))\n    // (false)\n    // >>> monotonic((List[Long](4l.toLong, 1l.toLong,\
  \ 0l.toLong, -10l.toLong)))\n    // (true)\n    def monotonic(l : List[Long]) :\
  \ Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(monotonic((List[Long](1l.toLong,\
  \ 2l.toLong, 4l.toLong, 10l.toLong))) == (true));\n    assert(monotonic((List[Long](1l.toLong,\
  \ 2l.toLong, 4l.toLong, 20l.toLong))) == (true));\n    assert(monotonic((List[Long](1l.toLong,\
  \ 20l.toLong, 4l.toLong, 10l.toLong))) == (false));\n    assert(monotonic((List[Long](4l.toLong,\
  \ 1l.toLong, 0l.toLong, -10l.toLong))) == (true));\n    assert(monotonic((List[Long](4l.toLong,\
  \ 1l.toLong, 1l.toLong, 0l.toLong))) == (true));\n    assert(monotonic((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 2l.toLong, 5l.toLong, 60l.toLong))) == (false));\n    assert(monotonic((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 60l.toLong))) == (true));\n    assert(monotonic((List[Long](9l.toLong,\
  \ 9l.toLong, 9l.toLong, 9l.toLong))) == (true));\n    }\n\n}\n"
completions: ["        if (l.size == 1) return true\n        val inc = l(0) <= l(1)\n\
    \        for (i <- 1 until l.size - 1) {\n            if (inc && l(i) > l(i +\
    \ 1)) return false\n            if (!inc && l(i) < l(i + 1)) return false\n  \
    \      }\n        return true", "        if (l.length == 1) return true\n    \
    \    var increasing = true\n        var decreasing = true\n        for (i <- 0\
    \ until l.length - 1) {\n            if (l(i) > l(i + 1)) increasing = false\n\
    \            if (l(i) < l(i + 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length <= 1) return true\n       \
    \ var increasing = true\n        var decreasing = true\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n         \
    \   if (l(i) > l(i - 1)) decreasing = false\n        }\n        return increasing\
    \ || decreasing", "        if (l.length <= 1) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        increasing || decreasing", "  \
    \      if (l.size <= 1) return true\n        var increasing = true\n        var\
    \ decreasing = true\n        for (i <- 0 until l.size - 1) {\n            if (l(i)\
    \ > l(i + 1)) increasing = false\n            if (l(i) < l(i + 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ <= 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      increasing || decreasing", "        val n = l.length\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until n) {\n    \
    \        if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i -\
    \ 1)) decreasing = false\n        }\n        increasing || decreasing", "    \
    \    if (l.length <= 1) return true\n        var increasing = true\n        var\
    \ decreasing = true\n        for (i <- 1 until l.length) {\n            if (l(i)\
    \ > l(i - 1)) decreasing = false\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ == 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 0 until l.length - 1) {\n            if (l(i) > l(i + 1)) increasing\
    \ = false\n            if (l(i) < l(i + 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length == 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length == 1) return true\n       \
    \ var increasing = true\n        var decreasing = true\n        for (i <- 0 until\
    \ l.length - 1) {\n            if (l(i) > l(i + 1)) increasing = false\n     \
    \       if (l(i) < l(i + 1)) decreasing = false\n        }\n        return increasing\
    \ || decreasing", "        if (l.size == 1) return true\n        var increasing\
    \ = l(0) < l(1)\n        for (i <- 1 until l.size - 1) {\n            if (increasing\
    \ && l(i) > l(i + 1)) return false\n            if (!increasing && l(i) < l(i\
    \ + 1)) return false\n        }\n        return true", "        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 0 until l.length -\
    \ 1) {\n            if (l(i) > l(i + 1)) increasing = false\n            if (l(i)\
    \ < l(i + 1)) decreasing = false\n        }\n        increasing || decreasing",
  "        val n = l.length\n        var increasing = true\n        var decreasing\
    \ = true\n        for (i <- 0 until n - 1) {\n            if (l(i) > l(i + 1))\
    \ increasing = false\n            if (l(i) < l(i + 1)) decreasing = false\n  \
    \      }\n        return increasing || decreasing", "        if (l.length == 1)\
    \ return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 0 until l.length - 1) {\n            if (l(i) > l(i + 1)) increasing\
    \ = false\n            if (l(i) < l(i + 1)) decreasing = false\n        }\n  \
    \      increasing || decreasing", "        if (l.length <= 1) return true\n  \
    \      var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 0 until l.length - 1) {\n            if (l(i) > l(i + 1)) increasing = false\n\
    \            if (l(i) < l(i + 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length <= 1) return true\n       \
    \ var inc = true\n        var dec = true\n        for (i <- 1 until l.length)\
    \ {\n            if (l(i) < l(i - 1)) inc = false\n            if (l(i) > l(i\
    \ - 1)) dec = false\n        }\n        return inc || dec", "        if (l.length\
    \ == 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length < 2) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length == 1) true\n        else {\n\
    \            val diff = l.tail.zip(l).map(x => x._1 - x._2)\n            val sign\
    \ = diff.head / abs(diff.head)\n            diff.forall(x => x / abs(x) == sign)\n\
    \        }", "        if (l.length <= 1) return true\n        val first = l.head\n\
    \        val rest = l.tail\n        val (increasing, decreasing) = rest.foldLeft((true,\
    \ true))((acc, x) => {\n            val (increasing, decreasing) = acc\n     \
    \       (increasing && (x >= first), decreasing && (x <= first))\n        })\n\
    \        increasing || decreasing", "        if (l.size <= 1) return true\n  \
    \      var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 1 until l.size) {\n            if (l(i) < l(i - 1)) increasing = false\n   \
    \         if (l(i) > l(i - 1)) decreasing = false\n        }\n        return increasing\
    \ || decreasing", "        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      increasing || decreasing", "        if (l.length == 1) return true\n  \
    \      var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n \
    \           if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length <= 1) return true\n       \
    \ var increasing = true\n        var decreasing = true\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n         \
    \   if (l(i) > l(i - 1)) decreasing = false\n        }\n        return increasing\
    \ || decreasing", "        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length < 2) return true\n\
    \        val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n        val diff\
    \ = diffs(0)\n        diffs.forall(x => x == diff)", "        if (l.length ==\
    \ 1) {\n            return true\n        }\n        val diffs = l.zip(l.tail).map(x\
    \ => x._2 - x._1)\n        val diff = diffs(0)\n        diffs.forall(x => x ==\
    \ diff)", "        if (l.length == 1) return true\n        var increasing = l(0)\
    \ < l(1)\n        for (i <- 1 until l.length - 1) {\n            if (increasing)\
    \ {\n                if (l(i) > l(i + 1)) return false\n            } else {\n\
    \                if (l(i) < l(i + 1)) return false\n            }\n        }\n\
    \        return true", "        if (l.length < 2) return true\n        val diffs\
    \ = l.sliding(2).map(x => x(1) - x(0)).toList\n        val first = diffs(0)\n\
    \        diffs.forall(x => x == first)", "        if (l.length < 2) return true\n\
    \        val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n        val first\
    \ = diffs(0)\n        diffs.forall(x => x == first)", "        if (l.length <\
    \ 2) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length < 2) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n        }\n        increasing\
    \ || decreasing", "        val n = l.length\n        if (n <= 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until n) {\n            if (l(i) > l(i - 1)) decreasing = false\n     \
    \       if (l(i) < l(i - 1)) increasing = false\n        }\n        return increasing\
    \ || decreasing", "        if (l.length <= 1) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n \
    \           if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length < 2) {\n            return\
    \ true\n        }\n        var increasing = l(0) < l(1)\n        for (i <- 1 until\
    \ l.length - 1) {\n            if (increasing) {\n                if (l(i) > l(i\
    \ + 1)) {\n                    return false\n                }\n            }\
    \ else {\n                if (l(i) < l(i + 1)) {\n                    return false\n\
    \                }\n            }\n        }\n        return true", "        if\
    \ (l.length == 1) return true\n        var increasing = true\n        var decreasing\
    \ = true\n        for (i <- 1 until l.length) {\n            if (l(i) < l(i -\
    \ 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \        }\n        return increasing || decreasing", "        if (l.size <= 1)\
    \ return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.size) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length < 2) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length < 2) return true\n        val\
    \ diff = l(1) - l(0)\n        for (i <- 2 until l.length) {\n            if (diff\
    \ * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true", "  \
    \      if (l.length == 1) return true\n        var increasing = true\n       \
    \ var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) > l(i - 1)) decreasing = false\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ <= 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        val n = l.length\n        if\
    \ (n == 1) return true\n        var i = 1\n        var increasing = l(i) > l(i\
    \ - 1)\n        while (i < n) {\n            if (increasing) {\n             \
    \   if (l(i) < l(i - 1)) return false\n            } else {\n                if\
    \ (l(i) > l(i - 1)) return false\n            }\n            i += 1\n        }\n\
    \        return true", "        if (l.length <= 1) return true\n        val d\
    \ = l(1) - l(0)\n        for (i <- 1 until l.length - 1) {\n            if (d\
    \ * (l(i + 1) - l(i)) < 0) return false\n        }\n        return true", "  \
    \      if (l.length == 1) return true\n        var increasing = true\n       \
    \ var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ <= 1) return true\n        val diff = l(1) - l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0) return false\n  \
    \      }\n        return true", "        var increasing = true\n        var decreasing\
    \ = true\n        for (i <- 1 until l.length) {\n            if (l(i) < l(i -\
    \ 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \        }\n        increasing || decreasing", "        if (l.length <= 1) return\
    \ true\n        var increasing = true\n        var decreasing = true\n       \
    \ for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing =\
    \ false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n    \
    \    increasing || decreasing", "        if (l.length < 2) return true\n     \
    \   val d = l(1) - l(0)\n        for (i <- 1 until l.length) {\n            if\
    \ (d * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true", " \
    \       if (l.length <= 1) return true\n        var increasing = true\n      \
    \  var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ < 2) return true\n        val diff = l(1) - l(0)\n        for (i <- 1 until\
    \ l.length - 1) {\n            if (diff * (l(i + 1) - l(i)) < 0) return false\n\
    \        }\n        return true", "        if (l.length <= 1) return true\n  \
    \      var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 1 until l.length) {\n            if (l(i) > l(i - 1)) decreasing = false\n \
    \           if (l(i) < l(i - 1)) increasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length < 2) return true\n        var\
    \ i = 0\n        var inc = true\n        var dec = true\n        while (i < l.length\
    \ - 1) {\n            if (l(i) > l(i + 1)) inc = false\n            if (l(i) <\
    \ l(i + 1)) dec = false\n            i += 1\n        }\n        return inc ||\
    \ dec", "        if (l.length <= 1) return true\n        var increasing = true\n\
    \        var decreasing = true\n        for (i <- 1 until l.length) {\n      \
    \      if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1))\
    \ decreasing = false\n        }\n        return increasing || decreasing", " \
    \       if (l.length <= 1) return true\n        var increasing = l(0) < l(1)\n\
    \        for (i <- 1 until l.length - 1) {\n            if (increasing) {\n  \
    \              if (l(i) > l(i + 1)) return false\n            } else {\n     \
    \           if (l(i) < l(i + 1)) return false\n            }\n        }\n    \
    \    return true", "        if (l.length == 1) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length < 2) return true\n        var increasing = true\n        var\
    \ decreasing = true\n        for (i <- 1 until l.length) {\n            if (l(i)\
    \ < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ == 1) return true\n        val direction = l(1) - l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (direction * (l(i) - l(i - 1)) < 0) return\
    \ false\n        }\n        return true", "        if (l.length < 2) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n        }\n        increasing\
    \ || decreasing", "        if (l.length == 1) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length < 2) return true\n        val diffs = l.sliding(2).map(x =>\
    \ x(1) - x(0)).toList\n        val diffs2 = diffs.sliding(2).map(x => x(1) * x(0)).toList\n\
    \        if (diffs2.exists(x => x > 0)) return false\n        return true", " \
    \       if (l.length <= 1) return true\n        var increasing = true\n      \
    \  var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) > l(i - 1)) decreasing = false\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ == 1) return true\n        var isIncreasing = l(0) < l(1)\n        for (i <-\
    \ 1 until l.length - 1) {\n            if (isIncreasing) {\n                if\
    \ (l(i) > l(i + 1)) return false\n            } else {\n                if (l(i)\
    \ < l(i + 1)) return false\n            }\n        }\n        return true", " \
    \       if (l.size < 2) return true\n        val sign = l(1) - l(0)\n        for\
    \ (i <- 1 until l.size) {\n            if (sign * (l(i) - l(i - 1)) < 0) return\
    \ false\n        }\n        return true", "        if (l.length <= 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length < 2) return true\n        var\
    \ increasing = l(0) < l(1)\n        for (i <- 1 until l.length - 1) {\n      \
    \      if (increasing) {\n                if (l(i) > l(i + 1)) return false\n\
    \            } else {\n                if (l(i) < l(i + 1)) return false\n   \
    \         }\n        }\n        return true", "        l match {\n           \
    \ case Nil => true\n            case x :: Nil => true\n            case x :: y\
    \ :: Nil => true\n            case x :: y :: z :: Nil => (x <= y && y <= z) ||\
    \ (x >= y && y >= z)\n            case x :: y :: z :: tail => (x <= y && y <=\
    \ z) || (x >= y && y >= z) && monotonic(y :: z :: tail)\n        }", "       \
    \ if (l.length < 2) return true\n        val diff = l(1) - l(0)\n        for (i\
    \ <- 1 until l.length - 1) {\n            if (diff * (l(i + 1) - l(i)) < 0) return\
    \ false\n        }\n        return true", "        if (l.length <= 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length < 2) return true\n        var\
    \ increasing = true\n        var decreasing = true\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) > l(i - 1)) decreasing = false\n         \
    \   if (l(i) < l(i - 1)) increasing = false\n        }\n        return increasing\
    \ || decreasing", "        if (l.length == 1) return true\n        var i = 0\n\
    \        var increasing = true\n        var decreasing = true\n        while (i\
    \ < l.length - 1) {\n            if (l(i) > l(i + 1)) increasing = false\n   \
    \         if (l(i) < l(i + 1)) decreasing = false\n            i += 1\n      \
    \  }\n        return increasing || decreasing", "        if (l.length < 2) return\
    \ true\n        var increasing = true\n        var decreasing = true\n       \
    \ for (i <- 1 until l.length) {\n            if (l(i) > l(i - 1)) decreasing =\
    \ false\n            if (l(i) < l(i - 1)) increasing = false\n        }\n    \
    \    return increasing || decreasing", "        if (l.length < 2) return true\n\
    \        val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n        val first\
    \ = diffs(0)\n        diffs.forall(x => x == first)", "        if (l.size == 1)\
    \ return true\n        var increasing = l(0) < l(1)\n        for (i <- 1 until\
    \ l.size - 1) {\n            if (increasing) {\n                if (l(i) > l(i\
    \ + 1)) return false\n            } else {\n                if (l(i) < l(i + 1))\
    \ return false\n            }\n        }\n        return true", "        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        increasing || decreasing", "  \
    \      if (l.length == 1) return true\n        var increasing = true\n       \
    \ var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ == 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length == 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n        }\n        increasing\
    \ || decreasing", "        if (l.length < 2) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i - 1) > l(i)) increasing = false\n            if (l(i - 1)\
    \ < l(i)) decreasing = false\n        }\n        return increasing || decreasing",
  "        val n = l.length\n        if (n == 1) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until n) {\n    \
    \        if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i -\
    \ 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length <= 1) return true\n        var increasing = true\n       \
    \ var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ == 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.size <= 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.size) {\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \            if (l(i) < l(i - 1)) increasing = false\n        }\n        return\
    \ increasing || decreasing", "        var increasing = true\n        var decreasing\
    \ = true\n        for (i <- 1 until l.length) {\n            if (l(i) < l(i -\
    \ 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \        }\n        return increasing || decreasing", "        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        val n = l.length\n        if (n == 1) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until n) {\n    \
    \        if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i -\
    \ 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length == 1) return true\n        val diffs = l.sliding(2).map(x\
    \ => x(1) - x(0)).toList\n        val first = diffs(0)\n        diffs.forall(x\
    \ => x == first)", "        if (l.length <= 1) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n            if (l(i) < l(i\
    \ - 1)) increasing = false\n        }\n        return increasing || decreasing",
  "        if (l.size == 1) return true\n        var increasing = true\n        var\
    \ decreasing = true\n        for (i <- 1 until l.size) {\n            if (l(i)\
    \ < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        val n\
    \ = l.length\n        if (n <= 1) return true\n        var i = 1\n        var\
    \ inc = true\n        var dec = true\n        while (i < n) {\n            if\
    \ (l(i) < l(i - 1)) inc = false\n            if (l(i) > l(i - 1)) dec = false\n\
    \            i += 1\n        }\n        return inc || dec", "        if (l.length\
    \ <= 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      increasing || decreasing", "        if (l.length <= 1) return true\n  \
    \      var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n \
    \           if (l(i) > l(i - 1)) decreasing = false\n        }\n        increasing\
    \ || decreasing", "        if (l.length < 2) return true\n        var prev = l(0)\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) < prev) increasing = false\n  \
    \          if (l(i) > prev) decreasing = false\n            prev = l(i)\n    \
    \    }\n        return increasing || decreasing", "        if (l.length < 2) return\
    \ true\n        var increasing = true\n        var decreasing = true\n       \
    \ for (i <- 0 until l.length - 1) {\n            if (l(i) > l(i + 1)) increasing\
    \ = false\n            if (l(i) < l(i + 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        var increasing = true\n    \
    \    var decreasing = true\n        for (i <- 0 until l.length - 1) {\n      \
    \      if (l(i) > l(i + 1)) increasing = false\n            if (l(i) < l(i + 1))\
    \ decreasing = false\n        }\n        return increasing || decreasing", " \
    \       if (l.length < 2) return true\n        val diffs = l.sliding(2).map(x\
    \ => x(1) - x(0)).toList\n        val first = diffs(0)\n        val result = diffs.forall(x\
    \ => x == first)\n        return result", "        val n = l.length\n        if\
    \ (n <= 1) return true\n        var i = 1\n        var increasing = true\n   \
    \     var decreasing = true\n        while (i < n) {\n            if (l(i) < l(i\
    \ - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \            i += 1\n        }\n        return increasing || decreasing", "  \
    \      var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n \
    \           if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length < 2) return true\n        var\
    \ increasing = true\n        var decreasing = true\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n         \
    \   if (l(i) > l(i - 1)) decreasing = false\n        }\n        return increasing\
    \ || decreasing", "        val n = l.length\n        var increasing = true\n \
    \       var decreasing = true\n        for (i <- 0 until n - 1) {\n          \
    \  if (l(i) > l(i + 1)) increasing = false\n            if (l(i) < l(i + 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ <= 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length == 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) < l(i - 1)) {\n               \
    \ increasing = false\n            }\n            if (l(i) > l(i - 1)) {\n    \
    \            decreasing = false\n            }\n        }\n        return increasing\
    \ || decreasing", "        if (l.length == 1) return true\n        var inc = true\n\
    \        var dec = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) < l(i - 1)) inc = false\n            if (l(i) > l(i - 1)) dec = false\n\
    \        }\n        return inc || dec", "        if (l.length <= 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length <= 1) return true\n       \
    \ val d = l(1) - l(0)\n        for (i <- 1 until l.length - 1) {\n           \
    \ if (d * (l(i + 1) - l(i)) < 0) return false\n        }\n        return true",
  "        if (l.length <= 1) return true\n        var increasing = true\n       \
    \ var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.size\
    \ <= 1) true\n        else {\n            val diff = l(1) - l(0)\n           \
    \ for (i <- 1 until l.size - 1) {\n                if (diff * (l(i + 1) - l(i))\
    \ < 0) return false\n            }\n            true\n        }", "        if\
    \ (l.length < 2) return true\n        val d = l(1) - l(0)\n        for (i <- 1\
    \ until l.length - 1) {\n            if (d * (l(i + 1) - l(i)) < 0) return false\n\
    \        }\n        return true", "        val n = l.length\n        if (n ==\
    \ 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until n) {\n            if (l(i) > l(i - 1)) decreasing =\
    \ false\n            if (l(i) < l(i - 1)) increasing = false\n        }\n    \
    \    return increasing || decreasing", "        if (l.length <= 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        val n = l.length\n        if (n <= 1) return\
    \ true\n        var i = 1\n        var increasing = true\n        var decreasing\
    \ = true\n        while (i < n) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n            i\
    \ += 1\n        }\n        increasing || decreasing", "        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length <= 1) return true\n        var increasing = true\n       \
    \ var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ < 2) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n            if (l(i) < l(i - 1)) increasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length <= 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \            if (l(i) < l(i - 1)) increasing = false\n        }\n        increasing\
    \ || decreasing", "        if (l.length < 2) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 0 until l.length -\
    \ 1) {\n            if (l(i) > l(i + 1)) increasing = false\n            if (l(i)\
    \ < l(i + 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length == 1) return true\n        var increasing = true\n       \
    \ var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ <= 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n            if (l(i) < l(i - 1)) increasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length <= 1) return true\n\
    \        val diffs = l.zip(l.tail).map(x => x._2 - x._1)\n        val first =\
    \ diffs(0)\n        diffs.forall(x => x == first)", "        var increasing =\
    \ true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length <= 1) true\n        else if (l(0) < l(1)) l.sliding(2).forall(x\
    \ => x(0) <= x(1))\n        else l.sliding(2).forall(x => x(0) >= x(1))", "  \
    \      if (l.length <= 1) return true\n        var increasing = true\n       \
    \ var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ == 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length < 2) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.size <= 1) return true\n        var\
    \ inc = true\n        var dec = true\n        for (i <- 1 until l.size) {\n  \
    \          if (l(i) > l(i - 1)) dec = false\n            if (l(i) < l(i - 1))\
    \ inc = false\n        }\n        return inc || dec", "        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        increasing || decreasing", "  \
    \      if (l.length == 1) return true\n        var i = 0\n        var increasing\
    \ = true\n        var decreasing = true\n        while (i < l.length - 1) {\n\
    \            if (l(i) > l(i + 1)) increasing = false\n            if (l(i) < l(i\
    \ + 1)) decreasing = false\n            i += 1\n        }\n        return increasing\
    \ || decreasing", "        if (l.length < 2) return true\n        val sign = l(1)\
    \ - l(0)\n        for (i <- 1 until l.length - 1) {\n            if (sign * (l(i\
    \ + 1) - l(i)) < 0) return false\n        }\n        return true", "        if\
    \ (l.length < 2) return true\n        var increasing = true\n        var decreasing\
    \ = true\n        for (i <- 1 until l.length) {\n            if (l(i) < l(i -\
    \ 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \        }\n        return increasing || decreasing", "        if (l.length ==\
    \ 1) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.size <= 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.size) {\n            if (l(i) < l(i - 1)) increasing = false\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length <= 1) return true\n       \
    \ val sign = l(1) - l(0)\n        for (i <- 1 until l.length) {\n            if\
    \ (sign * (l(i) - l(i - 1)) < 0) return false\n        }\n        return true",
  "        var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n \
    \           if (l(i) > l(i - 1)) decreasing = false\n        }\n        increasing\
    \ || decreasing", "        if (l.length < 2) {\n            return true\n    \
    \    }\n        var increasing = true\n        var decreasing = true\n       \
    \ for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) {\n        \
    \        increasing = false\n            }\n            if (l(i) > l(i - 1)) {\n\
    \                decreasing = false\n            }\n        }\n        return\
    \ increasing || decreasing", "        var increasing = true\n        var decreasing\
    \ = true\n        for (i <- 1 until l.length) {\n            if (l(i) < l(i -\
    \ 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \        }\n        increasing || decreasing", "        if (l.length <= 1) return\
    \ true\n        val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n      \
    \  val first = diffs(0)\n        diffs.forall(x => x == first)", "        if (l.length\
    \ <= 1) return true\n        var increasing = false\n        var decreasing =\
    \ false\n        for (i <- 1 until l.length) {\n            if (l(i) > l(i - 1))\
    \ increasing = true\n            if (l(i) < l(i - 1)) decreasing = true\n    \
    \    }\n        return increasing ^ decreasing", "        if (l.length == 1) true\n\
    \        else if (l.length == 2) l(0) <= l(1)\n        else if (l(0) <= l(1))\
    \ monotonic(l.tail)\n        else false", "        if (l.length == 1) return true\n\
    \        var i = 0\n        var increasing = true\n        var decreasing = true\n\
    \        while (i < l.length - 1) {\n            if (l(i) < l(i + 1)) decreasing\
    \ = false\n            if (l(i) > l(i + 1)) increasing = false\n            i\
    \ += 1\n        }\n        return increasing || decreasing", "        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n \
    \           if (l(i) > l(i - 1)) decreasing = false\n        }\n        increasing\
    \ || decreasing", "        if (l.length < 2) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        increasing || decreasing", "  \
    \      if (l.length < 2) return true\n        var increasing = true\n        var\
    \ decreasing = true\n        for (i <- 1 until l.length) {\n            if (l(i)\
    \ < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        val n\
    \ = l.length\n        if (n <= 1) return true\n        var i = 1\n        var\
    \ increasing = true\n        var decreasing = true\n        while (i < n) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n            i += 1\n        }\n        increasing\
    \ || decreasing", "        if (l.length < 2) return true\n        val diff = l(1)\
    \ - l(0)\n        for (i <- 1 until l.length - 1) {\n            if (diff * (l(i\
    \ + 1) - l(i)) < 0) return false\n        }\n        return true", "        val\
    \ n = l.length\n        if (n <= 1) return true\n        var increasing = true\n\
    \        var decreasing = true\n        for (i <- 1 until n) {\n            if\
    \ (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ < 2) return true\n        var increasing = true\n        var decreasing = true\n\
    \        for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      return increasing || decreasing", "        if (l.length <= 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        val n = l.length\n        if (n <= 1) return\
    \ true\n        var increasing = l(0) <= l(1)\n        for (i <- 1 until n - 1)\
    \ {\n            if (increasing) {\n                if (l(i) > l(i + 1)) return\
    \ false\n            } else {\n                if (l(i) < l(i + 1)) return false\n\
    \            }\n        }\n        return true", "        if (l.length < 2) return\
    \ true\n        var increasing = true\n        var decreasing = true\n       \
    \ for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing =\
    \ false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n    \
    \    return increasing || decreasing", "        val n = l.length\n        if (n\
    \ == 1) return true\n        var i = 1\n        var increasing = true\n      \
    \  var decreasing = true\n        while (i < n) {\n            if (l(i) < l(i\
    \ - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \            i += 1\n        }\n        return increasing || decreasing", "  \
    \      val n = l.length\n        if (n <= 1) return true\n        val sign = l(1)\
    \ - l(0)\n        for (i <- 1 until n) {\n            if (sign * (l(i) - l(i -\
    \ 1)) < 0) return false\n        }\n        return true", "        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length <= 1) return true\n        var increasing = true\n       \
    \ var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) > l(i - 1)) decreasing = false\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ == 1) return true\n        var i = 0\n        var increasing = true\n      \
    \  var decreasing = true\n        while (i < l.length - 1) {\n            if (l(i)\
    \ > l(i + 1)) increasing = false\n            if (l(i) < l(i + 1)) decreasing\
    \ = false\n            i += 1\n        }\n        return increasing || decreasing",
  "        var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n \
    \           if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length <= 1) return true\n       \
    \ val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n        val first = diffs(0)\n\
    \        diffs.forall(x => x == first)", "        if (l.length == 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 0 until l.length - 1) {\n            if (l(i) > l(i + 1)) increasing = false\n\
    \            if (l(i) < l(i + 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        var increasing = true\n        var decreasing\
    \ = true\n        for (i <- 1 until l.length) {\n            if (l(i) < l(i -\
    \ 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing = false\n\
    \        }\n        increasing || decreasing", "        if (l.size == 1) return\
    \ true\n        val diff = l(1) - l(0)\n        for (i <- 1 until l.size) {\n\
    \            if (diff * (l(i) - l(i - 1)) < 0) return false\n        }\n     \
    \   return true", "        if (l.length == 1) return true\n        val sign =\
    \ l(1) - l(0)\n        for (i <- 1 until l.length) {\n            if (sign * (l(i)\
    \ - l(i - 1)) < 0) return false\n        }\n        return true", "        if\
    \ (l.length < 2) return true\n        val diffs = l.sliding(2).map(x => x(1) -\
    \ x(0)).toList\n        val max = diffs.max\n        val min = diffs.min\n   \
    \     if (max < 0 && min < 0) return true\n        if (max > 0 && min > 0) return\
    \ true\n        return false", "        if (l.length <= 1) return true\n     \
    \   var increasing = true\n        var decreasing = true\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n   \
    \         if (l(i) > l(i - 1)) decreasing = false\n        }\n        return increasing\
    \ || decreasing", "        if (l.length <= 1) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length == 1) return true\n        var increasing = true\n       \
    \ var decreasing = true\n        for (i <- 1 until l.length) {\n            if\
    \ (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ <= 1) return true\n        val inc = l(0) <= l(1)\n        for (i <- 1 until\
    \ l.length - 1) {\n            if (inc && l(i) > l(i + 1)) return false\n    \
    \        if (!inc && l(i) < l(i + 1)) return false\n        }\n        return\
    \ true", "        if (l.length <= 1) return true\n        val diff = l(1) - l(0)\n\
    \        var i = 2\n        while (i < l.length) {\n            if (diff * (l(i)\
    \ - l(i - 1)) < 0) return false\n            i += 1\n        }\n        return\
    \ true", "        var increasing = true\n        var decreasing = true\n     \
    \   for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing\
    \ = false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n  \
    \      increasing || decreasing", "        val n = l.length\n        if (n ==\
    \ 1) return true\n        var i = 1\n        var increasing = true\n        var\
    \ decreasing = true\n        while (i < n) {\n            if (l(i) < l(i - 1))\
    \ increasing = false\n            if (l(i) > l(i - 1)) decreasing = false\n  \
    \          i += 1\n        }\n        return increasing || decreasing", "    \
    \    if (l.length <= 1) return true\n        var increasing = true\n        var\
    \ decreasing = true\n        for (i <- 0 until l.length - 1) {\n            if\
    \ (l(i) > l(i + 1)) increasing = false\n            if (l(i) < l(i + 1)) decreasing\
    \ = false\n        }\n        return increasing || decreasing", "        if (l.length\
    \ == 1) return true\n        val diff = l.tail.zip(l).map(x => x._1 - x._2)\n\
    \        if (diff.forall(x => x >= 0)) return true\n        if (diff.forall(x\
    \ => x <= 0)) return true\n        return false", "        if (l.length < 2) return\
    \ true\n        var increasing = l(0) < l(1)\n        for (i <- 1 until l.length\
    \ - 1) {\n            if (increasing && l(i) > l(i + 1)) return false\n      \
    \      if (!increasing && l(i) < l(i + 1)) return false\n        }\n        return\
    \ true", "        if (l.size == 1) return true\n        var increasing = true\n\
    \        var decreasing = true\n        for (i <- 1 until l.size) {\n        \
    \    if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i - 1))\
    \ decreasing = false\n        }\n        return increasing || decreasing", " \
    \       if (l.length == 1) return true\n        var inc = true\n        var dec\
    \ = true\n        for (i <- 1 until l.length) {\n            if (l(i) < l(i -\
    \ 1)) inc = false\n            if (l(i) > l(i - 1)) dec = false\n        }\n \
    \       return inc || dec", "        if (l.length == 1) return true\n        var\
    \ increasing = true\n        var decreasing = true\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n         \
    \   if (l(i) > l(i - 1)) decreasing = false\n        }\n        return increasing\
    \ || decreasing", "        if (l.length <= 1) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        increasing || decreasing", "  \
    \      var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 0 until l.length - 1) {\n            if (l(i) > l(i + 1)) increasing = false\n\
    \            if (l(i) < l(i + 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length <= 1) return true\n       \
    \ val diffs = l.zip(l.tail).map(p => p._2 - p._1)\n        val first = diffs.head\n\
    \        diffs.forall(d => d == first)", "        if (l.length == 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n\
    \            if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.size == 1) return true\n        val\
    \ d = l(1) - l(0)\n        for (i <- 1 until l.size) {\n            if (d * (l(i)\
    \ - l(i - 1)) < 0) return false\n        }\n        return true", "        var\
    \ increasing = true\n        var decreasing = true\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n         \
    \   if (l(i) > l(i - 1)) decreasing = false\n        }\n        increasing ||\
    \ decreasing", "        if (l.length <= 1) return true\n        var i = 0\n  \
    \      var inc = true\n        var dec = true\n        while (i < l.length - 1)\
    \ {\n            if (l(i) > l(i + 1)) inc = false\n            if (l(i) < l(i\
    \ + 1)) dec = false\n            i += 1\n        }\n        return inc || dec",
  "        var increasing = true\n        var decreasing = true\n        for (i <-\
    \ 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n \
    \           if (l(i) > l(i - 1)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        var increasing = true\n        var decreasing\
    \ = true\n        for (i <- 1 until l.length) {\n            if (l(i) > l(i -\
    \ 1)) decreasing = false\n            if (l(i) < l(i - 1)) increasing = false\n\
    \        }\n        return increasing || decreasing", "        if (l.length <=\
    \ 1) return true\n        val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n\
    \        val diffs_set = diffs.toSet\n        if (diffs_set.size == 1) return\
    \ true\n        if (diffs_set.size == 2) {\n            if (diffs_set.contains(0))\
    \ return true\n            if (diffs_set.contains(1) || diffs_set.contains(-1))\
    \ {\n                val diffs_abs = diffs.map(x => abs(x))\n                val\
    \ diffs_abs_set = diffs_abs.toSet\n                if (diffs_abs_set.size == 1)\
    \ return true\n            }\n        }\n        return false", "        if (l.length\
    \ <= 1) return true\n        val first = l.head\n        val rest = l.tail\n \
    \       val restMonotonic = monotonic(rest)\n        if (!restMonotonic) return\
    \ false\n        val second = rest.head\n        if (first < second) {\n     \
    \       rest.forall(x => x >= first)\n        } else {\n            rest.forall(x\
    \ => x <= first)\n        }", "        if (l.length < 2) return true\n       \
    \ val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n        val first = diffs(0)\n\
    \        diffs.forall(x => x == first)", "        if (l.length <= 1) return true\n\
    \        var increasing = l(0) < l(1)\n        for (i <- 1 until l.length - 1)\
    \ {\n            if (increasing && l(i) > l(i + 1)) return false\n           \
    \ if (!increasing && l(i) < l(i + 1)) return false\n        }\n        return\
    \ true", "        if (l.length == 1) return true\n        val diff = l.tail.zip(l).map(x\
    \ => x._1 - x._2)\n        diff.forall(x => x == 0) || diff.forall(x => x > 0)\
    \ || diff.forall(x => x < 0)", "        if (l.length <= 1) return true\n     \
    \   var increasing = true\n        var decreasing = true\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n   \
    \         if (l(i) > l(i - 1)) decreasing = false\n        }\n        return increasing\
    \ || decreasing", "        if (l.length == 1) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length < 2) return true\n        val diff = l(1) - l(0)\n       \
    \ for (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0)\
    \ return false\n        }\n        return true", "        if (l.length == 1) return\
    \ true\n        var increasing = true\n        var decreasing = true\n       \
    \ for (i <- 1 until l.length) {\n            if (l(i) < l(i - 1)) increasing =\
    \ false\n            if (l(i) > l(i - 1)) decreasing = false\n        }\n    \
    \    return increasing || decreasing", "        if (l.length <= 1) return true\n\
    \        var increasing = true\n        var decreasing = true\n        for (i\
    \ <- 1 until l.length) {\n            if (l(i - 1) > l(i)) increasing = false\n\
    \            if (l(i - 1) < l(i)) decreasing = false\n        }\n        return\
    \ increasing || decreasing", "        if (l.length == 1) return true\n       \
    \ var increasing = true\n        var decreasing = true\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) < l(i - 1)) increasing = false\n         \
    \   if (l(i) > l(i - 1)) decreasing = false\n        }\n        return increasing\
    \ || decreasing", "        if (l.length < 2) return true\n        var increasing\
    \ = true\n        var decreasing = true\n        for (i <- 1 until l.length) {\n\
    \            if (l(i) < l(i - 1)) increasing = false\n            if (l(i) > l(i\
    \ - 1)) decreasing = false\n        }\n        return increasing || decreasing",
  "        if (l.length <= 1) return true\n        val diff = l(1) - l(0)\n      \
    \  for (i <- 1 until l.length) {\n            if (diff * (l(i) - l(i - 1)) < 0)\
    \ return false\n        }\n        return true", "        if (l.length < 2) return\
    \ true\n        val diffs = l.sliding(2).map(x => x(1) - x(0)).toList\n      \
    \  val first = diffs(0)\n        diffs.forall(x => x == first)", "        if (l.length\
    \ <= 1) true\n        else {\n            val diffs = l.sliding(2).map(x => x(1)\
    \ - x(0)).toList\n            val first = diffs(0)\n            diffs.forall(x\
    \ => x == first)\n        }"]
stop_tokens:
- "\n    }\n"

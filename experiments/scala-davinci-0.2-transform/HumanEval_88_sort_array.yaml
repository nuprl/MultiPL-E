name: HumanEval_88_sort_array
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given an array of non-negative integers, return a copy of the given array\
  \ after sorting,\n    // you will sort the given array in ascending order if the\
  \ sum( first index value, last index value) is odd,\n    // or sort it in descending\
  \ order if the sum( first index value, last index value) is even.\n    // Note:\n\
  \    // * don't change the given array.\n    // Examples:\n    // >>> sortArray((List[Long]()))\n\
  \    // (List[Long]())\n    // >>> sortArray((List[Long](5l.toLong)))\n    // (List[Long](5l.toLong))\n\
  \    // >>> sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong, 0l.toLong, 1l.toLong,\
  \ 5l.toLong)))\n    // (List[Long](0l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong,\
  \ 5l.toLong))\n    // >>> sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong,\
  \ 0l.toLong, 1l.toLong, 5l.toLong, 6l.toLong)))\n    // (List[Long](6l.toLong, 5l.toLong,\
  \ 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 0l.toLong))\n    def sortArray(array\
  \ : List[Long]) : List[Long] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(sortArray((List[Long]())).equals((List[Long]())));\n\
  \    assert(sortArray((List[Long](5l.toLong))).equals((List[Long](5l.toLong))));\n\
  \    assert(sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong, 0l.toLong, 1l.toLong,\
  \ 5l.toLong))).equals((List[Long](0l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong,\
  \ 5l.toLong))));\n    assert(sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong,\
  \ 0l.toLong, 1l.toLong, 5l.toLong, 6l.toLong))).equals((List[Long](6l.toLong, 5l.toLong,\
  \ 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 0l.toLong))));\n    assert(sortArray((List[Long](2l.toLong,\
  \ 1l.toLong))).equals((List[Long](1l.toLong, 2l.toLong))));\n    assert(sortArray((List[Long](15l.toLong,\
  \ 42l.toLong, 87l.toLong, 32l.toLong, 11l.toLong, 0l.toLong))).equals((List[Long](0l.toLong,\
  \ 11l.toLong, 15l.toLong, 32l.toLong, 42l.toLong, 87l.toLong))));\n    assert(sortArray((List[Long](21l.toLong,\
  \ 14l.toLong, 23l.toLong, 11l.toLong))).equals((List[Long](23l.toLong, 21l.toLong,\
  \ 14l.toLong, 11l.toLong))));\n    }\n\n}\n"
completions: ["        // Write your code here\n        if (array.length == 0) {\n\
    \            return array\n        }\n        if (array.length == 1) {\n     \
    \       return array\n        }\n        if ((array(0) + array(array.length -\
    \ 1)) % 2 == 0) {\n            return array.sorted.reverse\n        }\n      \
    \  return array.sorted", "        // your code here\n        array", "       \
    \ // Write your code here\n        array", "        // Write your code here\n\
    \        array", "        // Write your code here\n        return array", "  \
    \      // Write your code here\n        array", "        // Write your code here\n\
    \        return array", "        // Write your code here\n        array", "  \
    \      // Write your code here\n        if (array.length == 0) {\n           \
    \ return array\n        }\n        if (array.length == 1) {\n            return\
    \ array\n        }\n        if ((array(0) + array(array.length - 1)) % 2 == 0)\
    \ {\n            return array.sortWith(_ > _)\n        }\n        return array.sortWith(_\
    \ < _)", "        // Write your code here\n        array", "        // Write your\
    \ code here\n        val sum = array.head + array.last\n        if (sum % 2 ==\
    \ 0) {\n            array.sorted.reverse\n        } else {\n            array.sorted\n\
    \        }", "        if (array.length == 0) {\n            return array\n   \
    \     }\n        if (array.length == 1) {\n            return array\n        }\n\
    \        if ((array(0) + array(array.length - 1)) % 2 == 0) {\n            return\
    \ array.sorted.reverse\n        }\n        return array.sorted", "        // Your\
    \ code here\n        array", "        // your code here\n        array", "   \
    \     // Write your code here\n        if (array.length == 0) return array\n \
    \       if (array.length == 1) return array\n        if ((array(0) + array(array.length\
    \ - 1)) % 2 == 0) {\n            return array.sortWith(_ > _)\n        } else\
    \ {\n            return array.sortWith(_ < _)\n        }", "        // Write your\
    \ code here\n        array", "        // Write your code here\n        array",
  "        // Write your code here\n        return array", "        // Write your\
    \ code here\n        array", "        // Write your code here\n        array"]
stop_tokens:
- "\n    }\n"

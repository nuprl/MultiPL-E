name: HumanEval_106_f
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Implement the function f that takes n as a parameter,\n    // and returns\
  \ a list of size n, such that the value of the element at index i is the factorial\
  \ of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n    //\
  \ i starts from 1.\n    // the factorial of i is the multiplication of the numbers\
  \ from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n    // (List[Long](1l.toLong,\
  \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n    def f(n : Long) : List[Long]\
  \ = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
  \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
  \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n \
  \   assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
  \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
completions: ["        // Write your code here\n        var result = List[Long]()\n\
    \        for (i <- 1 to n.toInt) {\n            if (i % 2 == 0) {\n          \
    \      var factorial = 1l\n                for (j <- 1 to i) {\n             \
    \       factorial *= j\n                }\n                result = result :+\
    \ factorial\n            } else {\n                var sum = 0l\n            \
    \    for (j <- 1 to i) {\n                    sum += j\n                }\n  \
    \              result = result :+ sum\n            }\n        }\n        result",
  "        var l = ListBuffer[Long]()\n        for (i <- 1l to n) {\n            if\
    \ (i % 2 == 0) l += factorial(i)\n            else l += sum(i)\n        }\n  \
    \      l.toList", "        var result = new ListBuffer[Long]()\n        for (i\
    \ <- 1 to n.toInt) {\n            if (i % 2 == 0) {\n                var factorial\
    \ = 1\n                for (j <- 1 to i) factorial *= j\n                result\
    \ += factorial\n            }\n            else {\n                var sum = 0\n\
    \                for (j <- 1 to i) sum += j\n                result += sum\n \
    \           }\n        }\n        result.toList", "        var result = List[Long]()\n\
    \        for (i <- 1 to n.toInt) {\n            if (i % 2 == 0) result = result\
    \ :+ factorial(i)\n            else result = result :+ sum(i)\n        }\n   \
    \     result", "        // Write your code here\n        var result = List[Long]()\n\
    \        for (i <- 1 to n.toInt) {\n            if (i % 2 == 0) result = result\
    \ :+ factorial(i)\n            else result = result :+ sum(i)\n        }\n   \
    \     result", "        // Write your code here\n        var list = List[Long]()\n\
    \        for (i <- 1 to n.toInt) {\n            if (i % 2 == 0) {\n          \
    \      list = list :+ factorial(i)\n            } else {\n                list\
    \ = list :+ sum(i)\n            }\n        }\n        list", "        var list\
    \ = List[Long]()\n        for (i <- 1 to n.toInt) {\n            if (i % 2 ==\
    \ 0) {\n                list = list :+ (1 to i).product\n            } else {\n\
    \                list = list :+ (1 to i).sum\n            }\n        }\n     \
    \   list", "        // Write your code here\n        var result = new ListBuffer[Long]()\n\
    \        for (i <- 1 to n.toInt) {\n            if (i % 2 == 0) result += factorial(i)\n\
    \            else result += sum(i)\n        }\n        result.toList", "     \
    \   var l = List[Long]()\n        for (i <- 1 to n.toInt) {\n            if (i\
    \ % 2 == 0) l = l :+ factorial(i)\n            else l = l :+ sum(i)\n        }\n\
    \        l", "        // Write your code here\n        var list = List[Long]()\n\
    \        for (i <- 1 to n.toInt) {\n            if (i % 2 == 0) {\n          \
    \      list = list :+ (1 to i).product\n            } else {\n               \
    \ list = list :+ (1 to i).sum\n            }\n        }\n        list", "    \
    \    var res = List[Long]()\n        for (i <- 1 to n.toInt) {\n            if\
    \ (i % 2 == 0) {\n                res = res :+ (1l to i).product\n           \
    \ } else {\n                res = res :+ (1l to i).sum\n            }\n      \
    \  }\n        res", "        // Write your code here\n        var result = List[Long]()\n\
    \        for (i <- 1 to n.toInt) {\n            if (i % 2 == 0) {\n          \
    \      var factorial = 1\n                for (j <- 1 to i) {\n              \
    \      factorial *= j\n                }\n                result = result :+ factorial\n\
    \            } else {\n                var sum = 0\n                for (j <-\
    \ 1 to i) {\n                    sum += j\n                }\n               \
    \ result = result :+ sum\n            }\n        }\n        result", "       \
    \ // Write your code here\n        var l = List[Long]()\n        for (i <- 1 to\
    \ n.toInt) {\n            if (i % 2 == 0) {\n                l = l :+ (1 to i).product\n\
    \            } else {\n                l = l :+ (1 to i).sum\n            }\n\
    \        }\n        l", "        // Write your code here\n        var result =\
    \ List[Long]()\n        for (i <- 1 to n.toInt) {\n            if (i % 2 == 0)\
    \ {\n                var factorial = 1\n                for (j <- 1 to i) {\n\
    \                    factorial *= j\n                }\n                result\
    \ = result :+ factorial\n            } else {\n                var sum = 0\n \
    \               for (j <- 1 to i) {\n                    sum += j\n          \
    \      }\n                result = result :+ sum\n            }\n        }\n \
    \       result", "        var result = List[Long]()\n        for (i <- 1 to n.toInt)\
    \ {\n            if (i % 2 == 0) {\n                var factorial = 1l\n     \
    \           for (j <- 1 to i) {\n                    factorial *= j\n        \
    \        }\n                result = result :+ factorial\n            } else {\n\
    \                var sum = 0l\n                for (j <- 1 to i) {\n         \
    \           sum += j\n                }\n                result = result :+ sum\n\
    \            }\n        }\n        result", "        // Write your code here\n\
    \        var lst = ListBuffer[Long]()\n        for (i <- 1 to n.toInt) {\n   \
    \         if (i % 2 == 0) {\n                lst += (1 to i).product\n       \
    \     } else {\n                lst += (1 to i).sum\n            }\n        }\n\
    \        lst.toList", "        // Write your code here\n        var l = List[Long]()\n\
    \        for (i <- 1 to n.toInt) {\n            if (i % 2 == 0) {\n          \
    \      l = l :+ (1 to i).product\n            } else {\n                l = l\
    \ :+ (1 to i).sum\n            }\n        }\n        l", "        // Write your\
    \ code here\n        val l = ListBuffer[Long]()\n        for (i <- 1l to n) {\n\
    \            if (i % 2 == 0) l += factorial(i)\n            else l += sum(i)\n\
    \        }\n        l.toList", "        // Write your code here\n        return\
    \ List()", "        // Write your code here\n        var result = List[Long]()\n\
    \        for (i <- 1l to n) {\n            if (i % 2 == 0) {\n               \
    \ result = result :+ (1l to i).product\n            } else {\n               \
    \ result = result :+ (1l to i).sum\n            }\n        }\n        result"]
stop_tokens:
- "\n    }\n"

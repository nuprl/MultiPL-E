name: HumanEval_110_exchange
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // In this problem, you will implement a function that takes two lists of numbers,\n\
  \    // and determines whether it is possible to perform an exchange of elements\n\
  \    // between them to make lst1 a list of only even numbers.\n    // There is\
  \ no limit on the number of exchanged elements between lst1 and lst2.\n    // If\
  \ it is possible to exchange elements between the lst1 and lst2 to make\n    //\
  \ all the elements of lst1 to be even, return \"YES\".\n    // Otherwise, return\
  \ \"NO\".\n    // For example:\n    // >>> exchange((List[Long](1l.toLong, 2l.toLong,\
  \ 3l.toLong, 4l.toLong)), (List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong)))\n\
  \    // (\"YES\")\n    // >>> exchange((List[Long](1l.toLong, 2l.toLong, 3l.toLong,\
  \ 4l.toLong)), (List[Long](1l.toLong, 5l.toLong, 3l.toLong, 4l.toLong)))\n    //\
  \ (\"NO\")\n    // It is assumed that the input lists will be non-empty.\n    def\
  \ exchange(lst1 : List[Long], lst2 : List[Long]) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(exchange((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong)), (List[Long](1l.toLong, 2l.toLong, 3l.toLong,\
  \ 4l.toLong))).equals((\"YES\")));\n    assert(exchange((List[Long](1l.toLong, 2l.toLong,\
  \ 3l.toLong, 4l.toLong)), (List[Long](1l.toLong, 5l.toLong, 3l.toLong, 4l.toLong))).equals((\"\
  NO\")));\n    assert(exchange((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong)),\
  \ (List[Long](2l.toLong, 1l.toLong, 4l.toLong, 3l.toLong))).equals((\"YES\")));\n\
  \    assert(exchange((List[Long](5l.toLong, 7l.toLong, 3l.toLong)), (List[Long](2l.toLong,\
  \ 6l.toLong, 4l.toLong))).equals((\"YES\")));\n    assert(exchange((List[Long](5l.toLong,\
  \ 7l.toLong, 3l.toLong)), (List[Long](2l.toLong, 6l.toLong, 3l.toLong))).equals((\"\
  NO\")));\n    assert(exchange((List[Long](3l.toLong, 2l.toLong, 6l.toLong, 1l.toLong,\
  \ 8l.toLong, 9l.toLong)), (List[Long](3l.toLong, 5l.toLong, 5l.toLong, 1l.toLong,\
  \ 1l.toLong, 1l.toLong))).equals((\"NO\")));\n    assert(exchange((List[Long](100l.toLong,\
  \ 200l.toLong)), (List[Long](200l.toLong, 200l.toLong))).equals((\"YES\")));\n \
  \   }\n\n}\n"
completions: ["        // Your code here\n        return \"\";", "        // Your\
    \ code here\n        return \"NO\"", "        // Your code here\n        \"NO\"",
  "        // Your code here\n        \"YES\"", "        // Your code here\n     \
    \   return \"\";", "        // Your code here\n        null", "        // Your\
    \ code here\n        \"NO\"", "        // Your code here\n        null", "   \
    \     // Your code here\n        return \"\"", "        // Your code here\n  \
    \      \"NO\"", "        // Your code here\n        \"YES\"", "        // Your\
    \ code here\n        \"NO\"", "        // Your code here\n        var lst1even\
    \ = lst1.filter(x => x % 2 == 0)\n        var lst2even = lst2.filter(x => x %\
    \ 2 == 0)\n        if (lst1even.length == lst1.length) \"YES\"\n        else if\
    \ (lst2even.length == lst2.length) \"YES\"\n        else if (lst1even.length +\
    \ lst2even.length >= lst1.length) \"YES\"\n        else \"NO\"", "        // Your\
    \ code here\n        if (lst1.filter(x => x % 2 == 0).length == lst1.length) \"\
    YES\"\n        else {\n            val lst1odd = lst1.filter(x => x % 2 == 1)\n\
    \            val lst2even = lst2.filter(x => x % 2 == 0)\n            if (lst1odd.length\
    \ == lst2even.length) \"YES\"\n            else \"NO\"\n        }", "        //\
    \ Your code here\n        val evens = lst1.filter(_ % 2 == 0)\n        val odds\
    \ = lst2.filter(_ % 2 == 1)\n        if (evens.size + odds.size == lst1.size)\
    \ \"YES\" else \"NO\"", "        // Your code here\n        var lst1Even = lst1.filter(x\
    \ => x % 2 == 0)\n        var lst2Odd = lst2.filter(x => x % 2 != 0)\n       \
    \ if (lst1Even.length >= lst2Odd.length) \"YES\" else \"NO\"", "        // Your\
    \ code here\n        \"YES\"", "        // Your code here\n        if (lst1.exists(x\
    \ => x % 2 == 1)) {\n            if (lst2.exists(x => x % 2 == 0)) {\n       \
    \         \"YES\"\n            } else {\n                \"NO\"\n            }\n\
    \        } else {\n            \"YES\"\n        }", "        // Your code here\n\
    \        if (lst1.filter(_ % 2 == 0).length == lst1.length) \"YES\"\n        else\
    \ {\n            val lst1Odd = lst1.filter(_ % 2 == 1)\n            val lst2Even\
    \ = lst2.filter(_ % 2 == 0)\n            if (lst1Odd.length <= lst2Even.length)\
    \ \"YES\"\n            else \"NO\"\n        }", "        // Your code here\n \
    \       var lst1_even = lst1.filter(_ % 2 == 0)\n        var lst2_odd = lst2.filter(_\
    \ % 2 != 0)\n        if (lst1_even.length + lst2_odd.length >= lst1.length) \"\
    YES\" else \"NO\"", "        // Your code here\n        null", "        // Your\
    \ code here\n        val lst1_even = lst1.filter(x => x % 2 == 0)\n        val\
    \ lst2_odd = lst2.filter(x => x % 2 == 1)\n        if (lst1_even.length == lst1.length)\
    \ return \"YES\"\n        if (lst1_even.length + lst2_odd.length >= lst1.length)\
    \ return \"YES\"\n        return \"NO\"", "        // Your code here\n       \
    \ \"NO\"", "        // Your code here\n        null", "        // Your code here\n\
    \        if (lst1.filter(_ % 2 == 0).size == lst1.size) \"YES\"\n        else\
    \ {\n            val odd1 = lst1.filter(_ % 2 == 1)\n            val odd2 = lst2.filter(_\
    \ % 2 == 1)\n            if (odd1.size > odd2.size) \"NO\"\n            else \"\
    YES\"\n        }", "        // Your code here\n        return \"\"", "       \
    \ // Your code here\n        null", "        // Your code here\n        \"NO\"",
  "        // Your code here\n        val lst1_even = lst1.filter(_ % 2 == 0)\n  \
    \      val lst2_odd = lst2.filter(_ % 2 == 1)\n        if (lst1_even.length >=\
    \ lst1.length - lst2_odd.length) \"YES\" else \"NO\"", "        // Your code here\n\
    \        \"NO\"", "        // Your code here\n        val lst1_odd = lst1.filter(x\
    \ => x % 2 == 1)\n        val lst2_even = lst2.filter(x => x % 2 == 0)\n     \
    \   if (lst1_odd.length <= lst2_even.length) \"YES\" else \"NO\"", "        //\
    \ Your code here\n        return \"\"", "        // Your code here\n        val\
    \ lst1Even = lst1.filter(x => x % 2 == 0)\n        val lst2Even = lst2.filter(x\
    \ => x % 2 == 0)\n        if (lst1Even.length >= lst1.length) \"YES\"\n      \
    \  else if (lst2Even.length >= lst2.length) \"YES\"\n        else \"NO\"", " \
    \       // Your code here\n        if (lst1.forall(_ % 2 == 0)) \"YES\"\n    \
    \    else {\n            val lst1odd = lst1.filter(_ % 2 == 1)\n            val\
    \ lst2even = lst2.filter(_ % 2 == 0)\n            if (lst1odd.length > lst2even.length)\
    \ \"NO\"\n            else \"YES\"\n        }", "        // Your code here\n \
    \       \"NO\"", "        // Your code here\n        if (lst1.exists(x => x %\
    \ 2 == 1) && lst2.exists(x => x % 2 == 0)) \"YES\" else \"NO\"", "        // Your\
    \ code here\n        \"NO\"", "        // Your code here\n        \"NO\"", " \
    \       // Your code here\n        \"NO\"", "        // Your code here\n     \
    \   if (lst1.forall(_ % 2 == 0)) \"YES\"\n        else {\n            val lst1odd\
    \ = lst1.filter(_ % 2 == 1)\n            val lst2even = lst2.filter(_ % 2 == 0)\n\
    \            if (lst1odd.size <= lst2even.size) \"YES\"\n            else \"NO\"\
    \n        }", "        // Your code here\n        val evens = lst1.filter(x =>\
    \ x % 2 == 0)\n        val odds = lst2.filter(x => x % 2 == 1)\n        if (evens.length\
    \ + odds.length >= lst1.length) \"YES\" else \"NO\"", "        // Your code here\n\
    \        val lst1_even = lst1.filter(x => x % 2 == 0)\n        val lst2_odd =\
    \ lst2.filter(x => x % 2 == 1)\n        if (lst1_even.length + lst2_odd.length\
    \ == lst1.length) \"YES\" else \"NO\"", "        // Your code here\n        \"\
    NO\"", "        // Your code here\n        var lst1Even = lst1.filter(x => x %\
    \ 2 == 0)\n        var lst2Odd = lst2.filter(x => x % 2 != 0)\n        if (lst1Even.length\
    \ == lst1.length) return \"YES\"\n        if (lst1Even.length + lst2Odd.length\
    \ >= lst1.length) return \"YES\"\n        return \"NO\"", "        // Your code\
    \ here\n        \"NO\"", "        // Your code here\n        \"YES\"", "     \
    \   // Your code here\n        val lst1_odd = lst1.filter(x => x % 2 == 1)\n \
    \       val lst2_even = lst2.filter(x => x % 2 == 0)\n        if (lst1_odd.length\
    \ <= lst2_even.length) \"YES\" else \"NO\"", "        // Your code here\n    \
    \    \"YES\"", "        // Your code here\n        var flag = true\n        for\
    \ (i <- lst1) {\n            if (i % 2 != 0) {\n                flag = false\n\
    \            }\n        }\n        if (flag) {\n            return \"YES\"\n \
    \       }\n        var flag2 = true\n        for (i <- lst2) {\n            if\
    \ (i % 2 != 0) {\n                flag2 = false\n            }\n        }\n  \
    \      if (flag2) {\n            return \"YES\"\n        }\n        return \"\
    NO\"", "        // Your code here\n        return \"\";", "        // Your code\
    \ here\n        \"NO\"", "        // Your code here\n        var lst1Even = lst1.filter(x\
    \ => x % 2 == 0)\n        var lst2Odd = lst2.filter(x => x % 2 != 0)\n       \
    \ if (lst1Even.length >= lst2Odd.length) return \"YES\"\n        else return \"\
    NO\"", "        // Your code here\n        null", "        // Your code here\n\
    \        return \"\"", "        // Your code here\n        val lst1_odd = lst1.filter(x\
    \ => x % 2 == 1)\n        val lst2_even = lst2.filter(x => x % 2 == 0)\n     \
    \   if (lst1_odd.length <= lst2_even.length) \"YES\" else \"NO\"", "        //\
    \ Your Code Here\n        val lst1_odd = lst1.filter(x => x % 2 == 1)\n      \
    \  val lst2_even = lst2.filter(x => x % 2 == 0)\n        if (lst1_odd.length <=\
    \ lst2_even.length) \"YES\" else \"NO\"", "        // Your code here\n       \
    \ val lst1_even = lst1.filter(_ % 2 == 0)\n        val lst2_odd = lst2.filter(_\
    \ % 2 == 1)\n        if (lst1_even.length + lst2_odd.length >= lst1.length) \"\
    YES\" else \"NO\"", "        // Your code here\n        \"NO\"", "        // Your\
    \ code here\n        \"YES\"", "        // Your code here\n        \"NO\"", " \
    \       // Your code here\n        \"NO\"", "        // Your code here\n     \
    \   \"NO\"", "        // Your code here\n        \"NO\"", "        // Your code\
    \ here\n        null", "        // Your code here\n        return \"\"", "   \
    \     // Your code here\n        \"NO\"", "        // Your code here\n       \
    \ val lst1_odd = lst1.filter(x => x % 2 == 1)\n        val lst2_even = lst2.filter(x\
    \ => x % 2 == 0)\n        if (lst1_odd.length <= lst2_even.length) \"YES\" else\
    \ \"NO\"", "        // Your code here\n        \"NO\"", "        // Your code\
    \ here\n        \"NO\"", "        // Your code here\n        return \"\"", " \
    \       // Your code here\n        null", "        // Your code here\n       \
    \ val lst1_even = lst1.filter(_ % 2 == 0)\n        val lst2_odd = lst2.filter(_\
    \ % 2 == 1)\n        if (lst1_even.length + lst2_odd.length >= lst1.length) \"\
    YES\" else \"NO\"", "        // Your code here\n        \"YES\"", "        //\
    \ Your code here\n        val lst1_even = lst1.filter(_ % 2 == 0)\n        val\
    \ lst2_odd = lst2.filter(_ % 2 == 1)\n        if (lst1_even.length + lst2_odd.length\
    \ >= lst1.length) \"YES\" else \"NO\"", "        // Your code here\n        var\
    \ lst1_even = lst1.filter(x => x % 2 == 0)\n        var lst2_odd = lst2.filter(x\
    \ => x % 2 != 0)\n        if (lst1_even.length >= lst2_odd.length) \"YES\" else\
    \ \"NO\"", "        // Your code here\n        return \"NO\"", "        // Your\
    \ code here\n        \"NO\"", "        // Your code here\n        null", "   \
    \     // Your code here\n        null", "        // Your code here\n        if\
    \ (lst1.forall(_ % 2 == 0)) \"YES\"\n        else {\n            val odd1 = lst1.filter(_\
    \ % 2 == 1)\n            val odd2 = lst2.filter(_ % 2 == 1)\n            if (odd1.length\
    \ == odd2.length) \"YES\"\n            else \"NO\"\n        }", "        // Your\
    \ Code Here\n        if (lst1.filter(_ % 2 == 0).length == lst1.length) \"YES\"\
    \n        else {\n            val odds = lst1.filter(_ % 2 == 1)\n           \
    \ val evens = lst2.filter(_ % 2 == 0)\n            if (odds.length > evens.length)\
    \ \"NO\"\n            else \"YES\"\n        }", "        // Your code here\n \
    \       \"NO\"", "        // Your code here\n        \"NO\"", "        // Your\
    \ code here\n        return \"NO\"", "        // Your code here\n        null",
  "        // Your code here\n        val lst1_even = lst1.filter(x => x % 2 == 0)\n\
    \        val lst2_odd = lst2.filter(x => x % 2 == 1)\n        if (lst1_even.length\
    \ >= lst1.length) \"YES\"\n        else if (lst1_even.length + lst2_odd.length\
    \ >= lst1.length) \"YES\"\n        else \"NO\"", "        // Your code here\n\
    \        \"NO\"", "        // Your code here\n        val lst1_odd = lst1.filter(x\
    \ => x % 2 == 1)\n        val lst2_even = lst2.filter(x => x % 2 == 0)\n     \
    \   if (lst1_odd.length <= lst2_even.length) \"YES\" else \"NO\"", "        //\
    \ Your code here\n        val lst1_even = lst1.filter(_ % 2 == 0)\n        val\
    \ lst2_odd = lst2.filter(_ % 2 == 1)\n        if (lst1_even.length + lst2_odd.length\
    \ >= lst1.length) \"YES\" else \"NO\"", "        // Your code here\n        val\
    \ lst1_even = lst1.filter(_ % 2 == 0)\n        val lst2_odd = lst2.filter(_ %\
    \ 2 == 1)\n        if (lst1_even.length + lst2_odd.length >= lst1.length) \"YES\"\
    \ else \"NO\"", "        // Your code here\n        if (lst1.exists(_ % 2 == 1))\
    \ {\n            if (lst2.exists(_ % 2 == 0)) \"YES\"\n            else \"NO\"\
    \n        }\n        else \"YES\"", "        // Your code here\n        if (lst1.filter(_\
    \ % 2 == 0).length == lst1.length) \"YES\"\n        else if (lst2.filter(_ % 2\
    \ == 0).length == lst2.length) \"YES\"\n        else if (lst1.filter(_ % 2 ==\
    \ 0).length + lst2.filter(_ % 2 == 0).length == lst1.length + lst2.length) \"\
    YES\"\n        else \"NO\"", "        // Your code here\n        \"YES\"", " \
    \       // Your code here\n        \"YES\"", "        // Your code here\n    \
    \    var lst1_odd = new ArrayBuffer[Long]()\n        var lst2_even = new ArrayBuffer[Long]()\n\
    \        for (i <- lst1) {\n            if (i % 2 == 1) lst1_odd += i\n      \
    \  }\n        for (i <- lst2) {\n            if (i % 2 == 0) lst2_even += i\n\
    \        }\n        if (lst1_odd.length <= lst2_even.length) \"YES\" else \"NO\"",
  "        // Your code here\n        \"NO\"", "        // Your code here\n      \
    \  \"NO\"", "        // Your code here\n        \"NO\"", "        // Your code\
    \ here\n        return \"\"", "        // Your code here\n        null", "   \
    \     // Your code here\n        val lst1Even = lst1.filter(x => x % 2 == 0)\n\
    \        val lst2Even = lst2.filter(x => x % 2 == 0)\n        if (lst1Even.length\
    \ == lst1.length) \"YES\"\n        else if (lst2Even.length == lst2.length) \"\
    YES\"\n        else if (lst1Even.length + lst2Even.length >= lst1.length) \"YES\"\
    \n        else \"NO\"", "        // Your code here\n        return \"NO\"", " \
    \       // Your code here\n        if (lst1.filter(_ % 2 == 0).length == lst1.length)\
    \ \"YES\"\n        else if (lst2.filter(_ % 2 == 0).length == lst2.length) \"\
    YES\"\n        else if (lst1.filter(_ % 2 == 0).length + lst2.filter(_ % 2 ==\
    \ 0).length >= lst1.length) \"YES\"\n        else \"NO\"", "        // Fill in\
    \ the code here\n        val l1 = lst1.filter(x => x % 2 == 0)\n        val l2\
    \ = lst2.filter(x => x % 2 == 1)\n        if (l1.length == lst1.length) \"YES\"\
    \n        else if (l2.length == lst2.length) \"NO\"\n        else \"YES\"", " \
    \       // Your code here\n        var lst1Even = lst1.filter(x => x % 2 == 0)\n\
    \        var lst2Odd = lst2.filter(x => x % 2 != 0)\n        if (lst1Even.length\
    \ >= lst2Odd.length) {\n            return \"YES\"\n        }\n        return\
    \ \"NO\"", "        // Your code here\n        \"NO\"", "        // Your code\
    \ here\n        \"NO\"", "        // Your code here\n        \"NO\"", "      \
    \  // Your code here\n        \"YES\"", "        // Your code here\n        return\
    \ \"YES\"", "        // Your code here\n        return \"\";", "        // Your\
    \ code here\n        null", "        // Your code here\n        return \"\"",
  "        // Your code here\n        val lst1_odd = lst1.filter(_ % 2 == 1)\n   \
    \     val lst2_even = lst2.filter(_ % 2 == 0)\n        if (lst1_odd.length <=\
    \ lst2_even.length) \"YES\" else \"NO\"", "        // Your code here\n       \
    \ var odd1 = 0\n        var odd2 = 0\n        for (i <- lst1) {\n            if\
    \ (i % 2 == 1) odd1 += 1\n        }\n        for (i <- lst2) {\n            if\
    \ (i % 2 == 1) odd2 += 1\n        }\n        if (odd1 == odd2) \"YES\" else \"\
    NO\"", "        // Your code here\n        \"NO\"", "        // Your code here\n\
    \        null", "        // Your Code Here\n        \"NO\"", "        // Your\
    \ code here\n        null", "        // Your code here\n        null", "     \
    \   // Your code here\n        null", "        // Your code here\n        null",
  "        // Your code here\n        val lst1_even = lst1.filter(x => x % 2 == 0)\n\
    \        val lst2_odd = lst2.filter(x => x % 2 == 1)\n        if (lst1_even.length\
    \ >= lst1.length) \"YES\"\n        else if (lst1_even.length + lst2_odd.length\
    \ >= lst1.length) \"YES\"\n        else \"NO\"", "        // Your code here\n\
    \        val lst1_even = lst1.filter(x => x % 2 == 0)\n        val lst2_odd =\
    \ lst2.filter(x => x % 2 == 1)\n        if (lst1_even.length >= lst1.length) {\n\
    \            \"YES\"\n        } else if (lst1_even.length + lst2_odd.length >=\
    \ lst1.length) {\n            \"YES\"\n        } else {\n            \"NO\"\n\
    \        }", "        // Your code here\n        if (lst1.filter(_ % 2 == 0).length\
    \ == lst1.length) \"YES\"\n        else {\n            val lst1Odd = lst1.filter(_\
    \ % 2 == 1)\n            val lst2Even = lst2.filter(_ % 2 == 0)\n            if\
    \ (lst1Odd.length <= lst2Even.length) \"YES\"\n            else \"NO\"\n     \
    \   }", "        // Your code here\n        val lst1even = lst1.filter(x => x\
    \ % 2 == 0)\n        val lst2even = lst2.filter(x => x % 2 == 0)\n        if (lst1even.length\
    \ == lst1.length) \"YES\"\n        else if (lst2even.length == lst2.length) \"\
    YES\"\n        else if (lst1even.length + lst2even.length >= lst1.length) \"YES\"\
    \n        else \"NO\"", "        // Your code here\n        null", "        //\
    \ Your code here\n        return \"\"", "        // Your code here\n        null",
  "        // Your code here\n        return \"\";", "        // Your code here\n\
    \        if (lst1.forall(x => x % 2 == 0)) return \"YES\"\n        if (lst2.forall(x\
    \ => x % 2 == 0)) return \"YES\"\n        val lst1odd = lst1.filter(x => x % 2\
    \ == 1)\n        val lst2odd = lst2.filter(x => x % 2 == 1)\n        if (lst1odd.length\
    \ == 0 || lst2odd.length == 0) return \"NO\"\n        if (lst1odd.length == lst2odd.length)\
    \ return \"YES\"\n        if (lst1odd.length > lst2odd.length) {\n           \
    \ val lst1even = lst1.filter(x => x % 2 == 0)\n            if (lst1even.length\
    \ >= lst2odd.length) return \"YES\"\n            else return \"NO\"\n        }\n\
    \        else {\n            val lst2even = lst2.filter(x => x % 2 == 0)\n   \
    \         if (lst2even.length >= lst1odd.length) return \"YES\"\n            else\
    \ return \"NO\"\n        }", "        // Your code here\n        val lst1_odd\
    \ = lst1.filter(x => x % 2 == 1)\n        val lst2_even = lst2.filter(x => x %\
    \ 2 == 0)\n        if (lst1_odd.length <= lst2_even.length) \"YES\" else \"NO\"",
  "        // Your Code Here\n        return \"NO\"", "        // Your code here\n\
    \        \"NO\"", "        // Your code here\n        return \"\"", "        //\
    \ Your code here\n        \"YES\"", "        // Your code here\n        \"NO\"",
  "        // Fill in the code here\n        \"YES\"", "        // Your code here\n\
    \        return \"NO\"", "        // Your code here\n        val lst1_even = lst1.filter(x\
    \ => x % 2 == 0)\n        val lst2_odd = lst2.filter(x => x % 2 == 1)\n      \
    \  if (lst1_even.length + lst2_odd.length >= lst1.length) \"YES\" else \"NO\"",
  "        // Your Code Here\n        return \"\"", "        // Your code here\n \
    \       null", "        // Your code here\n        return \"\";", "        //\
    \ Your code here\n        val lst1_even = lst1.filter(x => x % 2 == 0)\n     \
    \   val lst2_odd = lst2.filter(x => x % 2 == 1)\n        if (lst1_even.length\
    \ + lst2_odd.length >= lst1.length) \"YES\" else \"NO\"", "        // Your code\
    \ here\n        val lst1_even = lst1.filter(x => x % 2 == 0)\n        val lst2_odd\
    \ = lst2.filter(x => x % 2 == 1)\n        if (lst1_even.length + lst2_odd.length\
    \ >= lst1.length) \"YES\" else \"NO\"", "        // Your code here\n        if\
    \ (lst1.filter(_ % 2 == 0).length == lst1.length) \"YES\"\n        else if (lst2.filter(_\
    \ % 2 == 0).length == lst2.length) \"YES\"\n        else {\n            val lst1Odd\
    \ = lst1.filter(_ % 2 == 1)\n            val lst2Odd = lst2.filter(_ % 2 == 1)\n\
    \            if (lst1Odd.length == lst2Odd.length) \"YES\"\n            else \"\
    NO\"\n        }", "        // Your code here\n        return \"\"", "        //\
    \ Your code here\n        val lst1_odd = lst1.filter(x => x % 2 == 1)\n      \
    \  val lst2_even = lst2.filter(x => x % 2 == 0)\n        if (lst1_odd.length <=\
    \ lst2_even.length) \"YES\" else \"NO\"", "        // Your code here\n       \
    \ val lst1_even = lst1.filter(x => x % 2 == 0)\n        val lst2_odd = lst2.filter(x\
    \ => x % 2 == 1)\n        if (lst1_even.length >= lst1.length) \"YES\"\n     \
    \   else if (lst1_even.length + lst2_odd.length >= lst1.length) \"YES\"\n    \
    \    else \"NO\"", "        // Your code here\n        if (lst1.filter(_ % 2 ==\
    \ 0).size == lst1.size) \"YES\"\n        else if (lst2.filter(_ % 2 == 0).size\
    \ == lst2.size) \"YES\"\n        else \"NO\"", "        // Your code here\n  \
    \      \"NO\"", "        // Your code here\n        \"YES\"", "        // Your\
    \ code here\n        \"YES\"", "        // Your code here\n        \"YES\"", " \
    \       // Your code here\n        \"NO\"", "        // Your code here\n     \
    \   \"NO\"", "        // Your code here\n        null", "        // Your code\
    \ here\n        null", "        // Your code here\n        return \"NO\"", " \
    \       // Your code here\n        null", "        // Your code here\n       \
    \ \"NO\"", "        // Your code here\n        if (lst1.filter(_ % 2 == 0).length\
    \ == lst1.length) \"YES\"\n        else {\n            val lst1odd = lst1.filter(_\
    \ % 2 == 1)\n            val lst2even = lst2.filter(_ % 2 == 0)\n            if\
    \ (lst1odd.length == lst2even.length) \"YES\"\n            else \"NO\"\n     \
    \   }", "        // Your code here\n        null", "        // Your code here\n\
    \        \"NO\"", "        // Your code here\n        \"NO\"", "        // Your\
    \ code here\n        return \"\"", "        // Your code here\n        null",
  "        // Your code here\n        return \"NO\"", "        // Your code here\n\
    \        return \"NO\"", "        // Your code here\n        null", "        //\
    \ Your code here\n        var lst1_even = lst1.filter(x => x % 2 == 0)\n     \
    \   var lst2_odd = lst2.filter(x => x % 2 != 0)\n        if (lst1_even.length\
    \ >= lst2_odd.length) {\n            return \"YES\"\n        }\n        return\
    \ \"NO\"", "        // Your code here\n        \"NO\"", "        // Your code\
    \ here\n        null", "        // Your code here\n        null", "        //\
    \ Your code here\n        var lst1Even = lst1.filter(x => x % 2 == 0)\n      \
    \  var lst2Odd = lst2.filter(x => x % 2 != 0)\n        if (lst1Even.length >=\
    \ lst2Odd.length) \"YES\" else \"NO\"", "        // Your code here\n        null",
  "        // Your code here\n        null", "        // Your code here\n        \"\
    NO\"", "        // Your code here\n        null", "        // Your Code Here\n\
    \        \"YES\"", "        // Your code here\n        \"NO\"", "        // Your\
    \ code here\n        val lst1_even = lst1.filter(x => x % 2 == 0)\n        val\
    \ lst2_odd = lst2.filter(x => x % 2 == 1)\n        if (lst1_even.length == lst1.length)\
    \ {\n            \"YES\"\n        } else if (lst1_even.length + lst2_odd.length\
    \ >= lst1.length) {\n            \"YES\"\n        } else {\n            \"NO\"\
    \n        }", "        // Your code here\n        return \"NO\"", "        //\
    \ Your code here\n        \"NO\"", "        // Your code here\n        \"NO\"",
  "        // Your code here\n        null", "        // Your code here\n        \"\
    NO\"", "        // Your code here\n        val lst1_even = lst1.filter(_ % 2 ==\
    \ 0)\n        val lst2_odd = lst2.filter(_ % 2 == 1)\n        if (lst1_even.length\
    \ + lst2_odd.length >= lst1.length) \"YES\" else \"NO\"", "        // Your code\
    \ here\n        null", "        // Your code here\n        var even = 0\n    \
    \    var odd = 0\n        for (i <- lst1) {\n            if (i % 2 == 0) even\
    \ += 1\n            else odd += 1\n        }\n        for (i <- lst2) {\n    \
    \        if (i % 2 == 0) odd += 1\n            else even += 1\n        }\n   \
    \     if (even == lst1.length) \"YES\"\n        else \"NO\"", "        // Your\
    \ code here\n        var lst1_even = lst1.filter(x => x % 2 == 0)\n        var\
    \ lst2_odd = lst2.filter(x => x % 2 != 0)\n        if (lst1_even.length == lst1.length)\
    \ {\n            return \"YES\"\n        }\n        if (lst1_even.length + lst2_odd.length\
    \ >= lst1.length) {\n            return \"YES\"\n        }\n        return \"\
    NO\"", "        // Your code here\n        return \"\";", "        // Your code\
    \ here\n        \"NO\"", "        // Your code here\n        \"NO\"", "      \
    \  // Your code here\n        null", "        // Your code here\n        null",
  "        // Your code here\n        \"NO\"", "        // Your code here\n      \
    \  \"NO\"", "        // Your code here\n        val lst1Even = lst1.filter(_ %\
    \ 2 == 0)\n        val lst2Even = lst2.filter(_ % 2 == 0)\n        if (lst1Even.length\
    \ == lst1.length) \"YES\"\n        else if (lst2Even.length == lst2.length) \"\
    YES\"\n        else if (lst1Even.length + lst2Even.length >= lst1.length) \"YES\"\
    \n        else \"NO\"", "        // Your code here\n        if (lst1.forall(x\
    \ => x % 2 == 0)) \"YES\"\n        else {\n            var lst1_odd = lst1.filter(x\
    \ => x % 2 == 1)\n            var lst2_even = lst2.filter(x => x % 2 == 0)\n \
    \           if (lst1_odd.length <= lst2_even.length) \"YES\"\n            else\
    \ \"NO\"\n        }"]
stop_tokens:
- "\n    }\n"

name: HumanEval_118_get_closest_vowel
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You are given a word. Your task is to find the closest vowel that stands\
  \ between \n    // two consonants from the right side of the word (case sensitive).\n\
  \    // Vowels in the beginning and ending doesn't count. Return empty string if\
  \ you didn't\n    // find any vowel met the above condition. \n    // You may assume\
  \ that the given string contains English letter only.\n    // Example:\n    // >>>\
  \ getClosestVowel((\"yogurt\"))\n    // (\"u\")\n    // >>> getClosestVowel((\"\
  FULL\"))\n    // (\"U\")\n    // >>> getClosestVowel((\"quick\"))\n    // (\"\"\
  )\n    // >>> getClosestVowel((\"ab\"))\n    // (\"\")\n    def getClosestVowel(word\
  \ : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(getClosestVowel((\"\
  yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
  u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
  eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n\
  \    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
  most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n\
  \    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
  quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"i\"\
  )));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
  Above\")).equals((\"o\")));\n    }\n\n}\n"
completions: ["        // Fill up this function body\n        // 'a' to 'z' : 97 to\
    \ 122\n        // 'A' to 'Z' : 65 to 90\n        // '0' to '9' : 48 to 57\n  \
    \      var vowels = \"aeiouAEIOU\"\n        var result = \"\"\n        var min\
    \ = word.length\n        var i = word.length - 1\n        while (i >= 0) {\n \
    \           if (vowels.contains(word(i))) {\n                var j = i - 1\n \
    \               while (j >= 0) {\n                    if (!vowels.contains(word(j)))\
    \ {\n                        var k = j - 1\n                        while (k >=\
    \ 0) {\n                            if (!vowels.contains(word(k))) {\n       \
    \                         if (i - k < min) {\n                               \
    \     min = i - k\n                                    result = word(i).toString\n\
    \                                }\n                                k = -1\n \
    \                           }\n                            else k -= 1\n     \
    \                   }\n                        j = -1\n                    }\n\
    \                    else j -= 1\n                }\n            }\n         \
    \   i -= 1\n        }\n        result", "        // Fill up this function body\n\
    \        // 'a' to 'z' : 97 to 122\n        // 'A' to 'Z' : 65 to 90\n       \
    \ // '0' to '9' : 48 to 57\n        // ' '        : 32\n        // '.'       \
    \ : 46\n        // ','        : 44\n        // '!'        : 33\n        // '?'\
    \        : 63\n        // '\\n'       : 10\n        // '\\t'       : 9\n     \
    \   // '\\r'       : 13\n        // '\\b'       : 8\n        // '\\f'       :\
    \ 12\n        // '\\''       : 39\n        // '\\\"'       : 34\n        // '\\\
    \\'       : 92\n        // '\\0'       : 0\n        // '\\000'     : 0\n     \
    \   // '\\u0000'   : 0\n        // '\\u{0}'    : 0\n        // '\\u{0000}' : 0\n\
    \        // '\\u{00000000}' : 0\n        // '\\u{0000000000}' : 0\n        //\
    \ '\\u{000000000000}' : 0\n        // '\\u{00000000000000}' : 0\n        // '\\\
    u{0000000000000000}' : 0\n        // '\\u{000000000000000000}' : 0\n        //\
    \ '\\u{00000000000000000000}' : 0\n        // '\\u{0000000000000000000000}' :\
    \ 0\n        // '\\u{000000000000000000000000}' : 0\n        // '\\u{00000000000000000000000000}'\
    \ : 0\n        // '\\u{0000000000000000000000000000}' : 0\n        // '\\u{000000000000000000000000000000}'\
    \ : 0\n        // '\\u{00000000000000000000000000000000}' : 0\n        // '\\\
    u{0000000000000000000000000000000000}' : 0\n        // '\\u{000000000000000000000000000000000000}'\
    \ : 0\n        // '\\u{00000000000000000000000000000000000000}' : 0\n        //\
    \ '\\u{0000000000000000000000000000000000000000}' : 0\n        // '\\u{000000000000000000000000000000000000000000}'\
    \ : 0\n        // '\\u{00000000000000000000000000000000000000000000}' : 0\n  \
    \      // '\\u{0000000000000000000000000000000000000000000000}' : 0\n        //\
    \ '\\u{000000000000000000000000000000000000000000000000}' : 0\n        // '",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var result = \"\"\n        for (i <- word.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(word(i))) {\n           \
    \     if (i == word.length - 1) result = word(i).toString\n                else\
    \ if (consonants.contains(word(i + 1))) result = word(i).toString\n          \
    \  }\n        }\n        result", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val wordArray = word.toCharArray\n        var closestVowel = \"\
    \"\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i < wordArray.length - 1 && !vowels.contains(wordArray(i\
    \ + 1))) {\n                    closestVowel = wordArray(i).toString\n       \
    \             break\n                }\n                else if (i > 0 && !vowels.contains(wordArray(i\
    \ - 1))) {\n                    closestVowel = wordArray(i).toString\n       \
    \             break\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val chars = word.toCharArray\n        var result\
    \ = \"\"\n        for (i <- 0 until chars.length) {\n            if (vowels.contains(chars(i)))\
    \ {\n                if (i > 0 && i < chars.length - 1) {\n                  \
    \  if (consonants.contains(chars(i - 1)) && consonants.contains(chars(i + 1)))\
    \ {\n                        result = chars(i).toString\n                    \
    \    break\n                    }\n                }\n            }\n        }\n\
    \        result", "        val vowels = \"aeiou\"\n        val consonants = \"\
    bcdfghjklmnpqrstvwxyz\"\n        var closestVowel = \"\"\n        var closestVowelDistance\
    \ = word.length\n        for (i <- 0 until word.length) {\n            val c =\
    \ word(i)\n            if (consonants.contains(c)) {\n                for (j <-\
    \ i + 1 until word.length) {\n                    val c2 = word(j)\n         \
    \           if (vowels.contains(c2)) {\n                        if (j - i < closestVowelDistance)\
    \ {\n                            closestVowelDistance = j - i\n              \
    \              closestVowel = c2.toString\n                        }\n       \
    \             }\n                    else if (consonants.contains(c2)) {\n   \
    \                     break\n                    }\n                }\n      \
    \      }\n        }\n        closestVowel", "        val vowels = \"aeiouAEIOU\"\
    \n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n  \
    \      var closestVowel = \"\"\n        var closestVowelDistance = 0\n       \
    \ for (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i + 1 until word.length) {\n                  \
    \  if (vowels.contains(word(j))) {\n                        if (closestVowelDistance\
    \ == 0 || j - i < closestVowelDistance) {\n                            closestVowelDistance\
    \ = j - i\n                            closestVowel = word(j).toString\n     \
    \                   }\n                    }\n                }\n            }\n\
    \        }\n        closestVowel", "        val vowels = \"aeiouAEIOU\"\n    \
    \    val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n       \
    \ val wordArray = word.toCharArray\n        var result = \"\"\n        for (i\
    \ <- wordArray.length - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        result = wordArray(j).toString\n                \
    \        return result\n                    }\n                }\n           \
    \ }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\n      \
    \  val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        var\
    \ result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n           \
    \ if (consonants.contains(word(i))) {\n                for (j <- i - 1 to 0 by\
    \ -1) {\n                    if (vowels.contains(word(j))) {\n               \
    \         result = word(j).toString\n                        return result\n \
    \                   }\n                }\n            }\n        }\n        result",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (consonants.contains(word(i))) {\n                for (j <- i\
    \ - 1 to 0 by -1) {\n                    if (vowels.contains(word(j))) {\n   \
    \                     result = word(j).toString\n                        return\
    \ result\n                    }\n                }\n            }\n        }\n\
    \        result", "        // Fill up this function body\n        // 'a' to 'z'\n\
    \        val vowels = \"aeiou\"\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n        val wordArray = word.toCharArray\n        var vowelIndex = -1\n    \
    \    for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowelIndex = i\n                break\n            }\n  \
    \      }\n        if (vowelIndex == -1) return \"\"\n        for (i <- vowelIndex\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i))) {\n  \
    \              return wordArray(vowelIndex).toString\n            }\n        }\n\
    \        \"\"", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var result = \"\"\n  \
    \      for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i == word.length - 1) {\n                    if (consonants.contains(word(i\
    \ - 1))) {\n                        result = word(i).toString\n              \
    \      }\n                } else if (i == 0) {\n                    if (consonants.contains(word(i\
    \ + 1))) {\n                        result = word(i).toString\n              \
    \      }\n                } else {\n                    if (consonants.contains(word(i\
    \ - 1)) && consonants.contains(word(i + 1))) {\n                        result\
    \ = word(i).toString\n                    }\n                }\n            }\n\
    \        }\n        result", "        // Fill up this function body\n        //\
    \ 'a' is 97, 'e' is 101, 'i' is 105, 'o' is 111, 'u' is 117, 'y' is 121\n    \
    \    // 'A' is 65, 'E' is 69, 'I' is 73, 'O' is 79, 'U' is 85, 'Y' is 89\n   \
    \     // 'z' is 122, 'Z' is 90\n        var index = word.length - 1\n        var\
    \ closestVowel = \"\"\n        while (index >= 0) {\n            if (word(index)\
    \ == 'a' || word(index) == 'e' || word(index) == 'i' || word(index) == 'o' ||\
    \ word(index) == 'u' || word(index) == 'y' || word(index) == 'A' || word(index)\
    \ == 'E' || word(index) == 'I' || word(index) == 'O' || word(index) == 'U' ||\
    \ word(index) == 'Y') {\n                if (index == word.length - 1) {\n   \
    \                 index -= 1\n                    continue\n                }\n\
    \                if (word(index + 1) == 'a' || word(index + 1) == 'e' || word(index\
    \ + 1) == 'i' || word(index + 1) == 'o' || word(index + 1) == 'u' || word(index\
    \ + 1) == 'y' || word(index + 1) == 'A' || word(index + 1) == 'E' || word(index\
    \ + 1) == 'I' || word(index + 1) == 'O' || word(index + 1) == 'U' || word(index\
    \ + 1) == 'Y') {\n                    index -= 1\n                    continue\n\
    \                }\n                closestVowel = word(index).toString\n    \
    \            break\n            }\n            index -= 1\n        }\n       \
    \ closestVowel", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ chars = word.toCharArray\n        var result = \"\"\n        for (i <- 0 until\
    \ chars.length - 1) {\n            if (!vowels.contains(chars(i)) && vowels.contains(chars(i\
    \ + 1))) {\n                result = chars(i + 1).toString\n                break\n\
    \            }\n        }\n        result", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n    \
    \    val wordSet = word.toLowerCase.toSet\n        val vowelSet = wordSet & vowels\n\
    \        val consonantSet = wordSet & consonants\n        val vowelList = vowelSet.toList.sorted\n\
    \        val consonantList = consonantSet.toList.sorted\n        if (vowelList.length\
    \ == 0 || consonantList.length == 0) return \"\"\n        var min = Int.MaxValue\n\
    \        var result = \"\"\n        for (v <- vowelList) {\n            for (c\
    \ <- consonantList) {\n                val distance = abs(v - c)\n           \
    \     if (distance < min) {\n                    min = distance\n            \
    \        result = v.toString.toUpperCase\n                }\n            }\n \
    \       }\n        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        var result = \"\"\n        var min = Int.MaxValue\n        for (i <-\
    \ 0 until word.length - 1) {\n            if (vowels.contains(word(i)) && !vowels.contains(word(i\
    \ + 1))) {\n                val distance = word.length - i - 1\n             \
    \   if (distance < min) {\n                    min = distance\n              \
    \      result = word(i).toString\n                }\n            }\n        }\n\
    \        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n       \
    \ val wordList = word.toList\n        val wordListReversed = wordList.reverse\n\
    \        val wordListReversedWithIndex = wordListReversed.zipWithIndex\n     \
    \   val wordListReversedWithIndexFiltered = wordListReversedWithIndex.filter(x\
    \ => vowels.contains(x._1))\n        if (wordListReversedWithIndexFiltered.isEmpty)\
    \ return \"\"\n        val wordListReversedWithIndexFilteredWithIndex = wordListReversedWithIndexFiltered.zipWithIndex\n\
    \        val wordListReversedWithIndexFilteredWithIndexFiltered = wordListReversedWithIndexFilteredWithIndex.filter(x\
    \ => x._1._2 - x._2 > 0)\n        if (wordListReversedWithIndexFilteredWithIndexFiltered.isEmpty)\
    \ return \"\"\n        val wordListReversedWithIndexFilteredWithIndexFilteredSorted\
    \ = wordListReversedWithIndexFilteredWithIndexFiltered.sortBy(x => x._1._2 - x._2)\n\
    \        wordListReversedWithIndexFilteredWithIndexFilteredSorted.head._1._1.toString",
  "        // Fill up this function body\n        // 'a' to 'z' is 97 to 122\n   \
    \     // 'A' to 'Z' is 65 to 90\n        // '0' to '9' is 48 to 57\n        //\
    \ ' ' is 32\n        // '.' is 46\n        // ',' is 44\n        // '!' is 33\n\
    \        // '?' is 63\n        // '(' is 40\n        // ')' is 41\n        //\
    \ '[' is 91\n        // ']' is 93\n        // '{' is 123\n        // '}' is 125\n\
    \        // '+' is 43\n        // '-' is 45\n        // '*' is 42\n        //\
    \ '/' is 47\n        // '%' is 37\n        // '=' is 61\n        // '<' is 60\n\
    \        // '>' is 62\n        // '&' is 38\n        // '|' is 124\n        //\
    \ '^' is 94\n        // '~' is 126\n        // '`' is 96\n        // ':' is 58\n\
    \        // ';' is 59\n        // '\"' is 34\n        // '\\'' is 39\n       \
    \ // '\\\\' is 92\n        // '#' is 35\n        // '$' is 36\n        // '@'\
    \ is 64\n        // '_' is 95\n        // ' ' is 32\n        // ' ' is 32\n  \
    \      // ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n        // '\
    \ ' is 32\n        // ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n\
    \        // ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n        //\
    \ ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n\
    \        // ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n        //\
    \ ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n\
    \        // ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n        //\
    \ ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n\
    \       ", "        // Fill up this function body\n        // 'a', 'e', 'i', 'o',\
    \ 'u'\n        // 'A', 'E', 'I', 'O', 'U'\n        var vowel = \"\"\n        var\
    \ min = word.length\n        for (i <- 0 until word.length) {\n            if\
    \ (word(i) == 'a' || word(i) == 'e' || word(i) == 'i' || word(i) == 'o' || word(i)\
    \ == 'u' || word(i) == 'A' || word(i) == 'E' || word(i) == 'I' || word(i) == 'O'\
    \ || word(i) == 'U') {\n                var j = i - 1\n                while (j\
    \ >= 0 && (word(j) == 'a' || word(j) == 'e' || word(j) == 'i' || word(j) == 'o'\
    \ || word(j) == 'u' || word(j) == 'A' || word(j) == 'E' || word(j) == 'I' || word(j)\
    \ == 'O' || word(j) == 'U')) {\n                    j -= 1\n                }\n\
    \                if (j >= 0) {\n                    var k = i + 1\n          \
    \          while (k < word.length && (word(k) == 'a' || word(k) == 'e' || word(k)\
    \ == 'i' || word(k) == 'o' || word(k) == 'u' || word(k) == 'A' || word(k) == 'E'\
    \ || word(k) == 'I' || word(k) == 'O' || word(k) == 'U')) {\n                \
    \        k += 1\n                    }\n                    if (k < word.length)\
    \ {\n                        if (i - j < min) {\n                            min\
    \ = i - j\n                            vowel = word(i).toString\n            \
    \            }\n                    }\n                }\n            }\n    \
    \    }\n        vowel", "        var vowels = List(\"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n        var result = \"\"\n        for (i <- word.length - 1 to 0 by\
    \ -1) {\n            if (vowels.contains(word(i).toString)) {\n              \
    \  if (i == word.length - 1) return result\n                if (i == 0) return\
    \ result\n                if (!vowels.contains(word(i + 1).toString) && !vowels.contains(word(i\
    \ - 1).toString)) {\n                    result = word(i).toString\n         \
    \           return result\n                }\n            }\n        }\n     \
    \   result", "        // Fill up this function body\n        // 'a' to 'z' is\
    \ 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // '0' to '9' is 48 to\
    \ 57\n        // ' ' is 32\n        // '.' is 46\n        // ',' is 44\n     \
    \   // '!' is 33\n        // '?' is 63\n        // ''' is 39\n        // '\"'\
    \ is 34\n        // ':' is 58\n        // ';' is 59\n        // '-' is 45\n  \
    \      // '_' is 95\n        // '(' is 40\n        // ')' is 41\n        // '['\
    \ is 91\n        // ']' is 93\n        // '{' is 123\n        // '}' is 125\n\
    \        // '+' is 43\n        // '=' is 61\n        // '<' is 60\n        //\
    \ '>' is 62\n        // '/' is 47\n        // '\\' is 92\n        // '|' is 124\n\
    \        // '`' is 96\n        // '~' is 126\n        // '@' is 64\n        //\
    \ '#' is 35\n        // '$' is 36\n        // '%' is 37\n        // '^' is 94\n\
    \        // '&' is 38\n        // '*' is 42\n        // ' ' is 32\n        //\
    \ '\\t' is 9\n        // '\\n' is 10\n        // '\\r' is 13\n        // '\\f'\
    \ is 12\n        // '\\b' is 8\n        // '\\u000B' is 11\n        // '\\u000C'\
    \ is 12\n        // '\\u000D' is 13\n        // '\\u000E' is 14\n        // '\\\
    u000F' is 15\n        // '\\u0010' is 16\n        // '\\u0011' is 17\n       \
    \ // '\\u0012' is 18\n        // '\\u0013' is 19\n        // '\\u0014' is 20\n\
    \        // '\\u0015' is 21\n        // '\\u0016' is 22\n        // '\\u0017'\
    \ is 23\n        // '\\u0018' is 24\n        // '\\u0019'", "        // Fill up\
    \ this function body\n        // 'a' to 'z' : 97 to 122\n        // 'A' to 'Z'\
    \ : 65 to 90\n        // '0' to '9' : 48 to 57\n        var vowels = List('a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        var result = \"\"\n  \
    \      var flag = false\n        for (i <- word.length - 1 to 0 by -1) {\n   \
    \         if (vowels.contains(word(i))) {\n                if (i > 0 && i < word.length\
    \ - 1) {\n                    if (word(i - 1) >= 'a' && word(i - 1) <= 'z' &&\
    \ word(i + 1) >= 'a' && word(i + 1) <= 'z') {\n                        result\
    \ = word(i).toString\n                        flag = true\n                  \
    \  }\n                }\n            }\n            if (flag) {\n            \
    \    return result\n            }\n        }\n        return result", "      \
    \  val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (vowels.contains(word(i))) {\n                if (i == word.length\
    \ - 1) return \"\"\n                if (consonants.contains(word(i + 1))) return\
    \ word(i).toString\n            }\n        }\n        return \"\"", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z')\n        val wordList = word.toList\n        val wordListReversed\
    \ = wordList.reverse\n        var closestVowel = \"\"\n        var vowelIndex\
    \ = -1\n        for (i <- 0 until wordListReversed.length - 1) {\n           \
    \ if (vowels.contains(wordListReversed(i)) && consonants.contains(wordListReversed(i\
    \ + 1))) {\n                vowelIndex = i\n                closestVowel = wordListReversed(i).toString\n\
    \                break\n            }\n        }\n        if (vowelIndex == -1)\
    \ \"\" else closestVowel", "        // Fill up this function body\n        //\
    \ 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // '0' to\
    \ '9' is 48 to 57\n        // ' ' is 32\n        // '!' is 33\n        // '\"\
    ' is 34\n        // '#' is 35\n        // '$' is 36\n        // '%' is 37\n  \
    \      // '&' is 38\n        // ''' is 39\n        // '(' is 40\n        // ')'\
    \ is 41\n        // '*' is 42\n        // '+' is 43\n        // ',' is 44\n  \
    \      // '-' is 45\n        // '.' is 46\n        // '/' is 47\n        // ':'\
    \ is 58\n        // ';' is 59\n        // '<' is 60\n        // '=' is 61\n  \
    \      // '>' is 62\n        // '?' is 63\n        // '@' is 64\n        // '['\
    \ is 91\n        // '\\' is 92\n        // ']' is 93\n        // '^' is 94\n \
    \       // '_' is 95\n        // '`' is 96\n        // '{' is 123\n        //\
    \ '|' is 124\n        // '}' is 125\n        // '~' is 126\n        var vowels\
    \ = List('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        var consonants\
    \ = List('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r',\
    \ 's', 't', 'v', 'w', 'x', 'y', 'z', 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L',\
    \ 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z')\n        var result\
    \ = \"\"\n        var index = word.length - 1\n        var found = false\n   \
    \     while (index >= 0 && !found) {\n            if (consonants.contains", " \
    \       val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var closestVowel = \"\"\n        var closestVowelIndex\
    \ = -1\n        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i != word.length - 1 && consonants.contains(word(i +\
    \ 1))) {\n                    closestVowel = word(i).toString\n              \
    \      closestVowelIndex = i\n                    break\n                }\n \
    \           }\n        }\n        if (closestVowelIndex != -1) {\n           \
    \ for (i <- closestVowelIndex - 1 to 0 by -1) {\n                if (consonants.contains(word(i)))\
    \ {\n                    return closestVowel\n                }\n            }\n\
    \        }\n        return \"\"", "        val vowels = \"aeiouAEIOU\"\n     \
    \   var closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n    \
    \    for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var distance = 0\n                for (j <- i + 1 until word.length)\
    \ {\n                    if (!vowels.contains(word(j))) distance += 1\n      \
    \              else break\n                }\n                if (distance < closestDistance)\
    \ {\n                    closestDistance = distance\n                    closestVowel\
    \ = word(i).toString\n                }\n            }\n        }\n        closestVowel",
  "        // Fill up this function body\n        // 'a', 'e', 'i', 'o', 'u'\n   \
    \     // 'A', 'E', 'I', 'O', 'U'\n        var vowels = Set('a', 'e', 'i', 'o',\
    \ 'u', 'A', 'E', 'I', 'O', 'U')\n        var consonants = Set('b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z', 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S',\
    \ 'T', 'V', 'W', 'X', 'Y', 'Z')\n        var result = \"\"\n        var lastConsonant\
    \ = -1\n        var firstVowel = -1\n        for (i <- 0 until word.length) {\n\
    \            if (consonants.contains(word(i))) {\n                lastConsonant\
    \ = i\n            }\n            if (vowels.contains(word(i))) {\n          \
    \      if (firstVowel == -1) {\n                    firstVowel = i\n         \
    \       }\n                if (lastConsonant != -1 && firstVowel != -1) {\n  \
    \                  if (i - lastConsonant < firstVowel - i) {\n               \
    \         result = word(i).toString\n                    }\n                }\n\
    \            }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\
    \n        var closestVowel = \"\"\n        var closestVowelIndex = -1\n      \
    \  for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                closestVowel = word(i).toString\n                closestVowelIndex\
    \ = i\n                break\n            }\n        }\n        if (closestVowelIndex\
    \ == -1) return \"\"\n        for (i <- closestVowelIndex - 1 to 0 by -1) {\n\
    \            if (!vowels.contains(word(i))) return closestVowel\n        }\n \
    \       \"\"", "        // Fill up this function body\n        // 'a' to 'z' is\
    \ 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // '0' to '9' is 48 to\
    \ 57\n        // ' ' is 32\n        // '.' is 46\n        // ',' is 44\n     \
    \   // '!' is 33\n        // '?' is 63\n        // '(' is 40\n        // ')' is\
    \ 41\n        // '[' is 91\n        // ']' is 93\n        // '{' is 123\n    \
    \    // '}' is 125\n        // '+' is 43\n        // '-' is 45\n        // '*'\
    \ is 42\n        // '/' is 47\n        // '%' is 37\n        // '^' is 94\n  \
    \      // '&' is 38\n        // '|' is 124\n        // '<' is 60\n        // '>'\
    \ is 62\n        // '=' is 61\n        // '~' is 126\n        // '`' is 96\n \
    \       // '@' is 64\n        // '#' is 35\n        // '$' is 36\n        // ':'\
    \ is 58\n        // ';' is 59\n        // '\"' is 34\n        // ''' is 39\n \
    \       // '\\' is 92\n        // '_' is 95\n        // ' ' is 32\n        //\
    \ ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n\
    \        // ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n        //\
    \ ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n\
    \        // ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n        //\
    \ ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n\
    \        // ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n        //\
    \ ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n\
    \        // ' ' is 32\n        // ' ' is 32\n        // ' ' is 32\n        //\
    \ ' ' is 32\n        // '", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val result = new StringBuilder\n        var i = word.length - 1\n   \
    \     while (i >= 0) {\n            if (vowels.contains(word(i))) {\n        \
    \        var j = i - 1\n                while (j >= 0) {\n                   \
    \ if (!vowels.contains(word(j))) {\n                        result.append(word(i))\n\
    \                        return result.toString\n                    }\n     \
    \               j -= 1\n                }\n            }\n            i -= 1\n\
    \        }\n        result.toString", "        val vowels = \"aeiouAEIOU\"\n \
    \       val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    \
    \    var closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n   \
    \     for (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i + 1 until word.length) {\n                  \
    \  if (vowels.contains(word(j))) {\n                        for (k <- j + 1 until\
    \ word.length) {\n                            if (consonants.contains(word(k)))\
    \ {\n                                val distance = k - i\n                  \
    \              if (distance < closestDistance) {\n                           \
    \         closestDistance = distance\n                                    closestVowel\
    \ = word(j).toString\n                                }\n                    \
    \        }\n                        }\n                    }\n               \
    \ }\n            }\n        }\n        closestVowel", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n\
    \        val wordArray = word.toCharArray\n        var vowelIndex = -1\n     \
    \   for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowelIndex = i\n                break\n            }\n  \
    \      }\n        if (vowelIndex == -1) return \"\"\n        for (i <- vowelIndex\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i))) {\n  \
    \              return wordArray(vowelIndex).toString\n            }\n        }\n\
    \        \"\"", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n\
    \        var result = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1)\
    \ {\n            if (consonants.contains(wordArray(i))) {\n                for\
    \ (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        result = wordArray(j).toString\n                \
    \        return result\n                    }\n                }\n           \
    \ }\n        }\n        result", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        var closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n\
    \        for (i <- 0 until word.length - 1) {\n            if (!vowels.contains(word(i))\
    \ && vowels.contains(word(i + 1))) {\n                var j = i + 1\n        \
    \        while (j < word.length && vowels.contains(word(j))) {\n             \
    \       if (j - i < closestDistance) {\n                        closestDistance\
    \ = j - i\n                        closestVowel = word(j).toString\n         \
    \           }\n                    j += 1\n                }\n            }\n\
    \        }\n        closestVowel", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var result\
    \ = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(word(j)))\
    \ {\n                        result = word(j).toString\n                     \
    \   return result\n                    }\n                }\n            }\n \
    \       }\n        result", "        val vowels = List(\"a\", \"e\", \"i\", \"\
    o\", \"u\")\n        val wordList = word.toList\n        for (i <- wordList.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(wordList(i).toString)) {\n\
    \                if (i == wordList.length - 1) return \"\"\n                if\
    \ (!vowels.contains(wordList(i + 1).toString)) return wordList(i).toString\n \
    \           }\n        }\n        \"\"", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        val chars = word.toCharArray\n        var result = \"\"\n\
    \        for (i <- chars.length - 1 to 0 by -1) {\n            if (vowels.contains(chars(i)))\
    \ {\n                if (i == chars.length - 1) {\n                    result\
    \ = \"\"\n                } else if (i == 0) {\n                    result = \"\
    \"\n                } else if (vowels.contains(chars(i + 1))) {\n            \
    \        result = \"\"\n                } else if (vowels.contains(chars(i - 1)))\
    \ {\n                    result = \"\"\n                } else {\n           \
    \         result = chars(i).toString\n                }\n            }\n     \
    \   }\n        result", "        // Fill up this function body\n        // 'a'\
    \ <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n\
    \        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' ||\
    \ 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a'\
    \ <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n\
    \        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' ||\
    \ 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a'\
    \ <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n\
    \        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' ||\
    \ 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a'\
    \ <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n\
    \        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' ||\
    \ 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a'\
    \ <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n\
    \        // 'a' <= c <= 'z' || 'A' <= c <= '", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val wordArray = word.toCharArray\n        val wordArrayRev\
    \ = wordArray.reverse\n        var vowel = \"\"\n        var distance = Int.MaxValue\n\
    \        for (i <- 0 until wordArrayRev.length - 1) {\n            if (vowels.contains(wordArrayRev(i))\
    \ && !vowels.contains(wordArrayRev(i + 1))) {\n                if (i < distance)\
    \ {\n                    distance = i\n                    vowel = wordArrayRev(i).toString\n\
    \                }\n            }\n        }\n        vowel", "        // Fill\
    \ up this function body\n        // 'a' to 'z' is 97 to 122\n        // 'A' to\
    \ 'Z' is 65 to 90\n        // '0' to '9' is 48 to 57\n        // ' ' is 32\n \
    \       // '!' is 33\n        // '\"' is 34\n        // '#' is 35\n        //\
    \ '$' is 36\n        // '%' is 37\n        // '&' is 38\n        // ''' is 39\n\
    \        // '(' is 40\n        // ')' is 41\n        // '*' is 42\n        //\
    \ '+' is 43\n        // ',' is 44\n        // '-' is 45\n        // '.' is 46\n\
    \        // '/' is 47\n        // ':' is 58\n        // ';' is 59\n        //\
    \ '<' is 60\n        // '=' is 61\n        // '>' is 62\n        // '?' is 63\n\
    \        // '@' is 64\n        // '[' is 91\n        // '\\' is 92\n        //\
    \ ']' is 93\n        // '^' is 94\n        // '_' is 95\n        // '`' is 96\n\
    \        // '{' is 123\n        // '|' is 124\n        // '}' is 125\n       \
    \ // '~' is 126\n        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I',\
    \ 'O', 'U')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z', 'B', 'C', 'D',\
    \ 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X',\
    \ 'Y', 'Z')\n        val wordArray = word.toCharArray\n        var lastConsonant\
    \ = -1\n        var firstVowel = -1\n        for (i <- wordArray.length - 1 to",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val vowelIndexes = word.zipWithIndex.filter(x => vowels.contains(x._1)).map(_._2)\n\
    \        if (vowelIndexes.isEmpty) return \"\"\n        val consonantIndexes =\
    \ word.zipWithIndex.filter(x => consonants.contains(x._1)).map(_._2)\n       \
    \ if (consonantIndexes.isEmpty) return \"\"\n        val closestVowelIndex = vowelIndexes.filter(x\
    \ => consonantIndexes.filter(y => y < x).nonEmpty).minBy(x => consonantIndexes.filter(y\
    \ => y < x).max)\n        word(closestVowelIndex).toString", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val chars = word.toCharArray\n     \
    \   var result = \"\"\n        for (i <- chars.length - 1 to 0 by -1) {\n    \
    \        if (vowels.contains(chars(i))) {\n                if (i == chars.length\
    \ - 1) return \"\"\n                else if (vowels.contains(chars(i + 1))) return\
    \ \"\"\n                else return chars(i).toString\n            }\n       \
    \ }\n        return \"\"", "        val vowels = \"aeiouAEIOU\"\n        val consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        val wordList = word.toList\n\
    \        val vowelList = vowels.toList\n        val consonantList = consonants.toList\n\
    \        val vowelIndexList = wordList.zipWithIndex.filter(x => vowelList.contains(x._1)).map(x\
    \ => x._2)\n        val consonantIndexList = wordList.zipWithIndex.filter(x =>\
    \ consonantList.contains(x._1)).map(x => x._2)\n        val vowelConsonantPairs\
    \ = vowelIndexList.map(x => (x, consonantIndexList.filter(y => y > x).min))\n\
    \        val vowelConsonantPairsFiltered = vowelConsonantPairs.filter(x => x._2\
    \ != None)\n        if (vowelConsonantPairsFiltered.length == 0) \"\"\n      \
    \  else wordList(vowelConsonantPairsFiltered.minBy(x => x._2)._1).toString", " \
    \       // Fill up this function body\n        // 'a' to 'z' : 97 to 122\n   \
    \     // 'A' to 'Z' : 65 to 90\n        // '0' to '9' : 48 to 57\n        // '\
    \ '        : 32\n        // ','        : 44\n        // '.'        : 46\n    \
    \    // '!'        : 33\n        // '?'        : 63\n        // '\\''       :\
    \ 39\n        // '\"'        : 34\n        // ':'        : 58\n        // ';'\
    \        : 59\n        // '('        : 40\n        // ')'        : 41\n      \
    \  // '['        : 91\n        // ']'        : 93\n        // '{'        : 123\n\
    \        // '}'        : 125\n        // '-'        : 45\n        // '_'     \
    \   : 95\n        // '+'        : 43\n        // '='        : 61\n        // '<'\
    \        : 60\n        // '>'        : 62\n        // '@'        : 64\n      \
    \  // '#'        : 35\n        // '$'        : 36\n        // '%'        : 37\n\
    \        // '^'        : 94\n        // '&'        : 38\n        // '*'      \
    \  : 42\n        // '/'        : 47\n        // '\\'        : 92\n        // '|'\
    \        : 124\n        // '~'        : 126\n        // '`'        : 96\n    \
    \    // ' '        : 32\n        // '\\t'       : 9\n        // '\\n'       :\
    \ 10\n        // '\\r'       : 13\n        // '\\f'       : 12\n        // '\\\
    b'       : 8\n        // '\\u000C'   : 12\n        // '\\u000B'   : 11\n     \
    \   // '\\u000E'   : 14\n        // '\\u000F'   : 15\n        // '\\u001F'   :\
    \ 31\n        // '\\u007F'   : 127\n        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u', 'A', 'E', 'I', 'O', 'U')\n        val consonants = Set('b', 'c',", "  \
    \      val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var vowel = \"\"\n        for (i <- 0 until word.length - 1) {\n   \
    \         if (consonants.contains(word(i)) && vowels.contains(word(i + 1))) {\n\
    \                vowel = word(i + 1).toString\n                break\n       \
    \     }\n        }\n        vowel", "        val vowels = List('a', 'e', 'i',\
    \ 'o', 'u')\n        val wordList = word.toList\n        val wordListReversed\
    \ = wordList.reverse\n        val wordListReversedWithIndex = wordListReversed.zipWithIndex\n\
    \        val wordListReversedWithIndexFiltered = wordListReversedWithIndex.filter(x\
    \ => vowels.contains(x._1))\n        val wordListReversedWithIndexFilteredMapped\
    \ = wordListReversedWithIndexFiltered.map(x => (x._1, x._2, x._2 + 1))\n     \
    \   val wordListReversedWithIndexFilteredMappedFiltered = wordListReversedWithIndexFilteredMapped.filter(x\
    \ => x._3 < wordListReversedWithIndexFiltered.length)\n        val wordListReversedWithIndexFilteredMappedFilteredMapped\
    \ = wordListReversedWithIndexFilteredMappedFiltered.map(x => (x._1, x._2, x._3,\
    \ wordListReversedWithIndexFiltered(x._3)._2))\n        val wordListReversedWithIndexFilteredMappedFilteredMappedMapped\
    \ = wordListReversedWithIndexFilteredMappedFilteredMapped.map(x => (x._1, x._2,\
    \ x._3, x._4, x._4 - x._2))\n        val wordListReversedWithIndexFilteredMappedFilteredMappedMappedSorted\
    \ = wordListReversedWithIndexFilteredMappedFilteredMappedMapped.sortBy(x => x._5)\n\
    \        if (wordListReversedWithIndexFilteredMappedFilteredMappedMappedSorted.length\
    \ == 0) \"\" else wordListReversedWithIndexFilteredMappedFilteredMappedMappedSorted(0)._1.toString",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val chars = word.toCharArray\n\
    \        var result = \"\"\n        for (i <- 0 until chars.length - 1) {\n  \
    \          if (vowels.contains(chars(i)) && !vowels.contains(chars(i + 1))) {\n\
    \                result = chars(i).toString\n                break\n         \
    \   }\n        }\n        result", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val wordSet\
    \ = word.toLowerCase.toSet\n        val vowelsInWord = wordSet.intersect(vowels)\n\
    \        val consonantsInWord = wordSet.intersect(consonants)\n        val vowelIndices\
    \ = word.toLowerCase.zipWithIndex.filter(x => vowelsInWord.contains(x._1)).map(_._2)\n\
    \        val consonantIndices = word.toLowerCase.zipWithIndex.filter(x => consonantsInWord.contains(x._1)).map(_._2)\n\
    \        if (vowelIndices.length < 2 || consonantIndices.length < 2) \"\"\n  \
    \      else {\n            val vowelConsonantPairs = vowelIndices.map(x => (x,\
    \ consonantIndices.filter(y => y > x).min))\n            val vowelConsonantPairsSorted\
    \ = vowelConsonantPairs.sortBy(x => x._2)\n            val closestVowel = vowelConsonantPairsSorted.head._1\n\
    \            word.charAt(closestVowel).toString\n        }", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        var closestVowel = \"\"\n        var\
    \ closestVowelDistance = word.length\n        for (i <- 0 until word.length) {\n\
    \            if (vowels.contains(word(i))) {\n                var distance = word.length\
    \ - i\n                if (distance < closestVowelDistance) {\n              \
    \      closestVowelDistance = distance\n                    closestVowel = word(i).toString\n\
    \                }\n            }\n        }\n        closestVowel", "       \
    \ val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val wordArray = word.toCharArray\n\
    \        var vowel = ' '\n        var vowelIndex = -1\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i))) {\n      \
    \          vowel = wordArray(i)\n                vowelIndex = i\n            \
    \    break\n            }\n        }\n        if (vowelIndex == -1) return \"\"\
    \n        for (i <- vowelIndex - 1 to 0 by -1) {\n            if (!vowels.contains(wordArray(i)))\
    \ return vowel.toString\n        }\n        \"\"", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n\
    \        var result = \"\"\n        var min = Int.MaxValue\n        for (i <-\
    \ 0 until word.length - 1) {\n            if (consonants.contains(word(i)) &&\
    \ vowels.contains(word(i + 1))) {\n                if (min > i + 1) {\n      \
    \              min = i + 1\n                    result = word(i + 1).toString\n\
    \                }\n            }\n        }\n        result", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z')\n        var result = \"\"\n        var minDistance = word.length\n\
    \        for (i <- 0 until word.length - 1) {\n            if (consonants.contains(word(i))\
    \ && vowels.contains(word(i + 1))) {\n                var j = i + 1\n        \
    \        while (j < word.length && vowels.contains(word(j))) {\n             \
    \       if (consonants.contains(word(j + 1))) {\n                        if (j\
    \ - i < minDistance) {\n                            minDistance = j - i\n    \
    \                        result = word(j).toString\n                        }\n\
    \                    }\n                    j += 1\n                }\n      \
    \      }\n        }\n        result", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        var result = \"\"\n        for (i <- word.length - 1 to 0\
    \ by -1) {\n            if (vowels.contains(word(i))) {\n                if (i\
    \ == word.length - 1) {\n                    if (i - 1 >= 0 && !vowels.contains(word(i\
    \ - 1))) result = word(i).toString\n                } else if (i == 0) {\n   \
    \                 if (i + 1 < word.length && !vowels.contains(word(i + 1))) result\
    \ = word(i).toString\n                } else {\n                    if (!vowels.contains(word(i\
    \ - 1)) && !vowels.contains(word(i + 1))) result = word(i).toString\n        \
    \        }\n            }\n        }\n        result", "        // Fill up this\
    \ function body\n        // 'a' to 'z' : 97 to 122\n        // 'A' to 'Z' : 65\
    \ to 90\n        // '0' to '9' : 48 to 57\n        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        val consonants = Set('b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z', 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q',\
    \ 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z')\n        val wordArray = word.toCharArray\n\
    \        var closestVowel = \"\"\n        var closestVowelIndex = -1\n       \
    \ var closestConsonantIndex = -1\n        for (i <- 0 until wordArray.length)\
    \ {\n            if (vowels.contains(wordArray(i))) {\n                if (closestVowelIndex\
    \ == -1) {\n                    closestVowelIndex = i\n                    closestVowel\
    \ = wordArray(i).toString\n                }\n                else {\n       \
    \             if (i - closestConsonantIndex < closestVowelIndex - closestConsonantIndex)\
    \ {\n                        closestVowelIndex = i\n                        closestVowel\
    \ = wordArray(i).toString\n                    }\n                }\n        \
    \    }\n            else if (consonants.contains(wordArray(i))) {\n          \
    \      if (closestConsonantIndex == -1) closestConsonantIndex = i\n          \
    \      else {\n                    if (i > closestConsonantIndex) closestConsonantIndex\
    \ = i\n                }\n            }\n        }\n        closestVowel", " \
    \       val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val wordArray = word.toCharArray\n\
    \        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i == wordArray.length - 1) return \"\"\n            \
    \    if (!vowels.contains(wordArray(i + 1))) return wordArray(i).toString\n  \
    \          }\n        }\n        \"\"", "        var vowel = \"\"\n        var\
    \ distance = word.length\n        for (i <- 0 until word.length) {\n         \
    \   if (word(i) == 'a' || word(i) == 'e' || word(i) == 'i' || word(i) == 'o' ||\
    \ word(i) == 'u') {\n                var j = i - 1\n                while (j >=\
    \ 0 && !(word(j) == 'a' || word(j) == 'e' || word(j) == 'i' || word(j) == 'o'\
    \ || word(j) == 'u')) {\n                    j -= 1\n                }\n     \
    \           if (j >= 0) {\n                    var k = i + 1\n               \
    \     while (k < word.length && !(word(k) == 'a' || word(k) == 'e' || word(k)\
    \ == 'i' || word(k) == 'o' || word(k) == 'u')) {\n                        k +=\
    \ 1\n                    }\n                    if (k < word.length) {\n     \
    \                   if (distance > k - j) {\n                            distance\
    \ = k - j\n                            vowel = word(i).toString\n            \
    \            }\n                    }\n                }\n            }\n    \
    \    }\n        vowel", "        val vowels = \"aeiouAEIOU\"\n        val consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        var result = \"\"\n\
    \        var min = word.length\n        for (i <- 0 until word.length - 1) {\n\
    \            if (consonants.contains(word(i)) && vowels.contains(word(i + 1)))\
    \ {\n                if (i < min) {\n                    min = i\n           \
    \         result = word(i + 1).toString\n                }\n            }\n  \
    \      }\n        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        var result = \"\"\n        var minDistance = Int.MaxValue\n        for\
    \ (i <- 0 until word.length) {\n            if (vowels.contains(word(i))) {\n\
    \                var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !vowels.contains(word(k))) k +=\
    \ 1\n                    if (k < word.length) {\n                        val distance\
    \ = k - j\n                        if (distance < minDistance) {\n           \
    \                 minDistance = distance\n                            result =\
    \ word(i).toString\n                        }\n                    }\n       \
    \         }\n            }\n        }\n        result", "        val vowels =\
    \ Set('a', 'e', 'i', 'o', 'u')\n        val wordArray = word.toCharArray\n   \
    \     var vowel = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1) {\n\
    \            if (vowels.contains(wordArray(i))) {\n                vowel = wordArray(i).toString\n\
    \                break\n            }\n        }\n        vowel", "        val\
    \ vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (consonants.contains(word(i))) {\n                for (j <- i\
    \ - 1 to 0 by -1) {\n                    if (vowels.contains(word(j))) {\n   \
    \                     result = word(j).toString\n                        return\
    \ result\n                    }\n                }\n            }\n        }\n\
    \        result", "        val vowels = \"aeiouAEIOU\"\n        val consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        var result = \"\"\n\
    \        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i == word.length - 1) return \"\"\n                if\
    \ (consonants.contains(word(i + 1))) {\n                    result = word(i).toString\n\
    \                    return result\n                }\n            }\n       \
    \ }\n        result", "        val vowels = \"aeiouAEIOU\"\n        val consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        var result = \"\"\n\
    \        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i == word.length - 1) {\n                    if (consonants.contains(word(i\
    \ - 1))) result = word(i).toString\n                } else if (i == 0) {\n   \
    \                 if (consonants.contains(word(i + 1))) result = word(i).toString\n\
    \                } else {\n                    if (consonants.contains(word(i\
    \ - 1)) && consonants.contains(word(i + 1))) result = word(i).toString\n     \
    \           }\n            }\n        }\n        result", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z')\n        var closestVowel = \"\"\n        var closestDistance = word.length\n\
    \        for (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i + 1 until word.length) {\n                  \
    \  if (vowels.contains(word(j))) {\n                        if (j - i < closestDistance)\
    \ {\n                            closestDistance = j - i\n                   \
    \         closestVowel = word(j).toString\n                        }\n       \
    \             }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (consonants.contains(word(i))) {\n                for (j <- i\
    \ - 1 to 0 by -1) {\n                    if (vowels.contains(word(j))) {\n   \
    \                     result = word(j).toString\n                        return\
    \ result\n                    }\n                }\n            }\n        }\n\
    \        result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n       \
    \ var closest = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n      \
    \      if (vowels.contains(word(i))) {\n                if (i == word.length -\
    \ 1) return \"\"\n                if (vowels.contains(word(i + 1))) return \"\"\
    \n                closest = word(i).toString\n                return closest\n\
    \            }\n        }\n        closest", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n    \
    \    val wordSet = word.toSet\n        val wordArray = word.toCharArray\n    \
    \    val wordLength = word.length\n        val vowelSet = wordSet & vowels\n \
    \       val consonantSet = wordSet & consonants\n        if (vowelSet.isEmpty\
    \ || consonantSet.isEmpty) return \"\"\n        var result = \"\"\n        var\
    \ distance = wordLength\n        for (i <- 0 until wordLength) {\n           \
    \ if (vowels.contains(wordArray(i))) {\n                var j = i + 1\n      \
    \          while (j < wordLength && !consonants.contains(wordArray(j))) j += 1\n\
    \                if (j < wordLength) {\n                    var k = j + 1\n  \
    \                  while (k < wordLength && !consonants.contains(wordArray(k)))\
    \ k += 1\n                    if (k < wordLength && k - i < distance) {\n    \
    \                    distance = k - i\n                        result = wordArray(i).toString\n\
    \                    }\n                }\n            }\n        }\n        result",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val n = word.length\n        var i = n - 1\n        while (i >= 0) {\n\
    \            if (consonants.contains(word(i))) {\n                var j = i -\
    \ 1\n                while (j >= 0) {\n                    if (vowels.contains(word(j)))\
    \ {\n                        return word(j).toString\n                    }\n\
    \                    if (consonants.contains(word(j))) {\n                   \
    \     return \"\"\n                    }\n                    j -= 1\n       \
    \         }\n                return \"\"\n            }\n            i -= 1\n\
    \        }\n        return \"\"", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val wordArray = word.toCharArray\n        val result = new StringBuilder\n\
    \        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i == wordArray.length - 1) {\n                    if\
    \ (vowels.contains(wordArray(i - 1))) result.append(wordArray(i))\n          \
    \      } else if (i == 0) {\n                    if (vowels.contains(wordArray(i\
    \ + 1))) result.append(wordArray(i))\n                } else {\n             \
    \       if (vowels.contains(wordArray(i - 1)) && vowels.contains(wordArray(i +\
    \ 1))) result.append(wordArray(i))\n                }\n            }\n       \
    \ }\n        result.toString", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n\
    \        val wordList = word.toList\n        val reversedWordList = wordList.reverse\n\
    \        val reversedWordListWithIndex = reversedWordList.zipWithIndex\n     \
    \   val reversedWordListWithIndexWithVowel = reversedWordListWithIndex.filter(x\
    \ => vowels.contains(x._1))\n        val reversedWordListWithIndexWithVowelWithConsonant\
    \ = reversedWordListWithIndexWithVowel.filter(x => !vowels.contains(reversedWordList(x._2\
    \ - 1)))\n        if (reversedWordListWithIndexWithVowelWithConsonant.isEmpty)\
    \ \"\" else reversedWordListWithIndexWithVowelWithConsonant.head._1.toString",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val chars = word.toCharArray\n\
    \        val n = chars.length\n        var result = \"\"\n        for (i <- 0\
    \ until n) {\n            if (vowels.contains(chars(i))) {\n                if\
    \ (i == 0 || i == n - 1) return \"\"\n                if (!vowels.contains(chars(i\
    \ - 1)) && !vowels.contains(chars(i + 1))) {\n                    result = chars(i).toString\n\
    \                    break\n                }\n            }\n        }\n    \
    \    result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var result = \"\"\n  \
    \      var index = word.length - 1\n        while (index >= 0) {\n           \
    \ if (consonants.contains(word(index))) {\n                var i = index - 1\n\
    \                while (i >= 0) {\n                    if (vowels.contains(word(i)))\
    \ {\n                        result = word(i).toString\n                     \
    \   return result\n                    }\n                    i -= 1\n       \
    \         }\n            }\n            index -= 1\n        }\n        result",
  "        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants\
    \ = Set(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\
    \ \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    )\n        val wordArray = word.toCharArray\n        val wordLength = wordArray.length\n\
    \        var closestVowel = \"\"\n        for (i <- wordLength - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(wordArray(i).toString)) {\n             \
    \   var j = i - 1\n                while (j >= 0 && !consonants.contains(wordArray(j).toString))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < wordLength && !consonants.contains(wordArray(k).toString))\
    \ k += 1\n                    if (k < wordLength) {\n                        closestVowel\
    \ = wordArray(i).toString\n                        return closestVowel\n     \
    \               }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val wordArray = word.toCharArray\n\
    \        var result = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(wordArray(i))) {\n                if (i ==\
    \ wordArray.length - 1) {\n                    if (vowels.contains(wordArray(i\
    \ - 1))) {\n                        result = \"\"\n                    } else\
    \ {\n                        result = wordArray(i).toString\n                \
    \    }\n                } else if (i == 0) {\n                    if (vowels.contains(wordArray(i\
    \ + 1))) {\n                        result = \"\"\n                    } else\
    \ {\n                        result = wordArray(i).toString\n                \
    \    }\n                } else {\n                    if (vowels.contains(wordArray(i\
    \ - 1)) || vowels.contains(wordArray(i + 1))) {\n                        result\
    \ = \"\"\n                    } else {\n                        result = wordArray(i).toString\n\
    \                    }\n                }\n            }\n        }\n        result",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordList = word.toList\n        var result\
    \ = \"\"\n        for (i <- wordList.length - 1 to 0 by -1) {\n            if\
    \ (vowels.contains(wordList(i))) {\n                if (i != wordList.length -\
    \ 1 && consonants.contains(wordList(i + 1))) {\n                    result = wordList(i).toString\n\
    \                    break\n                }\n                else if (i != 0\
    \ && consonants.contains(wordList(i - 1))) {\n                    result = wordList(i).toString\n\
    \                    break\n                }\n            }\n        }\n    \
    \    result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val wordSet = word.toLowerCase.toSet\n\
    \        val vowelSet = wordSet & vowels\n        val consonantSet = wordSet &\
    \ consonants\n        val vowelList = vowelSet.toList.sortWith(_ < _)\n      \
    \  val consonantList = consonantSet.toList.sortWith(_ < _)\n        if (vowelList.isEmpty\
    \ || consonantList.isEmpty) return \"\"\n        var min = Int.MaxValue\n    \
    \    var result = \"\"\n        for (v <- vowelList) {\n            val index\
    \ = consonantList.indexWhere(c => c > v)\n            if (index != -1) {\n   \
    \             val distance = consonantList(index) - v\n                if (distance\
    \ < min) {\n                    min = distance\n                    result = v.toString\n\
    \                }\n            }\n        }\n        result.toUpperCase", " \
    \       val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var result = \"\"\n\
    \        for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i == word.length - 1) return \"\"\n                else\
    \ if (vowels.contains(word(i + 1))) return \"\"\n                else return word(i).toString\n\
    \            }\n        }\n        return \"\"", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n\
    \        val wordSet = word.toSet\n        val wordList = word.toList\n      \
    \  val wordListReverse = wordList.reverse\n        val wordSetReverse = wordSet.reverse\n\
    \        val wordListReverseConsonants = wordListReverse.filter(consonants.contains(_))\n\
    \        val wordListReverseVowels = wordListReverse.filter(vowels.contains(_))\n\
    \        val wordListReverseVowelsConsonants = wordListReverseVowels.filter(consonants.contains(_))\n\
    \        val wordListReverseConsonantsVowels = wordListReverseConsonants.filter(vowels.contains(_))\n\
    \        val wordListReverseVowelsConsonantsVowels = wordListReverseVowelsConsonants.filter(vowels.contains(_))\n\
    \        if (wordListReverseVowelsConsonantsVowels.length == 0) \"\"\n       \
    \ else wordListReverseVowelsConsonantsVowels.head.toString", "        var result\
    \ = \"\"\n        var index = word.length - 1\n        while (index >= 0) {\n\
    \            if (word(index).isLetter) {\n                if (word(index).isVowel)\
    \ {\n                    result = word(index).toString\n                    break\n\
    \                }\n                else {\n                    index -= 1\n \
    \                   while (index >= 0) {\n                        if (word(index).isLetter)\
    \ {\n                            if (word(index).isVowel) {\n                \
    \                result = word(index).toString\n                             \
    \   break\n                            }\n                            else {\n\
    \                                break\n                            }\n      \
    \                  }\n                        else {\n                       \
    \     index -= 1\n                        }\n                    }\n         \
    \           break\n                }\n            }\n            else {\n    \
    \            index -= 1\n            }\n        }\n        result", "        //\
    \ Fill up this function body\n        // 'a' to 'z' : 97 to 122\n        // 'A'\
    \ to 'Z' : 65 to 90\n        // '0' to '9' : 48 to 57\n        // ' '        :\
    \ 32\n        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var closestVowel = \"\"\n        var closestVowelIndex = -1\n      \
    \  for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i > 0 && consonants.contains(word(i - 1))) {\n      \
    \              if (closestVowelIndex == -1 || i < closestVowelIndex) {\n     \
    \                   closestVowel = word(i).toString\n                        closestVowelIndex\
    \ = i\n                    }\n                }\n            }\n        }\n  \
    \      closestVowel", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n   \
    \     val chars = word.toCharArray\n        var result = \"\"\n        for (i\
    \ <- chars.length - 1 to 0 by -1) {\n            if (vowels.contains(chars(i)))\
    \ {\n                if (i == chars.length - 1) return \"\"\n                if\
    \ (vowels.contains(chars(i + 1))) return \"\"\n                result = chars(i).toString\n\
    \                return result\n            }\n        }\n        result", " \
    \       val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var closestVowel = \"\"\n\
    \        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i == wordArray.length - 1) {\n                    return\
    \ \"\"\n                } else if (consonants.contains(wordArray(i + 1))) {\n\
    \                    closestVowel = wordArray(i).toString\n                  \
    \  return closestVowel\n                }\n            }\n        }\n        return\
    \ closestVowel", "        // Fill up this function body\n        // 'a' to 'z'\
    \ is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // '0' to '9' is 48\
    \ to 57\n        // ' ' is 32\n        // '.' is 46\n        // ',' is 44\n  \
    \      // '!' is 33\n        // '?' is 63\n        // '(' is 40\n        // ')'\
    \ is 41\n        // '[' is 91\n        // ']' is 93\n        // '{' is 123\n \
    \       // '}' is 125\n        // '-' is 45\n        // '+' is 43\n        //\
    \ '*' is 42\n        // '/' is 47\n        // '%' is 37\n        // '<' is 60\n\
    \        // '>' is 62\n        // '=' is 61\n        // '&' is 38\n        //\
    \ '|' is 124\n        // '^' is 94\n        // '~' is 126\n        // '`' is 96\n\
    \        // '@' is 64\n        // '#' is 35\n        // '$' is 36\n        //\
    \ '_' is 95\n        // ':' is 58\n        // ';' is 59\n        // '\"' is 34\n\
    \        // ''' is 39\n        // '\\\\' is 92\n        // '\\n' is 10\n     \
    \   // '\\t' is 9\n        // '\\r' is 13\n        // '\\b' is 8\n        // '\\\
    f' is 12\n        // '\\u0000' to '\\uFFFF' is 0 to 65535\n        val vowels\
    \ = List('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        val consonants\
    \ = List('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r',\
    \ 's', 't', 'v', 'w', 'x', 'y', 'z', 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L',\
    \ 'M', 'N', 'P', 'Q', 'R',", "        val vowels = \"aeiouAEIOU\"\n        val\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        var closestVowel\
    \ = \"\"\n        var closestVowelDistance = word.length\n        for (i <- 0\
    \ until word.length) {\n            if (consonants.contains(word(i))) {\n    \
    \            for (j <- i + 1 until word.length) {\n                    if (vowels.contains(word(j)))\
    \ {\n                        if (j - i < closestVowelDistance) {\n           \
    \                 closestVowelDistance = j - i\n                            closestVowel\
    \ = word(j).toString\n                        }\n                    }\n     \
    \           }\n            }\n        }\n        closestVowel", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (consonants.contains(word(i))) {\n                for (j <- i\
    \ - 1 to 0 by -1) {\n                    if (vowels.contains(word(j))) {\n   \
    \                     result = word(j).toString\n                        return\
    \ result\n                    }\n                }\n            }\n        }\n\
    \        result", "        // Fill up this function body\n        // 'a' to 'z'\
    \ is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // '0' to '9' is 48\
    \ to 57\n        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U')\n        var closestVowel = \"\"\n        var closestDistance = word.length\n\
    \        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ {\n                    j -= 1\n                }\n                if (j >= 0)\
    \ {\n                    var k = i + 1\n                    while (k < word.length\
    \ && !vowels.contains(word(k))) {\n                        k += 1\n          \
    \          }\n                    if (k < word.length) {\n                   \
    \     if (k - j < closestDistance) {\n                            closestDistance\
    \ = k - j\n                            closestVowel = word(i).toString\n     \
    \                   }\n                    }\n                }\n            }\n\
    \        }\n        closestVowel", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var result\
    \ = \"\"\n        var minDistance = Int.MaxValue\n        for (i <- 0 until word.length)\
    \ {\n            if (vowels.contains(word(i))) {\n                var j = i -\
    \ 1\n                while (j >= 0 && !consonants.contains(word(j))) j -= 1\n\
    \                if (j >= 0) {\n                    var k = i + 1\n          \
    \          while (k < word.length && !consonants.contains(word(k))) k += 1\n \
    \                   if (k < word.length) {\n                        val distance\
    \ = k - j\n                        if (distance < minDistance) {\n           \
    \                 minDistance = distance\n                            result =\
    \ word(i).toString\n                        }\n                    }\n       \
    \         }\n            }\n        }\n        result", "        // Fill up this\
    \ function body\n        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is\
    \ 65 to 90\n        // '0' to '9' is 48 to 57\n        // ' ' is 32\n        //\
    \ '.' is 46\n        // ',' is 44\n        // '!' is 33\n        // '?' is 63\n\
    \        // '\\n' is 10\n        // '\\t' is 9\n        // '\\r' is 13\n     \
    \   // '\\f' is 12\n        // '\\b' is 8\n        // '\\'' is 39\n        //\
    \ '\\\"' is 34\n        // '\\\\' is 92\n        // '\\0' is 0\n        // '\\\
    000' is 0\n        // '\\u0000' is 0\n        // '\\u0001' is 1\n        // '\\\
    u0002' is 2\n        // '\\u0003' is 3\n        // '\\u0004' is 4\n        //\
    \ '\\u0005' is 5\n        // '\\u0006' is 6\n        // '\\u0007' is 7\n     \
    \   // '\\u0008' is 8\n        // '\\u000E' is 14\n        // '\\u000F' is 15\n\
    \        // '\\u0010' is 16\n        // '\\u0011' is 17\n        // '\\u0012'\
    \ is 18\n        // '\\u0013' is 19\n        // '\\u0014' is 20\n        // '\\\
    u0015' is 21\n        // '\\u0016' is 22\n        // '\\u0017' is 23\n       \
    \ // '\\u0018' is 24\n        // '\\u0019' is 25\n        // '\\u001A' is 26\n\
    \        // '\\u001B' is 27\n        // '\\u001C' is 28\n        // '\\u001D'\
    \ is 29\n        // '\\u001E' is 30\n        // '\\u001F' is 31\n        // '\\\
    u007F' is 127\n        // '\\u0080' is 128\n        // '\\u0081' is 129\n    \
    \    // '\\u0082' is 130\n        //", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val\
    \ wordArray = word.toCharArray\n        var result = \"\"\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i))) {\n      \
    \          if (i == wordArray.length - 1) {\n                    if (consonants.contains(wordArray(i\
    \ - 1))) {\n                        result = wordArray(i).toString\n         \
    \           }\n                } else if (i == 0) {\n                    if (consonants.contains(wordArray(i\
    \ + 1))) {\n                        result = wordArray(i).toString\n         \
    \           }\n                } else {\n                    if (consonants.contains(wordArray(i\
    \ - 1)) && consonants.contains(wordArray(i + 1))) {\n                        result\
    \ = wordArray(i).toString\n                    }\n                }\n        \
    \    }\n        }\n        result", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        var closestVowel = \"\"\n        for (i <- word.length - 1 to\
    \ 0 by -1) {\n            if (vowels.contains(word(i))) {\n                closestVowel\
    \ = word(i).toString\n                break\n            }\n        }\n      \
    \  closestVowel", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n       \
    \ val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n\
    \        var closestVowel = \"\"\n        for (i <- wordArray.length - 1 to 0\
    \ by -1) {\n            if (vowels.contains(wordArray(i))) {\n               \
    \ if (i == wordArray.length - 1) closestVowel = \"\"\n                else if\
    \ (i == 0) closestVowel = \"\"\n                else if (consonants.contains(wordArray(i\
    \ + 1)) && consonants.contains(wordArray(i - 1))) {\n                    closestVowel\
    \ = wordArray(i).toString\n                    return closestVowel\n         \
    \       }\n            }\n        }\n        closestVowel", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z')\n        val wordArray = word.toCharArray\n        val wordArrayLength\
    \ = wordArray.length\n        for (i <- wordArrayLength - 1 to 0 by -1) {\n  \
    \          if (consonants.contains(wordArray(i))) {\n                for (j <-\
    \ i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        return wordArray(j).toString\n                  \
    \  }\n                }\n            }\n        }\n        return \"\"", "   \
    \     val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var result = \"\"\n        var min = Int.MaxValue\n\
    \        for (i <- 0 until word.length - 1) {\n            if (consonants.contains(word(i))\
    \ && consonants.contains(word(i + 1))) {\n                for (j <- i + 1 until\
    \ word.length) {\n                    if (vowels.contains(word(j))) {\n      \
    \                  if (j - i < min) {\n                            min = j - i\n\
    \                            result = word(j).toString\n                     \
    \   }\n                    }\n                }\n            }\n        }\n  \
    \      result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n\
    \        var closestVowel = \"\"\n        for (i <- wordArray.length - 1 to 0\
    \ by -1) {\n            if (vowels.contains(wordArray(i))) {\n               \
    \ if (i == wordArray.length - 1) {\n                    closestVowel = \"\"\n\
    \                } else if (consonants.contains(wordArray(i + 1))) {\n       \
    \             closestVowel = wordArray(i).toString\n                }\n      \
    \      }\n        }\n        closestVowel", "        // Fill up this function\
    \ body\n        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a' <= c <=\
    \ 'z' || 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n    \
    \    // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' || 'A'\
    \ <= c <= 'Z'\n        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a' <=\
    \ c <= 'z' || 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n\
    \        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' ||\
    \ 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a'\
    \ <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n\
    \        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' ||\
    \ 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a'\
    \ <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n\
    \        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' ||\
    \ 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a'\
    \ <= c <= 'z' || 'A' <= c <= 'Z'\n        // 'a' <= c <= 'z' || 'A' <= c <= '",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordList = word.toList\n        val wordListReversed\
    \ = wordList.reverse\n        var closestVowel = \"\"\n        var found = false\n\
    \        for (i <- 0 until wordListReversed.length - 1) {\n            if (consonants.contains(wordListReversed(i))\
    \ && consonants.contains(wordListReversed(i + 1)) && vowels.contains(wordListReversed(i\
    \ + 2))) {\n                closestVowel = wordListReversed(i + 2).toString\n\
    \                found = true\n            }\n        }\n        if (found) closestVowel\
    \ else \"\"", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val wordSet = word.toSet\n\
    \        val wordList = word.toList\n        val wordSetIntersect = wordSet.intersect(vowels)\n\
    \        if (wordSetIntersect.isEmpty) return \"\"\n        else {\n         \
    \   val wordSetIntersectList = wordSetIntersect.toList\n            val wordSetIntersectListIndex\
    \ = wordList.zipWithIndex.filter(x => wordSetIntersectList.contains(x._1)).map(x\
    \ => x._2)\n            val wordSetIntersectListIndexPair = wordSetIntersectListIndex.zip(wordSetIntersectListIndex.tail)\n\
    \            val wordSetIntersectListIndexPairFiltered = wordSetIntersectListIndexPair.filter(x\
    \ => wordList(x._1 - 1) != ' ' && wordList(x._2 + 1) != ' ' && consonants.contains(wordList(x._1\
    \ - 1)) && consonants.contains(wordList(x._2 + 1)))\n            if (wordSetIntersectListIndexPairFiltered.isEmpty)\
    \ return \"\"\n            else {\n                val wordSetIntersectListIndexPairFilteredList\
    \ = wordSetIntersectListIndexPairFiltered.map(x => x._2).toList\n            \
    \    val wordSetIntersectListIndexPairFilteredListIndex = wordList.zipWithIndex.filter(x\
    \ => wordSetIntersectListIndexPairFilteredList.contains(x._2)).map(x => x._2)\n\
    \                val wordSetIntersectListIndexPairFilteredListIndexPair = wordSetIntersectListIndexPairFilteredListIndex.zip(wordSetIntersectListIndexPairFilteredListIndex.tail)\n\
    \                val wordSetIntersectListIndexPairFilteredListIndexPairFiltered\
    \ = wordSetIntersectListIndexPairFiltered", "        val vowels = \"aeiouAEIOU\"\
    \n        var closestVowel = \"\"\n        var minDistance = word.length\n   \
    \     for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !vowels.contains(word(k))) k +=\
    \ 1\n                    if (k < word.length) {\n                        val distance\
    \ = i - j + k - i\n                        if (distance < minDistance) {\n   \
    \                         minDistance = distance\n                           \
    \ closestVowel = word(i).toString\n                        }\n               \
    \     }\n                }\n            }\n        }\n        closestVowel", " \
    \       // Fill up this function body\n        // 'a' to 'z' is 97 to 122\n  \
    \      // 'A' to 'Z' is 65 to 90\n        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u', 'A', 'E', 'I', 'O', 'U')\n        val consonants = Set('b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z', 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S',\
    \ 'T', 'V', 'W', 'X', 'Y', 'Z')\n        val wordArray = word.toCharArray\n  \
    \      var result = \"\"\n        var lastConsonant = -1\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i))) {\n      \
    \          if (lastConsonant != -1) {\n                    result = wordArray(i).toString\n\
    \                    break\n                }\n            } else if (consonants.contains(wordArray(i)))\
    \ {\n                lastConsonant = i\n            }\n        }\n        result",
  "        val vowels = \"aeiouAEIOU\"\n        var closestVowel = \"\"\n        var\
    \ closestDistance = word.length\n        for (i <- 0 until word.length) {\n  \
    \          if (vowels.contains(word(i))) {\n                var distance = word.length\
    \ - i\n                var j = i + 1\n                while (j < word.length &&\
    \ !vowels.contains(word(j))) {\n                    j += 1\n                 \
    \   distance -= 1\n                }\n                if (distance < closestDistance)\
    \ {\n                    closestDistance = distance\n                    closestVowel\
    \ = word(i).toString\n                }\n            }\n        }\n        closestVowel",
  "        // Fill up this function body\n        // 'a' to 'z' : 97 to 122\n    \
    \    // 'A' to 'Z' : 65 to 90\n        val vowels = \"aeiouAEIOU\"\n        val\
    \ wordArray = word.toCharArray\n        var result = \"\"\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i))) {\n      \
    \          if (i == wordArray.length - 1) {\n                    if (wordArray(i\
    \ - 1) >= 97 && wordArray(i - 1) <= 122) {\n                        result = wordArray(i).toString\n\
    \                    }\n                } else if (i == 0) {\n               \
    \     if (wordArray(i + 1) >= 97 && wordArray(i + 1) <= 122) {\n             \
    \           result = wordArray(i).toString\n                    }\n          \
    \      } else {\n                    if (wordArray(i - 1) >= 97 && wordArray(i\
    \ - 1) <= 122 && wordArray(i + 1) >= 97 && wordArray(i + 1) <= 122) {\n      \
    \                  result = wordArray(i).toString\n                    }\n   \
    \             }\n            }\n        }\n        result", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var result = \"\"\n      \
    \  for (i <- 0 until wordArray.length) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                if (i + 1 < wordArray.length && vowels.contains(wordArray(i\
    \ + 1))) {\n                    result = wordArray(i + 1).toString\n         \
    \           break\n                }\n            }\n        }\n        result",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var closestVowel = \"\"\n        var distance = word.length\n      \
    \  for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && consonants.contains(word(j)))\
    \ {\n                    j -= 1\n                }\n                if (j >= 0\
    \ && consonants.contains(word(j))) {\n                    var k = i + 1\n    \
    \                while (k < word.length && consonants.contains(word(k))) {\n \
    \                       k += 1\n                    }\n                    if\
    \ (k < word.length && consonants.contains(word(k))) {\n                      \
    \  if (distance > i - j) {\n                            distance = i - j\n   \
    \                         closestVowel = word(i).toString\n                  \
    \      }\n                    }\n                }\n            }\n        }\n\
    \        closestVowel", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n \
    \       val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val wordSet\
    \ = word.toSet\n        val wordList = word.toList\n        val wordLength = word.length\n\
    \        val vowelList = wordList.filter(vowels.contains(_))\n        val consonantList\
    \ = wordList.filter(consonants.contains(_))\n        if (vowelList.length == 0\
    \ || consonantList.length == 0) return \"\"\n        val vowelIndexList = vowelList.map(wordList.indexOf(_))\n\
    \        val consonantIndexList = consonantList.map(wordList.indexOf(_))\n   \
    \     val vowelConsonantIndexList = vowelIndexList.map(vowelIndex => consonantIndexList.filter(consonantIndex\
    \ => consonantIndex > vowelIndex))\n        val vowelConsonantIndexList2 = vowelConsonantIndexList.filter(vowelConsonantIndex\
    \ => vowelConsonantIndex.length > 0)\n        if (vowelConsonantIndexList2.length\
    \ == 0) return \"\"\n        val vowelConsonantIndexList3 = vowelConsonantIndexList2.map(vowelConsonantIndex\
    \ => vowelConsonantIndex.min)\n        val vowelConsonantIndexList4 = vowelConsonantIndexList3.map(vowelConsonantIndex\
    \ => vowelIndexList.filter(vowelIndex => vowelIndex < vowelConsonantIndex))\n\
    \        val vowelConsonantIndexList5 = vowelConsonantIndexList4.filter(vowelConsonantIndex\
    \ => vowelConsonantIndex.length > 0)\n        if (vowelConsonantIndexList5.length\
    \ == 0) return \"\"\n        val vowelConsonantIndexList6 = vowelConsonantIndexList5.map(vowelConsonantIndex\
    \ => vowelConsonantIndex.max)\n        val vowelConsonantIndexList", "       \
    \ val vowels = \"aeiouAEIOU\"\n        var closestVowel = \"\"\n        var closestDistance\
    \ = word.length\n        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var distance = word.length - i\n                if (distance\
    \ < closestDistance) {\n                    closestDistance = distance\n     \
    \               closestVowel = word(i).toString\n                }\n         \
    \   }\n        }\n        closestVowel", "        val vowels = \"aeiouAEIOU\"\n\
    \        var closest = \"\"\n        var min = Int.MaxValue\n        for (i <-\
    \ 0 until word.length) {\n            if (vowels.contains(word(i))) {\n      \
    \          var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !vowels.contains(word(k))) k +=\
    \ 1\n                    if (k < word.length) {\n                        val dist\
    \ = k - j\n                        if (dist < min) {\n                       \
    \     min = dist\n                            closest = word(i).toString\n   \
    \                     }\n                    }\n                }\n          \
    \  }\n        }\n        closest", "        val vowels = \"aeiouAEIOU\"\n    \
    \    val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n       \
    \ var vowel = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n        \
    \    if (consonants.contains(word(i))) {\n                for (j <- i - 1 to 0\
    \ by -1) {\n                    if (vowels.contains(word(j))) {\n            \
    \            vowel = word(j).toString\n                        return vowel\n\
    \                    }\n                }\n            }\n        }\n        vowel",
  "        // Fill up this function body\n        // 'a' to 'z' : 97 to 122\n    \
    \    // 'A' to 'Z' : 65 to 90\n        // '0' to '9' : 48 to 57\n        var vowels\
    \ = List('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        var vowel\
    \ = \"\"\n        var i = word.length - 1\n        while (i >= 0) {\n        \
    \    if (vowels.contains(word(i))) {\n                vowel = word(i).toString\n\
    \                break\n            }\n            i -= 1\n        }\n       \
    \ vowel", "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var vowel = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (vowels.contains(word(i))) {\n                vowel = word(i).toString\n\
    \                break\n            }\n        }\n        if (vowel == \"\") return\
    \ \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n            if (consonants.contains(word(i)))\
    \ {\n                if (vowels.contains(word(i - 1))) return vowel\n        \
    \        else return \"\"\n            }\n        }\n        return \"\"", " \
    \       // Fill up this function body\n        // 'a' to 'z'\n        // 'A' to\
    \ 'Z'\n        // '0' to '9'\n        // ' '\n        // '.'\n        // ','\n\
    \        // '!'\n        // '?'\n        // ':'\n        // ';'\n        // '''\n\
    \        // '\"'\n        // '('\n        // ')'\n        // '['\n        // ']'\n\
    \        // '{'\n        // '}'\n        // '+'\n        // '-'\n        // '*'\n\
    \        // '/'\n        // '\\'\n        // '|'\n        // '&'\n        // '^'\n\
    \        // '%'\n        // '$'\n        // '#'\n        // '@'\n        // '~'\n\
    \        // '`'\n        // '<'\n        // '>'\n        // '='\n        // '_'\n\
    \        // ' '\n        // '\\t'\n        // '\\n'\n        // '\\r'\n      \
    \  // '\\f'\n        // '\\b'\n        // '\\0'\n        // '\\u0000'\n      \
    \  // '\\u0001'\n        // '\\u0002'\n        // '\\u0003'\n        // '\\u0004'\n\
    \        // '\\u0005'\n        // '\\u0006'\n        // '\\u0007'\n        //\
    \ '\\u0008'\n        // '\\u000e'\n        // '\\u000f'\n        // '\\u0010'\n\
    \        // '\\u0011'\n        // '\\u0012'\n        // '\\u0013'\n        //\
    \ '\\u0014'\n        // '\\u0015'\n        // '\\u0016'\n        // '\\u0017'\n\
    \        // '\\u0018'\n        // '\\u0019'\n        // '\\u001a'\n        //\
    \ '\\u001b'\n        // '\\u001c'\n        // '\\u001d'\n        // '\\u001e'\n\
    \        // '\\u001f'\n        // '\\u", "        // Fill up this function body\n\
    \        // 'a' to 'z'\n        val vowels = \"aeiou\"\n        val wordLower\
    \ = word.toLowerCase\n        val wordLowerReverse = wordLower.reverse\n     \
    \   var closestVowel = \"\"\n        var closestVowelIndex = -1\n        for (i\
    \ <- 0 until wordLowerReverse.length) {\n            if (vowels.contains(wordLowerReverse(i)))\
    \ {\n                if (closestVowelIndex == -1) {\n                    closestVowelIndex\
    \ = i\n                    closestVowel = wordLowerReverse(i).toString\n     \
    \           }\n                else {\n                    if (i - closestVowelIndex\
    \ > 1) {\n                        return closestVowel\n                    }\n\
    \                    else {\n                        closestVowelIndex = i\n \
    \                       closestVowel = wordLowerReverse(i).toString\n        \
    \            }\n                }\n            }\n        }\n        return closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val chars = word.toCharArray\n        var vowel\
    \ = \"\"\n        for (i <- chars.length - 1 to 0 by -1) {\n            if (vowels.contains(chars(i)))\
    \ {\n                if (i == chars.length - 1) {\n                    vowel =\
    \ \"\"\n                } else if (consonants.contains(chars(i + 1))) {\n    \
    \                vowel = chars(i).toString\n                    break\n      \
    \          }\n            }\n        }\n        vowel", "        var result =\
    \ \"\"\n        var min = word.length\n        for (i <- 0 until word.length -\
    \ 1) {\n            if (isVowel(word(i)) && !isVowel(word(i + 1))) {\n       \
    \         var j = i + 1\n                while (j < word.length && !isVowel(word(j)))\
    \ j += 1\n                if (j < word.length && j - i < min) {\n            \
    \        min = j - i\n                    result = word(j).toString\n        \
    \        }\n            }\n        }\n        result", "        val vowels = \"\
    aeiou\"\n        val wordReverse = word.reverse\n        var result = \"\"\n \
    \       for (i <- 0 until wordReverse.length - 1) {\n            if (vowels.contains(wordReverse(i))\
    \ && !vowels.contains(wordReverse(i + 1))) {\n                result = wordReverse(i).toString\n\
    \                break\n            }\n        }\n        result.reverse", " \
    \       val vowels = \"AEIOUaeiou\"\n        val cons = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\
    \n        var closest = \"\"\n        var closestIndex = -1\n        for (i <-\
    \ 0 until word.length) {\n            if (vowels.contains(word(i))) {\n      \
    \          if (i > 0 && cons.contains(word(i - 1))) {\n                    if\
    \ (closestIndex == -1 || i < closestIndex) {\n                        closest\
    \ = word(i).toString\n                        closestIndex = i\n             \
    \       }\n                }\n                if (i < word.length - 1 && cons.contains(word(i\
    \ + 1))) {\n                    if (closestIndex == -1 || i < closestIndex) {\n\
    \                        closest = word(i).toString\n                        closestIndex\
    \ = i\n                    }\n                }\n            }\n        }\n  \
    \      closest", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var\
    \ closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n        for\
    \ (i <- 0 until word.length) {\n            val c = word(i)\n            if (vowels.contains(c))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !vowels.contains(word(k))) k +=\
    \ 1\n                    if (k < word.length) {\n                        val distance\
    \ = k - j\n                        if (distance < closestDistance) {\n       \
    \                     closestDistance = distance\n                           \
    \ closestVowel = c.toString\n                        }\n                    }\n\
    \                }\n            }\n        }\n        closestVowel", "       \
    \ val vowels = \"aeiou\"\n        var index = word.length - 1\n        var result\
    \ = \"\"\n        while (index >= 0) {\n            if (vowels.contains(word(index)))\
    \ {\n                if (index == word.length - 1) {\n                    index\
    \ -= 1\n                    continue\n                }\n                if (vowels.contains(word(index\
    \ + 1))) {\n                    index -= 1\n                    continue\n   \
    \             }\n                result = word(index).toString\n             \
    \   break\n            }\n            index -= 1\n        }\n        result",
  "        // Fill up this function body\n        // 'a' to 'z' is 97 to 122\n   \
    \     // 'A' to 'Z' is 65 to 90\n        // '0' to '9' is 48 to 57\n        val\
    \ vowels = List('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        var\
    \ closestVowel = \"\"\n        var closestVowelDistance = word.length\n      \
    \  for (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ {\n                    j -= 1\n                }\n                if (j >= 0)\
    \ {\n                    var k = i + 1\n                    while (k < word.length\
    \ && !vowels.contains(word(k))) {\n                        k += 1\n          \
    \          }\n                    if (k < word.length) {\n                   \
    \     if (k - j < closestVowelDistance) {\n                            closestVowelDistance\
    \ = k - j\n                            closestVowel = word(i).toString\n     \
    \                   }\n                    }\n                }\n            }\n\
    \        }\n        closestVowel", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val chars = word.toCharArray\n        var result = \"\"\n    \
    \    var min = Int.MaxValue\n        for (i <- 0 until chars.length) {\n     \
    \       if (vowels.contains(chars(i))) {\n                var j = i - 1\n    \
    \            while (j >= 0 && !vowels.contains(chars(j))) j -= 1\n           \
    \     if (j >= 0) {\n                    var k = i + 1\n                    while\
    \ (k < chars.length && !vowels.contains(chars(k))) k += 1\n                  \
    \  if (k < chars.length) {\n                        if (k - j < min) {\n     \
    \                       min = k - j\n                            result = chars(i).toString\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\n  \
    \      val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n     \
    \   var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n     \
    \       if (vowels.contains(word(i))) {\n                if (i == word.length\
    \ - 1) return \"\"\n                if (consonants.contains(word(i + 1))) return\
    \ word(i).toString\n            }\n        }\n        return \"\"", "        val\
    \ vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (consonants.contains(word(i))) {\n                for (j <- i\
    \ - 1 to 0 by -1) {\n                    if (vowels.contains(word(j))) {\n   \
    \                     result = word(j).toString\n                        return\
    \ result\n                    }\n                }\n            }\n        }\n\
    \        result", "        var vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\"\
    )\n        var result = \"\"\n        var min = Int.MaxValue\n        for (i <-\
    \ 0 until word.length - 1) {\n            if (vowels.contains(word(i).toString)\
    \ && !vowels.contains(word(i + 1).toString)) {\n                var j = i + 1\n\
    \                while (j < word.length && !vowels.contains(word(j).toString))\
    \ j += 1\n                if (j < word.length && vowels.contains(word(j).toString))\
    \ {\n                    if (j - i < min) {\n                        min = j -\
    \ i\n                        result = word(i).toString\n                    }\n\
    \                }\n            }\n        }\n        result", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        var result = \"\"\n        var min =\
    \ Int.MaxValue\n        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !vowels.contains(word(k))) k +=\
    \ 1\n                    if (k < word.length) {\n                        val distance\
    \ = k - j\n                        if (distance < min) {\n                   \
    \         min = distance\n                            result = word(i).toString\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        result", "        val vowels = \"AEIOUaeiou\"\n  \
    \      val consonants = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\n     \
    \   var closestVowel = \"\"\n        var closestDistance = word.length\n     \
    \   for (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i + 1 until word.length) {\n                  \
    \  if (vowels.contains(word(j))) {\n                        for (k <- j + 1 until\
    \ word.length) {\n                            if (consonants.contains(word(k)))\
    \ {\n                                val distance = k - i\n                  \
    \              if (distance < closestDistance) {\n                           \
    \         closestDistance = distance\n                                    closestVowel\
    \ = word(j).toString\n                                }\n                    \
    \        }\n                        }\n                    }\n               \
    \ }\n            }\n        }\n        closestVowel", "        // Fill up this\
    \ function body\n        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is\
    \ 65 to 90\n        // '0' to '9' is 48 to 57\n        // ' ' is 32\n        //\
    \ '.' is 46\n        // ',' is 44\n        // '-' is 45\n        // '_' is 95\n\
    \        // ':' is 58\n        // ';' is 59\n        // '(' is 40\n        //\
    \ ')' is 41\n        // '[' is 91\n        // ']' is 93\n        // '{' is 123\n\
    \        // '}' is 125\n        // '!' is 33\n        // '?' is 63\n        //\
    \ ''' is 39\n        // '\"' is 34\n        // '+' is 43\n        // '/' is 47\n\
    \        // '\\' is 92\n        // '*' is 42\n        // '&' is 38\n        //\
    \ '^' is 94\n        // '%' is 37\n        // '$' is 36\n        // '#' is 35\n\
    \        // '@' is 64\n        // '!' is 33\n        // '~' is 126\n        //\
    \ '`' is 96\n        // '<' is 60\n        // '>' is 62\n        // '=' is 61\n\
    \        // '|' is 124\n        // ' ' is 32\n        // '\\t' is 9\n        //\
    \ '\\n' is 10\n        // '\\r' is 13\n        // '\\f' is 12\n        // '\\\
    b' is 8\n        // '\\u000B' is 11\n        // '\\u0085' is 133\n        // '\\\
    u2028' is 8232\n        // '\\u2029' is 8233\n        // '\\u000C' is 12\n   \
    \     // '\\u000D' is 13\n        // '\\u000E' is 14\n        // '\\u000F' is\
    \ 15\n        // '\\u0010' is 16\n        // '\\u0011' is 17\n        // '\\u0012'\
    \ is 18\n        // '\\u0013' is 19\n        // '\\u0014' is 20\n        // '\\\
    u0015' is 21", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        var\
    \ closestVowel = \"\"\n        var closestDistance = word.length\n        for\
    \ (i <- 0 until word.length) {\n            if (vowels.contains(word(i))) {\n\
    \                var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !vowels.contains(word(k))) k +=\
    \ 1\n                    if (k < word.length) {\n                        val distance\
    \ = k - j\n                        if (distance < closestDistance) {\n       \
    \                     closestDistance = distance\n                           \
    \ closestVowel = word(i).toString\n                        }\n               \
    \     }\n                }\n            }\n        }\n        closestVowel", " \
    \       val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n        var vowel\
    \ = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if\
    \ (vowels.contains(wordArray(i))) {\n                vowel = wordArray(i).toString\n\
    \                if (i != wordArray.length - 1 && consonants.contains(wordArray(i\
    \ + 1))) {\n                    return vowel\n                }\n            }\n\
    \        }\n        return \"\"", "        val vowels = \"aeiouAEIOU\"\n     \
    \   val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        var\
    \ closestVowel = \"\"\n        var closestDistance = word.length\n        for\
    \ (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i + 1 until word.length) {\n                  \
    \  if (vowels.contains(word(j))) {\n                        if (j - i < closestDistance)\
    \ {\n                            closestDistance = j - i\n                   \
    \         closestVowel = word(j).toString\n                        }\n       \
    \             }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = \"aeiou\"\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n        val vowelsSet = vowels.toSet\n        val consonantsSet = consonants.toSet\n\
    \        val wordSet = word.toSet\n        val wordArray = word.toArray\n    \
    \    val wordLength = word.length\n        val wordSetIntersectVowels = wordSet.intersect(vowelsSet)\n\
    \        val wordSetIntersectConsonants = wordSet.intersect(consonantsSet)\n \
    \       if (wordSetIntersectVowels.isEmpty || wordSetIntersectConsonants.isEmpty)\
    \ return \"\"\n        val vowelIndices = wordArray.zipWithIndex.filter(x => vowelsSet.contains(x._1)).map(_._2)\n\
    \        val consonantIndices = wordArray.zipWithIndex.filter(x => consonantsSet.contains(x._1)).map(_._2)\n\
    \        val vowelIndicesSorted = vowelIndices.sorted\n        val consonantIndicesSorted\
    \ = consonantIndices.sorted\n        val vowelIndicesSortedLength = vowelIndicesSorted.length\n\
    \        val consonantIndicesSortedLength = consonantIndicesSorted.length\n  \
    \      var minDistance = wordLength\n        var minDistanceVowel = \"\"\n   \
    \     for (i <- 0 until vowelIndicesSortedLength) {\n            val vowelIndex\
    \ = vowelIndicesSorted(i)\n            val vowelIndexDistance = wordLength - vowelIndex\n\
    \            val vowelIndexDistanceIndex = consonantIndicesSorted.indexWhere(x\
    \ => x > vowelIndex)\n            if (vowelIndexDistanceIndex != -1) {\n     \
    \           val consonantIndex = consonantIndicesSorted(vowelIndexDistanceIndex)\n\
    \                val distance = consonantIndex - vowelIndex\n                if\
    \ (distance < minDistance) {\n                    minDistance = distance\n   \
    \                 minDistanceVowel = wordArray(vowelIndex).toString\n        \
    \        }\n            }\n        }\n        minDistanceVowel", "        val\
    \ vowels = Set('a', 'e', 'i', 'o', 'u')\n        var closestVowel = \"\"\n   \
    \     var closestDistance = Int.MaxValue\n        for (i <- 0 until word.length)\
    \ {\n            if (vowels.contains(word(i))) {\n                var j = i -\
    \ 1\n                while (j >= 0 && !vowels.contains(word(j))) j -= 1\n    \
    \            if (j >= 0) {\n                    var k = i + 1\n              \
    \      while (k < word.length && !vowels.contains(word(k))) k += 1\n         \
    \           if (k < word.length) {\n                        val distance = k -\
    \ j\n                        if (distance < closestDistance) {\n             \
    \               closestDistance = distance\n                            closestVowel\
    \ = word(i).toString\n                        }\n                    }\n     \
    \           }\n            }\n        }\n        closestVowel", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val wordList = word.toList\n       \
    \ val wordListReversed = wordList.reverse\n        val wordListReversedWithIndex\
    \ = wordListReversed.zipWithIndex\n        val wordListReversedWithIndexFiltered\
    \ = wordListReversedWithIndex.filter(x => vowels.contains(x._1))\n        if (wordListReversedWithIndexFiltered.isEmpty)\
    \ return \"\"\n        val wordListReversedWithIndexFilteredWithDistance = wordListReversedWithIndexFiltered.map(x\
    \ => (x._1, x._2, x._2 + 1))\n        val wordListReversedWithIndexFilteredWithDistanceSorted\
    \ = wordListReversedWithIndexFilteredWithDistance.sortBy(x => x._3)\n        val\
    \ wordListReversedWithIndexFilteredWithDistanceSortedFirst = wordListReversedWithIndexFilteredWithDistanceSorted.head\n\
    \        val wordListReversedWithIndexFilteredWithDistanceSortedFirstChar = wordListReversedWithIndexFilteredWithDistanceSortedFirst._1\n\
    \        wordListReversedWithIndexFilteredWithDistanceSortedFirstChar.toString",
  "        // Fill up this function body\n        // 'a' to 'z' is 97 to 122\n   \
    \     // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n        //\
    \ 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n        // 'A' to\
    \ 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is\
    \ 65 to 90\n        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to\
    \ 90\n        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n\
    \        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n     \
    \   // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        //\
    \ 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to\
    \ 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is\
    \ 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to\
    \ 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n\
    \        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n     \
    \   // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n        //\
    \ 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n        // 'A' to\
    \ 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is\
    \ 65 to 90\n        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to\
    \ 90", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants\
    \ = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r',\
    \ 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var result = \"\"\n        var minDistance\
    \ = Int.MaxValue\n        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !consonants.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !consonants.contains(word(k))) k\
    \ += 1\n                    if (k < word.length) {\n                        val\
    \ distance = k - j\n                        if (distance < minDistance) {\n  \
    \                          minDistance = distance\n                          \
    \  result = word(i).toString\n                        }\n                    }\n\
    \                }\n            }\n        }\n        result", "        // Fill\
    \ up this function body\n        // 'a' to 'z' or 'A' to 'Z'\n        // 'a' =\
    \ 97, 'z' = 122, 'A' = 65, 'Z' = 90\n        // 'a' to 'z' = 97 to 122\n     \
    \   // 'A' to 'Z' = 65 to 90\n        // 'a' to 'z' or 'A' to 'Z' = 97 to 122\
    \ or 65 to 90\n        // 'a' to 'z' or 'A' to 'Z' = 97 to 122 or 65 to 90\n \
    \       // 'a' to 'z' or 'A' to 'Z' = 97 to 122 or 65 to 90\n        // 'a' to\
    \ 'z' or 'A' to 'Z' = 97 to 122 or 65 to 90\n        // 'a' to 'z' or 'A' to 'Z'\
    \ = 97 to 122 or 65 to 90\n        // 'a' to 'z' or 'A' to 'Z' = 97 to 122 or\
    \ 65 to 90\n        // 'a' to 'z' or 'A' to 'Z' = 97 to 122 or 65 to 90\n    \
    \    // 'a' to 'z' or 'A' to 'Z' = 97 to 122 or 65 to 90\n        // 'a' to 'z'\
    \ or 'A' to 'Z' = 97 to 122 or 65 to 90\n        // 'a' to 'z' or 'A' to 'Z' =\
    \ 97 to 122 or 65 to 90\n        // 'a' to 'z' or 'A' to 'Z' = 97 to 122 or 65\
    \ to 90\n        // 'a' to 'z' or 'A' to 'Z' = 97 to 122 or 65 to 90\n       \
    \ // 'a' to 'z' or 'A' to 'Z' = 97 to 122 or 65 to 90\n        // 'a' to 'z' or\
    \ 'A' to 'Z' = 97 to 122 or 65 to 90\n        // 'a' to 'z' or 'A' to 'Z' = 97\
    \ to 122 or 65 to 90\n        // 'a' to 'z' or 'A' to 'Z' = 97 to 122 or 65 to\
    \ 90\n        // 'a' to 'z' or 'A' to '", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        var closestVowel = \"\"\n        var closestDistance\
    \ = word.length\n        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !vowels.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !vowels.contains(word(k))) k +=\
    \ 1\n                    if (k < word.length) {\n                        val distance\
    \ = k - j\n                        if (distance < closestDistance) {\n       \
    \                     closestDistance = distance\n                           \
    \ closestVowel = word(i).toString\n                        }\n               \
    \     }\n                }\n            }\n        }\n        closestVowel", " \
    \       val vowels = \"aeiou\"\n        var closestVowel = \"\"\n        var distance\
    \ = word.length\n        for (i <- 0 until word.length - 1) {\n            if\
    \ (vowels.contains(word(i)) && !vowels.contains(word(i + 1))) {\n            \
    \    if (i < distance) {\n                    distance = i\n                 \
    \   closestVowel = word(i).toString\n                }\n            }\n      \
    \  }\n        closestVowel", "        val vowels = List('a', 'e', 'i', 'o', 'u')\n\
    \        val consonants = List('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var closestVowel\
    \ = \"\"\n        var closestDistance = word.length\n        for (i <- 0 until\
    \ word.length) {\n            if (consonants.contains(word(i))) {\n          \
    \      for (j <- i + 1 until word.length) {\n                    if (vowels.contains(word(j)))\
    \ {\n                        if (j - i < closestDistance) {\n                \
    \            closestDistance = j - i\n                            closestVowel\
    \ = word(j).toString\n                        }\n                    }\n     \
    \           }\n            }\n        }\n        closestVowel", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z')\n        val wordArray = word.toCharArray\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i))) {\n  \
    \              for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ return wordArray(j).toString\n                }\n            }\n        }\n\
    \        \"\"", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n\
    \        var closestVowel = \"\"\n        for (i <- wordArray.length - 1 to 0\
    \ by -1) {\n            if (vowels.contains(wordArray(i))) {\n               \
    \ closestVowel = wordArray(i).toString\n                break\n            }\n\
    \        }\n        closestVowel", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val result = new StringBuilder\n        for (i <- word.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(word(i))) {\n           \
    \     if (i == word.length - 1) return \"\"\n                else if (vowels.contains(word(i\
    \ + 1))) return \"\"\n                else return word(i).toString\n         \
    \   }\n        }\n        return \"\"", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val\
    \ wordArray = word.toCharArray\n        var closestVowel = \"\"\n        for (i\
    \ <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i == wordArray.length - 1) {\n                    if\
    \ (consonants.contains(wordArray(i - 1))) {\n                        closestVowel\
    \ = wordArray(i).toString\n                    }\n                } else if (i\
    \ == 0) {\n                    if (consonants.contains(wordArray(i + 1))) {\n\
    \                        closestVowel = wordArray(i).toString\n              \
    \      }\n                } else {\n                    if (consonants.contains(wordArray(i\
    \ - 1)) && consonants.contains(wordArray(i + 1))) {\n                        closestVowel\
    \ = wordArray(i).toString\n                    }\n                }\n        \
    \    }\n        }\n        closestVowel", "        val vowels = \"aeiouAEIOU\"\
    \n        val wordArray = word.toCharArray\n        var result = \"\"\n      \
    \  for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i == wordArray.length - 1) {\n                    if\
    \ (vowels.contains(wordArray(i - 1))) result = \"\"\n                    else\
    \ result = wordArray(i).toString\n                }\n                else if (i\
    \ == 0) result = \"\"\n                else if (vowels.contains(wordArray(i -\
    \ 1))) result = \"\"\n                else result = wordArray(i).toString\n  \
    \          }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\
    \n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n  \
    \      var result = \"\"\n        var distance = word.length\n        for (i <-\
    \ 0 until word.length - 1) {\n            if (consonants.contains(word(i)) &&\
    \ vowels.contains(word(i + 1))) {\n                if (i + 1 < distance) {\n \
    \                   distance = i + 1\n                    result = word(i + 1).toString\n\
    \                }\n            }\n        }\n        result", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        var closestVowel = \"\"\n        var\
    \ closestDistance = Int.MaxValue\n        for (i <- word.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(word(i))) {\n                var j = i -\
    \ 1\n                while (j >= 0 && !vowels.contains(word(j))) j -= 1\n    \
    \            if (j >= 0) {\n                    val distance = i - j\n       \
    \             if (distance < closestDistance) {\n                        closestDistance\
    \ = distance\n                        closestVowel = word(i).toString\n      \
    \              }\n                }\n            }\n        }\n        closestVowel",
  "        // Fill up this function body\n        // 'a' to 'z' is 97 to 122\n   \
    \     // 'A' to 'Z' is 65 to 90\n        // '0' to '9' is 48 to 57\n        //\
    \ ' ' is 32\n        // '.' is 46\n        // ',' is 44\n        // '!' is 33\n\
    \        // '?' is 63\n        // '\\n' is 10\n        // '\\t' is 9\n       \
    \ // '\\r' is 13\n        // '\\f' is 12\n        // '\\b' is 8\n        // '\\\
    '' is 39\n        // '\\\"' is 34\n        // '\\\\' is 92\n        // '\\0' is\
    \ 0\n        // '\\001' is 1\n        // '\\177' is 127\n        // '\\200' is\
    \ 128\n        // '\\377' is 255\n        // '\\u0000' is 0\n        // '\\u0001'\
    \ is 1\n        // '\\u00ff' is 255\n        // '\\u0100' is 256\n        // '\\\
    uffff' is 65535\n        // '\\u0000' to '\\u00ff' is 0 to 255\n        // '\\\
    u0100' to '\\uffff' is 256 to 65535\n        // '\\u0000' to '\\uffff' is 0 to\
    \ 65535\n        // '\\u0000' to '\\uffff' is 0 to 65535\n        // '\\u0000'\
    \ to '\\U0000ffff' is 0 to 65535\n        // '\\u0000' to '\\U00010000' is 0 to\
    \ 65536\n        // '\\u0000' to '\\U0010ffff' is 0 to 1114111\n        // '\\\
    u0000' to '\\U00110000' is 0 to 1114112\n        // '\\u0000' to '\\U7fffffff'\
    \ is 0 to 2147483647\n        // '\\u0000' to '\\U80000000' is 0 to 2147483648\n\
    \        // '\\u0000' to '\\Uffffffff' is 0 to 4294967295\n        // '\\u0000'\
    \ to '\\U000100000000' is 0 to 4294967296\n        // '\\u0000' to '\\", "   \
    \     // Fill up this function body\n        // 'a' to 'z' : 97 to 122\n     \
    \   // 'A' to 'Z' : 65 to 90\n        // '0' to '9' : 48 to 57\n        // ' '\
    \        : 32\n        // ','        : 44\n        // '.'        : 46\n      \
    \  // '!'        : 33\n        // '?'        : 63\n        var vowels = List('a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        var result = \"\"\n  \
    \      var lastConsonant = -1\n        var lastVowel = -1\n        for (i <- word.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(word(i))) {\n           \
    \     lastVowel = i\n                if (lastConsonant != -1) {\n            \
    \        result = word(lastVowel).toString\n                    break\n      \
    \          }\n            } else {\n                lastConsonant = i\n      \
    \      }\n        }\n        result", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var\
    \ closestVowel = \"\"\n        var closestDistance = Int.MaxValue\n        for\
    \ (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !consonants.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !consonants.contains(word(k))) k\
    \ += 1\n                    if (k < word.length) {\n                        val\
    \ distance = k - j\n                        if (distance < closestDistance) {\n\
    \                            closestDistance = distance\n                    \
    \        closestVowel = word(i).toString\n                        }\n        \
    \            }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var closestVowel = \"\"\n        var closestDistance\
    \ = Int.MaxValue\n        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var j = i - 1\n                while (j >= 0 && !consonants.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !consonants.contains(word(k))) k\
    \ += 1\n                    if (k < word.length) {\n                        val\
    \ distance = k - j\n                        if (distance < closestDistance) {\n\
    \                            closestDistance = distance\n                    \
    \        closestVowel = word(i).toString\n                        }\n        \
    \            }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var vowel = \"\"\n       \
    \ for (i <- 0 until wordArray.length - 1) {\n            if (consonants.contains(wordArray(i))\
    \ && vowels.contains(wordArray(i + 1))) {\n                vowel = wordArray(i\
    \ + 1).toString\n                break\n            }\n        }\n        vowel",
  "        val vowels = \"aeiou\"\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n        val wordList = word.toList\n        val vowelIndices = wordList.zipWithIndex.filter(x\
    \ => vowels.contains(x._1)).map(_._2)\n        val consonantIndices = wordList.zipWithIndex.filter(x\
    \ => consonants.contains(x._1)).map(_._2)\n        val vowelConsonantPairs = vowelIndices.flatMap(v\
    \ => consonantIndices.map(c => (v, c))).filter(x => x._1 > x._2)\n        if (vowelConsonantPairs.isEmpty)\
    \ \"\"\n        else {\n            val closestVowel = vowelConsonantPairs.minBy(x\
    \ => x._1 - x._2)\n            wordList(closestVowel._1).toString\n        }",
  "        val vowels = \"aeiouAEIOU\"\n        for (i <- word.length - 1 to 0 by\
    \ -1) {\n            if (vowels.contains(word(i))) {\n                if (i ==\
    \ word.length - 1) return \"\"\n                if (!vowels.contains(word(i +\
    \ 1))) return word(i).toString\n            }\n        }\n        \"\"", "   \
    \     val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var vowel = \"\"\n       \
    \ for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowel = wordArray(i).toString\n                if (i < wordArray.length\
    \ - 1 && consonants.contains(wordArray(i + 1))) {\n                    return\
    \ vowel\n                }\n            }\n        }\n        return \"\"", " \
    \       val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordArray = word.toLowerCase.toCharArray\n\
    \        var vowel = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(wordArray(i))) {\n                if (i ==\
    \ wordArray.length - 1) return \"\"\n                if (consonants.contains(wordArray(i\
    \ + 1))) {\n                    vowel = wordArray(i).toString\n              \
    \      break\n                }\n            }\n        }\n        vowel", " \
    \       val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var result = \"\"\n        for (i <- word.length\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(word(i))) {\n       \
    \         if (i != word.length - 1 && vowels.contains(word(i + 1))) {\n      \
    \              result = word(i + 1).toString\n                    break\n    \
    \            }\n            }\n        }\n        result", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z')\n        val wordArray = word.toCharArray\n        var result = \"\
    \"\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                if (i != wordArray.length - 1) {\n                    if\
    \ (vowels.contains(wordArray(i + 1))) {\n                        result = wordArray(i\
    \ + 1).toString\n                        return result\n                    }\n\
    \                }\n                if (i != 0) {\n                    if (vowels.contains(wordArray(i\
    \ - 1))) {\n                        result = wordArray(i - 1).toString\n     \
    \                   return result\n                    }\n                }\n\
    \            }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\
    \n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n  \
    \      val wordArray = word.toCharArray\n        var result = \"\"\n        for\
    \ (i <- wordArray.length - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        result = wordArray(j).toString\n                \
    \        return result\n                    }\n                }\n           \
    \ }\n        }\n        result", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        var closestVowel\
    \ = \"\"\n        var closestDistance = word.length\n        for (i <- 0 until\
    \ word.length) {\n            if (vowels.contains(word(i))) {\n              \
    \  var j = i - 1\n                while (j >= 0 && !consonants.contains(word(j)))\
    \ j -= 1\n                if (j >= 0) {\n                    var k = i + 1\n \
    \                   while (k < word.length && !consonants.contains(word(k))) k\
    \ += 1\n                    if (k < word.length) {\n                        val\
    \ distance = k - j\n                        if (distance < closestDistance) {\n\
    \                            closestDistance = distance\n                    \
    \        closestVowel = word(i).toString\n                        }\n        \
    \            }\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n        var result\
    \ = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1) {\n            if\
    \ (vowels.contains(wordArray(i))) {\n                if (i == wordArray.length\
    \ - 1) {\n                    if (consonants.contains(wordArray(i - 1))) {\n \
    \                       result = wordArray(i).toString\n                    }\n\
    \                } else if (i == 0) {\n                    if (consonants.contains(wordArray(i\
    \ + 1))) {\n                        result = wordArray(i).toString\n         \
    \           }\n                } else {\n                    if (consonants.contains(wordArray(i\
    \ - 1)) && consonants.contains(wordArray(i + 1))) {\n                        result\
    \ = wordArray(i).toString\n                    }\n                }\n        \
    \    }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\n   \
    \     val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n      \
    \  val wordArray = word.toCharArray\n        for (i <- wordArray.length - 1 to\
    \ 0 by -1) {\n            if (consonants.contains(wordArray(i))) {\n         \
    \       for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        return wordArray(j).toString\n                  \
    \  }\n                }\n            }\n        }\n        return \"\"", "   \
    \     val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        val wordSet = word.toSet\n        val vowelSet\
    \ = wordSet & vowels\n        val consonantSet = wordSet & consonants\n      \
    \  val vowelIndices = word.zipWithIndex.filter(x => vowelSet.contains(x._1)).map(_._2)\n\
    \        val consonantIndices = word.zipWithIndex.filter(x => consonantSet.contains(x._1)).map(_._2)\n\
    \        if (vowelIndices.isEmpty || consonantIndices.isEmpty) return \"\"\n \
    \       val vowelConsonantPairs = vowelIndices.map(x => (x, consonantIndices.filter(y\
    \ => y > x).min))\n        val closestVowel = vowelConsonantPairs.minBy(x => x._2\
    \ - x._1)._1\n        word(closestVowel).toString", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n\
    \        var result = \"\"\n        var min = Int.MaxValue\n        for (i <-\
    \ 0 until word.length - 1) {\n            if (consonants.contains(word(i)) &&\
    \ consonants.contains(word(i + 1))) {\n                for (j <- i + 1 until word.length)\
    \ {\n                    if (vowels.contains(word(j))) {\n                   \
    \     if (j - i < min) {\n                            min = j - i\n          \
    \                  result = word(j).toString\n                        }\n    \
    \                }\n                }\n            }\n        }\n        result",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val chars = word.toCharArray\n\
    \        var result = \"\"\n        for (i <- 0 until chars.length - 1) {\n  \
    \          if (vowels.contains(chars(i)) && !vowels.contains(chars(i + 1))) {\n\
    \                result = chars(i).toString\n                break\n         \
    \   }\n        }\n        result", "        // Fill up this function body\n  \
    \      // 'a', 'e', 'i', 'o', 'u'\n        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val wordArray = word.toCharArray\n        var result = \"\"\n\
    \        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i == wordArray.length - 1) {\n                    if\
    \ (vowels.contains(wordArray(i - 1))) {\n                        result = \"\"\
    \n                    } else {\n                        result = wordArray(i).toString\n\
    \                    }\n                } else if (i == 0) {\n               \
    \     if (vowels.contains(wordArray(i + 1))) {\n                        result\
    \ = \"\"\n                    } else {\n                        result = wordArray(i).toString\n\
    \                    }\n                } else {\n                    if (vowels.contains(wordArray(i\
    \ - 1)) || vowels.contains(wordArray(i + 1))) {\n                        result\
    \ = \"\"\n                    } else {\n                        result = wordArray(i).toString\n\
    \                    }\n                }\n            }\n        }\n        result",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordList = word.toList\n        var vowelList = List[Char]()\n \
    \       var consonantList = List[Char]()\n        var result = \"\"\n        for\
    \ (i <- 0 until wordList.length) {\n            if (vowels.contains(wordList(i)))\
    \ vowelList = wordList(i) :: vowelList\n            else if (consonants.contains(wordList(i)))\
    \ consonantList = wordList(i) :: consonantList\n        }\n        if (vowelList.length\
    \ == 0 || consonantList.length == 0) return \"\"\n        for (i <- 0 until vowelList.length)\
    \ {\n            for (j <- 0 until consonantList.length) {\n                if\
    \ (abs(vowelList(i) - consonantList(j)) < abs(result - consonantList(j))) result\
    \ = vowelList(i)\n            }\n        }\n        result.toString", "      \
    \  // Fill up this function body\n        // 'a' to 'z'\n        val vowels =\
    \ \"aeiou\"\n        val consonants = \"bcdfghjklmnpqrstvwxyz\"\n        val wordLower\
    \ = word.toLowerCase\n        val wordLen = word.length\n        var closestVowel\
    \ = \"\"\n        var closestVowelIndex = -1\n        for (i <- 0 until wordLen)\
    \ {\n            val c = wordLower(i)\n            if (vowels.contains(c)) {\n\
    \                if (i > 0 && consonants.contains(wordLower(i - 1))) {\n     \
    \               if (closestVowelIndex == -1 || i < closestVowelIndex) {\n    \
    \                    closestVowelIndex = i\n                        closestVowel\
    \ = word(i).toString\n                    }\n                }\n             \
    \   if (i < wordLen - 1 && consonants.contains(wordLower(i + 1))) {\n        \
    \            if (closestVowelIndex == -1 || i < closestVowelIndex) {\n       \
    \                 closestVowelIndex = i\n                        closestVowel\
    \ = word(i).toString\n                    }\n                }\n            }\n\
    \        }\n        closestVowel", "        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        var min = word.length\n        var result = \"\"\n        for\
    \ (i <- word.length - 1 to 0 by -1) {\n            if (vowels.contains(word(i)))\
    \ {\n                if (i < min) {\n                    min = i\n           \
    \         result = word(i).toString\n                }\n            }\n      \
    \  }\n        result", "        val vowels = \"aeiouAEIOU\"\n        val consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        var closestVowel =\
    \ \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n            if (consonants.contains(word(i)))\
    \ {\n                for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(word(j)))\
    \ {\n                        closestVowel = word(j).toString\n               \
    \         return closestVowel\n                    }\n                }\n    \
    \        }\n        }\n        closestVowel", "        val vowels = \"aeiouAEIOU\"\
    \n        var closestVowel = \"\"\n        var closestDistance = word.length\n\
    \        for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var distance = 0\n                for (j <- i + 1 until word.length)\
    \ {\n                    if (!vowels.contains(word(j))) distance += 1\n      \
    \              else break\n                }\n                if (distance < closestDistance)\
    \ {\n                    closestDistance = distance\n                    closestVowel\
    \ = word(i).toString\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val wordList = word.toList\n\
    \        val result = wordList.zipWithIndex.filter(x => vowels.contains(x._1)).filter(x\
    \ => x._2 != 0 && x._2 != wordList.length - 1).map(x => (x._1, x._2, abs(wordList.length\
    \ - x._2 - 1))).sortBy(x => x._3).headOption\n        result match {\n       \
    \     case Some(x) => x._1.toString\n            case None => \"\"\n        }",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val wordArray = word.toCharArray\n\
    \        var result = \"\"\n        for (i <- wordArray.length - 1 to 0 by -1)\
    \ {\n            if (vowels.contains(wordArray(i))) {\n                if (i ==\
    \ wordArray.length - 1) {\n                    if (vowels.contains(wordArray(i\
    \ - 1))) result = \"\"\n                    else result = wordArray(i).toString\n\
    \                }\n                else if (i == 0) result = \"\"\n         \
    \       else if (vowels.contains(wordArray(i - 1))) result = \"\"\n          \
    \      else result = wordArray(i).toString\n            }\n        }\n       \
    \ result", "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var result = \"\"\n        var index = word.length - 1\n        while\
    \ (index >= 0) {\n            if (consonants.contains(word(index))) {\n      \
    \          var i = index - 1\n                while (i >= 0) {\n             \
    \       if (vowels.contains(word(i))) {\n                        result = word(i).toString\n\
    \                        return result\n                    }\n              \
    \      i -= 1\n                }\n            }\n            index -= 1\n    \
    \    }\n        result", "        val vowels = \"AEIOUaeiou\"\n        val consonants\
    \ = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\n        var result = \"\"\n\
    \        var min = Int.MaxValue\n        for (i <- 0 until word.length - 1) {\n\
    \            if (consonants.contains(word(i)) && consonants.contains(word(i +\
    \ 1))) {\n                for (j <- i + 1 until word.length) {\n             \
    \       if (vowels.contains(word(j))) {\n                        if (j - i < min)\
    \ {\n                            min = j - i\n                            result\
    \ = word(j).toString\n                        }\n                    }\n     \
    \           }\n            }\n        }\n        result", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var vowel = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n\
    \            if (consonants.contains(word(i))) {\n                for (j <- i\
    \ - 1 to 0 by -1) {\n                    if (vowels.contains(word(j))) {\n   \
    \                     vowel = word(j).toString\n                        return\
    \ vowel\n                    }\n                }\n            }\n        }\n\
    \        return vowel", "        // Fill up this function body\n        // 'a'\
    \ to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // '0' to '9'\
    \ is 48 to 57\n        // ' ' is 32\n        // '.' is 46\n        // ',' is 44\n\
    \        // '!' is 33\n        // '?' is 63\n        // ';' is 59\n        //\
    \ ':' is 58\n        // ''' is 39\n        // '\"' is 34\n        // '(' is 40\n\
    \        // ')' is 41\n        // '[' is 91\n        // ']' is 93\n        //\
    \ '{' is 123\n        // '}' is 125\n        // '<' is 60\n        // '>' is 62\n\
    \        // '-' is 45\n        // '_' is 95\n        // '+' is 43\n        //\
    \ '/' is 47\n        // '\\' is 92\n        // '|' is 124\n        // '`' is 96\n\
    \        // '~' is 126\n        // '@' is 64\n        // '#' is 35\n        //\
    \ '$' is 36\n        // '%' is 37\n        // '^' is 94\n        // '&' is 38\n\
    \        // '*' is 42\n        // '=' is 61\n        // ' ' is 32\n        //\
    \ '\\t' is 9\n        // '\\n' is 10\n        // '\\r' is 13\n        // '\\f'\
    \ is 12\n        // '\\b' is 8\n        // '\\0' is 0\n        // '\\001' is 1\n\
    \        // '\\002' is 2\n        // '\\003' is 3\n        // '\\004' is 4\n \
    \       // '\\005' is 5\n        // '\\006' is 6\n        // '\\a' is 7\n    \
    \    // '\\v' is 11\n        // '\\000' is 0\n        // '\\007' is 7\n      \
    \  // '\\010' is 8\n        // '\\013' is 11\n        // '\\014' is 12\n     \
    \   // '\\016' is 14\n        // '\\017' is 15\n        // '\\020' is 16\n   \
    \     // '\\021' is 17", "        val vowels = \"aeiouAEIOU\"\n        val consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        var result = \"\"\n\
    \        var min = word.length\n        for (i <- 0 until word.length - 1) {\n\
    \            if (consonants.contains(word(i)) && vowels.contains(word(i + 1)))\
    \ {\n                if (min > i + 1) {\n                    min = i + 1\n   \
    \                 result = word(i + 1).toString\n                }\n         \
    \   }\n        }\n        result", "        val vowels = \"aeiouAEIOU\"\n    \
    \    var closestVowel = \"\"\n        var closestDistance = word.length\n    \
    \    for (i <- 0 until word.length) {\n            if (vowels.contains(word(i)))\
    \ {\n                var distance = 0\n                for (j <- i + 1 until word.length)\
    \ {\n                    if (!vowels.contains(word(j))) distance += 1\n      \
    \              else break\n                }\n                if (distance < closestDistance)\
    \ {\n                    closestDistance = distance\n                    closestVowel\
    \ = word(i).toString\n                }\n            }\n        }\n        closestVowel",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var closestVowel = \"\"\n\
    \        for (i <- 0 until wordArray.length - 1) {\n            if (consonants.contains(wordArray(i))\
    \ && vowels.contains(wordArray(i + 1))) {\n                closestVowel = wordArray(i\
    \ + 1).toString\n                break\n            }\n        }\n        closestVowel",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var result = \"\"\n        for (i <- word.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(word(i))) {\n           \
    \     if (i == word.length - 1) {\n                    result = \"\"\n       \
    \         } else if (consonants.contains(word(i + 1))) {\n                   \
    \ result = word(i).toString\n                }\n            }\n        }\n   \
    \     result", "        // Fill up this function body\n        // 'a', 'e', 'i',\
    \ 'o', 'u'\n        // 'A', 'E', 'I', 'O', 'U'\n        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z', 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P',\
    \ 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z')\n        val wordList = word.toList\n\
    \        val wordListLength = wordList.length\n        val vowelIndices = wordList.zipWithIndex.filter(x\
    \ => vowels.contains(x._1)).map(x => x._2)\n        val vowelIndicesLength = vowelIndices.length\n\
    \        if (vowelIndicesLength == 0) return \"\"\n        val vowelIndicesWithDistance\
    \ = vowelIndices.map(x => (x, wordListLength - x - 1))\n        val vowelIndicesWithDistanceFiltered\
    \ = vowelIndicesWithDistance.filter(x => x._2 > 0)\n        val vowelIndicesWithDistanceFilteredLength\
    \ = vowelIndicesWithDistanceFiltered.length\n        if (vowelIndicesWithDistanceFilteredLength\
    \ == 0) return \"\"\n        val vowelIndicesWithDistanceFilteredSorted = vowelIndicesWithDistanceFiltered.sortBy(x\
    \ => x._2)\n        val vowelIndicesWithDistanceFilteredSortedFirst = vowelIndicesWithDistanceFilteredSorted.head\n\
    \        val vowelIndicesWithDistanceFilteredSortedFirstIndex = vowelIndicesWithDistanceFilteredSortedFirst._1\n\
    \        val vowelIndicesWithDistanceFilteredSortedFirstDistance = vowelIndicesWithDistanceFilteredSortedFirst._2\n\
    \        val vowelIndicesWithDistanceFil", "        var vowels = List(\"a\", \"\
    e\", \"i\", \"o\", \"u\")\n        var result = \"\"\n        for (i <- word.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(word(i).toString)) {\n  \
    \              if (i + 1 < word.length && !vowels.contains(word(i + 1).toString))\
    \ {\n                    if (i - 1 >= 0 && !vowels.contains(word(i - 1).toString))\
    \ {\n                        result = word(i).toString\n                     \
    \   return result\n                    }\n                }\n            }\n \
    \       }\n        result", "        // Fill up this function body\n        //\
    \ 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // '0' to\
    \ '9' is 48 to 57\n        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E',\
    \ 'I', 'O', 'U')\n        var closestVowel = \"\"\n        var closestVowelDistance\
    \ = Int.MaxValue\n        var lastConsonant = -1\n        for (i <- 0 until word.length)\
    \ {\n            if (vowels.contains(word(i))) {\n                if (lastConsonant\
    \ != -1) {\n                    val distance = i - lastConsonant\n           \
    \         if (distance < closestVowelDistance) {\n                        closestVowelDistance\
    \ = distance\n                        closestVowel = word(i).toString\n      \
    \              }\n                }\n            } else {\n                lastConsonant\
    \ = i\n            }\n        }\n        closestVowel", "        val vowels =\
    \ \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var closestVowel = \"\"\n        var closestVowelDistance = word.length\n\
    \        for (i <- 0 until word.length) {\n            if (consonants.contains(word(i)))\
    \ {\n                var j = i + 1\n                while (j < word.length &&\
    \ consonants.contains(word(j))) j += 1\n                if (j < word.length &&\
    \ vowels.contains(word(j))) {\n                    if (j - i < closestVowelDistance)\
    \ {\n                        closestVowelDistance = j - i\n                  \
    \      closestVowel = word(j).toString\n                    }\n              \
    \  }\n            }\n        }\n        closestVowel", "        val vowels = \"\
    aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordList = word.toList\n        var vowelList = List[Char]()\n \
    \       var consonantList = List[Char]()\n        for (i <- 0 until wordList.length)\
    \ {\n            if (vowels.contains(wordList(i))) vowelList = wordList(i) ::\
    \ vowelList\n            else if (consonants.contains(wordList(i))) consonantList\
    \ = wordList(i) :: consonantList\n        }\n        if (vowelList.length == 0\
    \ || consonantList.length == 0) return \"\"\n        val vowelSet = vowelList.toSet\n\
    \        val consonantSet = consonantList.toSet\n        val vowelSetList = vowelSet.toList\n\
    \        val consonantSetList = consonantSet.toList\n        var vowelIndex =\
    \ 0\n        var consonantIndex = 0\n        var result = \"\"\n        for (i\
    \ <- 0 until vowelSetList.length) {\n            for (j <- 0 until consonantSetList.length)\
    \ {\n                if (vowelSetList(i) > consonantSetList(j)) {\n          \
    \          vowelIndex = vowelList.indexOf(vowelSetList(i))\n                 \
    \   consonantIndex = consonantList.indexOf(consonantSetList(j))\n            \
    \        if (abs(vowelIndex - consonantIndex) == 1) {\n                      \
    \  result = vowelSetList(i).toString\n                        return result\n\
    \                    }\n                }\n            }\n        }\n        result",
  "        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var vowel = \"\"\n       \
    \ for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                vowel = wordArray(i).toString\n                if (i + 1\
    \ < wordArray.length && consonants.contains(wordArray(i + 1))) {\n           \
    \         return vowel\n                }\n            }\n        }\n        return\
    \ \"\"", "        // Fill up this function body\n        // 'a' to 'z' or 'A'\
    \ to 'Z'\n        val vowels = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        var vowel = \"\"\n        var index = -1\n        for (i <- word.length\
    \ - 1 to 0 by -1) {\n            if (consonants.contains(word(i))) {\n       \
    \         for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(word(j)))\
    \ {\n                        vowel = word(j).toString\n                      \
    \  index = j\n                        break\n                    }\n         \
    \       }\n                if (index != -1) break\n            }\n        }\n\
    \        vowel", "        val vowels = \"aeiouAEIOU\"\n        var result = \"\
    \"\n        var min = word.length\n        for (i <- 0 until word.length) {\n\
    \            if (vowels.contains(word(i))) {\n                var j = i - 1\n\
    \                while (j >= 0 && !vowels.contains(word(j))) j -= 1\n        \
    \        if (j >= 0) {\n                    var k = i + 1\n                  \
    \  while (k < word.length && !vowels.contains(word(k))) k += 1\n             \
    \       if (k < word.length) {\n                        val dist = k - j\n   \
    \                     if (dist < min) {\n                            min = dist\n\
    \                            result = word(i).toString\n                     \
    \   }\n                    }\n                }\n            }\n        }\n  \
    \      result", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val wordArray = word.toCharArray\n\
    \        for (i <- wordArray.length - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ return wordArray(j).toString\n                }\n            }\n        }\n\
    \        \"\"", "        val vowels = \"aeiouAEIOU\"\n        val consonants =\
    \ \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        var result = \"\"\n\
    \        for (i <- 0 until word.length - 1) {\n            if (consonants.contains(word(i))\
    \ && vowels.contains(word(i + 1))) {\n                result = word(i + 1).toString\n\
    \                break\n            }\n        }\n        result", "        val\
    \ vowels = \"AEIOUaeiou\"\n        val consonants = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\
    \n        var result = \"\"\n        for (i <- 0 until word.length - 1) {\n  \
    \          if (consonants.contains(word(i)) && vowels.contains(word(i + 1))) {\n\
    \                result = word(i + 1).toString\n                break\n      \
    \      }\n        }\n        result", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        val consonants = Set('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z')\n        val\
    \ wordArray = word.toCharArray\n        var vowel = \"\"\n        for (i <- wordArray.length\
    \ - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i))) {\n      \
    \          vowel = wordArray(i).toString\n                if (i < wordArray.length\
    \ - 1 && consonants.contains(wordArray(i + 1))) return vowel\n               \
    \ if (i > 0 && consonants.contains(wordArray(i - 1))) return vowel\n         \
    \   }\n        }\n        return vowel", "        val vowels = \"aeiouAEIOU\"\n\
    \        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n   \
    \     var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n   \
    \         if (consonants.contains(word(i))) {\n                if (i != word.length\
    \ - 1) {\n                    if (vowels.contains(word(i + 1))) {\n          \
    \              result = word(i + 1).toString\n                        return result\n\
    \                    }\n                }\n            }\n        }\n        result",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val consonants = Set('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z')\n        var result = \"\"\n        var lastConsonant =\
    \ \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n            if (consonants.contains(word(i)))\
    \ {\n                if (lastConsonant != \"\") {\n                    for (j\
    \ <- i + 1 to word.length - 1) {\n                        if (vowels.contains(word(j)))\
    \ {\n                            result = word(j).toString\n                 \
    \           return result\n                        }\n                    }\n\
    \                }\n                lastConsonant = word(i).toString\n       \
    \     }\n        }\n        result", "        var vowels = \"aeiouAEIOU\"\n  \
    \      var result = \"\"\n        for (i <- word.length - 1 to 0 by -1) {\n  \
    \          if (vowels.contains(word(i))) {\n                if (i + 1 < word.length\
    \ && !vowels.contains(word(i + 1))) {\n                    result = word(i).toString\n\
    \                    break\n                }\n            }\n        }\n    \
    \    result", "        // Fill up this function body\n        // 'a' to 'z' is\
    \ 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to\
    \ 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n\
    \        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n     \
    \   // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n        //\
    \ 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n        // 'A' to\
    \ 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is\
    \ 65 to 90\n        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to\
    \ 90\n        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n\
    \        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n     \
    \   // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        //\
    \ 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to\
    \ 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is\
    \ 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to\
    \ 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n\
    \        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n     \
    \   // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n        //\
    \ 'A' to 'Z' is 65 to 90", "        // Fill up this function body\n        //\
    \ 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to\
    \ 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is\
    \ 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to\
    \ 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n\
    \        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n     \
    \   // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n        //\
    \ 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n        // 'A' to\
    \ 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is\
    \ 65 to 90\n        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to\
    \ 90\n        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n\
    \        // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n     \
    \   // 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        //\
    \ 'a' to 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to\
    \ 'z' is 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is\
    \ 97 to 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to\
    \ 122\n        // 'A' to 'Z' is 65 to 90\n        // 'a' to 'z' is 97 to 122\n\
    \        // 'A' to 'Z' is 65 to 90", "        // Fill up this function body\n\
    \        // 'a' to 'z' : 97 to 122\n        // 'A' to 'Z' : 65 to 90\n       \
    \ // '0' to '9' : 48 to 57\n        val vowels = Set('a', 'e', 'i', 'o', 'u',\
    \ 'A', 'E', 'I', 'O', 'U')\n        val consonants = Set('b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z',\
    \ 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T',\
    \ 'V', 'W', 'X', 'Y', 'Z')\n        var result = \"\"\n        for (i <- 0 until\
    \ word.length - 1) {\n            if (consonants.contains(word(i)) && vowels.contains(word(i\
    \ + 1))) {\n                result = word(i + 1).toString\n                break\n\
    \            }\n        }\n        result", "        val vowels = \"aeiou\"\n\
    \        val consonants = \"bcdfghjklmnpqrstvwxyz\"\n        val vowelsSet = vowels.toSet\n\
    \        val consonantsSet = consonants.toSet\n        val wordSet = word.toSet\n\
    \        val wordList = word.toList\n        val wordLength = word.length\n  \
    \      val wordSetIntersectVowels = wordSet.intersect(vowelsSet)\n        val\
    \ wordSetIntersectConsonants = wordSet.intersect(consonantsSet)\n        if (wordSetIntersectVowels.isEmpty\
    \ || wordSetIntersectConsonants.isEmpty) \"\"\n        else {\n            val\
    \ wordVowels = word.filter(vowelsSet.contains(_))\n            val wordConsonants\
    \ = word.filter(consonantsSet.contains(_))\n            val wordVowelsLength =\
    \ wordVowels.length\n            val wordConsonantsLength = wordConsonants.length\n\
    \            val wordVowelsList = wordVowels.toList\n            val wordConsonantsList\
    \ = wordConsonants.toList\n            val wordVowelsListReverse = wordVowelsList.reverse\n\
    \            val wordConsonantsListReverse = wordConsonantsList.reverse\n    \
    \        val wordVowelsListReverseSet = wordVowelsListReverse.toSet\n        \
    \    val wordConsonantsListReverseSet = wordConsonantsListReverse.toSet\n    \
    \        val wordVowelsListReverseSetIntersectConsonants = wordVowelsListReverseSet.intersect(wordConsonantsListReverseSet)\n\
    \            if (wordVowelsListReverseSetIntersectConsonants.isEmpty) \"\"\n \
    \           else {\n                val wordVowelsListReverseSetIntersectConsonantsList\
    \ = wordVowelsListReverseSetIntersectConsonants.toList\n                val wordVowelsListReverseSetIntersectConsonantsListLength\
    \ = wordVowelsListReverseSetIntersectConsonantsList.length\n                val\
    \ wordVowelsListReverseSetIntersectConsonantsListRever", "        val vowels =\
    \ List(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val consonants = List(\"b\"\
    , \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\")\n        val\
    \ wordList = word.toList\n        var index = wordList.length - 1\n        while\
    \ (index >= 0) {\n            if (consonants.contains(wordList(index).toString.toLowerCase))\
    \ {\n                if (index == wordList.length - 1) return \"\"\n         \
    \       if (vowels.contains(wordList(index + 1).toString.toLowerCase)) return\
    \ wordList(index + 1).toString\n                else return \"\"\n           \
    \ }\n            index -= 1\n        }\n        return \"\"", "        val vowels\
    \ = \"aeiouAEIOU\"\n        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n        val wordArray = word.toCharArray\n        var vowel = \"\"\n       \
    \ for (i <- wordArray.length - 1 to 0 by -1) {\n            if (consonants.contains(wordArray(i)))\
    \ {\n                for (j <- i - 1 to 0 by -1) {\n                    if (vowels.contains(wordArray(j)))\
    \ {\n                        vowel = wordArray(j).toString\n                 \
    \       return vowel\n                    }\n                }\n            }\n\
    \        }\n        vowel", "        // Fill up this function body\n        //\
    \ 'a' to 'z' or 'A' to 'Z'\n        val vowels = \"aeiouAEIOU\"\n        val consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        val wordArray = word.toCharArray\n\
    \        var closestVowel = \"\"\n        var closestVowelIndex = -1\n       \
    \ for (i <- wordArray.length - 1 to 0 by -1) {\n            if (vowels.contains(wordArray(i)))\
    \ {\n                if (i + 1 < wordArray.length && consonants.contains(wordArray(i\
    \ + 1))) {\n                    if (i - 1 >= 0 && consonants.contains(wordArray(i\
    \ - 1))) {\n                        closestVowel = wordArray(i).toString\n   \
    \                     closestVowelIndex = i\n                        break\n \
    \                   }\n                }\n            }\n        }\n        closestVowel"]
stop_tokens:
- "\n    }\n"

name: HumanEval_79_decimal_to_binary
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // You will be given a number in decimal form and your task is to convert it\
  \ to\n    // binary format. The function should return a string, with each character\
  \ representing a binary\n    // number. Each character in the string will be '0'\
  \ or '1'.\n    // There will be an extra couple of characters 'db' at the beginning\
  \ and at the end of the string.\n    // The extra characters are there to help with\
  \ the format.\n    // Examples:\n    // >>> decimalToBinary((15l))\n    // (\"db1111db\"\
  )\n    // >>> decimalToBinary((32l))\n    // (\"db100000db\")\n    def decimalToBinary(decimal\
  \ : Long) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(decimalToBinary((0l)).equals((\"\
  db0db\")));\n    assert(decimalToBinary((32l)).equals((\"db100000db\")));\n    assert(decimalToBinary((103l)).equals((\"\
  db1100111db\")));\n    assert(decimalToBinary((15l)).equals((\"db1111db\")));\n\
  \    }\n\n}\n"
completions: ["        var binary = \"\"\n        var n = decimal\n        while (n\
    \ > 0) {\n            binary = (n % 2).toString + binary\n            n /= 2\n\
    \        }\n        \"db\" + binary + \"db\"", '        "db" + decimal.toBinaryString
    + "db"', "        val binary = new StringBuilder(\"db\")\n        var n = decimal\n\
    \        while (n > 0) {\n            binary.append(n % 2)\n            n /= 2\n\
    \        }\n        binary.append(\"db\").reverse.toString", "        var binary\
    \ = \"db\"\n        var n = decimal\n        while (n > 0) {\n            binary\
    \ += (n % 2).toString\n            n /= 2\n        }\n        binary += \"db\"\
    \n        binary.reverse", "        var binary = \"db\"\n        var temp = decimal\n\
    \        while (temp > 0) {\n            binary += (temp % 2).toString\n     \
    \       temp /= 2\n        }\n        binary += \"db\"\n        binary.reverse",
  '        "db" + decimal.toBinaryString + "db"', '        "db" + decimal.toBinaryString
    + "db"', '        "db" + decimal.toBinaryString + "db"', '        "db" + decimal.toBinaryString
    + "db"', '        "db" + decimal.toBinaryString + "db"', "        // Your code\
    \ here\n        \"\"", "        val binary = new StringBuilder\n        binary.append(\"\
    db\")\n        var n = decimal\n        while (n > 0) {\n            binary.append(n\
    \ % 2)\n            n /= 2\n        }\n        binary.append(\"db\")\n       \
    \ binary.reverse.toString", '        "db" + decimal.toBinaryString + "db"', " \
    \       var binary = \"\"\n        var n = decimal\n        while (n > 0) {\n\
    \            binary = (n % 2).toString + binary\n            n /= 2\n        }\n\
    \        \"db\" + binary + \"db\"", "        val binary = new StringBuilder(\"\
    db\")\n        var n = decimal\n        while (n > 0) {\n            binary.append(n\
    \ % 2)\n            n /= 2\n        }\n        binary.append(\"db\").reverse.toString",
  '        "db" + decimal.toBinaryString + "db"', '        "db" + decimal.toBinaryString
    + "db"', '        "db" + decimal.toBinaryString + "db"', '        "db" + decimal.toBinaryString
    + "db"', '        "db" + decimal.toBinaryString + "db"']
stop_tokens:
- "\n    }\n"

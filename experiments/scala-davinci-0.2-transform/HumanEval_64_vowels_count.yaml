name: HumanEval_64_vowels_count
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Write a function vowels_count which takes a string representing\n    //\
  \ a word as input and returns the number of vowels in the string.\n    // Vowels\
  \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    // vowel, but\
  \ only when it is at the end of the given word.\n    // Example:\n    // >>> vowelsCount((\"\
  abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"ACEDY\"))\n    // (3l)\n    def\
  \ vowelsCount(s : String) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
  )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
  key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
  keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
  ACEDY\")) == (3l));\n    }\n\n}\n"
completions: ["        // TODO: implement this function\n        return 0l", "   \
    \     // Fill in the code here\n        return 0l", "        // Fill in the code\
    \ here\n        var count = 0\n        for (i <- 0 until s.length) {\n       \
    \     if (s(i) == 'a' || s(i) == 'e' || s(i) == 'i' || s(i) == 'o' || s(i) ==\
    \ 'u') {\n                count += 1\n            }\n        }\n        if (s(s.length\
    \ - 1) == 'y') {\n            count += 1\n        }\n        return count", " \
    \       val vowels = List('a', 'e', 'i', 'o', 'u')\n        val count = s.toLowerCase.filter(vowels.contains(_)).length\n\
    \        if (s.toLowerCase.last == 'y') count + 1 else count", "        // Fill\
    \ in the code here\n        0", "        // Fill in the code here\n        return\
    \ 0l", "        // YOUR CODE HERE\n        return 0l", "        // Fill in the\
    \ code here\n        0", "        // Fill in the code here\n        0", "    \
    \    // Fill in the code here\n        0l", "        // Fill Up this function\
    \ body\n        // `s` contains only lower case letters\n        // 'y' is a vowel\
    \ only when it is at the end of the word\n        // For Example:\n        //\
    \ >>> vowelsCount(\"aeiou\")\n        // 5\n        // >>> vowelsCount(\"bcd\"\
    )\n        // 0\n        // >>> vowelsCount(\"aeiouy\")\n        // 6\n      \
    \  val vowels = List('a', 'e', 'i', 'o', 'u')\n        val vowelsSet = vowels.toSet\n\
    \        val lastChar = s.last\n        val count = s.count(vowelsSet.contains(_))\n\
    \        if (vowelsSet.contains(lastChar)) count + 1 else count", "        //\
    \ TODO: implement this function\n        0", "        // Fill in the code here\n\
    \        0", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val last\
    \ = s.last\n        val count = s.count(vowels.contains(_))\n        if (vowels.contains(last))\
    \ count + 1 else count", "        // Your code here\n        return 0", "    \
    \    // Fill in the code here\n        0l", "        // YOUR CODE HERE\n     \
    \   return 0", "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        s.filter(vowels.contains(_)).length",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val last = s.last\n\
    \        val count = s.filter(vowels.contains(_)).length\n        if (vowels.contains(last))\
    \ count + 1 else count", "        // Fill in the code here.\n        val vowels\
    \ = List('a', 'e', 'i', 'o', 'u')\n        val s_lower = s.toLowerCase\n     \
    \   val s_list = s_lower.toList\n        val s_vowels = s_list.filter(vowels.contains(_))\n\
    \        val s_vowels_count = s_vowels.length\n        if (s_vowels_count == 0)\
    \ {\n            return 0\n        }\n        else if (s_vowels_count == 1) {\n\
    \            return 1\n        }\n        else {\n            val s_vowels_last\
    \ = s_vowels.last\n            if (s_vowels_last == 'y') {\n                return\
    \ s_vowels_count\n            }\n            else {\n                return s_vowels_count\
    \ - 1\n            }\n        }", "        val vowels = List('a', 'e', 'i', 'o',\
    \ 'u')\n        val count = s.toLowerCase.filter(vowels.contains(_)).length\n\
    \        if (s.toLowerCase.last == 'y') count + 1 else count", "        // TODO:\
    \ Implement this function\n        return 0", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u')\n        val last = s.last\n        val count = s.filter(vowels.contains(_)).length\n\
    \        if (vowels.contains(last)) count + 1 else count", "        // YOUR CODE\
    \ HERE\n        0", "        // Fill in the code here\n        var count = 0\n\
    \        for (i <- 0 until s.length) {\n            if (s(i) == 'a' || s(i) ==\
    \ 'e' || s(i) == 'i' || s(i) == 'o' || s(i) == 'u') {\n                count +=\
    \ 1\n            }\n        }\n        if (s(s.length - 1) == 'y') {\n       \
    \     count += 1\n        }\n        return count", "        // Fill in the code\
    \ here\n        return 0l", "        // Fill in the code here\n        0l", " \
    \       // Fill in the code here\n        val vowels = List('a', 'e', 'i', 'o',\
    \ 'u')\n        val count = s.toLowerCase.filter(vowels.contains(_)).length\n\
    \        if (s.toLowerCase.last == 'y') count + 1 else count", "        // YOUR\
    \ CODE HERE\n        return 0l", "        // TODO: Implement this function\n \
    \       return 0l", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n     \
    \   val last = s.last\n        val count = s.count(vowels)\n        if (vowels.contains(last))\
    \ count + 1 else count", "        val vowels = List('a', 'e', 'i', 'o', 'u')\n\
    \        val last = s.last\n        val count = s.count(vowels.contains(_))\n\
    \        if (vowels.contains(last)) count + 1 else count", "        // Fill in\
    \ the code here\n        0", '        s.filter(c => "aeiouyAEIOUY".contains(c)).length',
  "        // TODO: Implement this function\n        return 0l", "        // YOUR\
    \ CODE HERE\n        return 0", "        // Fill in the code here\n        return\
    \ 0", "        // Fill Up this function body\n        // `s` is a string representing\
    \ a word\n        // `return` the number of vowels in the string\n        var\
    \ count = 0\n        for (i <- 0 until s.length) {\n            if (s(i) == 'a'\
    \ || s(i) == 'e' || s(i) == 'i' || s(i) == 'o' || s(i) == 'u') {\n           \
    \     count += 1\n            }\n        }\n        if (s(s.length - 1) == 'y')\
    \ {\n            count += 1\n        }\n        return count", "        // Fill\
    \ in the code here\n        return 0l", "        // Fill in the code here\n  \
    \      return 0l", "        // Fill in the code here\n        return 0l", "  \
    \      // TODO: Implement this function\n        return 0l", "        var count\
    \ = 0\n        for (i <- 0 until s.length) {\n            if (s(i) == 'a' || s(i)\
    \ == 'e' || s(i) == 'i' || s(i) == 'o' || s(i) == 'u') count += 1\n        }\n\
    \        if (s(s.length - 1) == 'y') count += 1\n        return count", "    \
    \    // Fill in the code here\n        0l", "        var count = 0l\n        for\
    \ (c <- s) {\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' || c == 'y') {\n                count += 1\n            }\n       \
    \ }\n        if (s.length > 1 && s(s.length - 1) == 'y') {\n            count\
    \ += 1\n        }\n        return count", "        var count = 0l\n        for\
    \ (c <- s) {\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' || c == 'y') {\n                count += 1\n            }\n       \
    \ }\n        if (s.last == 'y') {\n            count += 1\n        }\n       \
    \ return count", "        // Fill in the code here\n        0l", "        // Write\
    \ your code here\n        return 0", "        // Fill in the code here\n     \
    \   0l", "        // Fill in the code here\n        return 0l", "        val vowels\
    \ = List('a', 'e', 'i', 'o', 'u')\n        val last = s.last\n        val count\
    \ = s.count(vowels.contains(_))\n        if (vowels.contains(last)) count + 1\
    \ else count", "        // TODO: Implement this function.\n        val vowels\
    \ = List('a', 'e', 'i', 'o', 'u')\n        val s_lower = s.toLowerCase()\n   \
    \     var count = 0\n        for (i <- 0 until s_lower.length) {\n           \
    \ if (vowels.contains(s_lower(i))) {\n                count += 1\n           \
    \ }\n        }\n        if (s_lower.endsWith(\"y\")) {\n            count += 1\n\
    \        }\n        return count", "        var count = 0l\n        for (c <-\
    \ s) {\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ || c == 'y') {\n                count += 1\n            }\n        }\n     \
    \   if (s.length > 1 && s(s.length - 1) == 'y') {\n            count += 1\n  \
    \      }\n        return count", "        // TODO: Implement this function\n \
    \       return 0l", "        // Fill in the code here\n        0", "        //\
    \ Fill in the code here\n        return 0l", "        // TODO: Implement this\
    \ function\n        return 0l", "        // Fill in the code here\n        return\
    \ 0l", "        // Fill in the code here\n        var count = 0\n        for (i\
    \ <- 0 until s.length) {\n            if (s(i) == 'a' || s(i) == 'e' || s(i) ==\
    \ 'i' || s(i) == 'o' || s(i) == 'u') {\n                count += 1\n         \
    \   }\n        }\n        if (s(s.length - 1) == 'y') {\n            count +=\
    \ 1\n        }\n        return count", "        // YOUR CODE HERE\n        return\
    \ 0", "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val count =\
    \ s.toLowerCase.filter(vowels.contains(_)).length\n        if (s.length > 1 &&\
    \ s.last == 'y') count + 1 else count", "        // Fill in the code here\n  \
    \      return 0l", "        // Fill in the code here\n        return 0l", "  \
    \      // Fill in the body of this function\n        return 0l", "        val\
    \ vowels = List('a', 'e', 'i', 'o', 'u')\n        val last = s.last\n        val\
    \ count = s.filter(vowels.contains(_)).length\n        if (vowels.contains(last))\
    \ count + 1 else count", "        // Fill in the code here\n        return 0l",
  "        // YOUR CODE HERE\n        return 0", "        // YOUR CODE HERE\n    \
    \    return 0", "        // TODO: Implement this function.\n        return 0l;",
  "        // Fill in the code here\n        return 0l", "        // TODO: Implement\
    \ this function\n        0", "        // Your code here\n        return 0", " \
    \       // Fill in the code here\n        0", "        // Fill in the code here\n\
    \        return 0", "        // YOUR CODE HERE\n        return 0", "        //\
    \ Fill in the code here\n        0", "        // TODO: Implement this function\n\
    \        return 0l", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n    \
    \    val last = s.last\n        val count = s.filter(vowels.contains(_)).length\n\
    \        if (vowels.contains(last)) count + 1 else count", "        // TODO: Implement\
    \ this function.\n        return 0l;", "        // Fill in the code here\n   \
    \     return 0L", "        // TODO: implement this function\n        0l", "  \
    \      // Your code here\n        return 0", "        // Fill in the code here\n\
    \        return 0l", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n    \
    \    val last = s.last\n        val count = s.count(vowels.contains(_))\n    \
    \    if (vowels.contains(last)) count + 1 else count", "        // TODO: Implement\
    \ this function.\n        return 0;", "        // Fill in the code here\n    \
    \    0l", "        // YOUR CODE HERE\n        return 0l", "        // Write your\
    \ code here\n        return 0", "        // YOUR CODE HERE\n        return 0",
  "        // TODO: Implement this function\n        0", "        // Fill in the code\
    \ here\n        0l", "        // TODO: Implement this function\n        return\
    \ 0l", "        // TODO: Implement this function\n        0", "        // Fill\
    \ in the code here\n        return 0l", "        s.toLowerCase.filter(c => c ==\
    \ 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y').length", " \
    \       // Fill in the code here\n        return 0", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val last = s.last\n        val count = s.count(vowels.contains(_))\n\
    \        if (vowels.contains(last)) count + 1 else count", "        val vowels\
    \ = Set('a', 'e', 'i', 'o', 'u')\n        val y = Set('y')\n        val last =\
    \ s.last\n        val result = s.filter(vowels.contains(_)).length\n        if\
    \ (y.contains(last)) result + 1 else result", "        // Fill in the code here\n\
    \        var count = 0\n        for (i <- 0 until s.length) {\n            if\
    \ (s(i) == 'a' || s(i) == 'e' || s(i) == 'i' || s(i) == 'o' || s(i) == 'u') {\n\
    \                count += 1\n            }\n        }\n        if (s(s.length\
    \ - 1) == 'y') {\n            count += 1\n        }\n        return count", " \
    \       return s.toLowerCase.filter(c => c == 'a' || c == 'e' || c == 'i' || c\
    \ == 'o' || c == 'u' || c == 'y').length", "        // Fill in the code here\n\
    \        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val last = s.last\n\
    \        val count = s.filter(vowels.contains(_)).length\n        if (vowels.contains(last))\
    \ count + 1 else count", "        // Fill in the code here\n        var count\
    \ = 0\n        for (i <- 0 until s.length) {\n            if (s(i) == 'a' || s(i)\
    \ == 'e' || s(i) == 'i' || s(i) == 'o' || s(i) == 'u') {\n                count\
    \ += 1\n            }\n        }\n        if (s(s.length - 1) == 'y') {\n    \
    \        count += 1\n        }\n        return count", "        // Fill in the\
    \ code here\n        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val last\
    \ = s.last\n        val count = s.filter(vowels.contains(_)).length\n        if\
    \ (vowels.contains(last)) count + 1 else count", "        // Fill Up this function\
    \ body\n        // `s` is a string\n        // `return` the number of vowels in\
    \ `s`\n        var count = 0\n        for (i <- 0 until s.length) {\n        \
    \    if (s(i) == 'a' || s(i) == 'e' || s(i) == 'i' || s(i) == 'o' || s(i) == 'u')\
    \ {\n                count += 1\n            }\n        }\n        if (s(s.length\
    \ - 1) == 'y') {\n            count += 1\n        }\n        return count", " \
    \       val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val vowelsCount = s.filter(vowels.contains(_)).length\n\
    \        if (s.last == 'y') vowelsCount + 1 else vowelsCount", "        // TODO:\
    \ Implement this function\n        return 0l", "        // TODO: Implement this\
    \ function\n        return 0", "        // TODO: Implement this function\n   \
    \     return 0", "        // TODO: Implement this function\n        return 0l",
  "        // Fill in the code here\n        0", "        // YOUR CODE HERE\n    \
    \    return 0", "        // Fill Up this function body\n        // `s` is a string\
    \ representing a word\n        // `return` the number of vowels in the string\n\
    \        var count = 0\n        for (i <- 0 until s.length) {\n            if\
    \ (s(i) == 'a' || s(i) == 'e' || s(i) == 'i' || s(i) == 'o' || s(i) == 'u') {\n\
    \                count += 1\n            }\n        }\n        if (s(s.length\
    \ - 1) == 'y') {\n            count += 1\n        }\n        return count", " \
    \       // YOUR CODE HERE\n        return 0", "        val vowels = \"aeiouy\"\
    \n        s.filter(vowels.contains(_)).length", "        // TODO: implement this\
    \ function\n        return 0l", "        // YOUR CODE HERE\n        return 0l",
  "        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val count = s.filter(c\
    \ => vowels.contains(c.toLower)).length\n        if (s.last.toLower == 'y') count\
    \ + 1 else count", "        // Fill Up this function body\n        // `s` is a\
    \ string representing a word\n        // `return` the number of vowels in the\
    \ string\n        var count = 0\n        for (i <- 0 until s.length) {\n     \
    \       if (s(i) == 'a' || s(i) == 'e' || s(i) == 'i' || s(i) == 'o' || s(i) ==\
    \ 'u') {\n                count += 1\n            }\n        }\n        if (s(s.length\
    \ - 1) == 'y') {\n            count += 1\n        }\n        return count", " \
    \       var count = 0l\n        for (c <- s) {\n            if (c == 'a' || c\
    \ == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y') {\n                count\
    \ += 1\n            }\n        }\n        return count", "        // Fill Up this\
    \ function body\n        // `s` contains only lower case letters\n        // 'y'\
    \ is a vowel only when it is at the end of the word\n        var count = 0\n \
    \       for (i <- 0 until s.length) {\n            if (s(i) == 'a' || s(i) ==\
    \ 'e' || s(i) == 'i' || s(i) == 'o' || s(i) == 'u') {\n                count +=\
    \ 1\n            }\n        }\n        if (s(s.length - 1) == 'y') {\n       \
    \     count += 1\n        }\n        count", "        // TODO: Implement this\
    \ function.\n        return 0l;", "        // TODO: Implement this function\n\
    \        return 0l", "        // YOUR CODE HERE\n        return 0l", "       \
    \ // Fill in the code here\n        return 0l", "        // Fill Up this function\
    \ body\n        // `s` contains only lower case letters\n        // `s` contains\
    \ only upper case letters\n        // `s` contains both upper and lower case letters\n\
    \        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val last = s.last\n\
    \        val count = s.filter(vowels.contains(_)).size\n        if (vowels.contains(last))\
    \ count + 1 else count", "        // Your code here\n        return 0l", "   \
    \     var count = 0\n        for (i <- 0 until s.length) {\n            if (s(i)\
    \ == 'a' || s(i) == 'e' || s(i) == 'i' || s(i) == 'o' || s(i) == 'u') {\n    \
    \            count += 1\n            }\n        }\n        if (s(s.length - 1)\
    \ == 'y') {\n            count += 1\n        }\n        return count", "     \
    \   // TODO: Implement this function.\n        return 0", "        // Fill Up\
    \ this function body\n        // `s` contains only lowercase letters\n       \
    \ // 'y' is a vowel only when it is at the end of the word\n        // For Example:\n\
    \        // >>> vowelsCount(\"aeiou\")\n        // 5\n        // >>> vowelsCount(\"\
    bcd\")\n        // 0\n        // >>> vowelsCount(\"aeiouy\")\n        // 6\n \
    \       // >>> vowelsCount(\"aeiouyaeiouy\")\n        // 12\n        // >>> vowelsCount(\"\
    abcde\")\n        // 2\n        // >>> vowelsCount(\"ACEDY\")\n        // 3\n\
    \        val vowels = List('a', 'e', 'i', 'o', 'u')\n        val last = s.last\n\
    \        var count = 0\n        for (i <- 0 until s.length) {\n            if\
    \ (vowels.contains(s(i))) {\n                count += 1\n            }\n     \
    \   }\n        if (vowels.contains(last)) {\n            count += 1\n        }\n\
    \        count", "        val vowels = List('a', 'e', 'i', 'o', 'u')\n       \
    \ val last = s.last\n        val isLastVowel = vowels.contains(last)\n       \
    \ val count = s.filter(vowels.contains(_)).length\n        if (isLastVowel) count\
    \ + 1 else count", "        // TODO: Implement this function\n        0l", '        s.filter(c
    => "aeiouyAEIOUY".contains(c)).length', "        // Fill in the code here\n  \
    \      0l", "        // TODO: Implement this function\n        return 0l", " \
    \       // your code here\n        0", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u')\n        val last = s.last\n        s.count(vowels.contains(_)) +\
    \ (if (vowels.contains(last)) 1 else 0)", "        // Fill up this function body\n\
    \        // You may also want to use a helper function\n        // that you must\
    \ write\n        def isVowel(c : Char) : Boolean = {\n            val vowels =\
    \ List('a', 'e', 'i', 'o', 'u', 'y')\n            vowels.contains(c)\n       \
    \ }\n        def countVowels(s : String) : Long = {\n            if (s.length\
    \ == 0) 0\n            else if (isVowel(s.head)) 1 + countVowels(s.tail)\n   \
    \         else countVowels(s.tail)\n        }\n        countVowels(s.toLowerCase)",
  "        // YOUR CODE HERE\n        return 0", "        // Write your code here\n\
    \        return 0", "        // TODO: Implement this function\n        return\
    \ 0l", "        // Fill in the code here\n        0l", "        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val last = s.last\n        val count = s.filter(vowels.contains(_)).length\n\
    \        if (vowels.contains(last)) count + 1 else count", "        // TODO: Implement\
    \ this function\n        0", "        // Fill in the code here\n        return\
    \ 0l", "        // Fill Up this function body\n        // `s` is a string representing\
    \ a word.\n        // You need to return the number of vowels in the string.\n\
    \        // Vowels in this case are 'a', 'e', 'i', 'o', 'u'.\n        // Here,\
    \ 'y' is also a vowel, but only when it is at the end of the given word.\n   \
    \     // Hint: You can use the function `contains` of the class `String` to check\
    \ if a character is present in the string.\n        // For example, \"abcde\"\
    .contains('e') will return true.\n        var count = 0\n        for (i <- 0 until\
    \ s.length) {\n            if (s(i) == 'a' || s(i) == 'e' || s(i) == 'i' || s(i)\
    \ == 'o' || s(i) == 'u') {\n                count += 1\n            }\n      \
    \  }\n        if (s(s.length - 1) == 'y') {\n            count += 1\n        }\n\
    \        count", "        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ vowelsWithY = Set('a', 'e', 'i', 'o', 'u', 'y')\n        var count = 0\n   \
    \     for (i <- 0 until s.length) {\n            if (vowelsWithY.contains(s(i)))\
    \ {\n                if (i == s.length - 1 || !vowels.contains(s(i))) {\n    \
    \                count += 1\n                }\n            }\n        }\n   \
    \     count", "        // Fill in the code here\n        0", "        // YOUR\
    \ CODE HERE\n        return 0", "        // Fill Up this function body\n     \
    \   // `s` contains only lower case letters\n        // 'y' is a vowel only when\
    \ it is at the end of the word\n        // For Example:\n        // >>> vowelsCount(\"\
    aeiou\")\n        // 5\n        // >>> vowelsCount(\"bcd\")\n        // 0\n  \
    \      // >>> vowelsCount(\"aeiouy\")\n        // 6\n        // >>> vowelsCount(\"\
    aeiouyaeiouy\")\n        // 12\n        // >>> vowelsCount(\"abcde\")\n      \
    \  // 2\n        // >>> vowelsCount(\"ACEDY\")\n        // 3\n        var count\
    \ = 0\n        for (c <- s) {\n            if (c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') count += 1\n        }\n        if (s.last == 'y') count\
    \ += 1\n        count", "        // TODO: Implement this function.\n        return\
    \ 0l;", "        var count = 0l\n        for (c <- s) {\n            if (c ==\
    \ 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y') {\n       \
    \         count += 1\n            }\n        }\n        return count", "     \
    \   // Fill in the code here\n        var count = 0\n        for (i <- 0 until\
    \ s.length) {\n            if (s(i) == 'a' || s(i) == 'e' || s(i) == 'i' || s(i)\
    \ == 'o' || s(i) == 'u') {\n                count += 1\n            }\n      \
    \  }\n        if (s(s.length - 1) == 'y') {\n            count += 1\n        }\n\
    \        return count", "        // TODO: Implement this function\n        return\
    \ 0l", "        // TODO: implement this function\n        return 0", "       \
    \ var count = 0l\n        for (c <- s) {\n            if (c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' || c == 'y') {\n                count +=\
    \ 1\n            }\n        }\n        count", "        // YOUR CODE HERE\n  \
    \      return 0l", "        // Fill in the code here\n        0l", "        //\
    \ Fill in the code here\n        0l", "        // Fill in the code here\n    \
    \    0l", "        // TODO: Implement this function\n        return 0", "    \
    \    // Fill in the code here\n        return 0l", "        // YOUR CODE HERE\n\
    \        return 0", "        // Fill in the code here\n        return 0l", " \
    \       // Your code here\n        return 0", "        // Fill Up this function\
    \ body\n        // `s` is a string representing a word\n        // `return` the\
    \ number of vowels in the string\n        val vowels = Set('a', 'e', 'i', 'o',\
    \ 'u')\n        val last = s.last\n        val count = s.filter(vowels.contains(_)).length\n\
    \        if (vowels.contains(last)) count + 1 else count", "        var count\
    \ = 0l\n        for (c <- s) {\n            if (c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u' || c == 'y') {\n                count += 1\n       \
    \     }\n        }\n        return count", "        // Fill Up this function body\n\
    \        // `s` is a string representing a word\n        // `return` the number\
    \ of vowels in the string\n        var count = 0\n        for (i <- 0 until s.length)\
    \ {\n            if (s(i) == 'a' || s(i) == 'e' || s(i) == 'i' || s(i) == 'o'\
    \ || s(i) == 'u') {\n                count += 1\n            }\n        }\n  \
    \      if (s(s.length - 1) == 'y') {\n            count += 1\n        }\n    \
    \    return count", "        // Fill Up this function body\n        // `s` contains\
    \ only lower case letters\n        // 'y' is a vowel only when it is at the end\
    \ of the word\n        var count = 0\n        for (i <- 0 until s.length) {\n\
    \            if (s(i) == 'a' || s(i) == 'e' || s(i) == 'i' || s(i) == 'o' || s(i)\
    \ == 'u') {\n                count += 1\n            }\n        }\n        if\
    \ (s(s.length - 1) == 'y') {\n            count += 1\n        }\n        count",
  "        // TODO: Implement this function\n        return 0l", "        // YOUR\
    \ CODE HERE\n        0", "        // Fill in the code here\n        0l", "   \
    \     // Fill Up this function body\n        // `s` is a string representing a\
    \ word\n        // `return` the number of vowels in the string\n        var count\
    \ = 0\n        for (i <- 0 until s.length) {\n            if (s(i) == 'a' || s(i)\
    \ == 'e' || s(i) == 'i' || s(i) == 'o' || s(i) == 'u') {\n                count\
    \ += 1\n            }\n        }\n        if (s(s.length - 1) == 'y') {\n    \
    \        count += 1\n        }\n        return count", "        val vowels = List('a',\
    \ 'e', 'i', 'o', 'u')\n        s.filter(vowels.contains(_)).length", '        s.toLowerCase.filter(c
    => "aeiouy".contains(c)).size', "        // YOUR CODE HERE\n        return 0l",
  "        return s.filter(x => x == 'a' || x == 'e' || x == 'i' || x == 'o' || x\
    \ == 'u' || x == 'y').length", "        // YOUR CODE HERE\n        return 0",
  "        // TODO: Implement this function\n        return 0l", "        var count\
    \ = 0l\n        for (c <- s) {\n            if (c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u' || c == 'y') {\n                count += 1\n       \
    \     }\n        }\n        if (s.length > 1 && s(s.length - 1) == 'y') {\n  \
    \          count += 1\n        }\n        return count", "        // TODO: Implement\
    \ this function\n        return 0l", '        ???', "        // TODO: Implement\
    \ this function\n        0", "        val vowels = List('a', 'e', 'i', 'o', 'u')\n\
    \        val last = s.last\n        val count = s.filter(vowels.contains(_)).length\n\
    \        if (vowels.contains(last)) count + 1 else count", "        // Fill in\
    \ the code here\n        return 0l", "        // YOUR CODE HERE\n        return\
    \ 0", "        // Fill up this function body\n        // You may also define other\
    \ functions as you wish\n        // to solve this problem\n        var count =\
    \ 0\n        for (i <- 0 until s.length) {\n            if (s(i) == 'a' || s(i)\
    \ == 'e' || s(i) == 'i' || s(i) == 'o' || s(i) == 'u') {\n                count\
    \ += 1\n            }\n        }\n        if (s(s.length - 1) == 'y') {\n    \
    \        count += 1\n        }\n        return count", "        // Fill in the\
    \ code here\n        return 0l", "        // Fill in the code here\n        return\
    \ 0l", '        s.toLowerCase.filter(c => "aeiouy".contains(c)).length', "   \
    \     // Fill in the code here\n        return 0l", "        var count = 0\n \
    \       for (c <- s) {\n            if (c == 'a' || c == 'e' || c == 'i' || c\
    \ == 'o' || c == 'u') {\n                count += 1\n            }\n        }\n\
    \        if (s.last == 'y') {\n            count += 1\n        }\n        return\
    \ count", "        var count = 0l\n        for (c <- s) {\n            if (c ==\
    \ 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' || c == 'y') {\n       \
    \         count += 1\n            }\n        }\n        return count", "     \
    \   // Fill in the code here\n        0l", "        // Fill in the code here\n\
    \        0l", "        // Fill in the code here\n        return 0l", "       \
    \ // Fill in the code here\n        return 0l", "        // Fill in the code here\n\
    \        return 0l", "        // Fill in the code here\n        0l", "       \
    \ // Fill in the body of this function\n        return 0l", "        // YOUR CODE\
    \ HERE\n        return 0"]
stop_tokens:
- "\n    }\n"

name: HumanEval_105_by_length
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n\
  \    // reverse the resulting array, and then replace each digit by its corresponding\
  \ name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"\
  Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((List[Long](2l.toLong,\
  \ 1l.toLong, 1l.toLong, 4l.toLong, 5l.toLong, 8l.toLong, 2l.toLong, 3l.toLong)))\n\
  \    // (List[String](\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\"\
  , \"One\", \"One\"))\n    // If the array is empty, return an empty array:\n   \
  \ // >>> byLength((List[Long]()))\n    // (List[String]())\n    // If the array\
  \ has any strange number ignore it:\n    // >>> byLength((List[Long](1l.toLong,\
  \ -1l.toLong, 55l.toLong)))\n    // (List[String](\"One\"))\n    def byLength(arr\
  \ : List[Long]) : List[String] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(byLength((List[Long](2l.toLong,\
  \ 1l.toLong, 1l.toLong, 4l.toLong, 5l.toLong, 8l.toLong, 2l.toLong, 3l.toLong))).equals((List[String](\"\
  Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"))));\n\
  \    assert(byLength((List[Long]())).equals((List[String]())));\n    assert(byLength((List[Long](1l.toLong,\
  \ -1l.toLong, 55l.toLong))).equals((List[String](\"One\"))));\n    assert(byLength((List[Long](1l.toLong,\
  \ -1l.toLong, 3l.toLong, 2l.toLong))).equals((List[String](\"Three\", \"Two\", \"\
  One\"))));\n    assert(byLength((List[Long](9l.toLong, 4l.toLong, 8l.toLong))).equals((List[String](\"\
  Nine\", \"Eight\", \"Four\"))));\n    }\n\n}\n"
completions: ["        // Fill up this function body\n        // You can add another\
    \ function as well, if required\n        var result = List[String]()\n       \
    \ for (i <- arr) {\n            if (i == 1) {\n                result = result\
    \ :+ \"One\"\n            } else if (i == 2) {\n                result = result\
    \ :+ \"Two\"\n            } else if (i == 3) {\n                result = result\
    \ :+ \"Three\"\n            } else if (i == 4) {\n                result = result\
    \ :+ \"Four\"\n            } else if (i == 5) {\n                result = result\
    \ :+ \"Five\"\n            } else if (i == 6) {\n                result = result\
    \ :+ \"Six\"\n            } else if (i == 7) {\n                result = result\
    \ :+ \"Seven\"\n            } else if (i == 8) {\n                result = result\
    \ :+ \"Eight\"\n            } else if (i == 9) {\n                result = result\
    \ :+ \"Nine\"\n            }\n        }\n        result.sorted.reverse", "   \
    \     // Fill up this function body\n        // You can add another function as\
    \ well, if required\n        var result = List[String]()\n        for (i <- arr)\
    \ {\n            if (i == 1) {\n                result = result :+ \"One\"\n \
    \           } else if (i == 2) {\n                result = result :+ \"Two\"\n\
    \            } else if (i == 3) {\n                result = result :+ \"Three\"\
    \n            } else if (i == 4) {\n                result = result :+ \"Four\"\
    \n            } else if (i == 5) {\n                result = result :+ \"Five\"\
    \n            } else if (i == 6) {\n                result = result :+ \"Six\"\
    \n            } else if (i == 7) {\n                result = result :+ \"Seven\"\
    \n            } else if (i == 8) {\n                result = result :+ \"Eight\"\
    \n            } else if (i == 9) {\n                result = result :+ \"Nine\"\
    \n            }\n        }\n        result.sorted.reverse", "        // Fill up\
    \ this function body\n        // You can add another function as well, if required\n\
    \        var l = List[String]()\n        for (i <- arr) {\n            if (i ==\
    \ 1) l = l :+ \"One\"\n            if (i == 2) l = l :+ \"Two\"\n            if\
    \ (i == 3) l = l :+ \"Three\"\n            if (i == 4) l = l :+ \"Four\"\n   \
    \         if (i == 5) l = l :+ \"Five\"\n            if (i == 6) l = l :+ \"Six\"\
    \n            if (i == 7) l = l :+ \"Seven\"\n            if (i == 8) l = l :+\
    \ \"Eight\"\n            if (i == 9) l = l :+ \"Nine\"\n        }\n        l.sorted.reverse",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[String]()\n        var temp\
    \ = List[Long]()\n        for (i <- arr) {\n            if (i > 0 && i < 10) {\n\
    \                temp = temp :+ i\n            }\n        }\n        temp = temp.sorted\n\
    \        for (i <- temp.reverse) {\n            if (i == 1) {\n              \
    \  result = result :+ \"One\"\n            }\n            else if (i == 2) {\n\
    \                result = result :+ \"Two\"\n            }\n            else if\
    \ (i == 3) {\n                result = result :+ \"Three\"\n            }\n  \
    \          else if (i == 4) {\n                result = result :+ \"Four\"\n \
    \           }\n            else if (i == 5) {\n                result = result\
    \ :+ \"Five\"\n            }\n            else if (i == 6) {\n               \
    \ result = result :+ \"Six\"\n            }\n            else if (i == 7) {\n\
    \                result = result :+ \"Seven\"\n            }\n            else\
    \ if (i == 8) {\n                result = result :+ \"Eight\"\n            }\n\
    \            else if (i == 9) {\n                result = result :+ \"Nine\"\n\
    \            }\n        }\n        return result", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var list = List[String]()\n        for (i <- arr) {\n            if (i == 1)\
    \ {\n                list = list :+ \"One\"\n            }\n            else if\
    \ (i == 2) {\n                list = list :+ \"Two\"\n            }\n        \
    \    else if (i == 3) {\n                list = list :+ \"Three\"\n          \
    \  }\n            else if (i == 4) {\n                list = list :+ \"Four\"\n\
    \            }\n            else if (i == 5) {\n                list = list :+\
    \ \"Five\"\n            }\n            else if (i == 6) {\n                list\
    \ = list :+ \"Six\"\n            }\n            else if (i == 7) {\n         \
    \       list = list :+ \"Seven\"\n            }\n            else if (i == 8)\
    \ {\n                list = list :+ \"Eight\"\n            }\n            else\
    \ if (i == 9) {\n                list = list :+ \"Nine\"\n            }\n    \
    \    }\n        list.sorted.reverse", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        val map\
    \ = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong\
    \ -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\"\
    , 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n        val list = arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse\n        list.map(x => map(x))", "     \
    \   val map = Map[Long, String](1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong\
    \ -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"\
    Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n\
    \        val result = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x =>\
    \ map(x))\n        result", "        // Fill up this function body\n        //\
    \ You can add another function as well, if required\n        val l = List(\"One\"\
    , \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    )\n        val m = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong ->\
    \ \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\"\
    , 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n   \
    \     arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => m(x))", "    \
    \    // your code here\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => x match {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n\
    \            case 3 => \"Three\"\n            case 4 => \"Four\"\n           \
    \ case 5 => \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"\
    Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\n   \
    \     })", "        // Fill up this function body\n        // You can add another\
    \ function as well, if required\n        var lst = List[String]()\n        var\
    \ lst1 = List[String]()\n        var lst2 = List[String]()\n        var lst3 =\
    \ List[String]()\n        var lst4 = List[String]()\n        var lst5 = List[String]()\n\
    \        var lst6 = List[String]()\n        var lst7 = List[String]()\n      \
    \  var lst8 = List[String]()\n        var lst9 = List[String]()\n        for (i\
    \ <- arr) {\n            if (i == 1) {\n                lst1 = lst1 :+ \"One\"\
    \n            }\n            else if (i == 2) {\n                lst2 = lst2 :+\
    \ \"Two\"\n            }\n            else if (i == 3) {\n                lst3\
    \ = lst3 :+ \"Three\"\n            }\n            else if (i == 4) {\n       \
    \         lst4 = lst4 :+ \"Four\"\n            }\n            else if (i == 5)\
    \ {\n                lst5 = lst5 :+ \"Five\"\n            }\n            else\
    \ if (i == 6) {\n                lst6 = lst6 :+ \"Six\"\n            }\n     \
    \       else if (i == 7) {\n                lst7 = lst7 :+ \"Seven\"\n       \
    \     }\n            else if (i == 8) {\n                lst8 = lst8 :+ \"Eight\"\
    \n            }\n            else if (i == 9) {\n                lst9 = lst9 :+\
    \ \"Nine\"\n            }\n        }\n        lst = lst1 ::: lst2 ::: lst3 :::\
    \ lst4 ::: lst5 ::: lst6 ::: lst7 ::: lst8 ::: lst9\n        lst.reverse", " \
    \       // Write your code here\n        return List[String]()", "        // Fill\
    \ up this function body\n        // You can add another function as well, if required\n\
    \        var list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n       \
    \ var list1 = List[String]()\n        for(i <- list) {\n            i match {\n\
    \                case 1 => list1 = list1 :+ \"One\"\n                case 2 =>\
    \ list1 = list1 :+ \"Two\"\n                case 3 => list1 = list1 :+ \"Three\"\
    \n                case 4 => list1 = list1 :+ \"Four\"\n                case 5\
    \ => list1 = list1 :+ \"Five\"\n                case 6 => list1 = list1 :+ \"\
    Six\"\n                case 7 => list1 = list1 :+ \"Seven\"\n                case\
    \ 8 => list1 = list1 :+ \"Eight\"\n                case 9 => list1 = list1 :+\
    \ \"Nine\"\n            }\n        }\n        list1", "        val map = Map(1l.toLong\
    \ -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        val list = arr.filter(x => x >=\
    \ 1 && x <= 9).sorted.reverse.map(x => map(x))\n        list", "        // your\
    \ code here\n        null", "        // Fill up this function body\n        //\
    \ You may also define new functions\n        // to help you in solving this problem\n\
    \        var list = List[String]()\n        for (i <- arr) {\n            if (i\
    \ == 1) {\n                list = list :+ \"One\"\n            }\n           \
    \ else if (i == 2) {\n                list = list :+ \"Two\"\n            }\n\
    \            else if (i == 3) {\n                list = list :+ \"Three\"\n  \
    \          }\n            else if (i == 4) {\n                list = list :+ \"\
    Four\"\n            }\n            else if (i == 5) {\n                list =\
    \ list :+ \"Five\"\n            }\n            else if (i == 6) {\n          \
    \      list = list :+ \"Six\"\n            }\n            else if (i == 7) {\n\
    \                list = list :+ \"Seven\"\n            }\n            else if\
    \ (i == 8) {\n                list = list :+ \"Eight\"\n            }\n      \
    \      else if (i == 9) {\n                list = list :+ \"Nine\"\n         \
    \   }\n        }\n        list.sorted.reverse", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var result = List[String]()\n        for (i <- arr) {\n            if (i ==\
    \ 1) {\n                result = result :+ \"One\"\n            } else if (i ==\
    \ 2) {\n                result = result :+ \"Two\"\n            } else if (i ==\
    \ 3) {\n                result = result :+ \"Three\"\n            } else if (i\
    \ == 4) {\n                result = result :+ \"Four\"\n            } else if\
    \ (i == 5) {\n                result = result :+ \"Five\"\n            } else\
    \ if (i == 6) {\n                result = result :+ \"Six\"\n            } else\
    \ if (i == 7) {\n                result = result :+ \"Seven\"\n            } else\
    \ if (i == 8) {\n                result = result :+ \"Eight\"\n            } else\
    \ if (i == 9) {\n                result = result :+ \"Nine\"\n            }\n\
    \        }\n        result.sorted.reverse", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var result = List[String]()\n        for (i <- arr) {\n            if (i ==\
    \ 1) {\n                result = result :+ \"One\"\n            } else if (i ==\
    \ 2) {\n                result = result :+ \"Two\"\n            } else if (i ==\
    \ 3) {\n                result = result :+ \"Three\"\n            } else if (i\
    \ == 4) {\n                result = result :+ \"Four\"\n            } else if\
    \ (i == 5) {\n                result = result :+ \"Five\"\n            } else\
    \ if (i == 6) {\n                result = result :+ \"Six\"\n            } else\
    \ if (i == 7) {\n                result = result :+ \"Seven\"\n            } else\
    \ if (i == 8) {\n                result = result :+ \"Eight\"\n            } else\
    \ if (i == 9) {\n                result = result :+ \"Nine\"\n            }\n\
    \        }\n        result.sorted.reverse", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ val map = Map(1l -> \"One\", 2l -> \"Two\", 3l -> \"Three\", 4l -> \"Four\"\
    , 5l -> \"Five\", 6l -> \"Six\", 7l -> \"Seven\", 8l -> \"Eight\", 9l -> \"Nine\"\
    )\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[String]()\n        for (i <-\
    \ arr) {\n            if (i == 1) result = result :+ \"One\"\n            else\
    \ if (i == 2) result = result :+ \"Two\"\n            else if (i == 3) result\
    \ = result :+ \"Three\"\n            else if (i == 4) result = result :+ \"Four\"\
    \n            else if (i == 5) result = result :+ \"Five\"\n            else if\
    \ (i == 6) result = result :+ \"Six\"\n            else if (i == 7) result = result\
    \ :+ \"Seven\"\n            else if (i == 8) result = result :+ \"Eight\"\n  \
    \          else if (i == 9) result = result :+ \"Nine\"\n        }\n        result.sorted.reverse",
  "        // your code here\n        var result = new ListBuffer[String]\n      \
    \  for (i <- arr) {\n            if (i == 1) result += \"One\"\n            if\
    \ (i == 2) result += \"Two\"\n            if (i == 3) result += \"Three\"\n  \
    \          if (i == 4) result += \"Four\"\n            if (i == 5) result += \"\
    Five\"\n            if (i == 6) result += \"Six\"\n            if (i == 7) result\
    \ += \"Seven\"\n            if (i == 8) result += \"Eight\"\n            if (i\
    \ == 9) result += \"Nine\"\n        }\n        result.toList.sortWith(_ < _).reverse"]
stop_tokens:
- "\n    }\n"

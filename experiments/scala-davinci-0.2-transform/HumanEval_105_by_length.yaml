name: HumanEval_105_by_length
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given an array of integers, sort the integers that are between 1 and 9 inclusive,\n\
  \    // reverse the resulting array, and then replace each digit by its corresponding\
  \ name from\n    // \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"\
  Seven\", \"Eight\", \"Nine\".\n    // For example:\n    // >>> byLength((List[Long](2l.toLong,\
  \ 1l.toLong, 1l.toLong, 4l.toLong, 5l.toLong, 8l.toLong, 2l.toLong, 3l.toLong)))\n\
  \    // (List[String](\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\"\
  , \"One\", \"One\"))\n    // If the array is empty, return an empty array:\n   \
  \ // >>> byLength((List[Long]()))\n    // (List[String]())\n    // If the array\
  \ has any strange number ignore it:\n    // >>> byLength((List[Long](1l.toLong,\
  \ -1l.toLong, 55l.toLong)))\n    // (List[String](\"One\"))\n    def byLength(arr\
  \ : List[Long]) : List[String] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(byLength((List[Long](2l.toLong,\
  \ 1l.toLong, 1l.toLong, 4l.toLong, 5l.toLong, 8l.toLong, 2l.toLong, 3l.toLong))).equals((List[String](\"\
  Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"))));\n\
  \    assert(byLength((List[Long]())).equals((List[String]())));\n    assert(byLength((List[Long](1l.toLong,\
  \ -1l.toLong, 55l.toLong))).equals((List[String](\"One\"))));\n    assert(byLength((List[Long](1l.toLong,\
  \ -1l.toLong, 3l.toLong, 2l.toLong))).equals((List[String](\"Three\", \"Two\", \"\
  One\"))));\n    assert(byLength((List[Long](9l.toLong, 4l.toLong, 8l.toLong))).equals((List[String](\"\
  Nine\", \"Eight\", \"Four\"))));\n    }\n\n}\n"
completions: ["        // Fill up this function body\n        // You can add another\
    \ function as well, if required\n        var result = List[String]()\n       \
    \ for (i <- arr) {\n            if (i == 1) {\n                result = result\
    \ :+ \"One\"\n            } else if (i == 2) {\n                result = result\
    \ :+ \"Two\"\n            } else if (i == 3) {\n                result = result\
    \ :+ \"Three\"\n            } else if (i == 4) {\n                result = result\
    \ :+ \"Four\"\n            } else if (i == 5) {\n                result = result\
    \ :+ \"Five\"\n            } else if (i == 6) {\n                result = result\
    \ :+ \"Six\"\n            } else if (i == 7) {\n                result = result\
    \ :+ \"Seven\"\n            } else if (i == 8) {\n                result = result\
    \ :+ \"Eight\"\n            } else if (i == 9) {\n                result = result\
    \ :+ \"Nine\"\n            }\n        }\n        result.sorted.reverse", "   \
    \     // Fill up this function body\n        // You can add another function as\
    \ well, if required\n        var result = List[String]()\n        for (i <- arr)\
    \ {\n            if (i == 1) {\n                result = result :+ \"One\"\n \
    \           } else if (i == 2) {\n                result = result :+ \"Two\"\n\
    \            } else if (i == 3) {\n                result = result :+ \"Three\"\
    \n            } else if (i == 4) {\n                result = result :+ \"Four\"\
    \n            } else if (i == 5) {\n                result = result :+ \"Five\"\
    \n            } else if (i == 6) {\n                result = result :+ \"Six\"\
    \n            } else if (i == 7) {\n                result = result :+ \"Seven\"\
    \n            } else if (i == 8) {\n                result = result :+ \"Eight\"\
    \n            } else if (i == 9) {\n                result = result :+ \"Nine\"\
    \n            }\n        }\n        result.sorted.reverse", "        // Fill up\
    \ this function body\n        // You can add another function as well, if required\n\
    \        var l = List[String]()\n        for (i <- arr) {\n            if (i ==\
    \ 1) l = l :+ \"One\"\n            if (i == 2) l = l :+ \"Two\"\n            if\
    \ (i == 3) l = l :+ \"Three\"\n            if (i == 4) l = l :+ \"Four\"\n   \
    \         if (i == 5) l = l :+ \"Five\"\n            if (i == 6) l = l :+ \"Six\"\
    \n            if (i == 7) l = l :+ \"Seven\"\n            if (i == 8) l = l :+\
    \ \"Eight\"\n            if (i == 9) l = l :+ \"Nine\"\n        }\n        l.sorted.reverse",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[String]()\n        var temp\
    \ = List[Long]()\n        for (i <- arr) {\n            if (i > 0 && i < 10) {\n\
    \                temp = temp :+ i\n            }\n        }\n        temp = temp.sorted\n\
    \        for (i <- temp.reverse) {\n            if (i == 1) {\n              \
    \  result = result :+ \"One\"\n            }\n            else if (i == 2) {\n\
    \                result = result :+ \"Two\"\n            }\n            else if\
    \ (i == 3) {\n                result = result :+ \"Three\"\n            }\n  \
    \          else if (i == 4) {\n                result = result :+ \"Four\"\n \
    \           }\n            else if (i == 5) {\n                result = result\
    \ :+ \"Five\"\n            }\n            else if (i == 6) {\n               \
    \ result = result :+ \"Six\"\n            }\n            else if (i == 7) {\n\
    \                result = result :+ \"Seven\"\n            }\n            else\
    \ if (i == 8) {\n                result = result :+ \"Eight\"\n            }\n\
    \            else if (i == 9) {\n                result = result :+ \"Nine\"\n\
    \            }\n        }\n        return result", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var list = List[String]()\n        for (i <- arr) {\n            if (i == 1)\
    \ {\n                list = list :+ \"One\"\n            }\n            else if\
    \ (i == 2) {\n                list = list :+ \"Two\"\n            }\n        \
    \    else if (i == 3) {\n                list = list :+ \"Three\"\n          \
    \  }\n            else if (i == 4) {\n                list = list :+ \"Four\"\n\
    \            }\n            else if (i == 5) {\n                list = list :+\
    \ \"Five\"\n            }\n            else if (i == 6) {\n                list\
    \ = list :+ \"Six\"\n            }\n            else if (i == 7) {\n         \
    \       list = list :+ \"Seven\"\n            }\n            else if (i == 8)\
    \ {\n                list = list :+ \"Eight\"\n            }\n            else\
    \ if (i == 9) {\n                list = list :+ \"Nine\"\n            }\n    \
    \    }\n        list.sorted.reverse", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        val map\
    \ = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong\
    \ -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\"\
    , 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n        val list = arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse\n        list.map(x => map(x))", "     \
    \   val map = Map[Long, String](1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong\
    \ -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"\
    Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n\
    \        val result = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x =>\
    \ map(x))\n        result", "        // Fill up this function body\n        //\
    \ You can add another function as well, if required\n        val l = List(\"One\"\
    , \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    )\n        val m = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong ->\
    \ \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\"\
    , 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n   \
    \     arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => m(x))", "    \
    \    // your code here\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => x match {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n\
    \            case 3 => \"Three\"\n            case 4 => \"Four\"\n           \
    \ case 5 => \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"\
    Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\n   \
    \     })", "        // Fill up this function body\n        // You can add another\
    \ function as well, if required\n        var lst = List[String]()\n        var\
    \ lst1 = List[String]()\n        var lst2 = List[String]()\n        var lst3 =\
    \ List[String]()\n        var lst4 = List[String]()\n        var lst5 = List[String]()\n\
    \        var lst6 = List[String]()\n        var lst7 = List[String]()\n      \
    \  var lst8 = List[String]()\n        var lst9 = List[String]()\n        for (i\
    \ <- arr) {\n            if (i == 1) {\n                lst1 = lst1 :+ \"One\"\
    \n            }\n            else if (i == 2) {\n                lst2 = lst2 :+\
    \ \"Two\"\n            }\n            else if (i == 3) {\n                lst3\
    \ = lst3 :+ \"Three\"\n            }\n            else if (i == 4) {\n       \
    \         lst4 = lst4 :+ \"Four\"\n            }\n            else if (i == 5)\
    \ {\n                lst5 = lst5 :+ \"Five\"\n            }\n            else\
    \ if (i == 6) {\n                lst6 = lst6 :+ \"Six\"\n            }\n     \
    \       else if (i == 7) {\n                lst7 = lst7 :+ \"Seven\"\n       \
    \     }\n            else if (i == 8) {\n                lst8 = lst8 :+ \"Eight\"\
    \n            }\n            else if (i == 9) {\n                lst9 = lst9 :+\
    \ \"Nine\"\n            }\n        }\n        lst = lst1 ::: lst2 ::: lst3 :::\
    \ lst4 ::: lst5 ::: lst6 ::: lst7 ::: lst8 ::: lst9\n        lst.reverse", " \
    \       // Write your code here\n        return List[String]()", "        // Fill\
    \ up this function body\n        // You can add another function as well, if required\n\
    \        var list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n       \
    \ var list1 = List[String]()\n        for(i <- list) {\n            i match {\n\
    \                case 1 => list1 = list1 :+ \"One\"\n                case 2 =>\
    \ list1 = list1 :+ \"Two\"\n                case 3 => list1 = list1 :+ \"Three\"\
    \n                case 4 => list1 = list1 :+ \"Four\"\n                case 5\
    \ => list1 = list1 :+ \"Five\"\n                case 6 => list1 = list1 :+ \"\
    Six\"\n                case 7 => list1 = list1 :+ \"Seven\"\n                case\
    \ 8 => list1 = list1 :+ \"Eight\"\n                case 9 => list1 = list1 :+\
    \ \"Nine\"\n            }\n        }\n        list1", "        val map = Map(1l.toLong\
    \ -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        val list = arr.filter(x => x >=\
    \ 1 && x <= 9).sorted.reverse.map(x => map(x))\n        list", "        // your\
    \ code here\n        null", "        // Fill up this function body\n        //\
    \ You may also define new functions\n        // to help you in solving this problem\n\
    \        var list = List[String]()\n        for (i <- arr) {\n            if (i\
    \ == 1) {\n                list = list :+ \"One\"\n            }\n           \
    \ else if (i == 2) {\n                list = list :+ \"Two\"\n            }\n\
    \            else if (i == 3) {\n                list = list :+ \"Three\"\n  \
    \          }\n            else if (i == 4) {\n                list = list :+ \"\
    Four\"\n            }\n            else if (i == 5) {\n                list =\
    \ list :+ \"Five\"\n            }\n            else if (i == 6) {\n          \
    \      list = list :+ \"Six\"\n            }\n            else if (i == 7) {\n\
    \                list = list :+ \"Seven\"\n            }\n            else if\
    \ (i == 8) {\n                list = list :+ \"Eight\"\n            }\n      \
    \      else if (i == 9) {\n                list = list :+ \"Nine\"\n         \
    \   }\n        }\n        list.sorted.reverse", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var result = List[String]()\n        for (i <- arr) {\n            if (i ==\
    \ 1) {\n                result = result :+ \"One\"\n            } else if (i ==\
    \ 2) {\n                result = result :+ \"Two\"\n            } else if (i ==\
    \ 3) {\n                result = result :+ \"Three\"\n            } else if (i\
    \ == 4) {\n                result = result :+ \"Four\"\n            } else if\
    \ (i == 5) {\n                result = result :+ \"Five\"\n            } else\
    \ if (i == 6) {\n                result = result :+ \"Six\"\n            } else\
    \ if (i == 7) {\n                result = result :+ \"Seven\"\n            } else\
    \ if (i == 8) {\n                result = result :+ \"Eight\"\n            } else\
    \ if (i == 9) {\n                result = result :+ \"Nine\"\n            }\n\
    \        }\n        result.sorted.reverse", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var result = List[String]()\n        for (i <- arr) {\n            if (i ==\
    \ 1) {\n                result = result :+ \"One\"\n            } else if (i ==\
    \ 2) {\n                result = result :+ \"Two\"\n            } else if (i ==\
    \ 3) {\n                result = result :+ \"Three\"\n            } else if (i\
    \ == 4) {\n                result = result :+ \"Four\"\n            } else if\
    \ (i == 5) {\n                result = result :+ \"Five\"\n            } else\
    \ if (i == 6) {\n                result = result :+ \"Six\"\n            } else\
    \ if (i == 7) {\n                result = result :+ \"Seven\"\n            } else\
    \ if (i == 8) {\n                result = result :+ \"Eight\"\n            } else\
    \ if (i == 9) {\n                result = result :+ \"Nine\"\n            }\n\
    \        }\n        result.sorted.reverse", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ val map = Map(1l -> \"One\", 2l -> \"Two\", 3l -> \"Three\", 4l -> \"Four\"\
    , 5l -> \"Five\", 6l -> \"Six\", 7l -> \"Seven\", 8l -> \"Eight\", 9l -> \"Nine\"\
    )\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[String]()\n        for (i <-\
    \ arr) {\n            if (i == 1) result = result :+ \"One\"\n            else\
    \ if (i == 2) result = result :+ \"Two\"\n            else if (i == 3) result\
    \ = result :+ \"Three\"\n            else if (i == 4) result = result :+ \"Four\"\
    \n            else if (i == 5) result = result :+ \"Five\"\n            else if\
    \ (i == 6) result = result :+ \"Six\"\n            else if (i == 7) result = result\
    \ :+ \"Seven\"\n            else if (i == 8) result = result :+ \"Eight\"\n  \
    \          else if (i == 9) result = result :+ \"Nine\"\n        }\n        result.sorted.reverse",
  "        // your code here\n        var result = new ListBuffer[String]\n      \
    \  for (i <- arr) {\n            if (i == 1) result += \"One\"\n            if\
    \ (i == 2) result += \"Two\"\n            if (i == 3) result += \"Three\"\n  \
    \          if (i == 4) result += \"Four\"\n            if (i == 5) result += \"\
    Five\"\n            if (i == 6) result += \"Six\"\n            if (i == 7) result\
    \ += \"Seven\"\n            if (i == 8) result += \"Eight\"\n            if (i\
    \ == 9) result += \"Nine\"\n        }\n        result.toList.sortWith(_ < _).reverse",
  "        // Write your code here\n        return List[String]()", "        // your\
    \ code here\n        null", "        // your code here\n        arr.filter(x =>\
    \ x >= 1 && x <= 9).sorted.reverse.map(x => x match {\n            case 1 => \"\
    One\"\n            case 2 => \"Two\"\n            case 3 => \"Three\"\n      \
    \      case 4 => \"Four\"\n            case 5 => \"Five\"\n            case 6\
    \ => \"Six\"\n            case 7 => \"Seven\"\n            case 8 => \"Eight\"\
    \n            case 9 => \"Nine\"\n        })", "        // your code here\n  \
    \      null", "        val map = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\"\
    , 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong\
    \ -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"\
    Nine\")\n        val result = ListBuffer[String]()\n        for (i <- arr) {\n\
    \            if (map.contains(i)) result += map(i)\n        }\n        result.toList.sortWith(_\
    \ < _).reverse", "        // your code here\n        arr.filter(x => x >= 1 &&\
    \ x <= 9).sorted.reverse.map(x => x match {\n            case 1 => \"One\"\n \
    \           case 2 => \"Two\"\n            case 3 => \"Three\"\n            case\
    \ 4 => \"Four\"\n            case 5 => \"Five\"\n            case 6 => \"Six\"\
    \n            case 7 => \"Seven\"\n            case 8 => \"Eight\"\n         \
    \   case 9 => \"Nine\"\n        })", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[String]()\n        for (i <- arr) {\n            if (i == 1) {\n    \
    \            result = result :+ \"One\"\n            } else if (i == 2) {\n  \
    \              result = result :+ \"Two\"\n            } else if (i == 3) {\n\
    \                result = result :+ \"Three\"\n            } else if (i == 4)\
    \ {\n                result = result :+ \"Four\"\n            } else if (i ==\
    \ 5) {\n                result = result :+ \"Five\"\n            } else if (i\
    \ == 6) {\n                result = result :+ \"Six\"\n            } else if (i\
    \ == 7) {\n                result = result :+ \"Seven\"\n            } else if\
    \ (i == 8) {\n                result = result :+ \"Eight\"\n            } else\
    \ if (i == 9) {\n                result = result :+ \"Nine\"\n            }\n\
    \        }\n        result.sorted.reverse", "        // your code here\n     \
    \   var result = List[String]()\n        var map = Map[Long, String]()\n     \
    \   map += (1l.toLong -> \"One\")\n        map += (2l.toLong -> \"Two\")\n   \
    \     map += (3l.toLong -> \"Three\")\n        map += (4l.toLong -> \"Four\")\n\
    \        map += (5l.toLong -> \"Five\")\n        map += (6l.toLong -> \"Six\"\
    )\n        map += (7l.toLong -> \"Seven\")\n        map += (8l.toLong -> \"Eight\"\
    )\n        map += (9l.toLong -> \"Nine\")\n        for (i <- arr) {\n        \
    \    if (i >= 1 && i <= 9) {\n                result = result :+ map(i)\n    \
    \        }\n        }\n        result.sorted.reverse", "        // Fill up this\
    \ function body\n        // You can add another function as well, if required\n\
    \        var lst = List[String]()\n        for (i <- arr) {\n            if (i\
    \ == 1) {\n                lst = lst :+ \"One\"\n            }\n            else\
    \ if (i == 2) {\n                lst = lst :+ \"Two\"\n            }\n       \
    \     else if (i == 3) {\n                lst = lst :+ \"Three\"\n           \
    \ }\n            else if (i == 4) {\n                lst = lst :+ \"Four\"\n \
    \           }\n            else if (i == 5) {\n                lst = lst :+ \"\
    Five\"\n            }\n            else if (i == 6) {\n                lst = lst\
    \ :+ \"Six\"\n            }\n            else if (i == 7) {\n                lst\
    \ = lst :+ \"Seven\"\n            }\n            else if (i == 8) {\n        \
    \        lst = lst :+ \"Eight\"\n            }\n            else if (i == 9) {\n\
    \                lst = lst :+ \"Nine\"\n            }\n        }\n        lst.sorted.reverse",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        val map = Map(1l.toLong -> \"One\", 2l.toLong\
    \ -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\"\
    , 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong\
    \ -> \"Nine\")\n        var list = List[String]()\n        for (i <- arr) {\n\
    \            if (map.contains(i)) {\n                list = list :+ map(i)\n \
    \           }\n        }\n        list.sorted.reverse", "        // Fill up this\
    \ function body\n        // You can add another function as well, if required\n\
    \        var result = List[String]()\n        var temp = List[Long]()\n      \
    \  for (i <- arr) {\n            if (i > 0 && i < 10) {\n                temp\
    \ = temp :+ i\n            }\n        }\n        temp = temp.sorted\n        for\
    \ (i <- temp.reverse) {\n            i match {\n                case 1 => result\
    \ = result :+ \"One\"\n                case 2 => result = result :+ \"Two\"\n\
    \                case 3 => result = result :+ \"Three\"\n                case\
    \ 4 => result = result :+ \"Four\"\n                case 5 => result = result\
    \ :+ \"Five\"\n                case 6 => result = result :+ \"Six\"\n        \
    \        case 7 => result = result :+ \"Seven\"\n                case 8 => result\
    \ = result :+ \"Eight\"\n                case 9 => result = result :+ \"Nine\"\
    \n            }\n        }\n        result", "        // your code here\n    \
    \    null", "        // Write your code here\n        val map = Map(1l.toLong\
    \ -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        val list = arr.filter(x => x >=\
    \ 1 && x <= 9).sorted.reverse\n        list.map(x => map(x))", "        // Fill\
    \ up this function body\n        // You can add another function as well, if required\n\
    \        var result = List[String]()\n        for (i <- arr) {\n            if\
    \ (i > 0 && i < 10) {\n                result = result :+ i.toString\n       \
    \     }\n        }\n        result = result.sorted\n        result = result.reverse\n\
    \        for (i <- 0 until result.length) {\n            result(i) = result(i).replace(\"\
    1\", \"One\")\n            result(i) = result(i).replace(\"2\", \"Two\")\n   \
    \         result(i) = result(i).replace(\"3\", \"Three\")\n            result(i)\
    \ = result(i).replace(\"4\", \"Four\")\n            result(i) = result(i).replace(\"\
    5\", \"Five\")\n            result(i) = result(i).replace(\"6\", \"Six\")\n  \
    \          result(i) = result(i).replace(\"7\", \"Seven\")\n            result(i)\
    \ = result(i).replace(\"8\", \"Eight\")\n            result(i) = result(i).replace(\"\
    9\", \"Nine\")\n        }\n        return result", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var result = List[String]()\n        var sorted = arr.filter(x => x > 0 && x\
    \ < 10).sorted\n        for (i <- sorted.length - 1 to 0 by -1) {\n          \
    \  result = result :+ numToString(sorted(i))\n        }\n        result", "  \
    \      // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var list = List[String]()\n        for (i <- arr)\
    \ {\n            if (i == 1) {\n                list = list :+ \"One\"\n     \
    \       }\n            else if (i == 2) {\n                list = list :+ \"Two\"\
    \n            }\n            else if (i == 3) {\n                list = list :+\
    \ \"Three\"\n            }\n            else if (i == 4) {\n                list\
    \ = list :+ \"Four\"\n            }\n            else if (i == 5) {\n        \
    \        list = list :+ \"Five\"\n            }\n            else if (i == 6)\
    \ {\n                list = list :+ \"Six\"\n            }\n            else if\
    \ (i == 7) {\n                list = list :+ \"Seven\"\n            }\n      \
    \      else if (i == 8) {\n                list = list :+ \"Eight\"\n        \
    \    }\n            else if (i == 9) {\n                list = list :+ \"Nine\"\
    \n            }\n        }\n        list.reverse", "        val map = Map(1l.toLong\
    \ -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        val list = arr.filter(x => x >=\
    \ 1 && x <= 9).sorted.reverse.map(x => map(x))\n        list", "        // your\
    \ code here\n        var result = List[String]()\n        for (i <- arr) {\n \
    \           if (i == 1) {\n                result = result :+ \"One\"\n      \
    \      }\n            else if (i == 2) {\n                result = result :+ \"\
    Two\"\n            }\n            else if (i == 3) {\n                result =\
    \ result :+ \"Three\"\n            }\n            else if (i == 4) {\n       \
    \         result = result :+ \"Four\"\n            }\n            else if (i ==\
    \ 5) {\n                result = result :+ \"Five\"\n            }\n         \
    \   else if (i == 6) {\n                result = result :+ \"Six\"\n         \
    \   }\n            else if (i == 7) {\n                result = result :+ \"Seven\"\
    \n            }\n            else if (i == 8) {\n                result = result\
    \ :+ \"Eight\"\n            }\n            else if (i == 9) {\n              \
    \  result = result :+ \"Nine\"\n            }\n        }\n        result.sorted.reverse",
  "        val map = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong ->\
    \ \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\"\
    , 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n   \
    \     val list = ListBuffer[String]()\n        for (i <- arr) {\n            if\
    \ (i > 0 && i < 10) {\n                list += map(i)\n            }\n       \
    \ }\n        list.toList.sortWith(_ < _).reverse", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var result = List[String]()\n        for (i <- arr) {\n            if (i >=\
    \ 1 && i <= 9) {\n                result = result :+ i.toString\n            }\n\
    \        }\n        result = result.sorted\n        result = result.reverse\n\
    \        for (i <- 0 until result.length) {\n            result(i) = result(i).replace(\"\
    1\", \"One\")\n            result(i) = result(i).replace(\"2\", \"Two\")\n   \
    \         result(i) = result(i).replace(\"3\", \"Three\")\n            result(i)\
    \ = result(i).replace(\"4\", \"Four\")\n            result(i) = result(i).replace(\"\
    5\", \"Five\")\n            result(i) = result(i).replace(\"6\", \"Six\")\n  \
    \          result(i) = result(i).replace(\"7\", \"Seven\")\n            result(i)\
    \ = result(i).replace(\"8\", \"Eight\")\n            result(i) = result(i).replace(\"\
    9\", \"Nine\")\n        }\n        return result", "        // your code here\n\
    \        val l = arr.filter(x => x > 0 && x < 10).sorted.reverse\n        l.map(x\
    \ => x match {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n\
    \            case 3 => \"Three\"\n            case 4 => \"Four\"\n           \
    \ case 5 => \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"\
    Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\n   \
    \     })", "        // Fill up this function body\n        // You can add another\
    \ function as well, if required\n        var result = List[String]()\n       \
    \ var temp = List[Long]()\n        for (i <- arr) {\n            if (i >= 1 &&\
    \ i <= 9) {\n                temp = temp :+ i\n            }\n        }\n    \
    \    temp = temp.sorted\n        for (i <- temp.reverse) {\n            i match\
    \ {\n                case 1 => result = result :+ \"One\"\n                case\
    \ 2 => result = result :+ \"Two\"\n                case 3 => result = result :+\
    \ \"Three\"\n                case 4 => result = result :+ \"Four\"\n         \
    \       case 5 => result = result :+ \"Five\"\n                case 6 => result\
    \ = result :+ \"Six\"\n                case 7 => result = result :+ \"Seven\"\n\
    \                case 8 => result = result :+ \"Eight\"\n                case\
    \ 9 => result = result :+ \"Nine\"\n            }\n        }\n        result",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result : List[String] = List()\n        for\
    \ (i <- arr) {\n            if (i == 1) {\n                result = result :+\
    \ \"One\"\n            } else if (i == 2) {\n                result = result :+\
    \ \"Two\"\n            } else if (i == 3) {\n                result = result :+\
    \ \"Three\"\n            } else if (i == 4) {\n                result = result\
    \ :+ \"Four\"\n            } else if (i == 5) {\n                result = result\
    \ :+ \"Five\"\n            } else if (i == 6) {\n                result = result\
    \ :+ \"Six\"\n            } else if (i == 7) {\n                result = result\
    \ :+ \"Seven\"\n            } else if (i == 8) {\n                result = result\
    \ :+ \"Eight\"\n            } else if (i == 9) {\n                result = result\
    \ :+ \"Nine\"\n            }\n        }\n        result.reverse", "        //\
    \ Fill up this function body\n        // You can add another function as well,\
    \ if required\n        var list = List[String]()\n        for (i <- arr) {\n \
    \           if (i == 1) {\n                list = list :+ \"One\"\n          \
    \  }\n            else if (i == 2) {\n                list = list :+ \"Two\"\n\
    \            }\n            else if (i == 3) {\n                list = list :+\
    \ \"Three\"\n            }\n            else if (i == 4) {\n                list\
    \ = list :+ \"Four\"\n            }\n            else if (i == 5) {\n        \
    \        list = list :+ \"Five\"\n            }\n            else if (i == 6)\
    \ {\n                list = list :+ \"Six\"\n            }\n            else if\
    \ (i == 7) {\n                list = list :+ \"Seven\"\n            }\n      \
    \      else if (i == 8) {\n                list = list :+ \"Eight\"\n        \
    \    }\n            else if (i == 9) {\n                list = list :+ \"Nine\"\
    \n            }\n        }\n        list.sorted.reverse", "        val map = Map(1l.toLong\
    \ -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        val result = for (i <- arr if\
    \ (i >= 1 && i <= 9)) yield map(i)\n        result.reverse", "        // Fill\
    \ up this function body\n        // You can add another function as well, if required\n\
    \        var result = List[String]()\n        var map = Map[Long, String]()\n\
    \        map += (1l.toLong -> \"One\")\n        map += (2l.toLong -> \"Two\")\n\
    \        map += (3l.toLong -> \"Three\")\n        map += (4l.toLong -> \"Four\"\
    )\n        map += (5l.toLong -> \"Five\")\n        map += (6l.toLong -> \"Six\"\
    )\n        map += (7l.toLong -> \"Seven\")\n        map += (8l.toLong -> \"Eight\"\
    )\n        map += (9l.toLong -> \"Nine\")\n        for (i <- arr) {\n        \
    \    if (i >= 1 && i <= 9) {\n                result = result :+ map(i)\n    \
    \        }\n        }\n        result.sorted.reverse", "        // Fill up this\
    \ function body\n        // You can add another function as well, if required\n\
    \        var list = List[String]()\n        for (i <- arr) {\n            i match\
    \ {\n                case 1 => list = list :+ \"One\"\n                case 2\
    \ => list = list :+ \"Two\"\n                case 3 => list = list :+ \"Three\"\
    \n                case 4 => list = list :+ \"Four\"\n                case 5 =>\
    \ list = list :+ \"Five\"\n                case 6 => list = list :+ \"Six\"\n\
    \                case 7 => list = list :+ \"Seven\"\n                case 8 =>\
    \ list = list :+ \"Eight\"\n                case 9 => list = list :+ \"Nine\"\n\
    \                case _ =>\n            }\n        }\n        list.sorted.reverse",
  "        val map = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong ->\
    \ \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\"\
    , 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n   \
    \     val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))\n\
    \        list", "        // your code here\n        var result = List[String]()\n\
    \        for (i <- arr) {\n            if (i >= 1 && i <= 9) {\n             \
    \   result = result :+ i.toString\n            }\n        }\n        result =\
    \ result.sorted\n        result = result.reverse\n        for (i <- 0 until result.length)\
    \ {\n            result(i) = result(i).replace(\"1\", \"One\")\n            result(i)\
    \ = result(i).replace(\"2\", \"Two\")\n            result(i) = result(i).replace(\"\
    3\", \"Three\")\n            result(i) = result(i).replace(\"4\", \"Four\")\n\
    \            result(i) = result(i).replace(\"5\", \"Five\")\n            result(i)\
    \ = result(i).replace(\"6\", \"Six\")\n            result(i) = result(i).replace(\"\
    7\", \"Seven\")\n            result(i) = result(i).replace(\"8\", \"Eight\")\n\
    \            result(i) = result(i).replace(\"9\", \"Nine\")\n        }\n     \
    \   result", "        val map = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\"\
    , 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong\
    \ -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"\
    Nine\")\n        val result = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x))\n        result", "        // your code here\n        var result\
    \ = List[String]()\n        var temp = List[Long]()\n        for (i <- arr) {\n\
    \            if (i >= 1 && i <= 9) {\n                temp = temp :+ i\n     \
    \       }\n        }\n        temp = temp.sorted\n        for (i <- temp.reverse)\
    \ {\n            i match {\n                case 1 => result = result :+ \"One\"\
    \n                case 2 => result = result :+ \"Two\"\n                case 3\
    \ => result = result :+ \"Three\"\n                case 4 => result = result :+\
    \ \"Four\"\n                case 5 => result = result :+ \"Five\"\n          \
    \      case 6 => result = result :+ \"Six\"\n                case 7 => result\
    \ = result :+ \"Seven\"\n                case 8 => result = result :+ \"Eight\"\
    \n                case 9 => result = result :+ \"Nine\"\n            }\n     \
    \   }\n        result", "        // your code here\n        arr.filter(x => x\
    \ >= 1 && x <= 9).sorted.reverse.map(x => x match {\n            case 1 => \"\
    One\"\n            case 2 => \"Two\"\n            case 3 => \"Three\"\n      \
    \      case 4 => \"Four\"\n            case 5 => \"Five\"\n            case 6\
    \ => \"Six\"\n            case 7 => \"Seven\"\n            case 8 => \"Eight\"\
    \n            case 9 => \"Nine\"\n        })", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var result = List[String]()\n        for (i <- arr) {\n            if (i ==\
    \ 1) {\n                result = result :+ \"One\"\n            } else if (i ==\
    \ 2) {\n                result = result :+ \"Two\"\n            } else if (i ==\
    \ 3) {\n                result = result :+ \"Three\"\n            } else if (i\
    \ == 4) {\n                result = result :+ \"Four\"\n            } else if\
    \ (i == 5) {\n                result = result :+ \"Five\"\n            } else\
    \ if (i == 6) {\n                result = result :+ \"Six\"\n            } else\
    \ if (i == 7) {\n                result = result :+ \"Seven\"\n            } else\
    \ if (i == 8) {\n                result = result :+ \"Eight\"\n            } else\
    \ if (i == 9) {\n                result = result :+ \"Nine\"\n            }\n\
    \        }\n        result.sorted.reverse", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var list = List[String]()\n        for (i <- arr) {\n            if (i == 1)\
    \ {\n                list = list :+ \"One\"\n            }\n            else if\
    \ (i == 2) {\n                list = list :+ \"Two\"\n            }\n        \
    \    else if (i == 3) {\n                list = list :+ \"Three\"\n          \
    \  }\n            else if (i == 4) {\n                list = list :+ \"Four\"\n\
    \            }\n            else if (i == 5) {\n                list = list :+\
    \ \"Five\"\n            }\n            else if (i == 6) {\n                list\
    \ = list :+ \"Six\"\n            }\n            else if (i == 7) {\n         \
    \       list = list :+ \"Seven\"\n            }\n            else if (i == 8)\
    \ {\n                list = list :+ \"Eight\"\n            }\n            else\
    \ if (i == 9) {\n                list = list :+ \"Nine\"\n            }\n    \
    \    }\n        list.sorted.reverse", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[String]()\n        for (i <- arr) {\n            if (i == 1) {\n    \
    \            result = result :+ \"One\"\n            } else if (i == 2) {\n  \
    \              result = result :+ \"Two\"\n            } else if (i == 3) {\n\
    \                result = result :+ \"Three\"\n            } else if (i == 4)\
    \ {\n                result = result :+ \"Four\"\n            } else if (i ==\
    \ 5) {\n                result = result :+ \"Five\"\n            } else if (i\
    \ == 6) {\n                result = result :+ \"Six\"\n            } else if (i\
    \ == 7) {\n                result = result :+ \"Seven\"\n            } else if\
    \ (i == 8) {\n                result = result :+ \"Eight\"\n            } else\
    \ if (i == 9) {\n                result = result :+ \"Nine\"\n            }\n\
    \        }\n        result.sorted.reverse", "        // Write your code here\n\
    \        return List[String]()", "        val map = Map(1l.toLong -> \"One\",\
    \ 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong\
    \ -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\"\
    , 9l.toLong -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x))\n        list", "        // Fill up this function body\n        //\
    \ You can add another function as well, if required\n        var result = List[String]()\n\
    \        for (i <- arr) {\n            if (i >= 1 && i <= 9) {\n             \
    \   result = result :+ i.toString\n            }\n        }\n        result =\
    \ result.sorted\n        result = result.reverse\n        for (i <- 0 until result.length)\
    \ {\n            result(i) = result(i).replace(\"1\", \"One\")\n            result(i)\
    \ = result(i).replace(\"2\", \"Two\")\n            result(i) = result(i).replace(\"\
    3\", \"Three\")\n            result(i) = result(i).replace(\"4\", \"Four\")\n\
    \            result(i) = result(i).replace(\"5\", \"Five\")\n            result(i)\
    \ = result(i).replace(\"6\", \"Six\")\n            result(i) = result(i).replace(\"\
    7\", \"Seven\")\n            result(i) = result(i).replace(\"8\", \"Eight\")\n\
    \            result(i) = result(i).replace(\"9\", \"Nine\")\n        }\n     \
    \   return result", "        val map = Map(1l.toLong -> \"One\", 2l.toLong ->\
    \ \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\"\
    , 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong\
    \ -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x))\n        list", "        // Fill up this function body\n        //\
    \ You can add another function as well, if required\n        var list = arr.filter(x\
    \ => x >= 1 && x <= 9)\n        list = list.sortWith(_ < _)\n        list = list.reverse\n\
    \        var result = List[String]()\n        for (i <- list) {\n            if\
    \ (i == 1) result = result :+ \"One\"\n            else if (i == 2) result = result\
    \ :+ \"Two\"\n            else if (i == 3) result = result :+ \"Three\"\n    \
    \        else if (i == 4) result = result :+ \"Four\"\n            else if (i\
    \ == 5) result = result :+ \"Five\"\n            else if (i == 6) result = result\
    \ :+ \"Six\"\n            else if (i == 7) result = result :+ \"Seven\"\n    \
    \        else if (i == 8) result = result :+ \"Eight\"\n            else if (i\
    \ == 9) result = result :+ \"Nine\"\n        }\n        result", "        // Fill\
    \ up this function body\n        // You can add another function as well, if required\n\
    \        val map = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong ->\
    \ \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\"\
    , 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n   \
    \     val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n        list.map(x\
    \ => map(x))", "        // Fill up this function body\n        // You can add\
    \ another function as well, if required\n        var result = List[String]()\n\
    \        for (i <- arr) {\n            if (i == 1) {\n                result =\
    \ result :+ \"One\"\n            } else if (i == 2) {\n                result\
    \ = result :+ \"Two\"\n            } else if (i == 3) {\n                result\
    \ = result :+ \"Three\"\n            } else if (i == 4) {\n                result\
    \ = result :+ \"Four\"\n            } else if (i == 5) {\n                result\
    \ = result :+ \"Five\"\n            } else if (i == 6) {\n                result\
    \ = result :+ \"Six\"\n            } else if (i == 7) {\n                result\
    \ = result :+ \"Seven\"\n            } else if (i == 8) {\n                result\
    \ = result :+ \"Eight\"\n            } else if (i == 9) {\n                result\
    \ = result :+ \"Nine\"\n            }\n        }\n        result.sorted.reverse",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        val map = Map(1l.toLong -> \"One\", 2l.toLong\
    \ -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\"\
    , 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong\
    \ -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sortWith(_\
    \ < _).reverse\n        list.map(x => map(x))", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var list = List[String]()\n        for (i <- arr) {\n            if (i == 1)\
    \ {\n                list = list :+ \"One\"\n            }\n            else if\
    \ (i == 2) {\n                list = list :+ \"Two\"\n            }\n        \
    \    else if (i == 3) {\n                list = list :+ \"Three\"\n          \
    \  }\n            else if (i == 4) {\n                list = list :+ \"Four\"\n\
    \            }\n            else if (i == 5) {\n                list = list :+\
    \ \"Five\"\n            }\n            else if (i == 6) {\n                list\
    \ = list :+ \"Six\"\n            }\n            else if (i == 7) {\n         \
    \       list = list :+ \"Seven\"\n            }\n            else if (i == 8)\
    \ {\n                list = list :+ \"Eight\"\n            }\n            else\
    \ if (i == 9) {\n                list = list :+ \"Nine\"\n            }\n    \
    \    }\n        list.sorted.reverse", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[String]()\n        val map = Map(1l.toLong -> \"One\", 2l.toLong -> \"\
    Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong\
    \ -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"\
    Nine\")\n        for (i <- arr) {\n            if (i >= 1 && i <= 9) {\n     \
    \           result = map(i) :: result\n            }\n        }\n        result",
  "        // Write your code here\n        return null;", "        // Fill up this\
    \ function body\n        // You can add another function as well, if required\n\
    \        var result : List[String] = List()\n        var temp : List[Long] = List()\n\
    \        for (i <- arr) {\n            if (i >= 1 && i <= 9) {\n             \
    \   temp = temp :+ i\n            }\n        }\n        temp = temp.sorted\n \
    \       for (i <- temp.reverse) {\n            if (i == 1) {\n               \
    \ result = result :+ \"One\"\n            } else if (i == 2) {\n             \
    \   result = result :+ \"Two\"\n            } else if (i == 3) {\n           \
    \     result = result :+ \"Three\"\n            } else if (i == 4) {\n       \
    \         result = result :+ \"Four\"\n            } else if (i == 5) {\n    \
    \            result = result :+ \"Five\"\n            } else if (i == 6) {\n \
    \               result = result :+ \"Six\"\n            } else if (i == 7) {\n\
    \                result = result :+ \"Seven\"\n            } else if (i == 8)\
    \ {\n                result = result :+ \"Eight\"\n            } else if (i ==\
    \ 9) {\n                result = result :+ \"Nine\"\n            }\n        }\n\
    \        result", "        // your code here\n        var result = List[String]()\n\
    \        for (i <- arr) {\n            if (i == 1) result = result :+ \"One\"\n\
    \            if (i == 2) result = result :+ \"Two\"\n            if (i == 3) result\
    \ = result :+ \"Three\"\n            if (i == 4) result = result :+ \"Four\"\n\
    \            if (i == 5) result = result :+ \"Five\"\n            if (i == 6)\
    \ result = result :+ \"Six\"\n            if (i == 7) result = result :+ \"Seven\"\
    \n            if (i == 8) result = result :+ \"Eight\"\n            if (i == 9)\
    \ result = result :+ \"Nine\"\n        }\n        result.sorted.reverse", "  \
    \      val nums = arr.filter(x => x >= 1 && x <= 9)\n        val numsSorted =\
    \ nums.sorted\n        val numsReversed = numsSorted.reverse\n        val numsReversedStrings\
    \ = numsReversed.map(x => x match {\n            case 1 => \"One\"\n         \
    \   case 2 => \"Two\"\n            case 3 => \"Three\"\n            case 4 =>\
    \ \"Four\"\n            case 5 => \"Five\"\n            case 6 => \"Six\"\n  \
    \          case 7 => \"Seven\"\n            case 8 => \"Eight\"\n            case\
    \ 9 => \"Nine\"\n        })\n        numsReversedStrings", "        // Fill up\
    \ this function body\n        // You can add another function as well, if required\n\
    \        val map = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong ->\
    \ \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\"\
    , 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n   \
    \     val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n        list.map(x\
    \ => map(x))", "        // your code here\n        var result = List[String]()\n\
    \        for (i <- arr) {\n            if (i == 1) {\n                result =\
    \ result :+ \"One\"\n            }\n            else if (i == 2) {\n         \
    \       result = result :+ \"Two\"\n            }\n            else if (i == 3)\
    \ {\n                result = result :+ \"Three\"\n            }\n           \
    \ else if (i == 4) {\n                result = result :+ \"Four\"\n          \
    \  }\n            else if (i == 5) {\n                result = result :+ \"Five\"\
    \n            }\n            else if (i == 6) {\n                result = result\
    \ :+ \"Six\"\n            }\n            else if (i == 7) {\n                result\
    \ = result :+ \"Seven\"\n            }\n            else if (i == 8) {\n     \
    \           result = result :+ \"Eight\"\n            }\n            else if (i\
    \ == 9) {\n                result = result :+ \"Nine\"\n            }\n      \
    \  }\n        result.sorted.reverse", "        val map = Map(1l.toLong -> \"One\"\
    , 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong\
    \ -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\"\
    , 9l.toLong -> \"Nine\")\n        val result = arr.filter(x => x >= 1 && x <=\
    \ 9).sorted.reverse.map(x => map(x))\n        result", "        // Fill up this\
    \ function body\n        // You can add another function as well, if required\n\
    \        val l = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n        l.map(x\
    \ => x match {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n\
    \            case 3 => \"Three\"\n            case 4 => \"Four\"\n           \
    \ case 5 => \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"\
    Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\n   \
    \     })", "        // Fill up this function body\n        // You can add another\
    \ function as well, if required\n        var result = List[String]()\n       \
    \ for (i <- arr) {\n            if (i == 1) {\n                result = result\
    \ :+ \"One\"\n            } else if (i == 2) {\n                result = result\
    \ :+ \"Two\"\n            } else if (i == 3) {\n                result = result\
    \ :+ \"Three\"\n            } else if (i == 4) {\n                result = result\
    \ :+ \"Four\"\n            } else if (i == 5) {\n                result = result\
    \ :+ \"Five\"\n            } else if (i == 6) {\n                result = result\
    \ :+ \"Six\"\n            } else if (i == 7) {\n                result = result\
    \ :+ \"Seven\"\n            } else if (i == 8) {\n                result = result\
    \ :+ \"Eight\"\n            } else if (i == 9) {\n                result = result\
    \ :+ \"Nine\"\n            }\n        }\n        result.sorted.reverse", "   \
    \     // Fill up this function body\n        // You can add another function as\
    \ well, if required\n        var result : List[String] = List()\n        for (i\
    \ <- arr) {\n            if (i >= 1 && i <= 9) {\n                result = result\
    \ :+ i.toString\n            }\n        }\n        result = result.sortWith(_\
    \ < _)\n        result = result.reverse\n        for (i <- 0 until result.length)\
    \ {\n            result(i) = result(i).replace(\"1\", \"One\")\n            result(i)\
    \ = result(i).replace(\"2\", \"Two\")\n            result(i) = result(i).replace(\"\
    3\", \"Three\")\n            result(i) = result(i).replace(\"4\", \"Four\")\n\
    \            result(i) = result(i).replace(\"5\", \"Five\")\n            result(i)\
    \ = result(i).replace(\"6\", \"Six\")\n            result(i) = result(i).replace(\"\
    7\", \"Seven\")\n            result(i) = result(i).replace(\"8\", \"Eight\")\n\
    \            result(i) = result(i).replace(\"9\", \"Nine\")\n        }\n     \
    \   return result", "        // Fill up this function body\n        // You can\
    \ add another function as well, if required\n        var list = List[String]()\n\
    \        for (i <- arr) {\n            if (i == 1) {\n                list = list\
    \ :+ \"One\"\n            }\n            else if (i == 2) {\n                list\
    \ = list :+ \"Two\"\n            }\n            else if (i == 3) {\n         \
    \       list = list :+ \"Three\"\n            }\n            else if (i == 4)\
    \ {\n                list = list :+ \"Four\"\n            }\n            else\
    \ if (i == 5) {\n                list = list :+ \"Five\"\n            }\n    \
    \        else if (i == 6) {\n                list = list :+ \"Six\"\n        \
    \    }\n            else if (i == 7) {\n                list = list :+ \"Seven\"\
    \n            }\n            else if (i == 8) {\n                list = list :+\
    \ \"Eight\"\n            }\n            else if (i == 9) {\n                list\
    \ = list :+ \"Nine\"\n            }\n        }\n        list.reverse", "     \
    \   // Write your code here\n        return List[String]()", "        var result\
    \ = List[String]()\n        for (i <- arr) {\n            if (i >= 1 && i <= 9)\
    \ {\n                result = result :+ i.toString\n            }\n        }\n\
    \        result.sorted.reverse.map(x => x match {\n            case \"1\" => \"\
    One\"\n            case \"2\" => \"Two\"\n            case \"3\" => \"Three\"\n\
    \            case \"4\" => \"Four\"\n            case \"5\" => \"Five\"\n    \
    \        case \"6\" => \"Six\"\n            case \"7\" => \"Seven\"\n        \
    \    case \"8\" => \"Eight\"\n            case \"9\" => \"Nine\"\n        })",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[String]()\n        for (i <-\
    \ arr) {\n            if (i == 1) {\n                result = result :+ \"One\"\
    \n            } else if (i == 2) {\n                result = result :+ \"Two\"\
    \n            } else if (i == 3) {\n                result = result :+ \"Three\"\
    \n            } else if (i == 4) {\n                result = result :+ \"Four\"\
    \n            } else if (i == 5) {\n                result = result :+ \"Five\"\
    \n            } else if (i == 6) {\n                result = result :+ \"Six\"\
    \n            } else if (i == 7) {\n                result = result :+ \"Seven\"\
    \n            } else if (i == 8) {\n                result = result :+ \"Eight\"\
    \n            } else if (i == 9) {\n                result = result :+ \"Nine\"\
    \n            }\n        }\n        result.sorted.reverse", "        // your code\
    \ here\n        var result = new ListBuffer[String]\n        var temp = new ListBuffer[Long]\n\
    \        for (i <- arr) {\n            if (i > 0 && i < 10) {\n              \
    \  temp += i\n            }\n        }\n        temp = temp.sorted\n        for\
    \ (i <- temp.reverse) {\n            i match {\n                case 1 => result\
    \ += \"One\"\n                case 2 => result += \"Two\"\n                case\
    \ 3 => result += \"Three\"\n                case 4 => result += \"Four\"\n   \
    \             case 5 => result += \"Five\"\n                case 6 => result +=\
    \ \"Six\"\n                case 7 => result += \"Seven\"\n                case\
    \ 8 => result += \"Eight\"\n                case 9 => result += \"Nine\"\n   \
    \         }\n        }\n        result.toList", "        // your code here\n \
    \       arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => x match {\n\
    \            case 1 => \"One\"\n            case 2 => \"Two\"\n            case\
    \ 3 => \"Three\"\n            case 4 => \"Four\"\n            case 5 => \"Five\"\
    \n            case 6 => \"Six\"\n            case 7 => \"Seven\"\n           \
    \ case 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })", "        //\
    \ Fill up this function body\n        // You can add another function as well,\
    \ if required\n        var result = List[String]()\n        var temp = List[Long]()\n\
    \        for (i <- arr) {\n            if (i >= 1 && i <= 9) {\n             \
    \   temp = temp :+ i\n            }\n        }\n        temp = temp.sorted\n \
    \       for (i <- temp.reverse) {\n            i match {\n                case\
    \ 1 => result = result :+ \"One\"\n                case 2 => result = result :+\
    \ \"Two\"\n                case 3 => result = result :+ \"Three\"\n          \
    \      case 4 => result = result :+ \"Four\"\n                case 5 => result\
    \ = result :+ \"Five\"\n                case 6 => result = result :+ \"Six\"\n\
    \                case 7 => result = result :+ \"Seven\"\n                case\
    \ 8 => result = result :+ \"Eight\"\n                case 9 => result = result\
    \ :+ \"Nine\"\n            }\n        }\n        result", "        // your code\
    \ here\n        null", "        val map = Map(1l.toLong -> \"One\", 2l.toLong\
    \ -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\"\
    , 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong\
    \ -> \"Nine\")\n        val result = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x))\n        result", "        // Fill up this function body\n      \
    \  // You can add another function as well, if required\n        var result =\
    \ List[String]()\n        for (i <- arr) {\n            if (i == 1) {\n      \
    \          result = result :+ \"One\"\n            } else if (i == 2) {\n    \
    \            result = result :+ \"Two\"\n            } else if (i == 3) {\n  \
    \              result = result :+ \"Three\"\n            } else if (i == 4) {\n\
    \                result = result :+ \"Four\"\n            } else if (i == 5) {\n\
    \                result = result :+ \"Five\"\n            } else if (i == 6) {\n\
    \                result = result :+ \"Six\"\n            } else if (i == 7) {\n\
    \                result = result :+ \"Seven\"\n            } else if (i == 8)\
    \ {\n                result = result :+ \"Eight\"\n            } else if (i ==\
    \ 9) {\n                result = result :+ \"Nine\"\n            }\n        }\n\
    \        result.sorted.reverse", "        // Fill up this function body\n    \
    \    // You can add another function as well, if required\n        var list =\
    \ new ListBuffer[String]()\n        for (i <- arr) {\n            if (i == 1)\
    \ {\n                list += \"One\"\n            } else if (i == 2) {\n     \
    \           list += \"Two\"\n            } else if (i == 3) {\n              \
    \  list += \"Three\"\n            } else if (i == 4) {\n                list +=\
    \ \"Four\"\n            } else if (i == 5) {\n                list += \"Five\"\
    \n            } else if (i == 6) {\n                list += \"Six\"\n        \
    \    } else if (i == 7) {\n                list += \"Seven\"\n            } else\
    \ if (i == 8) {\n                list += \"Eight\"\n            } else if (i ==\
    \ 9) {\n                list += \"Nine\"\n            }\n        }\n        list.toList",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = new ListBuffer[String]()\n      \
    \  for (i <- arr) {\n            if (i == 1) result += \"One\"\n            else\
    \ if (i == 2) result += \"Two\"\n            else if (i == 3) result += \"Three\"\
    \n            else if (i == 4) result += \"Four\"\n            else if (i == 5)\
    \ result += \"Five\"\n            else if (i == 6) result += \"Six\"\n       \
    \     else if (i == 7) result += \"Seven\"\n            else if (i == 8) result\
    \ += \"Eight\"\n            else if (i == 9) result += \"Nine\"\n        }\n \
    \       result.toList.sorted.reverse", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var l =\
    \ arr.filter(x => x > 0 && x < 10).sorted.reverse\n        var s = List[String]()\n\
    \        for (i <- l) {\n            if (i == 1) s = s :+ \"One\"\n          \
    \  else if (i == 2) s = s :+ \"Two\"\n            else if (i == 3) s = s :+ \"\
    Three\"\n            else if (i == 4) s = s :+ \"Four\"\n            else if (i\
    \ == 5) s = s :+ \"Five\"\n            else if (i == 6) s = s :+ \"Six\"\n   \
    \         else if (i == 7) s = s :+ \"Seven\"\n            else if (i == 8) s\
    \ = s :+ \"Eight\"\n            else if (i == 9) s = s :+ \"Nine\"\n        }\n\
    \        s", "        // your code here\n        val map = Map(1l.toLong -> \"\
    One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong\
    \ -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\"\
    , 9l.toLong -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n\
    \        list.map(x => map(x))", "        // your code here\n        null", '        //
    your code here', "        // Fill up this function body\n        // You can add\
    \ another function as well, if required\n        var result = List[String]()\n\
    \        for (i <- arr) {\n            if (i > 0 && i < 10) {\n              \
    \  result = result :+ i.toString\n            }\n        }\n        result = result.sorted\n\
    \        result = result.reverse\n        var result2 = List[String]()\n     \
    \   for (i <- result) {\n            if (i == \"1\") {\n                result2\
    \ = result2 :+ \"One\"\n            }\n            else if (i == \"2\") {\n  \
    \              result2 = result2 :+ \"Two\"\n            }\n            else if\
    \ (i == \"3\") {\n                result2 = result2 :+ \"Three\"\n           \
    \ }\n            else if (i == \"4\") {\n                result2 = result2 :+\
    \ \"Four\"\n            }\n            else if (i == \"5\") {\n              \
    \  result2 = result2 :+ \"Five\"\n            }\n            else if (i == \"\
    6\") {\n                result2 = result2 :+ \"Six\"\n            }\n        \
    \    else if (i == \"7\") {\n                result2 = result2 :+ \"Seven\"\n\
    \            }\n            else if (i == \"8\") {\n                result2 =\
    \ result2 :+ \"Eight\"\n            }\n            else if (i == \"9\") {\n  \
    \              result2 = result2 :+ \"Nine\"\n            }\n        }\n     \
    \   result2", "        // your code here\n        var result = List[String]()\n\
    \        val map = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong ->\
    \ \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\"\
    , 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n   \
    \     for (i <- arr) {\n            if (i >= 1 && i <= 9) {\n                result\
    \ = result :+ map(i)\n            }\n        }\n        result.sorted.reverse",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        val arr2 = arr.filter(x => x >= 1 && x <= 9)\n\
    \        val arr3 = arr2.sorted\n        val arr4 = arr3.reverse\n        val\
    \ arr5 = arr4.map(x => x match {\n            case 1 => \"One\"\n            case\
    \ 2 => \"Two\"\n            case 3 => \"Three\"\n            case 4 => \"Four\"\
    \n            case 5 => \"Five\"\n            case 6 => \"Six\"\n            case\
    \ 7 => \"Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\
    \n        })\n        arr5", "        // Fill up this function body\n        //\
    \ You can add another function as well, if required\n        var result = List[String]()\n\
    \        var temp = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n       \
    \ for (i <- temp) {\n            i match {\n                case 1 => result =\
    \ result :+ \"One\"\n                case 2 => result = result :+ \"Two\"\n  \
    \              case 3 => result = result :+ \"Three\"\n                case 4\
    \ => result = result :+ \"Four\"\n                case 5 => result = result :+\
    \ \"Five\"\n                case 6 => result = result :+ \"Six\"\n           \
    \     case 7 => result = result :+ \"Seven\"\n                case 8 => result\
    \ = result :+ \"Eight\"\n                case 9 => result = result :+ \"Nine\"\
    \n            }\n        }\n        result", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var lst = new ListBuffer[String]()\n        for (i <- arr) {\n            if\
    \ (i == 1) {\n                lst += \"One\"\n            }\n            else\
    \ if (i == 2) {\n                lst += \"Two\"\n            }\n            else\
    \ if (i == 3) {\n                lst += \"Three\"\n            }\n           \
    \ else if (i == 4) {\n                lst += \"Four\"\n            }\n       \
    \     else if (i == 5) {\n                lst += \"Five\"\n            }\n   \
    \         else if (i == 6) {\n                lst += \"Six\"\n            }\n\
    \            else if (i == 7) {\n                lst += \"Seven\"\n          \
    \  }\n            else if (i == 8) {\n                lst += \"Eight\"\n     \
    \       }\n            else if (i == 9) {\n                lst += \"Nine\"\n \
    \           }\n        }\n        lst.toList.sorted.reverse", "        // your\
    \ code here\n        var l = List[String]()\n        for (i <- arr) {\n      \
    \      if (i > 0 && i < 10) {\n                l = l :+ i.toString\n         \
    \   }\n        }\n        l.sorted.reverse.map(i => {\n            i match {\n\
    \                case \"1\" => \"One\"\n                case \"2\" => \"Two\"\n\
    \                case \"3\" => \"Three\"\n                case \"4\" => \"Four\"\
    \n                case \"5\" => \"Five\"\n                case \"6\" => \"Six\"\
    \n                case \"7\" => \"Seven\"\n                case \"8\" => \"Eight\"\
    \n                case \"9\" => \"Nine\"\n            }\n        })", "      \
    \  // Fill up this function body\n        // You can add another function as well,\
    \ if required\n        var l = List[String]()\n        for (i <- arr) {\n    \
    \        if (i == 1) l = l :+ \"One\"\n            if (i == 2) l = l :+ \"Two\"\
    \n            if (i == 3) l = l :+ \"Three\"\n            if (i == 4) l = l :+\
    \ \"Four\"\n            if (i == 5) l = l :+ \"Five\"\n            if (i == 6)\
    \ l = l :+ \"Six\"\n            if (i == 7) l = l :+ \"Seven\"\n            if\
    \ (i == 8) l = l :+ \"Eight\"\n            if (i == 9) l = l :+ \"Nine\"\n   \
    \     }\n        l.sorted.reverse", "        val nums = arr.filter(x => x >= 1\
    \ && x <= 9)\n        val numsSorted = nums.sorted\n        val numsSortedReversed\
    \ = numsSorted.reverse\n        val numsSortedReversedStrings = numsSortedReversed.map(x\
    \ => x match {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n\
    \            case 3 => \"Three\"\n            case 4 => \"Four\"\n           \
    \ case 5 => \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"\
    Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\n   \
    \     })\n        numsSortedReversedStrings", "        // Write your code here\n\
    \        var result = List[String]()\n        for (i <- arr) {\n            if\
    \ (i == 1) {\n                result = result :+ \"One\"\n            } else if\
    \ (i == 2) {\n                result = result :+ \"Two\"\n            } else if\
    \ (i == 3) {\n                result = result :+ \"Three\"\n            } else\
    \ if (i == 4) {\n                result = result :+ \"Four\"\n            } else\
    \ if (i == 5) {\n                result = result :+ \"Five\"\n            } else\
    \ if (i == 6) {\n                result = result :+ \"Six\"\n            } else\
    \ if (i == 7) {\n                result = result :+ \"Seven\"\n            } else\
    \ if (i == 8) {\n                result = result :+ \"Eight\"\n            } else\
    \ if (i == 9) {\n                result = result :+ \"Nine\"\n            }\n\
    \        }\n        result.sorted.reverse", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var result = List[String]()\n        var temp = List[Long]()\n        for (i\
    \ <- arr) {\n            if (i > 0 && i < 10) {\n                temp = temp :+\
    \ i\n            }\n        }\n        temp = temp.sorted\n        for (i <- temp.reverse)\
    \ {\n            result = result :+ i.toString\n        }\n        result", " \
    \       // Fill up this function body\n        // You may also define new functions\n\
    \        // to help you in solving this problem\n        val map = Map(1l -> \"\
    One\", 2l -> \"Two\", 3l -> \"Three\", 4l -> \"Four\", 5l -> \"Five\", 6l -> \"\
    Six\", 7l -> \"Seven\", 8l -> \"Eight\", 9l -> \"Nine\")\n        val list = arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))\n        list", "     \
    \   // your code here\n        arr.filter(x => x >= 1 && x <= 9).sortWith(_ <\
    \ _).reverse.map(x => x match {\n            case 1 => \"One\"\n            case\
    \ 2 => \"Two\"\n            case 3 => \"Three\"\n            case 4 => \"Four\"\
    \n            case 5 => \"Five\"\n            case 6 => \"Six\"\n            case\
    \ 7 => \"Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\
    \n        })", "        // Fill up this function body\n        // You can add\
    \ another function as well, if required\n        var list = List[String]()\n \
    \       for (i <- arr) {\n            if (i > 0 && i < 10) {\n               \
    \ list = list :+ i.toString\n            }\n        }\n        list = list.sorted\n\
    \        list = list.reverse\n        for (i <- 0 until list.length) {\n     \
    \       list(i) = list(i).replace(\"1\", \"One\")\n            list(i) = list(i).replace(\"\
    2\", \"Two\")\n            list(i) = list(i).replace(\"3\", \"Three\")\n     \
    \       list(i) = list(i).replace(\"4\", \"Four\")\n            list(i) = list(i).replace(\"\
    5\", \"Five\")\n            list(i) = list(i).replace(\"6\", \"Six\")\n      \
    \      list(i) = list(i).replace(\"7\", \"Seven\")\n            list(i) = list(i).replace(\"\
    8\", \"Eight\")\n            list(i) = list(i).replace(\"9\", \"Nine\")\n    \
    \    }\n        list", "        // Fill up this function body\n        // You\
    \ can add another function as well, if required\n        var list = List[String]()\n\
    \        for (i <- arr) {\n            if (i == 1) {\n                list = list\
    \ :+ \"One\"\n            }\n            else if (i == 2) {\n                list\
    \ = list :+ \"Two\"\n            }\n            else if (i == 3) {\n         \
    \       list = list :+ \"Three\"\n            }\n            else if (i == 4)\
    \ {\n                list = list :+ \"Four\"\n            }\n            else\
    \ if (i == 5) {\n                list = list :+ \"Five\"\n            }\n    \
    \        else if (i == 6) {\n                list = list :+ \"Six\"\n        \
    \    }\n            else if (i == 7) {\n                list = list :+ \"Seven\"\
    \n            }\n            else if (i == 8) {\n                list = list :+\
    \ \"Eight\"\n            }\n            else if (i == 9) {\n                list\
    \ = list :+ \"Nine\"\n            }\n        }\n        list.sortWith(_ < _)",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var l = List[String]()\n        for (i <- arr)\
    \ {\n            if (i == 1) l = \"One\" :: l\n            else if (i == 2) l\
    \ = \"Two\" :: l\n            else if (i == 3) l = \"Three\" :: l\n          \
    \  else if (i == 4) l = \"Four\" :: l\n            else if (i == 5) l = \"Five\"\
    \ :: l\n            else if (i == 6) l = \"Six\" :: l\n            else if (i\
    \ == 7) l = \"Seven\" :: l\n            else if (i == 8) l = \"Eight\" :: l\n\
    \            else if (i == 9) l = \"Nine\" :: l\n        }\n        l.reverse",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[String]()\n        for (i <-\
    \ arr) {\n            if (i == 1) {\n                result = result :+ \"One\"\
    \n            } else if (i == 2) {\n                result = result :+ \"Two\"\
    \n            } else if (i == 3) {\n                result = result :+ \"Three\"\
    \n            } else if (i == 4) {\n                result = result :+ \"Four\"\
    \n            } else if (i == 5) {\n                result = result :+ \"Five\"\
    \n            } else if (i == 6) {\n                result = result :+ \"Six\"\
    \n            } else if (i == 7) {\n                result = result :+ \"Seven\"\
    \n            } else if (i == 8) {\n                result = result :+ \"Eight\"\
    \n            } else if (i == 9) {\n                result = result :+ \"Nine\"\
    \n            }\n        }\n        result.sorted.reverse", "        // Fill up\
    \ this function body\n        // You can add another function as well, if required\n\
    \        var result = List[String]()\n        arr.foreach(x => {\n           \
    \ if (x >= 1 && x <= 9) {\n                result = result :+ x.toString\n   \
    \         }\n        })\n        result.sorted.reverse.map(x => {\n          \
    \  x match {\n                case \"1\" => \"One\"\n                case \"2\"\
    \ => \"Two\"\n                case \"3\" => \"Three\"\n                case \"\
    4\" => \"Four\"\n                case \"5\" => \"Five\"\n                case\
    \ \"6\" => \"Six\"\n                case \"7\" => \"Seven\"\n                case\
    \ \"8\" => \"Eight\"\n                case \"9\" => \"Nine\"\n            }\n\
    \        })", "        // your code here\n        var list = List[String]()\n\
    \        for (i <- arr) {\n            if (i == 1) {\n                list = list\
    \ :+ \"One\"\n            }\n            else if (i == 2) {\n                list\
    \ = list :+ \"Two\"\n            }\n            else if (i == 3) {\n         \
    \       list = list :+ \"Three\"\n            }\n            else if (i == 4)\
    \ {\n                list = list :+ \"Four\"\n            }\n            else\
    \ if (i == 5) {\n                list = list :+ \"Five\"\n            }\n    \
    \        else if (i == 6) {\n                list = list :+ \"Six\"\n        \
    \    }\n            else if (i == 7) {\n                list = list :+ \"Seven\"\
    \n            }\n            else if (i == 8) {\n                list = list :+\
    \ \"Eight\"\n            }\n            else if (i == 9) {\n                list\
    \ = list :+ \"Nine\"\n            }\n        }\n        list.sorted.reverse",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[String]()\n        for (i <-\
    \ arr) {\n            if (i == 1) result = result :+ \"One\"\n            else\
    \ if (i == 2) result = result :+ \"Two\"\n            else if (i == 3) result\
    \ = result :+ \"Three\"\n            else if (i == 4) result = result :+ \"Four\"\
    \n            else if (i == 5) result = result :+ \"Five\"\n            else if\
    \ (i == 6) result = result :+ \"Six\"\n            else if (i == 7) result = result\
    \ :+ \"Seven\"\n            else if (i == 8) result = result :+ \"Eight\"\n  \
    \          else if (i == 9) result = result :+ \"Nine\"\n        }\n        result.sorted.reverse",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var lst = List[String]()\n        for (i <- arr)\
    \ {\n            if (i == 1) {\n                lst = lst :+ \"One\"\n       \
    \     }\n            else if (i == 2) {\n                lst = lst :+ \"Two\"\n\
    \            }\n            else if (i == 3) {\n                lst = lst :+ \"\
    Three\"\n            }\n            else if (i == 4) {\n                lst =\
    \ lst :+ \"Four\"\n            }\n            else if (i == 5) {\n           \
    \     lst = lst :+ \"Five\"\n            }\n            else if (i == 6) {\n \
    \               lst = lst :+ \"Six\"\n            }\n            else if (i ==\
    \ 7) {\n                lst = lst :+ \"Seven\"\n            }\n            else\
    \ if (i == 8) {\n                lst = lst :+ \"Eight\"\n            }\n     \
    \       else if (i == 9) {\n                lst = lst :+ \"Nine\"\n          \
    \  }\n        }\n        lst.sorted.reverse", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var result = List[String]()\n        for (i <- arr) {\n            if (i ==\
    \ 1) result = result :+ \"One\"\n            else if (i == 2) result = result\
    \ :+ \"Two\"\n            else if (i == 3) result = result :+ \"Three\"\n    \
    \        else if (i == 4) result = result :+ \"Four\"\n            else if (i\
    \ == 5) result = result :+ \"Five\"\n            else if (i == 6) result = result\
    \ :+ \"Six\"\n            else if (i == 7) result = result :+ \"Seven\"\n    \
    \        else if (i == 8) result = result :+ \"Eight\"\n            else if (i\
    \ == 9) result = result :+ \"Nine\"\n        }\n        result.sortWith(_ < _).reverse",
  "        // your code here\n        var result = List[String]()\n        for (i\
    \ <- arr) {\n            if (i > 0 && i < 10) {\n                result = result\
    \ :+ i.toString\n            }\n        }\n        result = result.sorted\n  \
    \      result = result.reverse\n        for (i <- 0 until result.length) {\n \
    \           result(i) = result(i).replace(\"1\", \"One\")\n            result(i)\
    \ = result(i).replace(\"2\", \"Two\")\n            result(i) = result(i).replace(\"\
    3\", \"Three\")\n            result(i) = result(i).replace(\"4\", \"Four\")\n\
    \            result(i) = result(i).replace(\"5\", \"Five\")\n            result(i)\
    \ = result(i).replace(\"6\", \"Six\")\n            result(i) = result(i).replace(\"\
    7\", \"Seven\")\n            result(i) = result(i).replace(\"8\", \"Eight\")\n\
    \            result(i) = result(i).replace(\"9\", \"Nine\")\n        }\n     \
    \   result", "        // Fill up this function body\n        // You can add another\
    \ function as well, if required\n        var l = arr.filter(x => x > 0 && x <\
    \ 10).sorted.reverse\n        var s = List[String]()\n        for (i <- l) {\n\
    \            i match {\n                case 1 => s = s :+ \"One\"\n         \
    \       case 2 => s = s :+ \"Two\"\n                case 3 => s = s :+ \"Three\"\
    \n                case 4 => s = s :+ \"Four\"\n                case 5 => s = s\
    \ :+ \"Five\"\n                case 6 => s = s :+ \"Six\"\n                case\
    \ 7 => s = s :+ \"Seven\"\n                case 8 => s = s :+ \"Eight\"\n    \
    \            case 9 => s = s :+ \"Nine\"\n            }\n        }\n        s",
  "        val map = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong ->\
    \ \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\"\
    , 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n   \
    \     val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))\n\
    \        list", "        // Fill up this function body\n        // You can add\
    \ another function as well, if required\n        var result = List[String]()\n\
    \        var arr1 = arr.filter(x => x >= 1 && x <= 9)\n        arr1 = arr1.sorted\n\
    \        arr1 = arr1.reverse\n        for (i <- arr1) {\n            i match {\n\
    \                case 1 => result = result :+ \"One\"\n                case 2\
    \ => result = result :+ \"Two\"\n                case 3 => result = result :+\
    \ \"Three\"\n                case 4 => result = result :+ \"Four\"\n         \
    \       case 5 => result = result :+ \"Five\"\n                case 6 => result\
    \ = result :+ \"Six\"\n                case 7 => result = result :+ \"Seven\"\n\
    \                case 8 => result = result :+ \"Eight\"\n                case\
    \ 9 => result = result :+ \"Nine\"\n            }\n        }\n        result",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var list = List[String]()\n        var list1 =\
    \ List[String]()\n        var list2 = List[String]()\n        var list3 = List[String]()\n\
    \        var list4 = List[String]()\n        var list5 = List[String]()\n    \
    \    var list6 = List[String]()\n        var list7 = List[String]()\n        var\
    \ list8 = List[String]()\n        var list9 = List[String]()\n        for(i <-\
    \ arr) {\n            if(i == 1) {\n                list1 = list1 :+ \"One\"\n\
    \            }\n            else if(i == 2) {\n                list2 = list2 :+\
    \ \"Two\"\n            }\n            else if(i == 3) {\n                list3\
    \ = list3 :+ \"Three\"\n            }\n            else if(i == 4) {\n       \
    \         list4 = list4 :+ \"Four\"\n            }\n            else if(i == 5)\
    \ {\n                list5 = list5 :+ \"Five\"\n            }\n            else\
    \ if(i == 6) {\n                list6 = list6 :+ \"Six\"\n            }\n    \
    \        else if(i == 7) {\n                list7 = list7 :+ \"Seven\"\n     \
    \       }\n            else if(i == 8) {\n                list8 = list8 :+ \"\
    Eight\"\n            }\n            else if(i == 9) {\n                list9 =\
    \ list9 :+ \"Nine\"\n            }\n        }\n        list = list1 ::: list2\
    \ ::: list3 ::: list4 ::: list5 ::: list6 ::: list7 ::: list8 ::: list9\n    \
    \    list.reverse", "        // Fill up this function body\n        // You can\
    \ add another function as well, if required\n        var result = List[String]()\n\
    \        for (i <- arr) {\n            if (i > 0 && i < 10) {\n              \
    \  result = result :+ i.toString\n            }\n        }\n        result = result.sorted\n\
    \        result = result.reverse\n        for (i <- 0 until result.length) {\n\
    \            result(i) = result(i).toInt match {\n                case 1 => \"\
    One\"\n                case 2 => \"Two\"\n                case 3 => \"Three\"\n\
    \                case 4 => \"Four\"\n                case 5 => \"Five\"\n    \
    \            case 6 => \"Six\"\n                case 7 => \"Seven\"\n        \
    \        case 8 => \"Eight\"\n                case 9 => \"Nine\"\n           \
    \ }\n        }\n        result", "        // Fill up this function body\n    \
    \    // You can add another function as well, if required\n        var lst = arr.filter(x\
    \ => x>0 && x<10).sorted.reverse\n        var lst1 = lst.map(x => x match {\n\
    \            case 1 => \"One\"\n            case 2 => \"Two\"\n            case\
    \ 3 => \"Three\"\n            case 4 => \"Four\"\n            case 5 => \"Five\"\
    \n            case 6 => \"Six\"\n            case 7 => \"Seven\"\n           \
    \ case 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })\n        return\
    \ lst1", "        // Fill up this function body\n        // You can add another\
    \ function as well, if required\n        var result = List[String]()\n       \
    \ for (i <- arr) {\n            if (i == 1) {\n                result = result\
    \ :+ \"One\"\n            } else if (i == 2) {\n                result = result\
    \ :+ \"Two\"\n            } else if (i == 3) {\n                result = result\
    \ :+ \"Three\"\n            } else if (i == 4) {\n                result = result\
    \ :+ \"Four\"\n            } else if (i == 5) {\n                result = result\
    \ :+ \"Five\"\n            } else if (i == 6) {\n                result = result\
    \ :+ \"Six\"\n            } else if (i == 7) {\n                result = result\
    \ :+ \"Seven\"\n            } else if (i == 8) {\n                result = result\
    \ :+ \"Eight\"\n            } else if (i == 9) {\n                result = result\
    \ :+ \"Nine\"\n            }\n        }\n        result.sorted.reverse", "   \
    \     // your code here\n        var result = ListBuffer[String]()\n        for\
    \ (i <- arr) {\n            if (i == 1) {\n                result += \"One\"\n\
    \            } else if (i == 2) {\n                result += \"Two\"\n       \
    \     } else if (i == 3) {\n                result += \"Three\"\n            }\
    \ else if (i == 4) {\n                result += \"Four\"\n            } else if\
    \ (i == 5) {\n                result += \"Five\"\n            } else if (i ==\
    \ 6) {\n                result += \"Six\"\n            } else if (i == 7) {\n\
    \                result += \"Seven\"\n            } else if (i == 8) {\n     \
    \           result += \"Eight\"\n            } else if (i == 9) {\n          \
    \      result += \"Nine\"\n            }\n        }\n        result.toList.sorted.reverse",
  "        // your code here\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => x match {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n\
    \            case 3 => \"Three\"\n            case 4 => \"Four\"\n           \
    \ case 5 => \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"\
    Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\n   \
    \     })", "        // Fill up this function body\n        // You can add another\
    \ function as well, if required\n        val map = Map(1l.toLong -> \"One\", 2l.toLong\
    \ -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\"\
    , 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong\
    \ -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n\
    \        list.map(x => map(x))", "        // Fill up this function body\n    \
    \    // You can add another function as well, if required\n        var result\
    \ = new ListBuffer[String]()\n        for (i <- arr) {\n            if (i == 1)\
    \ result += \"One\"\n            else if (i == 2) result += \"Two\"\n        \
    \    else if (i == 3) result += \"Three\"\n            else if (i == 4) result\
    \ += \"Four\"\n            else if (i == 5) result += \"Five\"\n            else\
    \ if (i == 6) result += \"Six\"\n            else if (i == 7) result += \"Seven\"\
    \n            else if (i == 8) result += \"Eight\"\n            else if (i ==\
    \ 9) result += \"Nine\"\n        }\n        result.toList.sorted.reverse", " \
    \       // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var lst = List[String]()\n        for (i <- arr)\
    \ {\n            if (i == 1) lst = lst :+ \"One\"\n            else if (i == 2)\
    \ lst = lst :+ \"Two\"\n            else if (i == 3) lst = lst :+ \"Three\"\n\
    \            else if (i == 4) lst = lst :+ \"Four\"\n            else if (i ==\
    \ 5) lst = lst :+ \"Five\"\n            else if (i == 6) lst = lst :+ \"Six\"\n\
    \            else if (i == 7) lst = lst :+ \"Seven\"\n            else if (i ==\
    \ 8) lst = lst :+ \"Eight\"\n            else if (i == 9) lst = lst :+ \"Nine\"\
    \n        }\n        lst.sorted.reverse", "        // Fill up this function body\n\
    \        // You may create other functions as well, if needed\n        var list\
    \ = new ListBuffer[String]()\n        for (i <- arr) {\n            if (i == 1)\
    \ list += \"One\"\n            else if (i == 2) list += \"Two\"\n            else\
    \ if (i == 3) list += \"Three\"\n            else if (i == 4) list += \"Four\"\
    \n            else if (i == 5) list += \"Five\"\n            else if (i == 6)\
    \ list += \"Six\"\n            else if (i == 7) list += \"Seven\"\n          \
    \  else if (i == 8) list += \"Eight\"\n            else if (i == 9) list += \"\
    Nine\"\n        }\n        list.toList.sorted.reverse", "        val m = Map(1l.toLong\
    \ -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        val l = arr.filter(x => x >= 1\
    \ && x <= 9).sorted.reverse\n        l.map(x => m(x))", "        // Fill up this\
    \ function body\n        // You can add another function as well, if required\n\
    \        var result = List[String]()\n        for (i <- arr) {\n            if\
    \ (i == 1) {\n                result = result :+ \"One\"\n            } else if\
    \ (i == 2) {\n                result = result :+ \"Two\"\n            } else if\
    \ (i == 3) {\n                result = result :+ \"Three\"\n            } else\
    \ if (i == 4) {\n                result = result :+ \"Four\"\n            } else\
    \ if (i == 5) {\n                result = result :+ \"Five\"\n            } else\
    \ if (i == 6) {\n                result = result :+ \"Six\"\n            } else\
    \ if (i == 7) {\n                result = result :+ \"Seven\"\n            } else\
    \ if (i == 8) {\n                result = result :+ \"Eight\"\n            } else\
    \ if (i == 9) {\n                result = result :+ \"Nine\"\n            }\n\
    \        }\n        result.sorted.reverse", "        // your code here\n     \
    \   var result = List[String]()\n        for (i <- arr) {\n            if (i >\
    \ 0 && i < 10) {\n                result = result :+ i.toString\n            }\n\
    \        }\n        result = result.sorted\n        result = result.reverse\n\
    \        for (i <- 0 until result.length) {\n            result(i) = result(i).replace(\"\
    1\", \"One\")\n            result(i) = result(i).replace(\"2\", \"Two\")\n   \
    \         result(i) = result(i).replace(\"3\", \"Three\")\n            result(i)\
    \ = result(i).replace(\"4\", \"Four\")\n            result(i) = result(i).replace(\"\
    5\", \"Five\")\n            result(i) = result(i).replace(\"6\", \"Six\")\n  \
    \          result(i) = result(i).replace(\"7\", \"Seven\")\n            result(i)\
    \ = result(i).replace(\"8\", \"Eight\")\n            result(i) = result(i).replace(\"\
    9\", \"Nine\")\n        }\n        result", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var res = List[String]()\n        for (i <- arr) {\n            if (i == 1)\
    \ res = res :+ \"One\"\n            else if (i == 2) res = res :+ \"Two\"\n  \
    \          else if (i == 3) res = res :+ \"Three\"\n            else if (i ==\
    \ 4) res = res :+ \"Four\"\n            else if (i == 5) res = res :+ \"Five\"\
    \n            else if (i == 6) res = res :+ \"Six\"\n            else if (i ==\
    \ 7) res = res :+ \"Seven\"\n            else if (i == 8) res = res :+ \"Eight\"\
    \n            else if (i == 9) res = res :+ \"Nine\"\n        }\n        res.sorted.reverse",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var result = List[String]()\n        for (i <-\
    \ arr) {\n            if (i == 1) {\n                result = result :+ \"One\"\
    \n            } else if (i == 2) {\n                result = result :+ \"Two\"\
    \n            } else if (i == 3) {\n                result = result :+ \"Three\"\
    \n            } else if (i == 4) {\n                result = result :+ \"Four\"\
    \n            } else if (i == 5) {\n                result = result :+ \"Five\"\
    \n            } else if (i == 6) {\n                result = result :+ \"Six\"\
    \n            } else if (i == 7) {\n                result = result :+ \"Seven\"\
    \n            } else if (i == 8) {\n                result = result :+ \"Eight\"\
    \n            } else if (i == 9) {\n                result = result :+ \"Nine\"\
    \n            }\n        }\n        result.sorted.reverse", "        // Write\
    \ your code here\n        return List[String]()", "        // your code here\n\
    \        val map = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong ->\
    \ \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\"\
    , 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n   \
    \     val result = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))\n\
    \        result", "        // your code here\n        val l = arr.filter(x =>\
    \ x >= 1 && x <= 9).sorted.reverse\n        l.map(x => x match {\n           \
    \ case 1 => \"One\"\n            case 2 => \"Two\"\n            case 3 => \"Three\"\
    \n            case 4 => \"Four\"\n            case 5 => \"Five\"\n           \
    \ case 6 => \"Six\"\n            case 7 => \"Seven\"\n            case 8 => \"\
    Eight\"\n            case 9 => \"Nine\"\n        })", "        // your code here\n\
    \        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => x match {\n\
    \            case 1 => \"One\"\n            case 2 => \"Two\"\n            case\
    \ 3 => \"Three\"\n            case 4 => \"Four\"\n            case 5 => \"Five\"\
    \n            case 6 => \"Six\"\n            case 7 => \"Seven\"\n           \
    \ case 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })", "        //\
    \ your code here\n        var result = List[String]()\n        var temp = arr.filter(x\
    \ => x > 0 && x < 10).sorted.reverse\n        for (i <- temp) {\n            i\
    \ match {\n                case 1 => result = result :+ \"One\"\n            \
    \    case 2 => result = result :+ \"Two\"\n                case 3 => result =\
    \ result :+ \"Three\"\n                case 4 => result = result :+ \"Four\"\n\
    \                case 5 => result = result :+ \"Five\"\n                case 6\
    \ => result = result :+ \"Six\"\n                case 7 => result = result :+\
    \ \"Seven\"\n                case 8 => result = result :+ \"Eight\"\n        \
    \        case 9 => result = result :+ \"Nine\"\n            }\n        }\n   \
    \     result", "        // Fill up this function body\n        // You can add\
    \ another function as well, if required\n        var result = List[String]()\n\
    \        for (i <- arr) {\n            if (i > 0 && i < 10) {\n              \
    \  result = result :+ i.toString\n            }\n        }\n        result = result.sorted\n\
    \        result = result.reverse\n        for (i <- 0 until result.length) {\n\
    \            result(i) = result(i).replace(\"1\", \"One\")\n            result(i)\
    \ = result(i).replace(\"2\", \"Two\")\n            result(i) = result(i).replace(\"\
    3\", \"Three\")\n            result(i) = result(i).replace(\"4\", \"Four\")\n\
    \            result(i) = result(i).replace(\"5\", \"Five\")\n            result(i)\
    \ = result(i).replace(\"6\", \"Six\")\n            result(i) = result(i).replace(\"\
    7\", \"Seven\")\n            result(i) = result(i).replace(\"8\", \"Eight\")\n\
    \            result(i) = result(i).replace(\"9\", \"Nine\")\n        }\n     \
    \   return result", "        // Fill up this function body\n        // You can\
    \ add another function as well, if required\n        val sorted = arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse\n        sorted.map(x => x match {\n   \
    \         case 1 => \"One\"\n            case 2 => \"Two\"\n            case 3\
    \ => \"Three\"\n            case 4 => \"Four\"\n            case 5 => \"Five\"\
    \n            case 6 => \"Six\"\n            case 7 => \"Seven\"\n           \
    \ case 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })", "        //\
    \ your code here\n        var result = new ListBuffer[String]()\n        for (i\
    \ <- arr) {\n            if (i >= 1 && i <= 9) {\n                result += i.toString\n\
    \            }\n        }\n        result.sorted.reverse.map(x => x match {\n\
    \            case \"1\" => \"One\"\n            case \"2\" => \"Two\"\n      \
    \      case \"3\" => \"Three\"\n            case \"4\" => \"Four\"\n         \
    \   case \"5\" => \"Five\"\n            case \"6\" => \"Six\"\n            case\
    \ \"7\" => \"Seven\"\n            case \"8\" => \"Eight\"\n            case \"\
    9\" => \"Nine\"\n        }).toList", "        val map = Map(1l.toLong -> \"One\"\
    , 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong\
    \ -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\"\
    , 9l.toLong -> \"Nine\")\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x))", "        // Your code goes here\n        var result = List[String]()\n\
    \        for (i <- arr) {\n            if (i > 0 && i < 10) {\n              \
    \  result = result :+ i.toString\n            }\n        }\n        result = result.sorted\n\
    \        result = result.reverse\n        for (i <- 0 until result.length) {\n\
    \            result(i) = result(i).replace(\"1\", \"One\")\n            result(i)\
    \ = result(i).replace(\"2\", \"Two\")\n            result(i) = result(i).replace(\"\
    3\", \"Three\")\n            result(i) = result(i).replace(\"4\", \"Four\")\n\
    \            result(i) = result(i).replace(\"5\", \"Five\")\n            result(i)\
    \ = result(i).replace(\"6\", \"Six\")\n            result(i) = result(i).replace(\"\
    7\", \"Seven\")\n            result(i) = result(i).replace(\"8\", \"Eight\")\n\
    \            result(i) = result(i).replace(\"9\", \"Nine\")\n        }\n     \
    \   result", "        // Fill up this function body\n        // You can add another\
    \ function as well, if required\n        var list = new ListBuffer[String]()\n\
    \        for (i <- arr) {\n            if (i == 1) list += \"One\"\n         \
    \   else if (i == 2) list += \"Two\"\n            else if (i == 3) list += \"\
    Three\"\n            else if (i == 4) list += \"Four\"\n            else if (i\
    \ == 5) list += \"Five\"\n            else if (i == 6) list += \"Six\"\n     \
    \       else if (i == 7) list += \"Seven\"\n            else if (i == 8) list\
    \ += \"Eight\"\n            else if (i == 9) list += \"Nine\"\n        }\n   \
    \     list.toList.sorted.reverse", "        // Fill up this function body\n  \
    \      // You can add another function as well, if required\n        var result\
    \ = List[String]()\n        for (i <- arr) {\n            if (i == 1) result =\
    \ result :+ \"One\"\n            if (i == 2) result = result :+ \"Two\"\n    \
    \        if (i == 3) result = result :+ \"Three\"\n            if (i == 4) result\
    \ = result :+ \"Four\"\n            if (i == 5) result = result :+ \"Five\"\n\
    \            if (i == 6) result = result :+ \"Six\"\n            if (i == 7) result\
    \ = result :+ \"Seven\"\n            if (i == 8) result = result :+ \"Eight\"\n\
    \            if (i == 9) result = result :+ \"Nine\"\n        }\n        result.sortWith(_.length\
    \ < _.length).reverse", "        // Fill up this function body\n        // You\
    \ can add another function as well, if required\n        var result = List[String]()\n\
    \        var temp = List[Long]()\n        for (i <- arr) {\n            if (i\
    \ > 0 && i < 10) {\n                temp = temp :+ i\n            }\n        }\n\
    \        temp = temp.sorted\n        for (i <- temp.reverse) {\n            if\
    \ (i == 1) {\n                result = result :+ \"One\"\n            } else if\
    \ (i == 2) {\n                result = result :+ \"Two\"\n            } else if\
    \ (i == 3) {\n                result = result :+ \"Three\"\n            } else\
    \ if (i == 4) {\n                result = result :+ \"Four\"\n            } else\
    \ if (i == 5) {\n                result = result :+ \"Five\"\n            } else\
    \ if (i == 6) {\n                result = result :+ \"Six\"\n            } else\
    \ if (i == 7) {\n                result = result :+ \"Seven\"\n            } else\
    \ if (i == 8) {\n                result = result :+ \"Eight\"\n            } else\
    \ if (i == 9) {\n                result = result :+ \"Nine\"\n            }\n\
    \        }\n        result", "        // Fill up this function body\n        //\
    \ You can add another function as well, if required\n        var result = List[String]()\n\
    \        for (i <- arr) {\n            if (i == 1) result = result :+ \"One\"\n\
    \            if (i == 2) result = result :+ \"Two\"\n            if (i == 3) result\
    \ = result :+ \"Three\"\n            if (i == 4) result = result :+ \"Four\"\n\
    \            if (i == 5) result = result :+ \"Five\"\n            if (i == 6)\
    \ result = result :+ \"Six\"\n            if (i == 7) result = result :+ \"Seven\"\
    \n            if (i == 8) result = result :+ \"Eight\"\n            if (i == 9)\
    \ result = result :+ \"Nine\"\n        }\n        result.sortWith(_.length < _.length).reverse",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var list = new ListBuffer[String]()\n        for\
    \ (i <- arr) {\n            if (i == 1) {\n                list += \"One\"\n \
    \           } else if (i == 2) {\n                list += \"Two\"\n          \
    \  } else if (i == 3) {\n                list += \"Three\"\n            } else\
    \ if (i == 4) {\n                list += \"Four\"\n            } else if (i ==\
    \ 5) {\n                list += \"Five\"\n            } else if (i == 6) {\n \
    \               list += \"Six\"\n            } else if (i == 7) {\n          \
    \      list += \"Seven\"\n            } else if (i == 8) {\n                list\
    \ += \"Eight\"\n            } else if (i == 9) {\n                list += \"Nine\"\
    \n            }\n        }\n        list.toList.sorted.reverse", '        // your
    code here', "        // Fill up this function body\n        // You can add another\
    \ function as well, if required\n        val map = Map(1l.toLong -> \"One\", 2l.toLong\
    \ -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\"\
    , 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong\
    \ -> \"Nine\")\n        val list = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x))\n        list", "        // your code here\n        arr.filter(x\
    \ => x > 0 && x < 10).sorted.reverse.map(x => x match {\n            case 1 =>\
    \ \"One\"\n            case 2 => \"Two\"\n            case 3 => \"Three\"\n  \
    \          case 4 => \"Four\"\n            case 5 => \"Five\"\n            case\
    \ 6 => \"Six\"\n            case 7 => \"Seven\"\n            case 8 => \"Eight\"\
    \n            case 9 => \"Nine\"\n        })", "        val nums = arr.filter(x\
    \ => x >= 1 && x <= 9)\n        val numsSorted = nums.sorted\n        val numsReversed\
    \ = numsSorted.reverse\n        val numsStrings = numsReversed.map(x => x match\
    \ {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n          \
    \  case 3 => \"Three\"\n            case 4 => \"Four\"\n            case 5 =>\
    \ \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"Seven\"\n \
    \           case 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })\n\
    \        numsStrings", "        // your code here\n        var result = List[String]()\n\
    \        for (i <- arr) {\n            if (i == 1) result = result :+ \"One\"\n\
    \            if (i == 2) result = result :+ \"Two\"\n            if (i == 3) result\
    \ = result :+ \"Three\"\n            if (i == 4) result = result :+ \"Four\"\n\
    \            if (i == 5) result = result :+ \"Five\"\n            if (i == 6)\
    \ result = result :+ \"Six\"\n            if (i == 7) result = result :+ \"Seven\"\
    \n            if (i == 8) result = result :+ \"Eight\"\n            if (i == 9)\
    \ result = result :+ \"Nine\"\n        }\n        result.sorted.reverse", "  \
    \      // Write your code here\n        var result = List[String]()\n        for\
    \ (i <- arr) {\n            if (i >= 1 && i <= 9) {\n                result =\
    \ result :+ i.toString\n            }\n        }\n        result = result.sorted\n\
    \        result = result.reverse\n        for (i <- 0 until result.length) {\n\
    \            result(i) = result(i).replace(\"1\", \"One\")\n            result(i)\
    \ = result(i).replace(\"2\", \"Two\")\n            result(i) = result(i).replace(\"\
    3\", \"Three\")\n            result(i) = result(i).replace(\"4\", \"Four\")\n\
    \            result(i) = result(i).replace(\"5\", \"Five\")\n            result(i)\
    \ = result(i).replace(\"6\", \"Six\")\n            result(i) = result(i).replace(\"\
    7\", \"Seven\")\n            result(i) = result(i).replace(\"8\", \"Eight\")\n\
    \            result(i) = result(i).replace(\"9\", \"Nine\")\n        }\n     \
    \   return result", "        // Fill up this function body\n        // You can\
    \ add another function as well, if required\n        var result = List[String]()\n\
    \        var temp = List[Long]()\n        for (i <- arr) {\n            if (i\
    \ >= 1 && i <= 9) {\n                temp = temp :+ i\n            }\n       \
    \ }\n        temp = temp.sorted\n        for (i <- temp.reverse) {\n         \
    \   if (i == 1) {\n                result = result :+ \"One\"\n            } else\
    \ if (i == 2) {\n                result = result :+ \"Two\"\n            } else\
    \ if (i == 3) {\n                result = result :+ \"Three\"\n            } else\
    \ if (i == 4) {\n                result = result :+ \"Four\"\n            } else\
    \ if (i == 5) {\n                result = result :+ \"Five\"\n            } else\
    \ if (i == 6) {\n                result = result :+ \"Six\"\n            } else\
    \ if (i == 7) {\n                result = result :+ \"Seven\"\n            } else\
    \ if (i == 8) {\n                result = result :+ \"Eight\"\n            } else\
    \ if (i == 9) {\n                result = result :+ \"Nine\"\n            }\n\
    \        }\n        result", "        // your code here\n        var result =\
    \ List[String]()\n        for (i <- arr) {\n            if (i == 1) result = result\
    \ :+ \"One\"\n            if (i == 2) result = result :+ \"Two\"\n           \
    \ if (i == 3) result = result :+ \"Three\"\n            if (i == 4) result = result\
    \ :+ \"Four\"\n            if (i == 5) result = result :+ \"Five\"\n         \
    \   if (i == 6) result = result :+ \"Six\"\n            if (i == 7) result = result\
    \ :+ \"Seven\"\n            if (i == 8) result = result :+ \"Eight\"\n       \
    \     if (i == 9) result = result :+ \"Nine\"\n        }\n        result.sorted.reverse",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        val a = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n\
    \        a.map(x => x match {\n            case 1 => \"One\"\n            case\
    \ 2 => \"Two\"\n            case 3 => \"Three\"\n            case 4 => \"Four\"\
    \n            case 5 => \"Five\"\n            case 6 => \"Six\"\n            case\
    \ 7 => \"Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\
    \n        })", "        // Fill up this function body\n        // You can add\
    \ another function as well, if required\n        var res = List[String]()\n  \
    \      val map = Map(1 -> \"One\", 2 -> \"Two\", 3 -> \"Three\", 4 -> \"Four\"\
    , 5 -> \"Five\", 6 -> \"Six\", 7 -> \"Seven\", 8 -> \"Eight\", 9 -> \"Nine\")\n\
    \        for (i <- arr) {\n            if (i >= 1 && i <= 9) res = map(i.toInt)\
    \ :: res\n        }\n        res.sorted.reverse", "        val numbers = Map(1l.toLong\
    \ -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        val filtered = arr.filter(x =>\
    \ x >= 1 && x <= 9)\n        val sorted = filtered.sorted\n        val reversed\
    \ = sorted.reverse\n        reversed.map(x => numbers(x))", "        val map =\
    \ Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong\
    \ -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\"\
    , 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n        val result = arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))\n        result", "   \
    \     // your code here\n        val map = Map(1l.toLong -> \"One\", 2l.toLong\
    \ -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\"\
    , 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong\
    \ -> \"Nine\")\n        val result = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x))\n        result", "        // Fill up this function body\n      \
    \  // You can add another function as well, if required\n        var result =\
    \ List[String]()\n        for (i <- arr) {\n            if (i == 1) result = result\
    \ :+ \"One\"\n            if (i == 2) result = result :+ \"Two\"\n           \
    \ if (i == 3) result = result :+ \"Three\"\n            if (i == 4) result = result\
    \ :+ \"Four\"\n            if (i == 5) result = result :+ \"Five\"\n         \
    \   if (i == 6) result = result :+ \"Six\"\n            if (i == 7) result = result\
    \ :+ \"Seven\"\n            if (i == 8) result = result :+ \"Eight\"\n       \
    \     if (i == 9) result = result :+ \"Nine\"\n        }\n        result.sorted.reverse",
  "        val sorted = arr.filter(x => x >= 1 && x <= 9).sorted\n        val reversed\
    \ = sorted.reverse\n        reversed.map(x => x match {\n            case 1 =>\
    \ \"One\"\n            case 2 => \"Two\"\n            case 3 => \"Three\"\n  \
    \          case 4 => \"Four\"\n            case 5 => \"Five\"\n            case\
    \ 6 => \"Six\"\n            case 7 => \"Seven\"\n            case 8 => \"Eight\"\
    \n            case 9 => \"Nine\"\n        })", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ var result = List[String]()\n        var temp = List[Long]()\n        for (i\
    \ <- arr) {\n            if (i > 0 && i < 10) {\n                temp = temp :+\
    \ i\n            }\n        }\n        temp = temp.sorted\n        for (i <- temp.reverse)\
    \ {\n            if (i == 1) {\n                result = result :+ \"One\"\n \
    \           } else if (i == 2) {\n                result = result :+ \"Two\"\n\
    \            } else if (i == 3) {\n                result = result :+ \"Three\"\
    \n            } else if (i == 4) {\n                result = result :+ \"Four\"\
    \n            } else if (i == 5) {\n                result = result :+ \"Five\"\
    \n            } else if (i == 6) {\n                result = result :+ \"Six\"\
    \n            } else if (i == 7) {\n                result = result :+ \"Seven\"\
    \n            } else if (i == 8) {\n                result = result :+ \"Eight\"\
    \n            } else if (i == 9) {\n                result = result :+ \"Nine\"\
    \n            }\n        }\n        result", "        // Fill up this function\
    \ body\n        // You can add another function as well, if required\n       \
    \ val arr1 = arr.filter(x => x > 0 && x < 10)\n        val arr2 = arr1.sorted\n\
    \        val arr3 = arr2.reverse\n        val arr4 = arr3.map(x => x match {\n\
    \            case 1 => \"One\"\n            case 2 => \"Two\"\n            case\
    \ 3 => \"Three\"\n            case 4 => \"Four\"\n            case 5 => \"Five\"\
    \n            case 6 => \"Six\"\n            case 7 => \"Seven\"\n           \
    \ case 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })\n        arr4",
  "        val map = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong ->\
    \ \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\"\
    , 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n   \
    \     arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))", "  \
    \      // Write your code here\n        return List[String]()", "        // Fill\
    \ up this function body\n        // You can add another function as well, if required\n\
    \        var result = List[String]()\n        for (i <- arr) {\n            if\
    \ (i == 1) result = result :+ \"One\"\n            if (i == 2) result = result\
    \ :+ \"Two\"\n            if (i == 3) result = result :+ \"Three\"\n         \
    \   if (i == 4) result = result :+ \"Four\"\n            if (i == 5) result =\
    \ result :+ \"Five\"\n            if (i == 6) result = result :+ \"Six\"\n   \
    \         if (i == 7) result = result :+ \"Seven\"\n            if (i == 8) result\
    \ = result :+ \"Eight\"\n            if (i == 9) result = result :+ \"Nine\"\n\
    \        }\n        result.reverse", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var result\
    \ = List[String]()\n        for (i <- arr) {\n            if (i > 0 && i < 10)\
    \ {\n                result = result :+ i.toString\n            }\n        }\n\
    \        result = result.sorted\n        result = result.reverse\n        for\
    \ (i <- 0 until result.length) {\n            result(i) = result(i).replace(\"\
    1\", \"One\")\n            result(i) = result(i).replace(\"2\", \"Two\")\n   \
    \         result(i) = result(i).replace(\"3\", \"Three\")\n            result(i)\
    \ = result(i).replace(\"4\", \"Four\")\n            result(i) = result(i).replace(\"\
    5\", \"Five\")\n            result(i) = result(i).replace(\"6\", \"Six\")\n  \
    \          result(i) = result(i).replace(\"7\", \"Seven\")\n            result(i)\
    \ = result(i).replace(\"8\", \"Eight\")\n            result(i) = result(i).replace(\"\
    9\", \"Nine\")\n        }\n        return result", "        val map = Map(1l.toLong\
    \ -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        val result = arr.filter(x => x\
    \ >= 1 && x <= 9).sorted.reverse.map(x => map(x))\n        result", "        //\
    \ Fill up this function body\n        // You can add another function as well,\
    \ if required\n        var result = List[String]()\n        for (i <- arr) {\n\
    \            if (i == 1) {\n                result = result :+ \"One\"\n     \
    \       } else if (i == 2) {\n                result = result :+ \"Two\"\n   \
    \         } else if (i == 3) {\n                result = result :+ \"Three\"\n\
    \            } else if (i == 4) {\n                result = result :+ \"Four\"\
    \n            } else if (i == 5) {\n                result = result :+ \"Five\"\
    \n            } else if (i == 6) {\n                result = result :+ \"Six\"\
    \n            } else if (i == 7) {\n                result = result :+ \"Seven\"\
    \n            } else if (i == 8) {\n                result = result :+ \"Eight\"\
    \n            } else if (i == 9) {\n                result = result :+ \"Nine\"\
    \n            }\n        }\n        result.sorted.reverse", "        // Fill up\
    \ this function body\n        // You can add another function as well, if required\n\
    \        val a = arr.filter(x => x >= 1 && x <= 9).sorted.reverse\n        a.map(x\
    \ => x match {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n\
    \            case 3 => \"Three\"\n            case 4 => \"Four\"\n           \
    \ case 5 => \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"\
    Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\n   \
    \     })", "        // Fill up this function body\n        // You can add another\
    \ function as well, if required\n        var list = List[String]()\n        for\
    \ (i <- arr) {\n            if (i == 1) list = list :+ \"One\"\n            if\
    \ (i == 2) list = list :+ \"Two\"\n            if (i == 3) list = list :+ \"Three\"\
    \n            if (i == 4) list = list :+ \"Four\"\n            if (i == 5) list\
    \ = list :+ \"Five\"\n            if (i == 6) list = list :+ \"Six\"\n       \
    \     if (i == 7) list = list :+ \"Seven\"\n            if (i == 8) list = list\
    \ :+ \"Eight\"\n            if (i == 9) list = list :+ \"Nine\"\n        }\n \
    \       list.sorted.reverse", "        // your code here\n        val map = Map(1l.toLong\
    \ -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        arr.filter(x => x >= 1 && x <=\
    \ 9).sorted.reverse.map(x => map(x))", "        val map = Map(1l.toLong -> \"\
    One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong\
    \ -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\"\
    , 9l.toLong -> \"Nine\")\n        val result = new ListBuffer[String]\n      \
    \  for (i <- arr) {\n            if (map.contains(i)) result += map(i)\n     \
    \   }\n        result.toList.sortWith(_.length < _.length).reverse", "       \
    \ // your code here\n        val map = Map(1l.toLong -> \"One\", 2l.toLong ->\
    \ \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\"\
    , 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong\
    \ -> \"Nine\")\n        val result = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x\
    \ => map(x))\n        result", "        val sorted = arr.filter(x => x >= 1 &&\
    \ x <= 9).sorted\n        val reversed = sorted.reverse\n        val result =\
    \ reversed.map(x => x match {\n            case 1 => \"One\"\n            case\
    \ 2 => \"Two\"\n            case 3 => \"Three\"\n            case 4 => \"Four\"\
    \n            case 5 => \"Five\"\n            case 6 => \"Six\"\n            case\
    \ 7 => \"Seven\"\n            case 8 => \"Eight\"\n            case 9 => \"Nine\"\
    \n        })\n        result", "        // Fill up this function body\n      \
    \  // You can add another function as well, if required\n        var result =\
    \ List[String]()\n        for (i <- arr) {\n            if (i >= 1 && i <= 9)\
    \ {\n                result = result :+ i.toString\n            }\n        }\n\
    \        result = result.sorted\n        result = result.reverse\n        for\
    \ (i <- 0 until result.length) {\n            result(i) = result(i).replace(\"\
    1\", \"One\")\n            result(i) = result(i).replace(\"2\", \"Two\")\n   \
    \         result(i) = result(i).replace(\"3\", \"Three\")\n            result(i)\
    \ = result(i).replace(\"4\", \"Four\")\n            result(i) = result(i).replace(\"\
    5\", \"Five\")\n            result(i) = result(i).replace(\"6\", \"Six\")\n  \
    \          result(i) = result(i).replace(\"7\", \"Seven\")\n            result(i)\
    \ = result(i).replace(\"8\", \"Eight\")\n            result(i) = result(i).replace(\"\
    9\", \"Nine\")\n        }\n        return result", "        // your code here\n\
    \        val arr2 = arr.filter(x => x >= 1 && x <= 9)\n        val arr3 = arr2.sorted.reverse\n\
    \        val arr4 = arr3.map(x => x match {\n            case 1 => \"One\"\n \
    \           case 2 => \"Two\"\n            case 3 => \"Three\"\n            case\
    \ 4 => \"Four\"\n            case 5 => \"Five\"\n            case 6 => \"Six\"\
    \n            case 7 => \"Seven\"\n            case 8 => \"Eight\"\n         \
    \   case 9 => \"Nine\"\n        })\n        arr4", "        // your code here\n\
    \        null", "        // Your code here\n        val map = Map(1l.toLong ->\
    \ \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        val list = arr.filter(x => x >=\
    \ 1 && x <= 9).sorted.reverse\n        list.map(x => map(x))", "        val map\
    \ = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong\
    \ -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\"\
    , 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n        val list = arr.filter(x\
    \ => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))\n        list", "     \
    \   val map = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"\
    Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong\
    \ -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"Nine\")\n        val list\
    \ = arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => map(x))\n      \
    \  list", "        // Fill up this function body\n        // You can add another\
    \ function as well, if required\n        var list = List[String]()\n        for\
    \ (i <- arr) {\n            if (i == 1) {\n                list = list :+ \"One\"\
    \n            }\n            else if (i == 2) {\n                list = list :+\
    \ \"Two\"\n            }\n            else if (i == 3) {\n                list\
    \ = list :+ \"Three\"\n            }\n            else if (i == 4) {\n       \
    \         list = list :+ \"Four\"\n            }\n            else if (i == 5)\
    \ {\n                list = list :+ \"Five\"\n            }\n            else\
    \ if (i == 6) {\n                list = list :+ \"Six\"\n            }\n     \
    \       else if (i == 7) {\n                list = list :+ \"Seven\"\n       \
    \     }\n            else if (i == 8) {\n                list = list :+ \"Eight\"\
    \n            }\n            else if (i == 9) {\n                list = list :+\
    \ \"Nine\"\n            }\n        }\n        list.sorted.reverse", "        //\
    \ Fill up this function body\n        // You can add another function as well,\
    \ if required\n        var list = List[String]()\n        for (i <- arr) {\n \
    \           if (i == 1) {\n                list = list :+ \"One\"\n          \
    \  }\n            else if (i == 2) {\n                list = list :+ \"Two\"\n\
    \            }\n            else if (i == 3) {\n                list = list :+\
    \ \"Three\"\n            }\n            else if (i == 4) {\n                list\
    \ = list :+ \"Four\"\n            }\n            else if (i == 5) {\n        \
    \        list = list :+ \"Five\"\n            }\n            else if (i == 6)\
    \ {\n                list = list :+ \"Six\"\n            }\n            else if\
    \ (i == 7) {\n                list = list :+ \"Seven\"\n            }\n      \
    \      else if (i == 8) {\n                list = list :+ \"Eight\"\n        \
    \    }\n            else if (i == 9) {\n                list = list :+ \"Nine\"\
    \n            }\n        }\n        list.sorted.reverse", "        // your code\
    \ here\n        arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => x match\
    \ {\n            case 1 => \"One\"\n            case 2 => \"Two\"\n          \
    \  case 3 => \"Three\"\n            case 4 => \"Four\"\n            case 5 =>\
    \ \"Five\"\n            case 6 => \"Six\"\n            case 7 => \"Seven\"\n \
    \           case 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })",
  "        // Write your code here\n        return List[String]()", "        // your\
    \ code here\n        null", "        // Fill up this function body\n        //\
    \ You can add another function as well, if required\n        arr.filter(x => x\
    \ >= 1 && x <= 9).sorted.reverse.map(x => x match {\n            case 1 => \"\
    One\"\n            case 2 => \"Two\"\n            case 3 => \"Three\"\n      \
    \      case 4 => \"Four\"\n            case 5 => \"Five\"\n            case 6\
    \ => \"Six\"\n            case 7 => \"Seven\"\n            case 8 => \"Eight\"\
    \n            case 9 => \"Nine\"\n        })", "        // your code here\n  \
    \      arr.filter(x => x >= 1 && x <= 9).sorted.reverse.map(x => x match {\n \
    \           case 1 => \"One\"\n            case 2 => \"Two\"\n            case\
    \ 3 => \"Three\"\n            case 4 => \"Four\"\n            case 5 => \"Five\"\
    \n            case 6 => \"Six\"\n            case 7 => \"Seven\"\n           \
    \ case 8 => \"Eight\"\n            case 9 => \"Nine\"\n        })", "        //\
    \ Fill up this function body\n        // You can add another function as well,\
    \ if required\n        val map = Map(1l.toLong -> \"One\", 2l.toLong -> \"Two\"\
    , 3l.toLong -> \"Three\", 4l.toLong -> \"Four\", 5l.toLong -> \"Five\", 6l.toLong\
    \ -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong -> \"Eight\", 9l.toLong -> \"\
    Nine\")\n        val list = ListBuffer[String]()\n        for (i <- arr) {\n \
    \           if (map.contains(i)) {\n                list += map(i)\n         \
    \   }\n        }\n        list.toList.sorted.reverse", "        val map = Map(1l.toLong\
    \ -> \"One\", 2l.toLong -> \"Two\", 3l.toLong -> \"Three\", 4l.toLong -> \"Four\"\
    , 5l.toLong -> \"Five\", 6l.toLong -> \"Six\", 7l.toLong -> \"Seven\", 8l.toLong\
    \ -> \"Eight\", 9l.toLong -> \"Nine\")\n        arr.filter(x => x >= 1 && x <=\
    \ 9).sorted.reverse.map(x => map(x))", "        // Fill up this function body\n\
    \        // You can add another function as well, if required\n        var list\
    \ = List[String]()\n        for (i <- arr) {\n            if (i == 1) {\n    \
    \            list = list :+ \"One\"\n            }\n            else if (i ==\
    \ 2) {\n                list = list :+ \"Two\"\n            }\n            else\
    \ if (i == 3) {\n                list = list :+ \"Three\"\n            }\n   \
    \         else if (i == 4) {\n                list = list :+ \"Four\"\n      \
    \      }\n            else if (i == 5) {\n                list = list :+ \"Five\"\
    \n            }\n            else if (i == 6) {\n                list = list :+\
    \ \"Six\"\n            }\n            else if (i == 7) {\n                list\
    \ = list :+ \"Seven\"\n            }\n            else if (i == 8) {\n       \
    \         list = list :+ \"Eight\"\n            }\n            else if (i == 9)\
    \ {\n                list = list :+ \"Nine\"\n            }\n        }\n     \
    \   list.sorted.reverse", "        // Write your code here\n        return null;",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var list = List[String]()\n        var list1 =\
    \ List[String]()\n        var list2 = List[String]()\n        var list3 = List[String]()\n\
    \        var list4 = List[String]()\n        var list5 = List[String]()\n    \
    \    var list6 = List[String]()\n        var list7 = List[String]()\n        var\
    \ list8 = List[String]()\n        var list9 = List[String]()\n        for(i <-\
    \ arr) {\n            if(i == 1) {\n                list1 = list1 :+ \"One\"\n\
    \            }\n            else if(i == 2) {\n                list2 = list2 :+\
    \ \"Two\"\n            }\n            else if(i == 3) {\n                list3\
    \ = list3 :+ \"Three\"\n            }\n            else if(i == 4) {\n       \
    \         list4 = list4 :+ \"Four\"\n            }\n            else if(i == 5)\
    \ {\n                list5 = list5 :+ \"Five\"\n            }\n            else\
    \ if(i == 6) {\n                list6 = list6 :+ \"Six\"\n            }\n    \
    \        else if(i == 7) {\n                list7 = list7 :+ \"Seven\"\n     \
    \       }\n            else if(i == 8) {\n                list8 = list8 :+ \"\
    Eight\"\n            }\n            else if(i == 9) {\n                list9 =\
    \ list9 :+ \"Nine\"\n            }\n        }\n        list = list1 ::: list2\
    \ ::: list3 ::: list4 ::: list5 ::: list6 ::: list7 ::: list8 ::: list9\n    \
    \    list.reverse", "        // Fill up this function body\n        // You can\
    \ add another function as well, if required\n        var result = List[String]()\n\
    \        for (i <- arr) {\n            if (i == 1) result = result :+ \"One\"\n\
    \            else if (i == 2) result = result :+ \"Two\"\n            else if\
    \ (i == 3) result = result :+ \"Three\"\n            else if (i == 4) result =\
    \ result :+ \"Four\"\n            else if (i == 5) result = result :+ \"Five\"\
    \n            else if (i == 6) result = result :+ \"Six\"\n            else if\
    \ (i == 7) result = result :+ \"Seven\"\n            else if (i == 8) result =\
    \ result :+ \"Eight\"\n            else if (i == 9) result = result :+ \"Nine\"\
    \n        }\n        result.sorted.reverse", "        // your code here\n    \
    \    null", "        // Fill up this function body\n        // You can add another\
    \ function as well, if required\n        var list = new ListBuffer[String]()\n\
    \        for (i <- arr) {\n            if (i >= 1 && i <= 9) {\n             \
    \   list += i.toString\n            }\n        }\n        list = list.sortWith(_.length\
    \ < _.length)\n        var list2 = new ListBuffer[String]()\n        for (i <-\
    \ list) {\n            list2 += i.toString\n        }\n        list2.toList",
  "        // Fill up this function body\n        // You can add another function\
    \ as well, if required\n        var list = List[String]()\n        for (i <- arr)\
    \ {\n            if (i == 1) {\n                list = list :+ \"One\"\n     \
    \       }\n            else if (i == 2) {\n                list = list :+ \"Two\"\
    \n            }\n            else if (i == 3) {\n                list = list :+\
    \ \"Three\"\n            }\n            else if (i == 4) {\n                list\
    \ = list :+ \"Four\"\n            }\n            else if (i == 5) {\n        \
    \        list = list :+ \"Five\"\n            }\n            else if (i == 6)\
    \ {\n                list = list :+ \"Six\"\n            }\n            else if\
    \ (i == 7) {\n                list = list :+ \"Seven\"\n            }\n      \
    \      else if (i == 8) {\n                list = list :+ \"Eight\"\n        \
    \    }\n            else if (i == 9) {\n                list = list :+ \"Nine\"\
    \n            }\n        }\n        list.sorted.reverse", "        // Fill up\
    \ this function body\n        // You can add another function as well, if required\n\
    \        var result = List[String]()\n        for (i <- arr) {\n            if\
    \ (i == 1) result = result :+ \"One\"\n            else if (i == 2) result = result\
    \ :+ \"Two\"\n            else if (i == 3) result = result :+ \"Three\"\n    \
    \        else if (i == 4) result = result :+ \"Four\"\n            else if (i\
    \ == 5) result = result :+ \"Five\"\n            else if (i == 6) result = result\
    \ :+ \"Six\"\n            else if (i == 7) result = result :+ \"Seven\"\n    \
    \        else if (i == 8) result = result :+ \"Eight\"\n            else if (i\
    \ == 9) result = result :+ \"Nine\"\n        }\n        result.sorted.reverse",
  "        // Your code here\n        return List[String]()", "        // your code\
    \ here\n        var result = List[String]()\n        var temp = List[Long]()\n\
    \        for (i <- arr) {\n            if (i >= 1 && i <= 9) {\n             \
    \   temp = temp :+ i\n            }\n        }\n        temp = temp.sorted\n \
    \       temp = temp.reverse\n        for (i <- temp) {\n            if (i == 1)\
    \ {\n                result = result :+ \"One\"\n            }\n            else\
    \ if (i == 2) {\n                result = result :+ \"Two\"\n            }\n \
    \           else if (i == 3) {\n                result = result :+ \"Three\"\n\
    \            }\n            else if (i == 4) {\n                result = result\
    \ :+ \"Four\"\n            }\n            else if (i == 5) {\n               \
    \ result = result :+ \"Five\"\n            }\n            else if (i == 6) {\n\
    \                result = result :+ \"Six\"\n            }\n            else if\
    \ (i == 7) {\n                result = result :+ \"Seven\"\n            }\n  \
    \          else if (i == 8) {\n                result = result :+ \"Eight\"\n\
    \            }\n            else if (i == 9) {\n                result = result\
    \ :+ \"Nine\"\n            }\n        }\n        result"]
stop_tokens:
- "\n    }\n"

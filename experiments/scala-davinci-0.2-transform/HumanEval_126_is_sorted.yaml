name: HumanEval_126_is_sorted
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a list of numbers, return whether or not they are sorted\n    // in\
  \ ascending order. If list has more than 1 duplicate of the same\n    // number,\
  \ return False. Assume no negative numbers and only integers.\n    // Examples\n\
  \    // >>> isSorted((List[Long](5l.toLong)))\n    // (true)\n    // >>> isSorted((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong)))\n    // (true)\n    // >>> isSorted((List[Long](1l.toLong,\
  \ 3l.toLong, 2l.toLong, 4l.toLong, 5l.toLong)))\n    // (false)\n    // >>> isSorted((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong)))\n    // (true)\n    //\
  \ >>> isSorted((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong,\
  \ 6l.toLong, 7l.toLong)))\n    // (true)\n    // >>> isSorted((List[Long](1l.toLong,\
  \ 3l.toLong, 2l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong)))\n    // (false)\n\
  \    // >>> isSorted((List[Long](1l.toLong, 2l.toLong, 2l.toLong, 3l.toLong, 3l.toLong,\
  \ 4l.toLong)))\n    // (true)\n    // >>> isSorted((List[Long](1l.toLong, 2l.toLong,\
  \ 2l.toLong, 2l.toLong, 3l.toLong, 4l.toLong)))\n    // (false)\n    def isSorted(lst\
  \ : List[Long]) : Boolean = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(isSorted((List[Long](5l.toLong)))\
  \ == (true));\n    assert(isSorted((List[Long](1l.toLong, 2l.toLong, 3l.toLong,\
  \ 4l.toLong, 5l.toLong))) == (true));\n    assert(isSorted((List[Long](1l.toLong,\
  \ 3l.toLong, 2l.toLong, 4l.toLong, 5l.toLong))) == (false));\n    assert(isSorted((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(isSorted((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong))) == (true));\n\
  \    assert(isSorted((List[Long](1l.toLong, 3l.toLong, 2l.toLong, 4l.toLong, 5l.toLong,\
  \ 6l.toLong, 7l.toLong))) == (false));\n    assert(isSorted((List[Long]())) == (true));\n\
  \    assert(isSorted((List[Long](1l.toLong))) == (true));\n    assert(isSorted((List[Long](3l.toLong,\
  \ 2l.toLong, 1l.toLong))) == (false));\n    assert(isSorted((List[Long](1l.toLong,\
  \ 2l.toLong, 2l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))) == (false));\n    assert(isSorted((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 3l.toLong, 3l.toLong, 4l.toLong))) == (false));\n    assert(isSorted((List[Long](1l.toLong,\
  \ 2l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 4l.toLong))) == (true));\n    assert(isSorted((List[Long](1l.toLong,\
  \ 2l.toLong, 3l.toLong, 4l.toLong))) == (true));\n    }\n\n}\n"
completions: ["        var sorted = true\n        var prev = -1l\n        for (i <-\
    \ lst) {\n            if (i <= prev) {\n                sorted = false\n     \
    \       }\n            prev = i\n        }\n        return sorted", "        var\
    \ sorted = true\n        var prev = 0l\n        for (i <- lst) {\n           \
    \ if (i < prev) {\n                sorted = false\n            }\n           \
    \ prev = i\n        }\n        return sorted", "        // Fill in the code here\n\
    \        var sorted = true\n        var prev = 0l\n        var count = 0\n   \
    \     for (i <- lst) {\n            if (i < prev) {\n                sorted =\
    \ false\n            }\n            if (i == prev) {\n                count +=\
    \ 1\n            }\n            if (count > 1) {\n                sorted = false\n\
    \            }\n            prev = i\n        }\n        return sorted", "   \
    \     var sorted = true\n        var prev = 0l\n        for (i <- lst) {\n   \
    \         if (i < prev) {\n                sorted = false\n            }\n   \
    \         prev = i\n        }\n        return sorted", "        var sorted = true\n\
    \        var prev = lst(0)\n        var count = 0\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < prev) {\n                sorted = false\n      \
    \      }\n            if (lst(i) == prev) {\n                count += 1\n    \
    \        }\n            prev = lst(i)\n        }\n        if (count > 0) {\n \
    \           sorted = false\n        }\n        return sorted", "        var sorted\
    \ = true\n        var last = 0l\n        var count = 0\n        for (x <- lst)\
    \ {\n            if (x < last) {\n                sorted = false\n           \
    \ }\n            if (x == last) {\n                count += 1\n            }\n\
    \            if (count > 1) {\n                sorted = false\n            }\n\
    \            last = x\n        }\n        return sorted", "        var sorted\
    \ = true\n        var prev = lst(0)\n        var count = 0\n        for (i <-\
    \ lst) {\n            if (i < prev) {\n                sorted = false\n      \
    \      }\n            if (i == prev) {\n                count += 1\n         \
    \   }\n            prev = i\n        }\n        if (count > 1) {\n           \
    \ sorted = false\n        }\n        return sorted", "        var sorted = true\n\
    \        var prev = -1\n        for (x <- lst) {\n            if (x == prev) {\n\
    \                sorted = false\n            }\n            if (x < prev) {\n\
    \                sorted = false\n            }\n            prev = x\n       \
    \ }\n        return sorted", "        var sorted = true\n        var prev = 0l\n\
    \        var count = 0\n        for (i <- lst) {\n            if (i < prev) {\n\
    \                sorted = false\n            }\n            if (i == prev) {\n\
    \                count += 1\n            }\n            if (count > 1) {\n   \
    \             sorted = false\n            }\n            prev = i\n        }\n\
    \        sorted", "        var sorted = true\n        var prev = 0l\n        for\
    \ (i <- lst) {\n            if (i < prev) {\n                sorted = false\n\
    \            }\n            prev = i\n        }\n        return sorted", "   \
    \     val sorted = lst.sorted\n        val set = lst.toSet\n        val setSorted\
    \ = sorted.toSet\n        return sorted == lst && set == setSorted", "       \
    \ if (lst.length == 1) {\n            return true\n        }\n        var prev\
    \ = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <\
    \ prev) {\n                return false\n            }\n            prev = lst(i)\n\
    \        }\n        return true", "        var sorted = true\n        var prev\
    \ = 0l\n        var count = 0\n        for (i <- lst) {\n            if (count\
    \ > 0) {\n                if (i <= prev) {\n                    sorted = false\n\
    \                }\n            }\n            prev = i\n            count +=\
    \ 1\n        }\n        return sorted", "        val sorted = lst.sorted\n   \
    \     val set = lst.toSet\n        sorted == lst && set.size == lst.size", " \
    \       var sorted = true\n        var prev = 0l\n        for (i <- lst) {\n \
    \           if (i < prev) {\n                sorted = false\n            }\n \
    \           prev = i\n        }\n        return sorted", "        var sorted =\
    \ true\n        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n \
    \           if (lst(i) <= prev) {\n                sorted = false\n          \
    \  }\n            prev = lst(i)\n        }\n        return sorted", "        var\
    \ sorted = true\n        var prev = lst(0)\n        var count = 0\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) {\n            \
    \    sorted = false\n            }\n            if (lst(i) == prev) {\n      \
    \          count += 1\n            }\n            if (count > 1) {\n         \
    \       sorted = false\n            }\n            prev = lst(i)\n        }\n\
    \        return sorted", "        var sorted = true\n        var prev = -1l\n\
    \        for (i <- lst) {\n            if (i == prev) {\n                sorted\
    \ = false\n            }\n            if (i < prev) {\n                sorted\
    \ = false\n            }\n            prev = i\n        }\n        return sorted",
  "        var sorted = true\n        var prev = 0l\n        for (i <- lst) {\n  \
    \          if (i < prev) {\n                sorted = false\n            }\n  \
    \          prev = i\n        }\n        return sorted", "        var sorted =\
    \ true\n        var last = lst(0)\n        var count = 0\n        for (i <- 1\
    \ until lst.length) {\n            if (lst(i) == last) {\n                count\
    \ += 1\n                if (count > 1) {\n                    sorted = false\n\
    \                }\n            }\n            else {\n                count =\
    \ 0\n            }\n            if (lst(i) < last) {\n                sorted =\
    \ false\n            }\n            last = lst(i)\n        }\n        sorted",
  "        var sorted = true\n        var prev = lst(0)\n        var prevCount = 0\n\
    \        for (i <- 1 until lst.length) {\n            if (lst(i) < prev) {\n \
    \               sorted = false\n            }\n            if (lst(i) == prev)\
    \ {\n                prevCount += 1\n                if (prevCount > 1) {\n  \
    \                  sorted = false\n                }\n            }\n        \
    \    prev = lst(i)\n        }\n        sorted", "        var sorted = true\n \
    \       var prev = 0l\n        for (i <- lst) {\n            if (i < prev) sorted\
    \ = false\n            prev = i\n        }\n        return sorted", "        if\
    \ (lst.length == 1) {\n            return true\n        }\n        var prev =\
    \ lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <= prev)\
    \ {\n                return false\n            }\n            prev = lst(i)\n\
    \        }\n        return true", "        var sorted = true\n        var prev\
    \ = -1l\n        for (i <- lst) {\n            if (i == prev) {\n            \
    \    sorted = false\n            }\n            if (i < prev) {\n            \
    \    sorted = false\n            }\n            prev = i\n        }\n        return\
    \ sorted", "        if (lst.length == 1) {\n            return true\n        }\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) <= prev) {\n                return false\n            }\n    \
    \        prev = lst(i)\n        }\n        return true", "        var sorted =\
    \ true\n        var prev = 0l\n        for (i <- lst) {\n            if (i < prev)\
    \ {\n                sorted = false\n            }\n            prev = i\n   \
    \     }\n        return sorted", "        val sorted = lst.sorted\n        val\
    \ set = lst.toSet\n        return sorted == lst && set.size == lst.size", "  \
    \      var sorted = true\n        var prev = -1l\n        for (i <- lst) {\n \
    \           if (i <= prev) {\n                sorted = false\n            }\n\
    \            prev = i\n        }\n        return sorted", "        var sorted\
    \ = true\n        var prev = 0l\n        for (i <- lst) {\n            if (i <\
    \ prev) {\n                sorted = false\n            }\n            prev = i\n\
    \        }\n        return sorted", "        if (lst.size == 1) return true\n\
    \        var prev = lst(0)\n        var count = 0\n        for (i <- 1 until lst.size)\
    \ {\n            if (lst(i) == prev) {\n                count += 1\n         \
    \       if (count > 1) return false\n            }\n            else {\n     \
    \           count = 0\n                prev = lst(i)\n            }\n        }\n\
    \        return true", "        var sorted = true\n        var prev = 0l\n   \
    \     var count = 0\n        for (i <- lst) {\n            if (i < prev) {\n \
    \               sorted = false\n            }\n            if (i == prev) {\n\
    \                count += 1\n            }\n            if (count > 1) {\n   \
    \             sorted = false\n            }\n            prev = i\n        }\n\
    \        return sorted", "        var sorted = true\n        var prev = -1l\n\
    \        for (num <- lst) {\n            if (num <= prev) {\n                sorted\
    \ = false\n            }\n            prev = num\n        }\n        return sorted",
  "        var sorted = true\n        var prev = Long.MinValue\n        for (i <-\
    \ lst) {\n            if (i == prev) {\n                sorted = false\n     \
    \       }\n            if (i < prev) {\n                sorted = false\n     \
    \       }\n            prev = i\n        }\n        return sorted", "        var\
    \ sorted = true\n        var prev = 0l\n        for (i <- lst) {\n           \
    \ if (i <= prev) {\n                sorted = false\n            }\n          \
    \  prev = i\n        }\n        return sorted", "        if (lst.length == 1)\
    \ {\n            return true\n        }\n        for (i <- 0 until lst.length\
    \ - 1) {\n            if (lst(i) >= lst(i + 1)) {\n                return false\n\
    \            }\n        }\n        return true", "        var sorted = true\n\
    \        var prev = 0l\n        for (i <- lst) {\n            if (i < prev) sorted\
    \ = false\n            prev = i\n        }\n        return sorted", "        var\
    \ sorted = true\n        var prev = 0l\n        var count = 0\n        for (i\
    \ <- lst) {\n            if (i < prev) {\n                sorted = false\n   \
    \         }\n            if (i == prev) {\n                count += 1\n      \
    \      }\n            if (count > 1) {\n                sorted = false\n     \
    \       }\n            prev = i\n        }\n        return sorted", "        //\
    \ Fill in the code here\n        return true", "        var sorted = true\n  \
    \      var prev = 0l\n        for (i <- lst) {\n            if (i < prev) {\n\
    \                sorted = false\n            }\n            prev = i\n       \
    \ }\n        return sorted", "        var sorted = true\n        var prev = 0l\n\
    \        var count = 0\n        for (i <- lst) {\n            if (count == 0)\
    \ {\n                prev = i\n                count += 1\n            } else\
    \ {\n                if (i <= prev) {\n                    sorted = false\n  \
    \              }\n                prev = i\n            }\n        }\n       \
    \ return sorted", "        var sorted = true\n        var prev = lst(0)\n    \
    \    var count = 0\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ < prev) {\n                sorted = false\n            }\n            if (lst(i)\
    \ == prev) {\n                count += 1\n            }\n            prev = lst(i)\n\
    \        }\n        if (count > 0) {\n            sorted = false\n        }\n\
    \        return sorted", "        if (lst.length == 1) {\n            return true\n\
    \        }\n        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n\
    \            if (lst(i) <= prev) {\n                return false\n           \
    \ }\n            prev = lst(i)\n        }\n        return true", "        // Fill\
    \ in the code here\n        true", "        var sorted = true\n        var prev\
    \ = lst(0)\n        var count = 0\n        for (i <- 1 until lst.length) {\n \
    \           if (lst(i) < prev) {\n                sorted = false\n           \
    \ }\n            if (lst(i) == prev) {\n                count += 1\n         \
    \   }\n            if (count > 1) {\n                sorted = false\n        \
    \    }\n            prev = lst(i)\n        }\n        return sorted", "      \
    \  var sorted = true\n        var prev = lst(0)\n        var count = 0\n     \
    \   for (i <- 1 until lst.length) {\n            if (lst(i) < prev) {\n      \
    \          sorted = false\n            }\n            if (lst(i) == prev) {\n\
    \                count += 1\n            }\n            prev = lst(i)\n      \
    \  }\n        if (count > 0) {\n            sorted = false\n        }\n      \
    \  return sorted", "        if (lst.length == 1) {\n            return true\n\
    \        }\n        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n\
    \            if (lst(i) <= prev) {\n                return false\n           \
    \ }\n            prev = lst(i)\n        }\n        return true", "        val\
    \ sorted = lst.sorted\n        val distinct = sorted.distinct\n        val result\
    \ = sorted == distinct\n        return result", "        var sorted = true\n \
    \       var prev = lst(0)\n        var count = 0\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < prev) {\n                sorted = false\n      \
    \      }\n            if (lst(i) == prev) {\n                count += 1\n    \
    \        }\n            prev = lst(i)\n        }\n        if (count > 0) {\n \
    \           sorted = false\n        }\n        return sorted", "        var sorted\
    \ = true\n        var prev = -1l\n        for (i <- lst) {\n            if (i\
    \ <= prev) {\n                sorted = false\n            }\n            prev\
    \ = i\n        }\n        return sorted", "        var sorted = true\n       \
    \ var prev = -1\n        for (i <- lst) {\n            if (i <= prev) {\n    \
    \            sorted = false\n            }\n            prev = i\n        }\n\
    \        return sorted", "        if (lst.length < 2) return true\n        var\
    \ prev = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ <= prev) return false\n            prev = lst(i)\n        }\n        return\
    \ true", "        val sorted = lst.sorted\n        val distinct = sorted.distinct\n\
    \        sorted == distinct", "        var prev : Long = 0\n        var count\
    \ : Int = 0\n        for (i <- lst) {\n            if (i == prev) {\n        \
    \        count += 1\n                if (count > 1) return false\n           \
    \ }\n            else {\n                count = 0\n                prev = i\n\
    \            }\n        }\n        return true", "        val sorted = lst.sorted\n\
    \        val set = lst.toSet\n        return sorted == lst && set.size == lst.size",
  "        var sorted = true\n        var prev = -1l\n        for (i <- lst) {\n \
    \           if (i <= prev) {\n                sorted = false\n            }\n\
    \            prev = i\n        }\n        return sorted", "        if (lst.length\
    \ == 1) return true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) == prev) return false\n            if (lst(i) < prev)\
    \ return false\n            prev = lst(i)\n        }\n        return true", " \
    \       val sorted = lst.sorted\n        val distinct = sorted.distinct\n    \
    \    return sorted == distinct", "        var sorted = true\n        var i = 0\n\
    \        while (i < lst.length - 1) {\n            if (lst(i) >= lst(i + 1)) {\n\
    \                sorted = false\n            }\n            i += 1\n        }\n\
    \        sorted", "        // Fill in the body of this function\n        return\
    \ false", "        var sorted = true\n        var prev = 0l\n        var count\
    \ = 0\n        for (i <- lst) {\n            if (i < prev) {\n               \
    \ sorted = false\n            }\n            if (i == prev) {\n              \
    \  count += 1\n            }\n            if (count > 1) {\n                sorted\
    \ = false\n            }\n            prev = i\n        }\n        return sorted",
  "        var sorted = true\n        var prev = 0l\n        var count = 0\n     \
    \   for (i <- lst) {\n            if (i < prev) {\n                sorted = false\n\
    \            }\n            if (i == prev) {\n                count += 1\n   \
    \         }\n            if (count > 1) {\n                sorted = false\n  \
    \          }\n            prev = i\n        }\n        return sorted", "     \
    \   var sorted = true\n        var prev = 0l\n        for (i <- lst) {\n     \
    \       if (i < prev) sorted = false\n            prev = i\n        }\n      \
    \  return sorted", "        val lst2 = lst.sorted\n        val lst3 = lst2.distinct\n\
    \        if (lst.length != lst3.length) return false\n        for (i <- 0 until\
    \ lst.length) {\n            if (lst(i) != lst2(i)) return false\n        }\n\
    \        return true", "        // Fill in the code here\n        var sorted =\
    \ true\n        var prev = lst(0)\n        var count = 0\n        for (i <- 1\
    \ until lst.length) {\n            if (lst(i) < prev) {\n                sorted\
    \ = false\n            }\n            if (lst(i) == prev) {\n                count\
    \ += 1\n            }\n            prev = lst(i)\n        }\n        if (count\
    \ > 0) {\n            sorted = false\n        }\n        sorted", "        //\
    \ Fill in the code here\n        true", "        var sorted = true\n        var\
    \ prev = 0l\n        for (i <- lst) {\n            if (i < prev) {\n         \
    \       sorted = false\n            }\n            prev = i\n        }\n     \
    \   return sorted", "        if (lst.length == 1) true\n        else if (lst.length\
    \ == 2) lst(0) < lst(1)\n        else if (lst(0) < lst(1)) isSorted(lst.tail)\n\
    \        else false", "        var sorted = true\n        var prev = 0l\n    \
    \    for (i <- lst) {\n            if (i < prev) {\n                sorted = false\n\
    \            }\n            prev = i\n        }\n        return sorted", "   \
    \     // Fill in the code here\n        var sorted = true\n        for (i <- 0\
    \ until lst.length - 1) {\n            if (lst(i) >= lst(i + 1)) {\n         \
    \       sorted = false\n            }\n        }\n        sorted", "        var\
    \ sorted = true\n        var prev = -1l\n        for (i <- lst) {\n          \
    \  if (i == prev) {\n                sorted = false\n            }\n         \
    \   if (i < prev) {\n                sorted = false\n            }\n         \
    \   prev = i\n        }\n        return sorted", "        val sorted = lst.sorted\n\
    \        val distinct = sorted.distinct\n        if (sorted == distinct) {\n \
    \           return true\n        }\n        return false", "        var sorted\
    \ = true\n        var prev = 0l\n        for (i <- lst) {\n            if (i <\
    \ prev) {\n                sorted = false\n            }\n            prev = i\n\
    \        }\n        return sorted", "        var sorted = true\n        var prev\
    \ = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <=\
    \ prev) {\n                sorted = false\n            }\n            prev = lst(i)\n\
    \        }\n        return sorted", "        var sorted = true\n        var prev\
    \ = 0l\n        for (i <- lst) {\n            if (i <= prev) {\n             \
    \   sorted = false\n            }\n            prev = i\n        }\n        return\
    \ sorted", "        // Fill in the code here\n        return true", "        var\
    \ sorted = true\n        var prev = -1l\n        for (i <- lst) {\n          \
    \  if (i == prev) {\n                sorted = false\n            }\n         \
    \   else if (i < prev) {\n                sorted = false\n            }\n    \
    \        prev = i\n        }\n        return sorted", "        var sorted = true\n\
    \        var prev = -1l\n        for (i <- lst) {\n            if (i <= prev)\
    \ {\n                sorted = false\n            }\n            prev = i\n   \
    \     }\n        return sorted", "        var sorted = true\n        var prev\
    \ = lst(0)\n        var count = 0\n        for (i <- 1 until lst.length) {\n \
    \           if (lst(i) < prev) {\n                sorted = false\n           \
    \ }\n            if (lst(i) == prev) {\n                count += 1\n         \
    \   }\n            if (count > 1) {\n                sorted = false\n        \
    \    }\n            prev = lst(i)\n        }\n        return sorted", "      \
    \  var sorted = true\n        var prev = 0l\n        for (i <- lst) {\n      \
    \      if (i < prev) {\n                sorted = false\n            }\n      \
    \      prev = i\n        }\n        return sorted", "        var sorted = true\n\
    \        var last = 0l\n        for (i <- lst) {\n            if (i < last) {\n\
    \                sorted = false\n            }\n            last = i\n       \
    \ }\n        return sorted", "        var sorted = true\n        var prev = 0l\n\
    \        for (i <- lst) {\n            if (i < prev) {\n                sorted\
    \ = false\n            }\n            prev = i\n        }\n        return sorted",
  "        // Fill in the code here\n        return true", "        var sorted = true\n\
    \        var prev = -1l\n        for (i <- lst) {\n            if (i <= prev)\
    \ {\n                sorted = false\n            }\n            prev = i\n   \
    \     }\n        return sorted", '        return true', "        var sorted =\
    \ true\n        var prev = -1l\n        for (i <- lst) {\n            if (i ==\
    \ prev) {\n                sorted = false\n            }\n            if (i <\
    \ prev) {\n                sorted = false\n            }\n            prev = i\n\
    \        }\n        return sorted", "        var sorted = true\n        var prev\
    \ = 0l\n        for (i <- lst) {\n            if (i < prev) {\n              \
    \  sorted = false\n            }\n            prev = i\n        }\n        return\
    \ sorted", "        // Fill in the code here\n        return true", "        var\
    \ sorted = true\n        var prev = 0l\n        for (i <- lst) {\n           \
    \ if (i < prev) {\n                sorted = false\n            }\n           \
    \ prev = i\n        }\n        return sorted", "        val lst2 = lst.sorted\n\
    \        val lst3 = lst2.distinct\n        if (lst.length == lst3.length) {\n\
    \            true\n        } else {\n            false\n        }", "        var\
    \ sorted = true\n        var prev = 0l\n        for (i <- lst) {\n           \
    \ if (i < prev) {\n                sorted = false\n            }\n           \
    \ prev = i\n        }\n        return sorted", "        var sorted = true\n  \
    \      var prev = -1l\n        for (i <- lst) {\n            if (i <= prev) {\n\
    \                sorted = false\n            }\n            prev = i\n       \
    \ }\n        return sorted", "        var sorted = true\n        var prev = 0l\n\
    \        for (i <- lst) {\n            if (i < prev) {\n                sorted\
    \ = false\n            }\n            prev = i\n        }\n        return sorted",
  "        var sorted = true\n        var prev = lst(0)\n        var count = 0\n \
    \       for (i <- 1 until lst.length) {\n            if (lst(i) < prev) {\n  \
    \              sorted = false\n            }\n            if (lst(i) == prev)\
    \ {\n                count += 1\n            }\n            prev = lst(i)\n  \
    \      }\n        if (count > 0) {\n            sorted = false\n        }\n  \
    \      return sorted", "        var sorted = true\n        var prev = 0l\n   \
    \     for (i <- lst) {\n            if (i < prev) {\n                sorted =\
    \ false\n            }\n            prev = i\n        }\n        return sorted",
  "        // Fill in the code here\n        var sorted = true\n        var previous\
    \ = 0l\n        for (i <- lst) {\n            if (i < previous) {\n          \
    \      sorted = false\n            }\n            previous = i\n        }\n  \
    \      return sorted", "        if (lst.length == 1) {\n            return true\n\
    \        }\n        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n\
    \            if (lst(i) < prev) {\n                return false\n            }\n\
    \            prev = lst(i)\n        }\n        return true", "        // Fill\
    \ in the code here\n        return true", "        var sorted = true\n       \
    \ var prev = lst(0)\n        var count = 0\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) < prev) {\n                sorted = false\n      \
    \      }\n            if (lst(i) == prev) {\n                count += 1\n    \
    \        }\n            prev = lst(i)\n        }\n        if (count > 0) {\n \
    \           sorted = false\n        }\n        return sorted", "        var prev\
    \ : Long = 0\n        var count : Long = 0\n        for (i <- lst) {\n       \
    \     if (i == prev) {\n                count += 1\n                if (count\
    \ > 1) {\n                    return false\n                }\n            }\n\
    \            else {\n                count = 0\n            }\n            prev\
    \ = i\n        }\n        return true", "        var sorted = true\n        var\
    \ prev = -1l\n        for (i <- lst) {\n            if (i <= prev) {\n       \
    \         sorted = false\n            }\n            prev = i\n        }\n   \
    \     return sorted", "        var sorted = true\n        var prev = lst(0)\n\
    \        var count = 0\n        for (i <- 1 until lst.length) {\n            if\
    \ (lst(i) < prev) sorted = false\n            if (lst(i) == prev) count += 1\n\
    \            prev = lst(i)\n        }\n        if (count > 1) sorted = false\n\
    \        sorted", "        var sorted = true\n        var prev = 0l\n        for\
    \ (i <- lst) {\n            if (i < prev) {\n                sorted = false\n\
    \            }\n            prev = i\n        }\n        return sorted", "   \
    \     var sorted = true\n        var last = 0l\n        for (i <- lst) {\n   \
    \         if (i < last) {\n                sorted = false\n            }\n   \
    \         last = i\n        }\n        return sorted", "        var sorted = true\n\
    \        var prev = -1l\n        for (i <- lst) {\n            if (i <= prev)\
    \ {\n                sorted = false\n            }\n            prev = i\n   \
    \     }\n        return sorted", "        var sorted = true\n        var prev\
    \ = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <\
    \ prev) {\n                sorted = false\n            }\n            prev = lst(i)\n\
    \        }\n        return sorted", "        val sorted = lst.sorted\n       \
    \ val distinct = sorted.distinct\n        return sorted == distinct", "      \
    \  var sorted = true\n        var prev = lst(0)\n        var count = 0\n     \
    \   for (i <- 1 until lst.length) {\n            if (lst(i) < prev) {\n      \
    \          sorted = false\n            }\n            if (lst(i) == prev) {\n\
    \                count += 1\n            }\n            prev = lst(i)\n      \
    \  }\n        if (count > 0) {\n            sorted = false\n        }\n      \
    \  return sorted", "        // Fill in the code here\n        var sorted = true\n\
    \        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n        \
    \    if (lst(i) <= prev) {\n                sorted = false\n            }\n  \
    \          prev = lst(i)\n        }\n        return sorted", "        if (lst.length\
    \ == 1) {\n            return true\n        }\n        var i = 0\n        while\
    \ (i < lst.length - 1) {\n            if (lst(i) >= lst(i + 1)) {\n          \
    \      return false\n            }\n            i += 1\n        }\n        return\
    \ true", "        if (lst.length == 1) return true\n        var prev = lst(0)\n\
    \        for (i <- 1 until lst.length) {\n            if (lst(i) < prev) return\
    \ false\n            prev = lst(i)\n        }\n        return true", "       \
    \ var sorted = true\n        var last = 0l\n        for (i <- lst) {\n       \
    \     if (i < last) {\n                sorted = false\n            }\n       \
    \     last = i\n        }\n        return sorted", "        var sorted = true\n\
    \        var prev = 0l\n        for (i <- lst) {\n            if (i < prev) sorted\
    \ = false\n            prev = i\n        }\n        return sorted", "        if\
    \ (lst.length == 1) return true\n        var prev = lst(0)\n        var prevCount\
    \ = 1\n        for (i <- 1 until lst.length) {\n            if (lst(i) < prev)\
    \ return false\n            if (lst(i) == prev) prevCount += 1\n            else\
    \ {\n                if (prevCount > 1) return false\n                prev = lst(i)\n\
    \                prevCount = 1\n            }\n        }\n        if (prevCount\
    \ > 1) return false\n        return true", "        if (lst.length == 1) return\
    \ true\n        var i = 0\n        while (i < lst.length - 1) {\n            if\
    \ (lst(i) >= lst(i + 1)) return false\n            i += 1\n        }\n       \
    \ return true", "        var sorted = true\n        var prev = -1l\n        for\
    \ (i <- lst) {\n            if (i == prev) {\n                sorted = false\n\
    \            }\n            else if (i < prev) {\n                sorted = false\n\
    \            }\n            prev = i\n        }\n        return sorted", "   \
    \     val sorted = lst.sorted\n        val distinct = sorted.distinct\n      \
    \  sorted == distinct", "        var sorted = true\n        var i = 0\n      \
    \  while (i < lst.length - 1) {\n            if (lst(i) >= lst(i + 1)) {\n   \
    \             sorted = false\n            }\n            i += 1\n        }\n \
    \       sorted", "        var sorted = true\n        var prev = 0l\n        var\
    \ count = 0\n        for (i <- lst) {\n            if (i < prev) {\n         \
    \       sorted = false\n            }\n            if (i == prev) {\n        \
    \        count += 1\n            }\n            if (count > 1) {\n           \
    \     sorted = false\n            }\n            prev = i\n        }\n       \
    \ return sorted", "        val sorted = lst.sorted\n        val distinct = sorted.distinct\n\
    \        sorted == distinct", "        var sorted = true\n        var prev = lst(0)\n\
    \        for (i <- 1 until lst.length) {\n            if (lst(i) < prev) {\n \
    \               sorted = false\n            }\n            prev = lst(i)\n   \
    \     }\n        return sorted", "        // Fill in the code here\n        return\
    \ true", "        var last : Long = 0\n        var count : Int = 0\n        for\
    \ (i <- lst) {\n            if (i == last) {\n                count += 1\n   \
    \             if (count > 1) {\n                    return false\n           \
    \     }\n            }\n            if (i < last) {\n                return false\n\
    \            }\n            last = i\n        }\n        return true", "     \
    \   // Fill in the code here\n        return true", "        val sorted = lst.sorted\n\
    \        val distinct = sorted.distinct\n        if (sorted == distinct) {\n \
    \           true\n        } else {\n            false\n        }", "        //\
    \ Fill in the code here\n        true", "        var sorted = true\n        var\
    \ last = 0l\n        for (i <- lst) {\n            if (i < last) sorted = false\n\
    \            last = i\n        }\n        sorted", "        var prev : Long =\
    \ 0\n        var count : Long = 0\n        for (num <- lst) {\n            if\
    \ (num == prev) {\n                count += 1\n                if (count > 1)\
    \ {\n                    return false\n                }\n            }\n    \
    \        else {\n                count = 0\n            }\n            prev =\
    \ num\n        }\n        return true", "        val sorted = lst.sorted\n   \
    \     val distinct = sorted.distinct\n        val result = sorted == distinct\n\
    \        return result", "        val sorted = lst.sorted\n        val set = lst.toSet\n\
    \        val setSorted = sorted.toSet\n        val setSortedSize = setSorted.size\n\
    \        val setSize = set.size\n        if (setSortedSize == setSize) {\n   \
    \         true\n        } else {\n            false\n        }", "        var\
    \ sorted = true\n        var prev = 0l\n        for (i <- lst) {\n           \
    \ if (i < prev) {\n                sorted = false\n            }\n           \
    \ prev = i\n        }\n        return sorted", "        // Fill in the code here\n\
    \        return true", "        if (lst.length == 1) return true\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < lst(i - 1)) return false\n\
    \            if (lst(i) == lst(i - 1)) return false\n        }\n        return\
    \ true", "        var result = true\n        var prev = 0l\n        for (i <-\
    \ lst) {\n            if (i == prev) {\n                result = false\n     \
    \       }\n            prev = i\n        }\n        return result", "        var\
    \ sorted = true\n        var prev = lst(0)\n        for (i <- 1 until lst.length)\
    \ {\n            if (lst(i) <= prev) {\n                sorted = false\n     \
    \       }\n            prev = lst(i)\n        }\n        return sorted", "   \
    \     var sorted = true\n        var prev = 0l\n        for (i <- lst) {\n   \
    \         if (i <= prev) {\n                sorted = false\n            }\n  \
    \          prev = i\n        }\n        return sorted", "        var sorted =\
    \ true\n        var prev = 0l\n        var count = 0\n        for (i <- lst) {\n\
    \            if (count > 0) {\n                if (i <= prev) {\n            \
    \        sorted = false\n                }\n            }\n            prev =\
    \ i\n            count += 1\n        }\n        return sorted", "        var sorted\
    \ = true\n        var prev = -1l\n        for (i <- lst) {\n            if (i\
    \ <= prev) {\n                sorted = false\n            }\n            prev\
    \ = i\n        }\n        return sorted", "        if (lst.length == 1) {\n  \
    \          return true\n        }\n        var last = lst(0)\n        for (i <-\
    \ 1 until lst.length) {\n            if (lst(i) < last) {\n                return\
    \ false\n            }\n            last = lst(i)\n        }\n        return true",
  "        var sorted = true\n        var prev = -1\n        for (i <- lst) {\n  \
    \          if (i <= prev) {\n                sorted = false\n            }\n \
    \           prev = i\n        }\n        return sorted", "        var sorted =\
    \ true\n        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n \
    \           if (lst(i) < prev) {\n                sorted = false\n           \
    \ }\n            prev = lst(i)\n        }\n        return sorted", "        val\
    \ sorted = lst.sorted\n        val distinct = sorted.distinct\n        sorted\
    \ == distinct", "        val sorted = lst.sorted\n        val distinct = sorted.distinct\n\
    \        val result = sorted == distinct\n        return result", "        val\
    \ sorted = lst.sorted\n        val distinct = sorted.distinct\n        val sortedDistinct\
    \ = distinct.sorted\n        sorted == sortedDistinct", "        var sorted =\
    \ true\n        var prev = -1l\n        for (i <- lst) {\n            if (i ==\
    \ prev) {\n                sorted = false\n            }\n            if (i <\
    \ prev) {\n                sorted = false\n            }\n            prev = i\n\
    \        }\n        return sorted", "        val sorted = lst.sorted\n       \
    \ val set = lst.toSet\n        sorted == lst && set.size == lst.size", "     \
    \   if (lst.length == 1) {\n            return true\n        }\n        var i\
    \ = 0\n        while (i < lst.length - 1) {\n            if (lst(i) > lst(i +\
    \ 1)) {\n                return false\n            }\n            i += 1\n   \
    \     }\n        return true", "        // Fill in the code here\n        var\
    \ sorted = true\n        var prev = 0l\n        for (i <- lst) {\n           \
    \ if (i < prev) {\n                sorted = false\n            }\n           \
    \ prev = i\n        }\n        return sorted", "        var sorted = true\n  \
    \      var prev = 0l\n        for (i <- lst) {\n            if (i < prev) {\n\
    \                sorted = false\n            }\n            prev = i\n       \
    \ }\n        return sorted", "        var sorted = true\n        var prev = 0l\n\
    \        for (i <- lst) {\n            if (i < prev) {\n                sorted\
    \ = false\n            }\n            prev = i\n        }\n        return sorted",
  "        if (lst.length == 1) {\n            return true\n        }\n        var\
    \ prev = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i)\
    \ <= prev) {\n                return false\n            }\n            prev =\
    \ lst(i)\n        }\n        return true", "        // Fill in the code here\n\
    \        return true", "        // Fill in the code here\n        return true",
  "        // Fill in the code here\n        return true", "        var sorted = true\n\
    \        var prev = 0l\n        var count = 0\n        for (i <- lst) {\n    \
    \        if (count == 0) {\n                prev = i\n                count +=\
    \ 1\n            } else {\n                if (i < prev) {\n                 \
    \   sorted = false\n                }\n                prev = i\n            }\n\
    \        }\n        return sorted", "        var sorted = true\n        var prev\
    \ = lst(0)\n        for (i <- 1 until lst.length) {\n            if (lst(i) <=\
    \ prev) {\n                sorted = false\n            }\n            prev = lst(i)\n\
    \        }\n        return sorted", "        // Fill in the code here\n      \
    \  return true", "        // Fill in the code here\n        return true", "  \
    \      // Fill in the code here\n        return false", "        var sorted =\
    \ true\n        var prev = -1l\n        for (i <- lst) {\n            if (i <=\
    \ prev) {\n                sorted = false\n            }\n            prev = i\n\
    \        }\n        return sorted", "        val sorted = lst.sorted\n       \
    \ val set = lst.toSet\n        sorted == lst && set.size == lst.size", "     \
    \   var sorted = true\n        var prev = -1l\n        for (i <- lst) {\n    \
    \        if (i <= prev) {\n                sorted = false\n            }\n   \
    \         prev = i\n        }\n        return sorted", "        var sorted = true\n\
    \        var prev = 0l\n        var count = 0\n        for (i <- lst) {\n    \
    \        if (i < prev) sorted = false\n            if (i == prev) count += 1\n\
    \            prev = i\n        }\n        if (count > 1) sorted = false\n    \
    \    return sorted", "        val sorted = lst.sorted\n        val distinct =\
    \ sorted.distinct\n        sorted == distinct", "        if (lst.length < 2) {\n\
    \            return true\n        }\n        var prev = lst(0)\n        for (i\
    \ <- 1 until lst.length) {\n            if (lst(i) <= prev) {\n              \
    \  return false\n            }\n            prev = lst(i)\n        }\n       \
    \ return true", "        if (lst.length == 1) {\n            return true\n   \
    \     }\n        var prev = lst(0)\n        var count = 0\n        for (i <- 1\
    \ until lst.length) {\n            if (lst(i) < prev) {\n                return\
    \ false\n            }\n            if (lst(i) == prev) {\n                count\
    \ += 1\n            }\n            prev = lst(i)\n        }\n        if (count\
    \ > 0) {\n            return false\n        }\n        return true", "       \
    \ var sorted = true\n        var prev = 0l\n        for (i <- lst) {\n       \
    \     if (i < prev) {\n                sorted = false\n            }\n       \
    \     prev = i\n        }\n        return sorted", "        var sorted = true\n\
    \        var prev = 0l\n        for (i <- lst) {\n            if (i < prev) {\n\
    \                sorted = false\n            }\n            prev = i\n       \
    \ }\n        return sorted", "        var sorted = true\n        var prev = -1l\n\
    \        for (i <- lst) {\n            if (i <= prev) {\n                sorted\
    \ = false\n            }\n            prev = i\n        }\n        return sorted",
  "        var sorted = true\n        var prev = -1l\n        for (i <- lst) {\n \
    \           if (i <= prev) {\n                sorted = false\n            }\n\
    \            prev = i\n        }\n        return sorted", "        var i = 0\n\
    \        var j = 1\n        var sorted = true\n        while (i < lst.length -\
    \ 1 && sorted) {\n            if (lst(i) >= lst(j)) {\n                sorted\
    \ = false\n            }\n            i += 1\n            j += 1\n        }\n\
    \        return sorted", "        var prev : Long = 0\n        var count : Int\
    \ = 0\n        for (i <- lst) {\n            if (i == prev) {\n              \
    \  count += 1\n                if (count > 1) return false\n            }\n  \
    \          else {\n                prev = i\n                count = 0\n     \
    \       }\n        }\n        return true", "        var sorted = true\n     \
    \   var prev = 0l\n        var count = 0\n        for (i <- lst) {\n         \
    \   if (i < prev) {\n                sorted = false\n            }\n         \
    \   if (i == prev) {\n                count += 1\n            }\n            if\
    \ (count > 1) {\n                sorted = false\n            }\n            prev\
    \ = i\n        }\n        return sorted", "        // Fill in the code here\n\
    \        return true", "        lst match {\n            case Nil => true\n  \
    \          case x :: Nil => true\n            case x :: y :: Nil => x < y\n  \
    \          case x :: y :: z :: rest => if (x < y && y < z) isSorted(y :: z ::\
    \ rest) else false\n        }", "        var sorted = true\n        var prev =\
    \ 0l\n        for (i <- lst) {\n            if (i < prev) {\n                sorted\
    \ = false\n            }\n            prev = i\n        }\n        return sorted",
  "        if (lst.length == 1) {\n            return true\n        }\n        else\
    \ {\n            var i = 0\n            while (i < lst.length - 1) {\n       \
    \         if (lst(i) != lst(i + 1) - 1) {\n                    return false\n\
    \                }\n                i += 1\n            }\n            return\
    \ true\n        }", "        val lst2 = lst.sorted\n        val lst3 = lst2.distinct\n\
    \        lst == lst3", "        var sorted = true\n        var prev = 0l\n   \
    \     var count = 0\n        for (i <- lst) {\n            if (count == 0) {\n\
    \                prev = i\n                count += 1\n            } else {\n\
    \                if (i <= prev) {\n                    sorted = false\n      \
    \          }\n                prev = i\n            }\n        }\n        return\
    \ sorted", "        var sorted = true\n        var i = 0\n        while (i < lst.length\
    \ - 1) {\n            if (lst(i) >= lst(i + 1)) {\n                sorted = false\n\
    \            }\n            i += 1\n        }\n        return sorted", "     \
    \   var sorted = true\n        var prev = 0l\n        var count = 0\n        for\
    \ (i <- lst) {\n            if (i < prev) {\n                sorted = false\n\
    \            }\n            if (i == prev) {\n                count += 1\n   \
    \         }\n            if (count > 1) {\n                sorted = false\n  \
    \          }\n            prev = i\n        }\n        return sorted", "     \
    \   val sorted = lst.sorted\n        val unique = sorted.distinct\n        return\
    \ sorted == unique", "        var sorted = true\n        var prev = 0l\n     \
    \   for (i <- lst) {\n            if (i < prev) {\n                sorted = false\n\
    \            }\n            prev = i\n        }\n        return sorted", '        lst.sorted
    == lst', "        var sorted = true\n        var i = 0\n        while (i < lst.length\
    \ - 1) {\n            if (lst(i) >= lst(i + 1)) {\n                sorted = false\n\
    \            }\n            i += 1\n        }\n        sorted", "        // Fill\
    \ in the code here\n        true", "        var sorted = true\n        var i =\
    \ 0\n        var j = 1\n        while (i < lst.length - 1 && sorted) {\n     \
    \       if (lst(i) >= lst(j)) {\n                sorted = false\n            }\n\
    \            i += 1\n            j += 1\n        }\n        sorted", "       \
    \ var sorted = true\n        var last = -1l\n        for (i <- lst) {\n      \
    \      if (i <= last) {\n                sorted = false\n            }\n     \
    \       last = i\n        }\n        return sorted", "        if (lst.length ==\
    \ 1) return true\n        var prev = lst(0)\n        var count = 0\n        for\
    \ (i <- 1 until lst.length) {\n            if (lst(i) < prev) return false\n \
    \           if (lst(i) == prev) count += 1\n            if (count > 1) return\
    \ false\n            prev = lst(i)\n        }\n        return true", "       \
    \ var sorted = true\n        var prev = lst(0)\n        var count = 0\n      \
    \  for (i <- 1 until lst.length) {\n            if (lst(i) < prev) sorted = false\n\
    \            if (lst(i) == prev) count += 1\n            prev = lst(i)\n     \
    \   }\n        if (count > 1) sorted = false\n        sorted", "        // Fill\
    \ in the code here\n        true", "        // Fill in the code here\n       \
    \ var sorted = true\n        var previous = 0l\n        for (i <- lst) {\n   \
    \         if (i < previous) {\n                sorted = false\n            }\n\
    \            previous = i\n        }\n        return sorted", "        var sorted\
    \ = true\n        var prev = lst(0)\n        var count = 0\n        for (i <-\
    \ 1 until lst.length) {\n            if (lst(i) < prev) {\n                sorted\
    \ = false\n            }\n            if (lst(i) == prev) {\n                count\
    \ += 1\n            }\n            prev = lst(i)\n        }\n        if (count\
    \ > 0) {\n            sorted = false\n        }\n        return sorted", "   \
    \     // Fill in the code here\n        return true", "        var sorted = true\n\
    \        var prev = -1l\n        for (i <- lst) {\n            if (i <= prev)\
    \ {\n                sorted = false\n            }\n            prev = i\n   \
    \     }\n        return sorted", "        var sorted = true\n        var prev\
    \ = Long.MinValue\n        for (i <- lst) {\n            if (i <= prev) {\n  \
    \              sorted = false\n            }\n            prev = i\n        }\n\
    \        return sorted", "        var sorted = true\n        var i = 0\n     \
    \   while (i < lst.length - 1) {\n            if (lst(i) >= lst(i + 1)) {\n  \
    \              sorted = false\n            }\n            i += 1\n        }\n\
    \        return sorted", "        // Fill in the code here\n        var sorted\
    \ = true\n        var prev = lst(0)\n        for (i <- 1 until lst.length) {\n\
    \            if (lst(i) < prev) {\n                sorted = false\n          \
    \  }\n            prev = lst(i)\n        }\n        sorted", "        // Fill\
    \ in the code here\n        return false", "        val lst2 = lst.sorted\n  \
    \      val lst3 = lst2.distinct\n        lst == lst3", "        var sorted = true\n\
    \        var prev = -1L\n        for (i <- lst) {\n            if (i == prev)\
    \ {\n                sorted = false\n            }\n            else if (i < prev)\
    \ {\n                sorted = false\n            }\n            prev = i\n   \
    \     }\n        return sorted"]
stop_tokens:
- "\n    }\n"

name: HumanEval_71_triangle_area
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given the lengths of the three sides of a triangle. Return the area of\n\
  \    // the triangle rounded to 2 decimal points if the three sides form a valid\
  \ triangle. \n    // Otherwise return -1\n    // Three sides make a valid triangle\
  \ when the sum of any two sides is greater \n    // than the third side.\n    //\
  \ Example:\n    // >>> triangleArea((3l), (4l), (5l))\n    // (6.0f)\n    // >>>\
  \ triangleArea((1l), (2l), (10l))\n    // -1l\n    def triangleArea(a : Long, b\
  \ : Long, c : Long) : Float = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(triangleArea((3l),\
  \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == -1l);\n\
  \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
  \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == -1l);\n\
  \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
  \ (6l), (3l)) == -1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
  \    assert(triangleArea((2l), (2l), (10l)) == -1l);\n    }\n\n}\n"
completions: ["        // Fill Up this function body\n        // `a`, `b`, `c` are\
    \ the side lengths of the triangle\n        if (a + b > c && a + c > b && b +\
    \ c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a)\
    \ * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your code here\n\
    \        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a +\
    \ b + c) / 2.0f\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n \
    \       } else -1.0f", "        // Fill Up this function body\n        // `a`,\
    \ `b`, `c` are the side lengths of the triangle\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ code here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Fill Up this function body\n        // `a`, `b`,\
    \ `c` are the side lengths of the triangle\n        if (a + b > c && a + c > b\
    \ && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s *\
    \ (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Fill Up\
    \ this function body\n        // `a`, `b`, `c` are the side lengths of the triangle\n\
    \        // `a`, `b`, `c` are all positive integers\n        // `a`, `b`, `c`\
    \ are all less than or equal to 100\n        // `a`, `b`, `c` are all greater\
    \ than 0\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        if (a + b > c && a + c > b && b + c > a) {\n   \
    \         val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) *\
    \ (s - c)).toFloat\n        } else -1", "        // Your code here\n        if\
    \ (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n\
    \            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1",
  "        // Fill Up this function body\n        // `a`, `b`, `c` are the side lengths\
    \ of the triangle\n        // return the area of the triangle rounded to 2 decimal\
    \ points\n        val s = (a + b + c) / 2.0\n        val area = sqrt(s * (s -\
    \ a) * (s - b) * (s - c))\n        if (area > 0) area.toFloat else -1", "    \
    \    // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n \
    \           val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        val s = (a + b + c) / 2.0\n\
    \        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area >\
    \ 0) area.toFloat else -1", "        // Your code here\n        if (a + b > c\
    \ && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n      \
    \      sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "  \
    \      // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Your Code Here\n       \
    \ if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else -1", "        // Your code here\n        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your code\
    \ here\n        if (a + b > c && a + c > b && b + c > a) {\n            val s\
    \ = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your Code Here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ code here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1.0f", "        // Your code here\n        if (a + b > c && a\
    \ + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n           \
    \ sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "       \
    \ // Fill Up this function body\n        // `a`, `b`, `c` are the side lengths\
    \ of the triangle\n        // return the area of the triangle rounded to 2 decimal\
    \ points\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Fill Up this function body\n        // `0.0f`\
    \ is just a placeholder for compilation\n        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        } else -1.0f", "        // Your code\
    \ here\n        val s = (a + b + c) / 2.0\n        val area = sqrt(s * (s - a)\
    \ * (s - b) * (s - c))\n        if (area > 0) area.toFloat else -1", "       \
    \ // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s\
    \ - c)).toFloat\n        } else -1", "        // Your code here\n        -1f",
  "        // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Your code here\n       \
    \ if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else -1", "        // Your code here\n        return -1f", "        // Your\
    \ code here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Fill Up this function body\n        // `a`, `b`,\
    \ `c` are the side lengths of the triangle\n        if (a + b > c && a + c > b\
    \ && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s *\
    \ (s - a) * (s - b) * (s - c)).toFloat\n        } else -1.0f", "        // Fill\
    \ Up this function body\n        // `a`, `b`, `c` are the side lengths of the\
    \ triangle\n        // Do not change the function signature\n        if (a + b\
    \ > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n  \
    \          sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1",
  "        // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Your code here\n       \
    \ if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else -1", "        // Your code here\n        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Fill Up this\
    \ function body\n        // `a`, `b`, `c` are the side lengths of the triangle\n\
    \        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a +\
    \ b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n  \
    \      } else -1", "        // Your code here\n        if (a + b > c && a + c\
    \ > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else {\n            -1\n \
    \       }", "        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else {\n            -1\n \
    \       }", "        // Your code here\n        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            val s = (a + b + c) / 2.0f\n            sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        } else -1.0f", "        // Fill Up\
    \ this function body\n        // `0.0f` is just a placeholder for compilation\n\
    \        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a +\
    \ b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n  \
    \      } else -1.0f", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ code here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        val s = (a + b + c) /\
    \ 2.0\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area\
    \ > 0) area.toFloat else -1", "        // Your code here\n        if (a + b >\
    \ c && a + c > b && b + c > a)\n            (a * b * c).toFloat / (4 * sqrt(a\
    \ * a + b * b + c * c - a * b - a * c - b * c).toFloat)\n        else -1", " \
    \       // Fill Up this function body\n        // `a`, `b`, `c` are the lengths\
    \ of the sides of the triangle\n        // Do not change the function definition\
    \ provided.\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Fill\
    \ Up this function body\n        // `a`, `b`, `c` are the side lengths of the\
    \ triangle\n        // Do not change the function signature\n        if (a + b\
    \ > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n  \
    \          sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1",
  "        // Your Code Here\n        return -1f", "        if (a + b > c && a + c\
    \ > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ code here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        if (a + b > c && a + c > b && b + c > a) {\n   \
    \         val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) *\
    \ (s - c)).toFloat\n        } else -1", "        // Your code here\n        if\
    \ (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n\
    \            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else {\n\
    \            -1.0f\n        }", "        // Fill Up this function body\n     \
    \   // `a`, `b`, `c` are the side lengths of the triangle\n        // return the\
    \ area of the triangle rounded to 2 decimal points\n        // if the three sides\
    \ form a valid triangle. Otherwise return -1\n        val s = (a + b + c) / 2.0\n\
    \        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area >\
    \ 0) area.toFloat else -1", "        // Your code here\n        if (a + b > c\
    \ && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n      \
    \      sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "  \
    \      // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Fill Up this function body\n\
    \        // `a`, `b`, `c` are the lengths of the sides of the triangle\n     \
    \   // `a`, `b`, `c` are greater than 0\n        // `a`, `b`, `c` are less than\
    \ or equal to 100\n        // `a`, `b`, `c` are integers\n        if (a + b >\
    \ c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n    \
    \        sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", " \
    \       // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Your code here\n       \
    \ if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else -1", "        // Your code here\n        val s = (a + b + c) / 2.0\n  \
    \      val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area > 0)\
    \ area.toFloat else -1", "        // Your code here\n        if (a + b > c &&\
    \ a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n         \
    \   sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "     \
    \   // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n  \
    \          val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) *\
    \ (s - c)).toFloat\n        } else -1", "        // Fill Up this function body\n\
    \        // `a`, `b`, `c` are the lengths of the three sides of a triangle\n \
    \       // return the area of the triangle rounded to 2 decimal points if the\
    \ three sides form a valid triangle. \n        // Otherwise return -1\n      \
    \  if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            val area = sqrt(s * (s - a) * (s - b) * (s - c))\n      \
    \      return area.toFloat\n        }\n        return -1", "        // Fill Up\
    \ this function body\n        // `a`, `b`, `c` are the sides of the triangle\n\
    \        val s = (a + b + c) / 2.0\n        val area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c))\n        if (area > 0) area.toFloat else -1", "        // Your\
    \ code here\n        val s = (a + b + c) / 2.0\n        val area = sqrt(s * (s\
    \ - a) * (s - b) * (s - c))\n        if (area > 0) area.toFloat else -1", "  \
    \      // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val p = (a + b + c) / 2.0\n            sqrt(p * (p - a) * (p - b)\
    \ * (p - c)).toFloat\n        } else -1", "        // Fill Up this function body\n\
    \        // `a`, `b`, `c` are the lengths of the sides of the triangle\n     \
    \   if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else -1", "        // Your code here\n        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your Code\
    \ Here\n        0.0f", "        // Fill Up this function body\n        // `a`,\
    \ `b`, `c` are the sides of the triangle\n        // Do not change the function\
    \ definition provided.\n        if (a + b > c && a + c > b && b + c > a) {\n \
    \           val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Your Code Here\n       \
    \ if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else -1", "        // Fill Up this function body\n        // `a`, `b`, `c` are\
    \ the side lengths of the triangle\n        if (a + b > c && a + c > b && b +\
    \ c > a) {\n            val s = (a + b + c).toFloat / 2\n            sqrt(s *\
    \ (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your code\
    \ here\n        if (a + b > c && a + c > b && b + c > a) {\n            val s\
    \ = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Fill Up this function body\n        // `a` `b`\
    \ `c` are the sides of the triangle\n        if (a + b > c && a + c > b && b +\
    \ c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a)\
    \ * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your code here\n\
    \        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a +\
    \ b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n  \
    \      } else -1", "        // Fill Up this function body\n        // `0.0f` is\
    \ just a placeholder for compilation\n        if (a + b > c && a + c > b && b\
    \ + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s -\
    \ a) * (s - b) * (s - c)).toFloat\n        } else -1.0f", "        // Your code\
    \ here\n        if (a + b > c && a + c > b && b + c > a) {\n            val s\
    \ = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Fill Up this function body\n        // `a`, `b`,\
    \ `c` are the side lengths of the triangle\n        // return the area of the\
    \ triangle rounded to 2 decimal points\n        // if the three sides form a valid\
    \ triangle. Otherwise return -1\n        if (a + b > c && a + c > b && b + c >\
    \ a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) *\
    \ (s - b) * (s - c)).toFloat\n        } else -1", "        // Your code here\n\
    \        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a +\
    \ b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n  \
    \      } else -1", "        // Your code here\n        val s = (a + b + c) / 2.0\n\
    \        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area >\
    \ 0) area.toFloat else -1", "        // Fill Up this function body\n        //\
    \ `a`, `b`, `c` are the lengths of the sides of the triangle\n        if (a +\
    \ b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n\
    \            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1",
  "        // Fill Up this function body\n        // `a`, `b`, `c` are the side lengths\
    \ of the triangle\n        if (a + b > c && a + c > b && b + c > a) {\n      \
    \      val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s\
    \ - c)).toFloat\n        } else -1.0f", "        // Your code here\n        val\
    \ s = (a + b + c) / 2.0\n        val area = sqrt(s * (s - a) * (s - b) * (s -\
    \ c))\n        if (area > 0) area.toFloat else -1", "        // Fill Up this function\
    \ body\n        // `a`, `b`, `c` are the side lengths of the triangle\n      \
    \  if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else -1.0f", "        // Your Code Here\n        if (a + b > c && a + c > b\
    \ && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s *\
    \ (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your code\
    \ here\n        if (a + b > c && a + c > b && b + c > a) {\n            val s\
    \ = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Fill Up this function body\n        // `0.0f`\
    \ is just a placeholder for compilation\n        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        } else -1.0f", "        // Fill Up\
    \ this function body\n        // `a`, `b`, `c` are the side lengths of the triangle\n\
    \        // return the area of the triangle rounded to 2 decimal points\n    \
    \    // if the three sides form a valid triangle. Otherwise return -1\n      \
    \  val s = (a + b + c) / 2.0\n        if (s - a < 0 || s - b < 0 || s - c < 0)\
    \ -1\n        else sqrt(s * (s - a) * (s - b) * (s - c)).toFloat", "        if\
    \ (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n\
    \            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1",
  "        val s = (a + b + c) / 2.0\n        val area = sqrt(s * (s - a) * (s - b)\
    \ * (s - c))\n        if (area > 0) area.toFloat else -1", "        if (a + b\
    \ > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n  \
    \          sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1",
  "        // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Your code here\n       \
    \ if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else -1", "        // Your code here\n        return -1f", "        // Fill\
    \ Up this function body\n        // `0.0f` is just a dummy value, you can change\
    \ it.\n        if (a + b > c && a + c > b && b + c > a) {\n            val s =\
    \ (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1.0f", "        // Fill Up this function body\n        // `a`,\
    \ `b`, `c` are the side lengths of the triangle\n        // return the area of\
    \ the triangle rounded to 2 decimal points\n        // if the three sides form\
    \ a valid triangle. Otherwise return -1\n        val s = (a + b + c) / 2.0\n \
    \       val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area > 0)\
    \ area.toFloat else -1", "        // Fill Up this function body\n        // `a`,\
    \ `b`, `c` are the side lengths of the triangle\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1.0f", "        // Fill\
    \ Up this function body\n        // `0.0f` is just a dummy value, you can change\
    \ it.\n        if (a + b > c && a + c > b && b + c > a) {\n            val s =\
    \ (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1.0f", "        // Your Code Here\n        val s = (a + b + c)\
    \ / 2.0\n        if (s - a <= 0 || s - b <= 0 || s - c <= 0) -1\n        else\
    \ sqrt(s * (s - a) * (s - b) * (s - c)).toFloat", "        // Fill Up this function\
    \ body\n        // `a`, `b`, `c` are the sides of the triangle\n        // return\
    \ the area of the triangle rounded to 2 decimal points\n        // if the three\
    \ sides form a valid triangle. Otherwise return -1\n        val s = (a + b + c)\
    \ / 2.0\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if\
    \ (area > 0) area.toFloat else -1", "        // Your Code Here\n        if (a\
    \ + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n\
    \            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1",
  "        // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Your code here\n       \
    \ if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else -1", "        // Fill Up this function body\n        // `a`, `b`, `c` are\
    \ the side lengths of the triangle\n        // return the area of the triangle\
    \ rounded to 2 decimal points\n        // if the three sides form a valid triangle.\
    \ Otherwise return -1\n        val s = (a + b + c) / 2.0\n        val area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\n        if (area == 0) -1\n        else area.toFloat",
  "        // Fill Up this function body\n        // `a`, `b`, `c` are the side lengths\
    \ of the triangle\n        // `a + b > c` and `a + c > b` and `b + c > a`\n  \
    \      if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b\
    \ + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n    \
    \    } else -1", "        val s = (a + b + c) / 2.0\n        if (s - a <= 0 ||\
    \ s - b <= 0 || s - c <= 0) -1 else sqrt(s * (s - a) * (s - b) * (s - c)).toFloat",
  "        // Fill Up this function body\n        // `a`, `b`, `c` are the side lengths\
    \ of the triangle\n        // Do not change the function definition\n        val\
    \ s = (a + b + c) / 2.0\n        val area = sqrt(s * (s - a) * (s - b) * (s -\
    \ c))\n        if (area > 0) area.toFloat else -1", "        // Fill Up this function\
    \ body\n        // `a`, `b`, `c` are the side lengths of the triangle\n      \
    \  val s = (a + b + c) / 2.0\n        val area = sqrt(s * (s - a) * (s - b) *\
    \ (s - c))\n        if (area > 0) area.toFloat else -1", "        // Fill Up this\
    \ function body\n        // `a`, `b`, `c` are the side lengths of the triangle\n\
    \        // return the area of the triangle rounded to 2 decimal points\n    \
    \    // if the three sides form a valid triangle. Otherwise return -1\n      \
    \  val s = (a + b + c) / 2.0\n        if (s <= a || s <= b || s <= c) -1\n   \
    \     else sqrt(s * (s - a) * (s - b) * (s - c)).toFloat", "        // Your code\
    \ here\n        if (a + b > c && a + c > b && b + c > a) {\n            val s\
    \ = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Fill Up this function body\n        // `a`, `b`,\
    \ `c` are the side lengths of the triangle\n        // return the area of the\
    \ triangle rounded to 2 decimal points\n        // if the three sides form a valid\
    \ triangle.\n        // Otherwise return -1\n        val s = (a + b + c) / 2.0\n\
    \        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area >\
    \ 0) area.toFloat else -1", "        if (a + b > c && a + c > b && b + c > a)\
    \ {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s\
    \ - b) * (s - c)).toFloat\n        } else -1", "        // Fill Up this function\
    \ body\n        // `0.0f` is just a placeholder for compilation\n        if (a\
    \ + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n\
    \            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1.0f",
  "        // Your code here\n        -1", "        // Your code here\n        if\
    \ (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n\
    \            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1",
  "        // Fill Up this function body\n        // `a`, `b`, `c` are the lengths\
    \ of the sides of the triangle\n        // return the area of the triangle rounded\
    \ to 2 decimal points\n        // if the three sides form a valid triangle. Otherwise\
    \ return -1\n        val s = (a + b + c) / 2.0\n        val area = sqrt(s * (s\
    \ - a) * (s - b) * (s - c))\n        if (area > 0) area.toFloat else -1", "  \
    \      // Fill Up this function body\n        // `a`, `b`, `c` are the side lengths\
    \ of the triangle\n        // return the area of the triangle rounded to 2 decimal\
    \ points\n        // if the three sides form a valid triangle.\n        // Otherwise\
    \ return -1\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ code here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code goes here\n        if (a + b > c &&\
    \ a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n         \
    \   sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "     \
    \   // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n  \
    \          val s = (a + b + c) / 2.0f\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else {\n            -1.0f\n        }", "     \
    \   // Fill Up this function body\n        // `a`, `b`, `c` are the side lengths\
    \ of the triangle\n        if (a + b > c && a + c > b && b + c > a) {\n      \
    \      val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s\
    \ - c)).toFloat\n        } else -1", "        // Your code here\n        if (a\
    \ + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n\
    \            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1",
  "        // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else {\n            -1\n        }", "        //\
    \ Your code here\n        val s = (a + b + c) / 2.0\n        val area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\n        if (area > 0) area.toFloat else -1",
  "        // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Fill Up this function body\n\
    \        // `0.0f` is just a placeholder for compilation\n        if (a + b >\
    \ c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n    \
    \        sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1.0f",
  "        // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Your code here\n       \
    \ if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else -1", "        // Your code goes here\n        if (a + b > c && a + c >\
    \ b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ code here\n        0.0f", "        if (a + b > c && a + c > b && b + c > a)\
    \ {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s\
    \ - b) * (s - c)).toFloat\n        } else -1", "        // Your code here\n  \
    \      if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b\
    \ + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n    \
    \    } else -1", "        // Your code here\n        if (a + b > c && a + c >\
    \ b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Fill\
    \ Up this function body\n        // `a`, `b`, `c` are the sides of the triangle\n\
    \        // Do not change the function definition\n        if (a + b > c && a\
    \ + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n           \
    \ sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "       \
    \ // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s\
    \ - c)).toFloat\n        } else -1", "        // Your code here\n        if (a\
    \ + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n\
    \            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1",
  "        // Your code here\n        -1.0f", "        // Your code here\n       \
    \ var s = (a + b + c) / 2.0\n        var area = sqrt(s * (s - a) * (s - b) * (s\
    \ - c))\n        if (area > 0) return area.toFloat\n        else return -1", " \
    \       // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Fill Up this function body\n\
    \        // `a`, `b`, `c` are the lengths of the sides of the triangle\n     \
    \   // `a`, `b`, `c` are positive integers\n        // `a`, `b`, `c` are less\
    \ than or equal to 100\n        // Return the area of the triangle rounded to\
    \ 2 decimal points\n        // If the three sides do not form a valid triangle,\
    \ return -1\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0f\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1.0f", "        // Fill\
    \ Up this function body\n        // `a` `b` `c` are the side lengths of the triangle\n\
    \        val s = (a + b + c) / 2.0\n        val area = sqrt(s * (s - a) * (s -\
    \ b) * (s - c))\n        if (area > 0) area.toFloat else -1", "        // Your\
    \ code here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1.0f", "        if (a + b > c && a + c > b && b + c > a)\n  \
    \          (a * b * sin(acos((a * a + b * b - c * c) / (2 * a * b))) / 2).toFloat\n\
    \        else -1", "        // Your code here\n        if (a + b > c && a + c\
    \ > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Fill\
    \ Up this function body\n        // `a`, `b`, `c` are the side lengths of the\
    \ triangle\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        val s = (a + b + c) /\
    \ 2.0\n        if (s - a <= 0 || s - b <= 0 || s - c <= 0) -1 else sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat", "        // Your code here\n        if (a\
    \ + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n\
    \            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1",
  "        // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Your code here\n       \
    \ if (a + b > c && a + c > b && b + c > a) {\n            val p = (a + b + c)\
    \ / 2.0\n            sqrt(p * (p - a) * (p - b) * (p - c)).toFloat\n        }\
    \ else -1", "        // Your code here\n        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        } else -1.0f", "        // Your code\
    \ here\n        0", "        // Your code here\n        if (a + b > c && a + c\
    \ > b && b + c > a)\n            return (a * b * sin(c)).toFloat\n        return\
    \ -1", "        // Your code here\n        if (a + b > c && a + c > b && b + c\
    \ > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a)\
    \ * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your code goes\
    \ here\n        if (a + b > c && a + c > b && b + c > a) {\n            val s\
    \ = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        if (a + b > c && a + c > b && b + c > a) {\n   \
    \         val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) *\
    \ (s - c)).toFloat\n        } else -1", "        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            val s = (a + b + c) / 2.0f\n            sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        } else -1.0f", "        // Your code\
    \ here\n        return -1f", "        // Fill Up this function body\n        //\
    \ `a`, `b`, `c` are the side lengths of the triangle\n        // `a + b > c`,\
    \ `a + c > b`, `b + c > a`\n        // `a + b > c`\n        if (a + b > c && a\
    \ + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n           \
    \ sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "       \
    \ // Fill Up this function body\n        // `a`, `b`, `c` are the side lengths\
    \ of the triangle\n        val s = (a + b + c) / 2.0\n        val area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\n        if (area > 0) area.toFloat else -1",
  "        // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        // Your code here\n       \
    \ if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else -1", "        // Your code here\n        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        } else -1.0f", "        // Your code\
    \ here\n        if (a + b > c && a + c > b && b + c > a) {\n            val s\
    \ = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else {\n            -1\n        }", "        // Your code here\n  \
    \      if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b\
    \ + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n    \
    \    } else -1", "        if (a + b > c && a + c > b && b + c > a) {\n       \
    \     val s = (a + b + c) / 2.0f\n            sqrt(s * (s - a) * (s - b) * (s\
    \ - c)).toFloat\n        } else -1.0f", "        // Fill Up this function body\n\
    \        // `a`, `b`, `c` are the side lengths of the triangle\n        if (a\
    \ + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n\
    \            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1",
  "        // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
    \            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b)\
    \ * (s - c)).toFloat\n        } else -1", "        val s = (a + b + c) / 2.0\n\
    \        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n        if (area >\
    \ 0) area.toFloat else -1", "        if (a + b > c && a + c > b && b + c > a)\
    \ {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s\
    \ - b) * (s - c)).toFloat\n        } else -1", "        // Your code here\n  \
    \      if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b\
    \ + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n    \
    \    } else {\n            -1\n        }", "        // Fill Up this function body\n\
    \        // `a`, `b`, `c` are the side lengths of the triangle\n        // return\
    \ the area of the triangle rounded to 2 decimal points\n        val s = (a + b\
    \ + c) / 2.0\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n     \
    \   if (area > 0) area.toFloat else -1", "        // Your code here\n        val\
    \ s = (a + b + c) / 2.0\n        val area = sqrt(s * (s - a) * (s - b) * (s -\
    \ c))\n        if (area > 0) area.toFloat else -1", "        // Your code here\n\
    \        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a +\
    \ b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n  \
    \      } else -1", "        // Fill Up this function body\n        // `a`, `b`,\
    \ `c` are the lengths of the sides of the triangle\n        // Do not change the\
    \ function signature\n        val s = (a + b + c) / 2.0\n        val area = sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\n        if (area > 0) area.toFloat else -1",
  "        if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b\
    \ + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n    \
    \    } else -1.0f", "        // Your code here\n        if (a + b > c && a + c\
    \ > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ code here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1f", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ Code Here\n        return -1f", "        if (a + b > c && a + c > b && b + c\
    \ > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s - a)\
    \ * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your code here\n\
    \        -1f", "        // Your code here\n        if (a + b > c && a + c > b\
    \ && b + c > a) {\n            val p = (a + b + c) / 2.0\n            sqrt(p *\
    \ (p - a) * (p - b) * (p - c)).toFloat\n        } else -1", "        // Your code\
    \ here\n        if (a + b > c && a + c > b && b + c > a) {\n            val s\
    \ = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Your code here\n        if (a + b > c && a +\
    \ c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s\
    \ * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your\
    \ Code Here\n        if (a + b > c && a + c > b && b + c > a) {\n            val\
    \ s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        // Fill Up this function body\n        // `a`, `b`,\
    \ `c` are the side lengths of the triangle\n        if (a + b > c && a + c > b\
    \ && b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s *\
    \ (s - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your code\
    \ here\n        return -1f", "        // Your code here\n        val s = (a +\
    \ b + c) / 2.0\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n   \
    \     if (area > 0) area.toFloat else -1", "        // Your code here\n      \
    \  if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b + c)\
    \ / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        }\
    \ else -1", "        // Your code here\n        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        } else {\n            -1\n      \
    \  }", "        if (a + b > c && a + c > b && b + c > a) {\n            val s\
    \ = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        if (a + b > c && a + c > b && b + c > a) {\n   \
    \         val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) *\
    \ (s - c)).toFloat\n        } else {\n            -1\n        }", "        //\
    \ Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n       \
    \     val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s -\
    \ c)).toFloat\n        } else -1", "        // Your code here\n        val s =\
    \ (a + b + c) / 2.0\n        val area = sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \        if (area > 0) area.toFloat else -1", "        // Your code here\n   \
    \     if (a + b > c && a + c > b && b + c > a) {\n            val s = (a + b +\
    \ c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n      \
    \  } else -1", "        if (a + b > c && a + c > b && b + c > a) {\n         \
    \   val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n\
    \        } else -1", "        if (a + b > c && a + c > b && b + c > a) {\n   \
    \         val s = (a + b + c) / 2.0\n            sqrt(s * (s - a) * (s - b) *\
    \ (s - c)).toFloat\n        } else -1", "        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            val s = (a + b + c) / 2.0\n            sqrt(s * (s\
    \ - a) * (s - b) * (s - c)).toFloat\n        } else -1", "        // Your Code\
    \ Here\n        return -1f", "        // Your Code Here\n        if (a + b > c\
    \ && a + c > b && b + c > a) {\n            val s = (a + b + c) / 2.0\n      \
    \      sqrt(s * (s - a) * (s - b) * (s - c)).toFloat\n        } else -1"]
stop_tokens:
- "\n    }\n"

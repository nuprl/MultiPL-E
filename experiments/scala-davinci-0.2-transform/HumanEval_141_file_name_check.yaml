name: HumanEval_141_file_name_check
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Create a function which takes a string representing a file's name, and returns\n\
  \    // 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n   \
  \ // A file's name is considered to be valid if and only if all the following conditions\
  \ \n    // are met:\n    // - There should not be more than three digits ('0'-'9')\
  \ in the file's name.\n    // - The file's name contains exactly one dot '.'\n \
  \   // - The substring before the dot should not be empty, and it starts with a\
  \ letter from \n    // the latin alphapet ('a'-'z' and 'A'-'Z').\n    // - The substring\
  \ after the dot should be one of these: ['txt', 'exe', 'dll']\n    // Examples:\n\
  \    // >>> fileNameCheck((\"example.txt\"))\n    // (\"Yes\")\n    // >>> fileNameCheck((\"\
  1example.dll\"))\n    // (\"No\")\n    def fileNameCheck(file_name : String) : String\
  \ = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(fileNameCheck((\"\
  example.txt\")).equals((\"Yes\")));\n    assert(fileNameCheck((\"1example.dll\"\
  )).equals((\"No\")));\n    assert(fileNameCheck((\"s1sdf3.asd\")).equals((\"No\"\
  )));\n    assert(fileNameCheck((\"K.dll\")).equals((\"Yes\")));\n    assert(fileNameCheck((\"\
  MY16FILE3.exe\")).equals((\"Yes\")));\n    assert(fileNameCheck((\"His12FILE94.exe\"\
  )).equals((\"No\")));\n    assert(fileNameCheck((\"_Y.txt\")).equals((\"No\")));\n\
  \    assert(fileNameCheck((\"?aREYA.exe\")).equals((\"No\")));\n    assert(fileNameCheck((\"\
  /this_is_valid.dll\")).equals((\"No\")));\n    assert(fileNameCheck((\"this_is_valid.wow\"\
  )).equals((\"No\")));\n    assert(fileNameCheck((\"this_is_valid.txt\")).equals((\"\
  Yes\")));\n    assert(fileNameCheck((\"this_is_valid.txtexe\")).equals((\"No\")));\n\
  \    assert(fileNameCheck((\"#this2_i4s_5valid.ten\")).equals((\"No\")));\n    assert(fileNameCheck((\"\
  @this1_is6_valid.exe\")).equals((\"No\")));\n    assert(fileNameCheck((\"this_is_12valid.6exe4.txt\"\
  )).equals((\"No\")));\n    assert(fileNameCheck((\"all.exe.txt\")).equals((\"No\"\
  )));\n    assert(fileNameCheck((\"I563_No.exe\")).equals((\"Yes\")));\n    assert(fileNameCheck((\"\
  Is3youfault.txt\")).equals((\"Yes\")));\n    assert(fileNameCheck((\"no_one#knows.dll\"\
  )).equals((\"Yes\")));\n    assert(fileNameCheck((\"1I563_Yes3.exe\")).equals((\"\
  No\")));\n    assert(fileNameCheck((\"I563_Yes3.txtt\")).equals((\"No\")));\n  \
  \  assert(fileNameCheck((\"final..txt\")).equals((\"No\")));\n    assert(fileNameCheck((\"\
  final132\")).equals((\"No\")));\n    assert(fileNameCheck((\"_f4indsartal132.\"\
  )).equals((\"No\")));\n    assert(fileNameCheck((\".txt\")).equals((\"No\")));\n\
  \    assert(fileNameCheck((\"s.\")).equals((\"No\")));\n    }\n\n}\n"
completions: ["        // Write your code here\n        return \"Yes\"", "       \
    \ // Write your code here\n        return \"\"", "        // Write your code here\n\
    \        return \"Yes\"", "        // Write your code here\n        return \"\"\
    ;", "        // Write your code here\n        return \"\";", "        // Write\
    \ your code here\n        return \"\";", "        // Write your code here\n  \
    \      return \"\"", "        // Write your code here\n        return \"Yes\"",
  "        // Write your code here\n        return \"\"", "        // Write your code\
    \ here\n        val dot = file_name.indexOf('.')\n        if (dot == -1) return\
    \ \"No\"\n        val pre = file_name.substring(0, dot)\n        val post = file_name.substring(dot\
    \ + 1)\n        if (pre.length == 0 || !pre(0).isLetter) return \"No\"\n     \
    \   if (pre.count(_.isDigit) > 3) return \"No\"\n        if (post != \"txt\" &&\
    \ post != \"exe\" && post != \"dll\") return \"No\"\n        \"Yes\"", "     \
    \   // Write your code here\n        return \"Yes\"", "        // Write your code\
    \ here\n        return \"Yes\"", "        // Write your code here\n        return\
    \ \"\"", "        // Write your code here\n        return \"\"", "        // Write\
    \ your code here\n        return \"Yes\"", "        // Write your code here\n\
    \        return \"\"", "        // Write your code here\n        return \"Yes\"",
  "        // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\"", "        // Write your code here\n        return\
    \ \"\"", "        // Write your code here\n        return \"\"", "        // Write\
    \ your code here\n        return \"\"", "        // Write your code here\n   \
    \     return \"Yes\"", "        // Write your code here\n        return \"Yes\"",
  "        // Write your code here\n        return \"\"", "        // Write your code\
    \ here\n        return \"\"", "        // Write your code here\n        return\
    \ \"\"", "        // Write your code here\n        return \"\";", "        //\
    \ Write your code here\n        return \"\";", "        // Write your code here\n\
    \        return \"\"", "        // Write your code here\n        val pattern =\
    \ \"\"\"([a-zA-Z]+)(\\d{0,3})\\.(txt|exe|dll)\"\"\".r\n        file_name match\
    \ {\n            case pattern(_, _, _) => \"Yes\"\n            case _ => \"No\"\
    \n        }", "        // Write your code here\n        return \"\"", "      \
    \  // Write your code here\n        return \"Yes\"", "        // Write your code\
    \ here\n        return \"\"", "        // Write your code here\n        return\
    \ \"\";", "        // Write your code here\n        return \"No\"", "        //\
    \ Write your code here\n        return \"\"", "        // Write your code here.\n\
    \        return \"\";", "        // Write your code here\n        return \"\";",
  "        // Write your code here\n        return \"No\"", "        // Write your\
    \ code here\n        return \"\"", "        // Write your code here\n        return\
    \ \"\"", "        // Write your code here\n        return \"\"", "        // Write\
    \ your code here\n        return \"\"", "        // Write your code here\n   \
    \     return \"Yes\"", "        // Write your code here\n        return \"\"",
  "        // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\"", "        // Write your code here\n        return\
    \ \"\"", "        // Write your code here\n        return \"\"", "        // Write\
    \ your code here\n        return \"\"", "        // Write your code here\n   \
    \     return \"Yes\"", "        // Write your code here\n        return \"\"",
  "        // Write your code here\n        return \"\"", "        // Write your code\
    \ here\n        return \"\"", "        // Write your code here\n        return\
    \ \"\"", "        // Write your code here\n        return \"\"", "        // Write\
    \ your code here\n        return \"\"", "        // Write your code here\n   \
    \     return \"\"", "        // Write your code here\n        return \"\"", " \
    \       // Write your code here\n        return \"No\"", "        // Write your\
    \ code here\n        return \"\"", "        // Write your code here\n        return\
    \ \"Yes\"", "        // Write your code here\n        return \"\"", "        //\
    \ Write your code here\n        return \"\"", "        // Write your code here\n\
    \        return \"\"", "        // Write your code here\n        return \"No\"",
  "        // Write your code here\n        return \"\"", "        // Write your code\
    \ here\n        return \"\"", "        // Write your code here\n        return\
    \ \"Yes\"", "        // Write your code here\n        return \"\"", "        //\
    \ Write your code here\n        return \"\";", "        // Write your code here\n\
    \        return \"Yes\"", "        // Write your code here\n        return \"\"\
    ;", "        // Write your code here\n        return \"\"", "        // Write\
    \ your code here\n        return \"\"", "        // Write your code here\n   \
    \     return \"\";", "        // Write your code here\n        return \"Yes\"",
  "        // Write your code here\n        return \"\"", "        // Write your code\
    \ here\n        return \"\"", "        // Write your code here\n        return\
    \ \"\";", "        // Write your code here\n        return \"\"", "        //\
    \ Write your code here\n        return \"\"", "        // Write your code here\n\
    \        return \"\"", "        val pattern = \"\"\"([a-zA-Z]+)(\\d{0,3})\\.(txt|exe|dll)\"\
    \"\".r\n        file_name match {\n            case pattern(_, _, _) => \"Yes\"\
    \n            case _ => \"No\"\n        }", "        // Write your code here\n\
    \        return \"\"", "        // Write your code here\n        if (file_name.count(_.isDigit)\
    \ > 3) return \"No\"\n        val dot_index = file_name.indexOf('.')\n       \
    \ if (dot_index == -1) return \"No\"\n        if (dot_index == 0) return \"No\"\
    \n        if (!file_name(dot_index - 1).isLetter) return \"No\"\n        if (file_name.substring(dot_index\
    \ + 1) != \"txt\" && file_name.substring(dot_index + 1) != \"exe\" && file_name.substring(dot_index\
    \ + 1) != \"dll\") return \"No\"\n        \"Yes\"", "        // Write your code\
    \ here\n        return \"\"", "        // Write your code here\n        var result\
    \ = \"Yes\"\n        var dot_count = 0\n        var digit_count = 0\n        var\
    \ extension = \"\"\n        for (i <- 0 until file_name.length) {\n          \
    \  if (file_name(i) == '.') {\n                dot_count += 1\n              \
    \  extension = file_name.substring(i + 1)\n            }\n            if (file_name(i)\
    \ >= '0' && file_name(i) <= '9') digit_count += 1\n        }\n        if (dot_count\
    \ != 1 || digit_count > 3 || file_name(0) < 'A' || (file_name(0) > 'Z' && file_name(0)\
    \ < 'a') || file_name(0) > 'z' || extension != \"txt\" && extension != \"exe\"\
    \ && extension != \"dll\") result = \"No\"\n        result", "        // Write\
    \ your code here\n        return \"Yes\"", "        // Write your code here\n\
    \        return \"\"", "        // Write your code here\n        return \"Yes\"",
  "        // Write your code here\n        return \"\"", "        // Write your code\
    \ here\n        return \"Yes\"", "        // Write your code here\n        return\
    \ \"\";", "        // Write your code here\n        return \"\";", "        //\
    \ Write your code here\n        return \"\"", "        // Write your code here\n\
    \        return \"Yes\"", "        // Write your code here\n        return \"\"",
  "        // Write your code here\n        return \"Yes\"", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"Yes\"", "        // Write your code here\n        return \"\"", " \
    \       // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        val pattern = \"([a-zA-Z]{1}[a-zA-Z0-9]*)(\\\\.[a-zA-Z]{3})\"\
    .r\n        val pattern(name, ext) = file_name\n        if (name.length > 3) return\
    \ \"No\"\n        if (ext != \".txt\" && ext != \".exe\" && ext != \".dll\") return\
    \ \"No\"\n        return \"Yes\"", "        // Write your code here\n        return\
    \ \"Yes\"", "        // Write your code here\n        return \"Yes\"", "     \
    \   // Write your code here\n        return \"Yes\"", "        // Write your code\
    \ here\n        return \"\"", "        // Write your code here\n        return\
    \ \"No\"", "        // Write your code here\n        return \"Yes\"", "      \
    \  // Write your code here\n        return \"\"", "        // Write your code\
    \ here\n        return \"\";", "        // Write your code here\n        return\
    \ \"\"", "        // Write your code here\n        return \"\"", "        // Write\
    \ your code here\n        return \"Yes\"", "        // Write your code here\n\
    \        return \"Yes\"", "        val pattern = \"^[a-zA-Z][a-zA-Z0-9]{0,3}\\\
    \\.(txt|exe|dll)$\".r\n        file_name match {\n            case pattern(_*)\
    \ => \"Yes\"\n            case _ => \"No\"\n        }", "        // Write your\
    \ code here\n        return \"\"", "        // Write your code here\n        return\
    \ \"\"", "        // Write your code here\n        return \"\"", "        val\
    \ pattern = \"[a-zA-Z][a-zA-Z0-9]*\\\\.[a-zA-Z]{3}\".r\n        val result = pattern.findFirstIn(file_name)\n\
    \        if (result.isEmpty) {\n            \"No\"\n        } else {\n       \
    \     \"Yes\"\n        }", "        // Write your code here\n        return \"\
    \";", "        // Write your code here\n        return \"Yes\"", "        // Write\
    \ your code here\n        return \"\"", "        // Write your code here\n   \
    \     val file_name_list = file_name.split(\"\\\\.\")\n        if (file_name_list.length\
    \ != 2) {\n            return \"No\"\n        }\n        val file_name_list_0\
    \ = file_name_list(0)\n        val file_name_list_1 = file_name_list(1)\n    \
    \    if (file_name_list_0.length == 0 || file_name_list_1.length == 0) {\n   \
    \         return \"No\"\n        }\n        val file_name_list_0_list = file_name_list_0.split(\"\
    \")\n        val file_name_list_1_list = file_name_list_1.split(\"\")\n      \
    \  var count = 0\n        for (i <- 0 until file_name_list_0_list.length) {\n\
    \            if (file_name_list_0_list(i) >= \"0\" && file_name_list_0_list(i)\
    \ <= \"9\") {\n                count += 1\n            }\n        }\n        if\
    \ (count > 3) {\n            return \"No\"\n        }\n        if (file_name_list_0_list(0)\
    \ < \"A\" || file_name_list_0_list(0) > \"z\" || (file_name_list_0_list(0) > \"\
    Z\" && file_name_list_0_list(0) < \"a\")) {\n            return \"No\"\n     \
    \   }\n        if (file_name_list_1_list(0) != \"t\" || file_name_list_1_list(1)\
    \ != \"x\" || file_name_list_1_list(2) != \"t\") {\n            if (file_name_list_1_list(0)\
    \ != \"e\" || file_name_list_1_list(1) != \"x\" || file_name_list_1_list(2) !=\
    \ \"e\") {\n                if (file_name_list_1_list(0) != \"d\" || file_name_list_1_list(1)\
    \ != \"l\" || file_name_list_1_list(2) != \"l\")", "        // Write your code\
    \ here\n        return \"No\"", "        // Write your code here\n        return\
    \ \"\";", "        // Write your code here\n        return \"No\"", "        //\
    \ Write your code here\n        return \"\"", "        // Write your code here\n\
    \        return \"Yes\"", "        // Write your code here\n        return \"\"",
  "        // Write your code here\n        return \"\";", "        val pattern =\
    \ \"\"\"([a-zA-Z]{1}[a-zA-Z0-9]*)\\.(txt|exe|dll)\"\"\".r\n        file_name match\
    \ {\n            case pattern(_, _) => \"Yes\"\n            case _ => \"No\"\n\
    \        }", "        // Write your code here\n        return \"\"", "       \
    \ // Write your code here\n        return \"\"", "        // Write your code here\n\
    \        return \"Yes\"", "        val pattern = \"^[a-zA-Z][a-zA-Z0-9]{0,3}\\\
    \\.(txt|exe|dll)$\".r\n        file_name match {\n            case pattern(_*)\
    \ => \"Yes\"\n            case _ => \"No\"\n        }", "        // Write your\
    \ code here\n        return \"\"", "        // Write your code here\n        return\
    \ \"\";", "        // Write your code here\n        return \"\"", "        //\
    \ Write your code here\n        return \"\"", "        // Write your code here\n\
    \        return \"\";", "        val pattern = \"[a-zA-Z]+[0-9]{0,3}\\\\.[txt|exe|dll]\"\
    .r\n        val result = pattern.findFirstIn(file_name)\n        if (result ==\
    \ None) \"No\" else \"Yes\"", "        // Write your code here\n        return\
    \ \"\"", "        // Write your code here\n        return \"\"", "        // Write\
    \ your code here\n        return \"\";", "        // Write your code here\n  \
    \      return \"\"", "        // Write your code here\n        return \"Yes\"",
  "        // Write your code here\n        return \"\"", "        // Write your code\
    \ here\n        return \"Yes\"", "        // Write your code here\n        return\
    \ \"\"", "        // Write your code here\n        return \"\";", "        //\
    \ Write your code here\n        return \"\";", "        // Write your code here\n\
    \        return \"\"", "        // Write your code here\n        return \"No\"",
  "        // Write your code here\n        return \"\"", "        // Write your code\
    \ here\n        return \"Yes\"", "        // Write your code here\n        return\
    \ \"Yes\"", "        // Write your code here\n        return \"No\"", "      \
    \  // Write your code here\n        return \"\"", "        // Write your code\
    \ here\n        return \"\";", "        // Write your code here\n        return\
    \ \"\"", "        // Write your code here\n        return \"Yes\"", "        //\
    \ Write your code here\n        return \"\";", "        // Write your code here\n\
    \        return \"\"", "        // Write your code here\n        return \"No\"",
  "        // Write your code here\n        return \"Yes\"", "        // Write your\
    \ code here\n        return \"\"", "        // Write your code here\n        return\
    \ \"\"", "        val file_name_split = file_name.split(\"\\\\.\")\n        if\
    \ (file_name_split.length != 2) return \"No\"\n        val file_name_split_0 =\
    \ file_name_split(0)\n        val file_name_split_1 = file_name_split(1)\n   \
    \     if (file_name_split_0.length == 0) return \"No\"\n        if (file_name_split_0.count(c\
    \ => c.isDigit) > 3) return \"No\"\n        if (file_name_split_0(0).isDigit)\
    \ return \"No\"\n        if (file_name_split_1 != \"txt\" && file_name_split_1\
    \ != \"exe\" && file_name_split_1 != \"dll\") return \"No\"\n        \"Yes\"",
  "        // Write your code here\n        return \"\"", "        // Write your code\
    \ here\n        return \"Yes\"", "        // Write your code here\n        val\
    \ pattern = \"\"\"([a-zA-Z]*)([0-9]{0,3})\\.(txt|exe|dll)\"\"\".r\n        file_name\
    \ match {\n            case pattern(a, b, c) => \"Yes\"\n            case _ =>\
    \ \"No\"\n        }", "        // Write your code here\n        return \"Yes\"",
  "        // Write your code here\n        return \"Yes\"", "        // Write your\
    \ code here\n        val name = file_name.split(\"\\\\.\")\n        if (name.length\
    \ != 2) return \"No\"\n        if (name(0).length == 0) return \"No\"\n      \
    \  if (name(0).length > 3) return \"No\"\n        if (name(0).matches(\"[0-9]+\"\
    )) return \"No\"\n        if (name(1) != \"txt\" && name(1) != \"exe\" && name(1)\
    \ != \"dll\") return \"No\"\n        return \"Yes\"", "        val file_name_split\
    \ = file_name.split(\"\\\\.\")\n        val file_name_split_first = file_name_split(0)\n\
    \        val file_name_split_second = file_name_split(1)\n        if (file_name_split.length\
    \ != 2) {\n            return \"No\"\n        }\n        if (file_name_split_first.length\
    \ == 0) {\n            return \"No\"\n        }\n        if (file_name_split_first.length\
    \ > 3) {\n            return \"No\"\n        }\n        if (file_name_split_first.matches(\"\
    [0-9]+\")) {\n            return \"No\"\n        }\n        if (file_name_split_second\
    \ != \"txt\" && file_name_split_second != \"exe\" && file_name_split_second !=\
    \ \"dll\") {\n            return \"No\"\n        }\n        return \"Yes\"", " \
    \       // Write your code here\n        return \"Yes\"", "        // Write your\
    \ code here\n        return \"\"", "        // Write your code here\n        return\
    \ \"\"", "        // Write your code here\n        return \"\"", "        // Write\
    \ your code here\n        return \"\"", "        // Write your code here\n   \
    \     return \"\"", "        // Write your code here\n        return \"\"", " \
    \       // Write your code here\n        return \"\"", "        // Write your\
    \ code here\n        return \"Yes\"", "        // Write your code here\n     \
    \   return \"\"", "        // Write your code here\n        return \"\";", " \
    \       // Write your code here\n        return \"\"", "        // Write your\
    \ code here\n        return \"\"", "        // Write your code here\n        return\
    \ \"\";", "        // Write your code here\n        if (file_name.count(_.isDigit)\
    \ > 3) return \"No\"\n        val parts = file_name.split(\"\\\\.\")\n       \
    \ if (parts.length != 2) return \"No\"\n        if (parts(0).length == 0 || !parts(0)(0).isLetter)\
    \ return \"No\"\n        if (parts(1) != \"txt\" && parts(1) != \"exe\" && parts(1)\
    \ != \"dll\") return \"No\"\n        return \"Yes\"", "        // Write your code\
    \ here\n        return \"\"", "        // Write your code here.\n        return\
    \ \"\"", "        // Write your code here\n        return \"\"", "        // Write\
    \ your code here\n        return \"\"", "        // Write your code here\n   \
    \     return \"\"", "        // Write your code here\n        return \"No\"",
  "        // Write your code here\n        return \"\""]
stop_tokens:
- "\n    }\n"

name: HumanEval_51_remove_vowels
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // remove_vowels is a function that takes string and returns string without\
  \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
  abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\"\
  )\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
  zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\"\
  )).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
  bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
  \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
  acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\"\
  )));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
completions: ["        val vowels = \"aeiouAEIOU\"\n        text.filter(c => !vowels.contains(c))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        val vowels = \"\
    aeiouAEIOU\"\n        text.filter(c => !vowels.contains(c))", "        val vowels\
    \ = List('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(c\
    \ => !vowels.contains(c))", "        text.filter(c => !c.isLetter || !c.toLower.equals('a')\
    \ && !c.toLower.equals('e') && !c.toLower.equals('i') && !c.toLower.equals('o')\
    \ && !c.toLower.equals('u'))", "        val vowels = Set('a', 'e', 'i', 'o', 'u',\
    \ 'A', 'E', 'I', 'O', 'U')\n        text.filterNot(vowels.contains(_))", "   \
    \     var result = \"\"\n        for (c <- text) {\n            if (c != 'a' &&\
    \ c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result += c\n\
    \            }\n        }\n        return result", "        return text.filter(c\
    \ => !c.toLower.equals('a') && !c.toLower.equals('e') && !c.toLower.equals('i')\
    \ && !c.toLower.equals('o') && !c.toLower.equals('u'))", "        val vowels =\
    \ Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        var result = \"\"\n        for (c <- text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c\n            }\n        }\n        return result", "        text.filter(c\
    \ => !List('a', 'e', 'i', 'o', 'u').contains(c))", "        text.filter(c => c\
    \ != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E'\
    \ && c != 'I' && c != 'O' && c != 'U')", "        var result = \"\"\n        for\
    \ (c <- text) {\n            if (c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u') {\n                result += c\n            }\n        }\n    \
    \    return result", "        var result = \"\"\n        for (c <- text) {\n \
    \           if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n\
    \                result += c\n            }\n        }\n        return result",
  "        val vowels = Set('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n  \
    \      text.filter(!vowels.contains(_))", "        val vowels = Set('a', 'e',\
    \ 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(!vowels.contains(_))",
  "        text.filter(x => !List('a', 'e', 'i', 'o', 'u').contains(x))", '        text.filter(c
    => "aeiouAEIOU".indexOf(c) == -1)', "        val vowels = \"aeiouAEIOU\"\n   \
    \     text.filter(!vowels.contains(_))", "        val vowels = Set('a', 'e', 'i',\
    \ 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n        text.filter(c => !vowels.contains(c))"]
stop_tokens:
- "\n    }\n"

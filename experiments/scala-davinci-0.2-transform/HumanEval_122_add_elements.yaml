name: HumanEval_122_add_elements
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Given a non-empty array of integers arr and an integer k, return\n    //\
  \ the sum of the elements with at most two digits from the first k elements of arr.\n\
  \    // Example:\n    // >>> addElements((List[Long](111l.toLong, 21l.toLong, 3l.toLong,\
  \ 4000l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)), (4l))\n\
  \    // (24l)\n    // Constraints:\n    // 1. 1 <= len(arr) <= 100\n    // 2. 1\
  \ <= k <= len(arr)\n    def addElements(arr : List[Long], k : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(addElements((List[Long](1l.toLong,\
  \ -2l.toLong, -3l.toLong, 41l.toLong, 57l.toLong, 76l.toLong, 87l.toLong, 88l.toLong,\
  \ 99l.toLong)), (3l)) == (-4l));\n    assert(addElements((List[Long](111l.toLong,\
  \ 121l.toLong, 3l.toLong, 4000l.toLong, 5l.toLong, 6l.toLong)), (2l)) == (0l));\n\
  \    assert(addElements((List[Long](11l.toLong, 21l.toLong, 3l.toLong, 90l.toLong,\
  \ 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)), (4l)) == (125l));\n \
  \   assert(addElements((List[Long](111l.toLong, 21l.toLong, 3l.toLong, 4000l.toLong,\
  \ 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong)), (4l)) == (24l));\n  \
  \  assert(addElements((List[Long](1l.toLong)), (1l)) == (1l));\n    }\n\n}\n"
completions: ["        // Write your code here\n        var sum : Long = 0\n     \
    \   for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) {\n          \
    \      sum += arr(i)\n            }\n        }\n        return sum", "       \
    \ // Write your code here\n        return 0l", "        // Good luck!\n      \
    \  var sum : Long = 0l\n        for (i <- 0 until k.toInt) {\n            if (arr(i)\
    \ < 100) {\n                sum += arr(i)\n            }\n        }\n        return\
    \ sum", "        // Fill in the code here\n        return 0l", "        // Fill\
    \ this in.\n        var sum : Long = 0\n        for (i <- 0 until k.toInt) {\n\
    \            if (arr(i).toString.length <= 2) {\n                sum += arr(i)\n\
    \            }\n        }\n        return sum", "        var sum : Long = 0\n\
    \        for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) {\n     \
    \           sum += arr(i)\n            }\n        }\n        return sum", "  \
    \      // Implement this function\n        arr.take(k.toInt).filter(x => x < 100).sum",
  "        //\n        // Your code goes here.\n        //\n        var sum : Long\
    \ = 0\n        for (i <- 0 until k.toInt) {\n            if (arr(i) < 100) sum\
    \ += arr(i)\n        }\n        return sum", "        // Fill in the code here\n\
    \        var sum : Long = 0\n        for (i <- 0 until k.toInt) {\n          \
    \  if (arr(i).toString.length <= 2) {\n                sum += arr(i)\n       \
    \     }\n        }\n        return sum", "        // We can use a simple for loop\
    \ to iterate through the first k elements of arr.\n        // We can use a simple\
    \ if statement to check if the element is less than 100.\n        // If it is,\
    \ we can add it to the sum.\n        // If it is not, we can skip it.\n      \
    \  // We can return the sum.\n        var sum : Long = 0\n        for (i <- 0\
    \ until k.toInt) {\n            if (arr(i) < 100) {\n                sum += arr(i)\n\
    \            }\n        }\n        return sum", "        // Fill in the code here\n\
    \        return 0", "        var sum : Long = 0\n        for (i <- 0 until k.toInt)\
    \ {\n            if (arr(i) < 100) sum += arr(i)\n        }\n        return sum",
  "        // Write your code here\n        return 0l", "        // We can use a foldLeft\
    \ to iterate through the list and add the elements\n        // that are less than\
    \ 100 to the accumulator.\n        // We can use a foldLeft to iterate through\
    \ the list and add the elements\n        // that are less than 100 to the accumulator.\n\
    \        arr.foldLeft(0l)((acc, x) => if (x < 100) acc + x else acc)", "     \
    \   // Write your code here\n        var sum : Long = 0l\n        for (i <- 0\
    \ until k.toInt) {\n            if (arr(i) < 100) {\n                sum += arr(i)\n\
    \            }\n        }\n        return sum", "        // Implement this function\n\
    \        var sum : Long = 0\n        for (i <- 0 to k.toInt - 1) {\n         \
    \   if (arr(i) < 100) {\n                sum += arr(i)\n            }\n      \
    \  }\n        return sum", "        // We can use a for loop to iterate through\
    \ the list and add\n        // the elements to a sum variable.\n        // We\
    \ can use a counter variable to keep track of the number of\n        // elements\
    \ we have added to the sum.\n        // We can use a while loop to iterate through\
    \ the list and add\n        // the elements to a sum variable.\n        // We\
    \ can use a counter variable to keep track of the number of\n        // elements\
    \ we have added to the sum.\n        // We can use a while loop to iterate through\
    \ the list and add\n        // the elements to a sum variable.\n        // We\
    \ can use a counter variable to keep track of the number of\n        // elements\
    \ we have added to the sum.\n        var sum : Long = 0\n        var counter :\
    \ Long = 0\n        var i : Long = 0\n        while(i < arr.length) {\n      \
    \      if(arr(i.toInt).toString.length <= 2) {\n                sum += arr(i.toInt)\n\
    \                counter += 1\n            }\n            if(counter == k) {\n\
    \                return sum\n            }\n            i += 1\n        }\n  \
    \      return sum", "        // Write your code here\n        return 0l", "  \
    \      // Good luck!\n        var sum = 0l\n        for (i <- 0 until k.toInt)\
    \ {\n            if (arr(i) < 100) sum += arr(i)\n        }\n        sum", " \
    \       // Write your code here\n        var sum : Long = 0l\n        for (i <-\
    \ 0 until k.toInt) {\n            if (arr(i) < 100) {\n                sum +=\
    \ arr(i)\n            }\n        }\n        return sum"]
stop_tokens:
- "\n    }\n"

name: HumanEval_77_iscube
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Write a function that takes an integer a and returns True \n    // if this\
  \ ingeger is a cube of some integer number.\n    // Note: you may assume the input\
  \ is always valid.\n    // Examples:\n    // >>> iscube((1l))\n    // (true)\n \
  \   // >>> iscube((2l))\n    // (false)\n    // >>> iscube((-1l))\n    // (true)\n\
  \    // >>> iscube((64l))\n    // (true)\n    // >>> iscube((0l))\n    // (true)\n\
  \    // >>> iscube((180l))\n    // (false)\n    def iscube(a : Long) : Boolean =\
  \ {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(iscube((1l)) == (true));\n\
  \    assert(iscube((2l)) == (false));\n    assert(iscube((-1l)) == (true));\n  \
  \  assert(iscube((64l)) == (true));\n    assert(iscube((180l)) == (false));\n  \
  \  assert(iscube((1000l)) == (true));\n    assert(iscube((0l)) == (true));\n   \
  \ assert(iscube((1729l)) == (false));\n    }\n\n}\n"
completions: ["        val b = pow(a, 1.0 / 3.0)\n        b == b.toInt", "       \
    \ val b = pow(a, 1.0 / 3)\n        b == b.toInt", "        val b = round(pow(a,\
    \ 1.0 / 3.0))\n        return b * b * b == a", "        val b = round(pow(a, 1.0\
    \ / 3.0))\n        return b * b * b == a", "        val b = round(pow(a, 1.0 /\
    \ 3.0))\n        b * b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n\
    \        b * b * b == a", "        val b = a.abs\n        val c = round(pow(b,\
    \ 1.0 / 3.0))\n        c * c * c == b", "        val b = pow(a, 1.0 / 3)\n   \
    \     b == b.toInt", "        val b = round(pow(a, 1.0 / 3.0))\n        return\
    \ b * b * b == a", "        val b = pow(a, 1.0 / 3.0)\n        b == b.toInt",
  "        val b = pow(a, 1.0 / 3.0)\n        b == b.toInt", "        // Write your\
    \ code here\n        return false", "        val b = pow(a, 1.0 / 3.0)\n     \
    \   b == b.toInt", "        val b = pow(a, 1.0 / 3.0)\n        b == b.toInt",
  "        val b = pow(a, 1.0 / 3)\n        b == b.toInt", "        val b = pow(a,\
    \ 1.0 / 3.0)\n        b == b.toInt", "        val b = pow(a, 1.0 / 3.0)\n    \
    \    b == b.toInt", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt", " \
    \       val b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        if\
    \ (a < 0) return iscube(-a)\n        if (a == 0) return true\n        var i =\
    \ 1l\n        while (i * i * i <= a) {\n            if (i * i * i == a) return\
    \ true\n            i += 1\n        }\n        return false", "        val b =\
    \ round(pow(a, 1.0 / 3.0))\n        return b * b * b == a", "        val b = pow(a,\
    \ 1.0 / 3)\n        b == b.toInt", "        val b = round(pow(a, 1.0 / 3.0))\n\
    \        return b * b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n \
    \       b * b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n        return\
    \ b * b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n        return b\
    \ * b * b == a", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt", "  \
    \      val b = pow(a, 1.0 / 3)\n        b == b.toInt", "        val b = pow(a,\
    \ 1.0 / 3)\n        b == round(b)", "        val b = round(pow(a, 1.0 / 3.0))\n\
    \        return b * b * b == a", "        var x = a\n        if (x < 0) x = -x\n\
    \        var i = 0\n        while (i * i * i < x) i += 1\n        i * i * i ==\
    \ x", "        // Write your code here\n        return false", "        val b\
    \ = round(pow(a, 1.0 / 3.0))\n        return b * b * b == a", "        val b =\
    \ pow(a, 1.0 / 3.0)\n        b == b.toInt", "        val b = round(pow(a, 1.0\
    \ / 3.0))\n        b * b * b == a", "        val b = pow(a, 1.0 / 3.0)\n     \
    \   b == round(b)", "        val b = round(pow(a, 1.0 / 3.0))\n        b * b *\
    \ b == a", "        val b = round(pow(a, 1.0 / 3.0))\n        return b * b * b\
    \ == a", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt", "        val\
    \ b = round(pow(a, 1.0 / 3.0))\n        return b * b * b == a", "        val b\
    \ = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", '        return (pow(floor(pow(a,
    1.0 / 3.0)), 3) == a)', "        val b = pow(a, 1.0 / 3.0)\n        b == b.toInt",
  "        val b = round(pow(a, 1.0 / 3.0))\n        return b * b * b == a", "   \
    \     val b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        val\
    \ b = pow(a, 1.0 / 3.0)\n        b == b.toInt", "        val b = round(pow(a,\
    \ 1.0 / 3.0))\n        b * b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n\
    \        return b * b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n \
    \       return b * b * b == a", '        return false', "        val b = round(pow(a,\
    \ 1.0 / 3.0))\n        return b * b * b == a", "        val b = round(pow(a, 1.0\
    \ / 3.0))\n        return b * b * b == a", "        val b = round(pow(a, 1.0 /\
    \ 3))\n        b * b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n  \
    \      return b * b * b == a", "        var b = a\n        if (b < 0) b = -b\n\
    \        var c = 1l\n        while (c * c * c <= b) {\n            if (c * c *\
    \ c == b) return true\n            c += 1\n        }\n        return false", " \
    \       val b = pow(a, 1.0 / 3.0)\n        b == round(b)", "        val b = round(pow(a,\
    \ 1.0 / 3.0))\n        b * b * b == a", "        val b = pow(a, 1.0 / 3.0)\n \
    \       b == round(b)", "        val b = round(pow(a, 1.0 / 3.0))\n        return\
    \ b * b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n        return b\
    \ * b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n        return b *\
    \ b * b == a", "        val b = pow(a, 1.0 / 3.0)\n        b == b.toInt", "  \
    \      val b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        val\
    \ b = pow(a, 1.0 / 3.0)\n        b == b.toInt", "        val b = pow(a, 1.0 /\
    \ 3.0)\n        b == round(b)", "        if (a < 0) return iscube(-a)\n      \
    \  if (a == 0) return true\n        var x = 1l\n        while (x * x * x <= a)\
    \ {\n            if (x * x * x == a) return true\n            x += 1\n       \
    \ }\n        return false", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt",
  "        val b = round(pow(a, 1.0 / 3.0))\n        return b * b * b == a", "   \
    \     val b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        val\
    \ b = pow(a, 1.0 / 3.0)\n        b == b.toInt", "        val b = round(pow(a,\
    \ 1.0 / 3.0))\n        b * b * b == a", "        val b = cbrt(a)\n        b ==\
    \ b.toInt", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt", "       \
    \ val b = pow(a, 1.0 / 3)\n        b == b.toInt", "        val b = pow(a, 1.0\
    \ / 3)\n        b == round(b)", "        val b = pow(a, 1.0 / 3.0)\n        b\
    \ == round(b)", "        val b = round(pow(a, 1.0 / 3.0))\n        return b *\
    \ b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n        b * b * b ==\
    \ a", "        var b = a\n        if (b < 0) b = -b\n        var c = 0l\n    \
    \    while (c * c * c < b) c += 1\n        return c * c * c == b", "        val\
    \ b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        val b = round(pow(a,\
    \ 1.0 / 3.0))\n        return b * b * b == a", '        return (a == 0 || a ==
    1 || a == -1 || (a > 0 && a % 8 == 0 && a % 27 != 0))', "        val b = round(cbrt(a)).toLong\n\
    \        return b * b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n \
    \       return b * b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n  \
    \      return b * b * b == a", "        // Write your code here\n        return\
    \ false", "        val x = round(pow(a, 1.0 / 3.0))\n        x * x * x == a",
  "        val b = round(pow(a, 1.0 / 3.0))\n        return b * b * b == a", "   \
    \     val b = round(pow(a, 1.0 / 3))\n        return b * b * b == a", "      \
    \  val b = pow(a, 1.0 / 3)\n        b == b.toInt", "        val r = pow(a, 1.0\
    \ / 3)\n        r == r.toInt", "        val b = pow(a, 1.0 / 3.0)\n        b ==\
    \ b.toInt", "        val b = round(pow(a, 1.0 / 3))\n        return b * b * b\
    \ == a", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt", "        val\
    \ b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        val b = round(pow(a,\
    \ 1.0 / 3.0))\n        b * b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n\
    \        b * b * b == a", "        val b = pow(a, 1.0 / 3.0)\n        b == b.toInt",
  "        val b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        val\
    \ b = pow(a, 1.0 / 3)\n        b == b.toInt", "        val b = round(pow(a, 1.0\
    \ / 3.0))\n        return b * b * b == a", "        val b = pow(a, 1.0 / 3.0)\n\
    \        b == b.toInt", "        val b = round(pow(a, 1.0 / 3.0))\n        return\
    \ b * b * b == a", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt", " \
    \       // Your code here\n        return false", "        val b = pow(a, 1.0\
    \ / 3.0)\n        b == b.toInt", "        val b = pow(a, 1.0 / 3.0)\n        b\
    \ == round(b)", "        val b = round(pow(a, 1.0 / 3.0))\n        b * b * b ==\
    \ a", "        val b = round(pow(a, 1.0 / 3))\n        b * b * b == a", "    \
    \    if (a == 0) return true\n        if (a < 0) return false\n        val b =\
    \ pow(a, 1.0 / 3.0)\n        return b == b.toLong", "        val x = pow(a, 1.0\
    \ / 3.0)\n        x == x.toLong", "        val b = pow(a, 1.0 / 3.0)\n       \
    \ b == round(b)", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt", " \
    \       val b = pow(a, 1.0 / 3.0)\n        return b == b.toLong", "        val\
    \ b = pow(a, 1.0 / 3.0)\n        b == b.toInt", "        val b = pow(a, 1.0 /\
    \ 3)\n        b == b.toInt", "        var b = 0\n        while (b * b * b <= a)\
    \ {\n            if (b * b * b == a) return true\n            b += 1\n       \
    \ }\n        return false", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt",
  "        val b = round(pow(a, 1.0 / 3.0))\n        return b * b * b == a", "   \
    \     val b = round(pow(a, 1.0 / 3.0))\n        return b * b * b == a", "    \
    \    val b = round(pow(a, 1.0 / 3.0))\n        return b * b * b == a", "     \
    \   val b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        val b\
    \ = pow(a, 1.0 / 3.0)\n        b == round(b)", "        var b = a\n        if\
    \ (b < 0) b = -b\n        var i = 0\n        while (i * i * i <= b) {\n      \
    \      if (i * i * i == b) return true\n            i += 1\n        }\n      \
    \  return false", "        val b = round(pow(a, 1.0 / 3.0))\n        return b\
    \ * b * b == a", '        return (pow(round(pow(a, 1.0 / 3.0)), 3) == a)', " \
    \       val b = cbrt(a)\n        b == b.toInt", "        val b = round(pow(a,\
    \ 1.0 / 3.0))\n        return b * b * b == a", "        val b = round(pow(a, 1.0\
    \ / 3.0))\n        b * b * b == a", "        val b = pow(a, 1.0 / 3.0)\n     \
    \   b == b.toInt", "        val b = round(pow(a, 1.0 / 3.0))\n        b * b *\
    \ b == a", "        val b = round(pow(a, 1.0 / 3.0))\n        return b * b * b\
    \ == a", "        val b = a.abs\n        val c = pow(b, 1.0/3)\n        c == c.toInt",
  "        val b = pow(a, 1.0 / 3.0)\n        b == b.toInt", "        val b = pow(a,\
    \ 1.0 / 3)\n        b == round(b)", "        val b = pow(a, 1.0 / 3.0)\n     \
    \   b == b.toInt", "        val b = round(pow(a, 1.0 / 3.0))\n        return b\
    \ * b * b == a", "        // Your code here\n        return false", "        val\
    \ b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        val b = round(pow(a,\
    \ 1.0 / 3.0))\n        return b * b * b == a", "        val b = pow(a, 1.0 / 3.0)\n\
    \        b == b.toInt", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt",
  "        val b = pow(a, 1.0 / 3.0)\n        b == b.toInt", "        val b = pow(a,\
    \ 1.0 / 3.0)\n        b == b.toInt", "        val b = round(pow(a, 1.0 / 3.0))\n\
    \        return b * b * b == a", "        val b = pow(a, 1.0 / 3.0)\n        b\
    \ == b.toInt", "        val b = round(pow(a, 1.0 / 3))\n        return b * b *\
    \ b == a", "        val b = pow(a, 1.0 / 3.0)\n        b == b.toInt", "      \
    \  val b = round(pow(a, 1.0 / 3.0))\n        return b * b * b == a", "       \
    \ val b = pow(a, 1.0 / 3)\n        b == b.toInt", "        val b = pow(a, 1.0\
    \ / 3)\n        b == b.toInt", "        val b = pow(a, 1.0 / 3.0)\n        b -\
    \ b.toInt == 0", "        var b = a\n        if (b < 0) b = -b\n        if (b\
    \ == 0) return true\n        var c = 1l\n        while (c * c * c < b) c += 1\n\
    \        if (c * c * c == b) return true\n        return false", "        val\
    \ b = pow(a, 1.0 / 3.0)\n        b == round(b)", "        val b = round(pow(a,\
    \ 1.0 / 3.0))\n        b * b * b == a", "        val b = pow(a, 1.0 / 3.0)\n \
    \       b % 1 == 0", "        if (a < 0) return iscube(-a)\n        if (a == 0)\
    \ return true\n        var l = 1l\n        var r = a\n        while (l <= r) {\n\
    \            val m = (l + r) / 2\n            val v = m * m * m\n            if\
    \ (v == a) return true\n            if (v < a) l = m + 1\n            else r =\
    \ m - 1\n        }\n        return false", "        val b = pow(a, 1.0 / 3.0)\n\
    \        b == b.toInt", "        val b = pow(a, 1.0 / 3.0)\n        b == round(b)",
  "        val b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        val\
    \ b = pow(a, 1.0 / 3)\n        b == b.toInt", "        // Write your code here.\n\
    \        return false", "        val b = pow(a, 1.0 / 3.0)\n        b == round(b)",
  "        val b = round(pow(a, 1.0 / 3.0))\n        return b * b * b == a", "   \
    \     var b = 0l\n        while (b * b * b <= a) {\n            if (b * b * b\
    \ == a) return true\n            b += 1\n        }\n        return false", " \
    \       val b = pow(a, 1.0 / 3)\n        b == b.toInt", "        val b = pow(a,\
    \ 1.0 / 3)\n        b == b.toInt", "        val b = pow(a, 1.0 / 3)\n        b\
    \ == b.toInt", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt", "    \
    \    val b = round(pow(a, 1.0 / 3.0))\n        return b * b * b == a", "     \
    \   val b = pow(a, 1.0 / 3.0)\n        b == b.toInt", "        val b = round(pow(a,\
    \ 1.0 / 3.0))\n        return b * b * b == a", "        val b = round(pow(a, 1.0\
    \ / 3.0))\n        return b * b * b == a", "        val b = pow(a, 1.0 / 3.0)\n\
    \        b == round(b)", "        val b = pow(a, 1.0 / 3.0)\n        b == b.toInt",
  "        val b = round(pow(a, 1.0 / 3.0))\n        return b * b * b == a", "   \
    \     val b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        val\
    \ b = round(pow(a, 1.0 / 3.0))\n        b * b * b == a", "        val b = round(pow(a,\
    \ 1.0 / 3.0))\n        b * b * b == a", "        val b = pow(a, 1.0 / 3.0)\n \
    \       b == b.toInt", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt",
  "        val b = pow(a, 1.0 / 3.0)\n        b == b.toInt", "        val b = round(pow(a,\
    \ 1.0 / 3.0))\n        return b * b * b == a", "        val b = round(pow(a, 1.0\
    \ / 3.0))\n        b * b * b == a", '        return false', "        val b = round(pow(a,\
    \ 1.0 / 3.0))\n        b * b * b == a", "        val b = pow(a, 1.0 / 3.0)\n \
    \       b == round(b)", "        val b = round(pow(a, 1.0 / 3.0))\n        return\
    \ b * b * b == a", "        val b = cbrt(a)\n        b == b.toInt", "        val\
    \ b = pow(a, 1.0 / 3.0)\n        b == round(b)", "        val b = round(pow(a,\
    \ 1.0 / 3))\n        b * b * b == a", "        val b = pow(a, 1.0 / 3.0)\n   \
    \     b == b.toInt", "        val b = pow(a, 1.0 / 3)\n        b == b.toInt",
  '        return (a == 0 || a == 1 || a == -1 || a == 8 || a == 27 || a == -8 ||
    a == -27 || a == 64 || a == -64 || a == 125 || a == -125 || a == 216 || a == -216
    || a == 343 || a == -343 || a == 512 || a == -512 || a == 729 || a == -729 ||
    a == 1000 || a == -1000 || a == 1331 || a == -1331 || a == 1728 || a == -1728
    || a == 2197 || a == -2197 || a == 2744 || a == -2744 || a == 3375 || a == -3375
    || a == 4096 || a == -4096 || a == 4913 || a == -4913 || a == 5832 || a == -5832
    || a == 6859 || a == -6859 || a == 8000 || a == -8000 || a == 9261 || a == -9261
    || a == 10648 || a == -10648 || a == 12167 || a == -12167 || a == 13824 || a ==
    -13824 || a == 15625 || a == -15625 || a == 17576 || a == -17576 || a == 19683
    || a == -19683 || a == 21952 || a == -21952 || a == 24389 || a == -24389 || a
    == 27000 || a == -27000 || a == 29791 || a == -29791 || a == 32768 || a == -32768
    || a == 35937 || a == -35937 || a == 39304 || a == -39304 || a == 42875 || a ==
    -42875 || a == 46656 || a == -46656 || a == 50653 || a == -50653 || a == 54872
    || a == -54872 || a == 59319 || a == -59319 || a == 64000 || a == -64000 || a
    == 68921 || a == -68921 || a == 74088 || a == -74088 || a == 79507 || a == -79507
    || a == 85184 || a == -85184 || a == 91125 || a == -91125 || a == 97336 || a ==
    -97336 || a == 103823 || a == -103823 ||', "        val b = pow(a, 1.0 / 3.0)\n\
    \        b == round(b)", "        val b = round(pow(a, 1.0 / 3.0))\n        b\
    \ * b * b == a", "        val b = round(pow(a, 1.0 / 3.0))\n        b * b * b\
    \ == a", "        val b = round(pow(a, 1.0 / 3.0))\n        return b * b * b ==\
    \ a", "        var b = a\n        if (b < 0) b = -b\n        var c = pow(b, 1.0\
    \ / 3.0)\n        if (c - c.toInt == 0) true else false", "        val b = round(pow(a,\
    \ 1.0 / 3.0))\n        b * b * b == a"]
stop_tokens:
- "\n    }\n"

name: HumanEval_81_numerical_letter_grade
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // It is the last week of the semester and the teacher has to give the grades\n\
  \    // to students. The teacher has been making her own algorithm for grading.\n\
  \    // The only problem is, she has lost the code she used for grading.\n    //\
  \ She has given you a list of GPAs for some students and you have to write \n  \
  \  // a function that can output a list of letter grades using the following table:\n\
  \    // GPA       |    Letter grade\n    // 4.0                A+\n    // > 3.7\
  \                A \n    // > 3.3                A- \n    // > 3.0             \
  \   B+\n    // > 2.7                B \n    // > 2.3                B-\n    // >\
  \ 2.0                C+\n    // > 1.7                C\n    // > 1.3           \
  \     C-\n    // > 1.0                D+ \n    // > 0.7                D \n    //\
  \ > 0.0                D-\n    // 0.0                E\n    // Example:\n    //\
  \ >>> gradeEquation((List[Float](4.0f.toFloat, 3l.toFloat, 1.7f.toFloat, 2l.toFloat,\
  \ 3.5f.toFloat)))\n    // (List[String](\"A+\", \"B\", \"C-\", \"C\", \"A-\"))\n\
  \    def numericalLetterGrade(grades : List[Float]) : List[String] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(numericalLetterGrade((List[Float](4.0f.toFloat,\
  \ 3l.toFloat, 1.7f.toFloat, 2l.toFloat, 3.5f.toFloat))).equals((List[String](\"\
  A+\", \"B\", \"C-\", \"C\", \"A-\"))));\n    assert(numericalLetterGrade((List[Float](1.2f.toFloat))).equals((List[String](\"\
  D+\"))));\n    assert(numericalLetterGrade((List[Float](0.5f.toFloat))).equals((List[String](\"\
  D-\"))));\n    assert(numericalLetterGrade((List[Float](0.0f.toFloat))).equals((List[String](\"\
  E\"))));\n    assert(numericalLetterGrade((List[Float](1.0f.toFloat, 0.3f.toFloat,\
  \ 1.5f.toFloat, 2.8f.toFloat, 3.3f.toFloat))).equals((List[String](\"D\", \"D-\"\
  , \"C-\", \"B\", \"B+\"))));\n    assert(numericalLetterGrade((List[Float](0.0f.toFloat,\
  \ 0.7f.toFloat))).equals((List[String](\"E\", \"D-\"))));\n    }\n\n}\n"
completions: ["        // Write your code here\n        return List[String]()", " \
    \       // Fill in the code here\n        return List[String]()", "        //\
    \ Fill in the code here\n        return List[String]()", "        var letterGrades\
    \ = List[String]()\n        for (grade <- grades) {\n            if (grade >=\
    \ 4.0) {\n                letterGrades = letterGrades :+ \"A+\"\n            }\
    \ else if (grade >= 3.7) {\n                letterGrades = letterGrades :+ \"\
    A\"\n            } else if (grade >= 3.3) {\n                letterGrades = letterGrades\
    \ :+ \"A-\"\n            } else if (grade >= 3.0) {\n                letterGrades\
    \ = letterGrades :+ \"B+\"\n            } else if (grade >= 2.7) {\n         \
    \       letterGrades = letterGrades :+ \"B\"\n            } else if (grade >=\
    \ 2.3) {\n                letterGrades = letterGrades :+ \"B-\"\n            }\
    \ else if (grade >= 2.0) {\n                letterGrades = letterGrades :+ \"\
    C+\"\n            } else if (grade >= 1.7) {\n                letterGrades = letterGrades\
    \ :+ \"C\"\n            } else if (grade >= 1.3) {\n                letterGrades\
    \ = letterGrades :+ \"C-\"\n            } else if (grade >= 1.0) {\n         \
    \       letterGrades = letterGrades :+ \"D+\"\n            } else if (grade >=\
    \ 0.7) {\n                letterGrades = letterGrades :+ \"D\"\n            }\
    \ else if (grade >= 0.0) {\n                letterGrades = letterGrades :+ \"\
    D-\"\n            } else {\n                letterGrades = letterGrades :+ \"\
    E\"\n            }\n        }\n        letterGrades", "        // Fill in the\
    \ code here\n        var result = List[String]()\n        for (grade <- grades)\
    \ {\n            if (grade >= 4.0) {\n                result = result :+ \"A+\"\
    \n            } else if (grade >= 3.7) {\n                result = result :+ \"\
    A\"\n            } else if (grade >= 3.3) {\n                result = result :+\
    \ \"A-\"\n            } else if (grade >= 3.0) {\n                result = result\
    \ :+ \"B+\"\n            } else if (grade >= 2.7) {\n                result =\
    \ result :+ \"B\"\n            } else if (grade >= 2.3) {\n                result\
    \ = result :+ \"B-\"\n            } else if (grade >= 2.0) {\n               \
    \ result = result :+ \"C+\"\n            } else if (grade >= 1.7) {\n        \
    \        result = result :+ \"C\"\n            } else if (grade >= 1.3) {\n  \
    \              result = result :+ \"C-\"\n            } else if (grade >= 1.0)\
    \ {\n                result = result :+ \"D+\"\n            } else if (grade >=\
    \ 0.7) {\n                result = result :+ \"D\"\n            } else if (grade\
    \ >= 0.0) {\n                result = result :+ \"D-\"\n            } else {\n\
    \                result = result :+ \"E\"\n            }\n        }\n        result",
  "        // Write your code here\n        return List[String]()", "        // Fill\
    \ in the code here\n        var letterGrades = List[String]()\n        for (grade\
    \ <- grades) {\n            if (grade >= 4.0) {\n                letterGrades\
    \ = letterGrades :+ \"A+\"\n            } else if (grade >= 3.7) {\n         \
    \       letterGrades = letterGrades :+ \"A\"\n            } else if (grade >=\
    \ 3.3) {\n                letterGrades = letterGrades :+ \"A-\"\n            }\
    \ else if (grade >= 3.0) {\n                letterGrades = letterGrades :+ \"\
    B+\"\n            } else if (grade >= 2.7) {\n                letterGrades = letterGrades\
    \ :+ \"B\"\n            } else if (grade >= 2.3) {\n                letterGrades\
    \ = letterGrades :+ \"B-\"\n            } else if (grade >= 2.0) {\n         \
    \       letterGrades = letterGrades :+ \"C+\"\n            } else if (grade >=\
    \ 1.7) {\n                letterGrades = letterGrades :+ \"C\"\n            }\
    \ else if (grade >= 1.3) {\n                letterGrades = letterGrades :+ \"\
    C-\"\n            } else if (grade >= 1.0) {\n                letterGrades = letterGrades\
    \ :+ \"D+\"\n            } else if (grade >= 0.7) {\n                letterGrades\
    \ = letterGrades :+ \"D\"\n            } else if (grade >= 0.0) {\n          \
    \      letterGrades = letterGrades :+ \"D-\"\n            } else {\n         \
    \       letterGrades = letterGrades :+ \"E\"\n            }\n        }\n     \
    \   letterGrades", "        // Fill in the code here\n        return List[String]()",
  "        // Fill in the function body here\n        var letterGrades = List[String]()\n\
    \        for (grade <- grades) {\n            if (grade >= 4.0) {\n          \
    \      letterGrades = letterGrades :+ \"A+\"\n            } else if (grade >=\
    \ 3.7) {\n                letterGrades = letterGrades :+ \"A\"\n            }\
    \ else if (grade >= 3.3) {\n                letterGrades = letterGrades :+ \"\
    A-\"\n            } else if (grade >= 3.0) {\n                letterGrades = letterGrades\
    \ :+ \"B+\"\n            } else if (grade >= 2.7) {\n                letterGrades\
    \ = letterGrades :+ \"B\"\n            } else if (grade >= 2.3) {\n          \
    \      letterGrades = letterGrades :+ \"B-\"\n            } else if (grade >=\
    \ 2.0) {\n                letterGrades = letterGrades :+ \"C+\"\n            }\
    \ else if (grade >= 1.7) {\n                letterGrades = letterGrades :+ \"\
    C\"\n            } else if (grade >= 1.3) {\n                letterGrades = letterGrades\
    \ :+ \"C-\"\n            } else if (grade >= 1.0) {\n                letterGrades\
    \ = letterGrades :+ \"D+\"\n            } else if (grade >= 0.7) {\n         \
    \       letterGrades = letterGrades :+ \"D\"\n            } else if (grade >=\
    \ 0.0) {\n                letterGrades = letterGrades :+ \"D-\"\n            }\
    \ else {\n                letterGrades = letterGrades :+ \"E\"\n            }\n\
    \        }\n        letterGrades", "        // Fill in the code here\n       \
    \ var result = List[String]()\n        for (i <- grades) {\n            if (i\
    \ == 4.0) {\n                result = result :+ \"A+\"\n            } else if\
    \ (i > 3.7) {\n                result = result :+ \"A\"\n            } else if\
    \ (i > 3.3) {\n                result = result :+ \"A-\"\n            } else if\
    \ (i > 3.0) {\n                result = result :+ \"B+\"\n            } else if\
    \ (i > 2.7) {\n                result = result :+ \"B\"\n            } else if\
    \ (i > 2.3) {\n                result = result :+ \"B-\"\n            } else if\
    \ (i > 2.0) {\n                result = result :+ \"C+\"\n            } else if\
    \ (i > 1.7) {\n                result = result :+ \"C\"\n            } else if\
    \ (i > 1.3) {\n                result = result :+ \"C-\"\n            } else if\
    \ (i > 1.0) {\n                result = result :+ \"D+\"\n            } else if\
    \ (i > 0.7) {\n                result = result :+ \"D\"\n            } else if\
    \ (i > 0.0) {\n                result = result :+ \"D-\"\n            } else {\n\
    \                result = result :+ \"E\"\n            }\n        }\n        result",
  "        // Fill in the code here\n        var result = List[String]()\n       \
    \ for (i <- grades) {\n            if (i == 4.0) result = result :+ \"A+\"\n \
    \           else if (i > 3.7) result = result :+ \"A\"\n            else if (i\
    \ > 3.3) result = result :+ \"A-\"\n            else if (i > 3.0) result = result\
    \ :+ \"B+\"\n            else if (i > 2.7) result = result :+ \"B\"\n        \
    \    else if (i > 2.3) result = result :+ \"B-\"\n            else if (i > 2.0)\
    \ result = result :+ \"C+\"\n            else if (i > 1.7) result = result :+\
    \ \"C\"\n            else if (i > 1.3) result = result :+ \"C-\"\n           \
    \ else if (i > 1.0) result = result :+ \"D+\"\n            else if (i > 0.7) result\
    \ = result :+ \"D\"\n            else if (i > 0.0) result = result :+ \"D-\"\n\
    \            else result = result :+ \"E\"\n        }\n        result", "    \
    \    // Fill in the code here\n        var letterGrades = List[String]()\n   \
    \     for (grade <- grades) {\n            if (grade >= 4.0) {\n             \
    \   letterGrades = letterGrades :+ \"A+\"\n            } else if (grade >= 3.7)\
    \ {\n                letterGrades = letterGrades :+ \"A\"\n            } else\
    \ if (grade >= 3.3) {\n                letterGrades = letterGrades :+ \"A-\"\n\
    \            } else if (grade >= 3.0) {\n                letterGrades = letterGrades\
    \ :+ \"B+\"\n            } else if (grade >= 2.7) {\n                letterGrades\
    \ = letterGrades :+ \"B\"\n            } else if (grade >= 2.3) {\n          \
    \      letterGrades = letterGrades :+ \"B-\"\n            } else if (grade >=\
    \ 2.0) {\n                letterGrades = letterGrades :+ \"C+\"\n            }\
    \ else if (grade >= 1.7) {\n                letterGrades = letterGrades :+ \"\
    C\"\n            } else if (grade >= 1.3) {\n                letterGrades = letterGrades\
    \ :+ \"C-\"\n            } else if (grade >= 1.0) {\n                letterGrades\
    \ = letterGrades :+ \"D+\"\n            } else if (grade >= 0.7) {\n         \
    \       letterGrades = letterGrades :+ \"D\"\n            } else if (grade >=\
    \ 0.0) {\n                letterGrades = letterGrades :+ \"D-\"\n            }\
    \ else {\n                letterGrades = letterGrades :+ \"E\"\n            }\n\
    \        }\n        letterGrades", "        // Fill in the code here\n       \
    \ var result = List[String]()\n        for (grade <- grades) {\n            if\
    \ (grade >= 4.0) {\n                result = result :+ \"A+\"\n            } else\
    \ if (grade >= 3.7) {\n                result = result :+ \"A\"\n            }\
    \ else if (grade >= 3.3) {\n                result = result :+ \"A-\"\n      \
    \      } else if (grade >= 3.0) {\n                result = result :+ \"B+\"\n\
    \            } else if (grade >= 2.7) {\n                result = result :+ \"\
    B\"\n            } else if (grade >= 2.3) {\n                result = result :+\
    \ \"B-\"\n            } else if (grade >= 2.0) {\n                result = result\
    \ :+ \"C+\"\n            } else if (grade >= 1.7) {\n                result =\
    \ result :+ \"C\"\n            } else if (grade >= 1.3) {\n                result\
    \ = result :+ \"C-\"\n            } else if (grade >= 1.0) {\n               \
    \ result = result :+ \"D+\"\n            } else if (grade >= 0.7) {\n        \
    \        result = result :+ \"D\"\n            } else if (grade >= 0.0) {\n  \
    \              result = result :+ \"D-\"\n            } else {\n             \
    \   result = result :+ \"E\"\n            }\n        }\n        result", "   \
    \     // Fill in the code here\n        var letterGrades = List[String]()\n  \
    \      for (grade <- grades) {\n            if (grade >= 4.0) {\n            \
    \    letterGrades = letterGrades :+ \"A+\"\n            } else if (grade >= 3.7)\
    \ {\n                letterGrades = letterGrades :+ \"A\"\n            } else\
    \ if (grade >= 3.3) {\n                letterGrades = letterGrades :+ \"A-\"\n\
    \            } else if (grade >= 3.0) {\n                letterGrades = letterGrades\
    \ :+ \"B+\"\n            } else if (grade >= 2.7) {\n                letterGrades\
    \ = letterGrades :+ \"B\"\n            } else if (grade >= 2.3) {\n          \
    \      letterGrades = letterGrades :+ \"B-\"\n            } else if (grade >=\
    \ 2.0) {\n                letterGrades = letterGrades :+ \"C+\"\n            }\
    \ else if (grade >= 1.7) {\n                letterGrades = letterGrades :+ \"\
    C\"\n            } else if (grade >= 1.3) {\n                letterGrades = letterGrades\
    \ :+ \"C-\"\n            } else if (grade >= 1.0) {\n                letterGrades\
    \ = letterGrades :+ \"D+\"\n            } else if (grade >= 0.7) {\n         \
    \       letterGrades = letterGrades :+ \"D\"\n            } else if (grade >=\
    \ 0.0) {\n                letterGrades = letterGrades :+ \"D-\"\n            }\
    \ else {\n                letterGrades = letterGrades :+ \"E\"\n            }\n\
    \        }\n        letterGrades", "        // Fill in the code here\n       \
    \ val letterGrade = ListBuffer[String]()\n        for (i <- grades) {\n      \
    \      if (i == 4.0) {\n                letterGrade += \"A+\"\n            } else\
    \ if (i > 3.7) {\n                letterGrade += \"A\"\n            } else if\
    \ (i > 3.3) {\n                letterGrade += \"A-\"\n            } else if (i\
    \ > 3.0) {\n                letterGrade += \"B+\"\n            } else if (i >\
    \ 2.7) {\n                letterGrade += \"B\"\n            } else if (i > 2.3)\
    \ {\n                letterGrade += \"B-\"\n            } else if (i > 2.0) {\n\
    \                letterGrade += \"C+\"\n            } else if (i > 1.7) {\n  \
    \              letterGrade += \"C\"\n            } else if (i > 1.3) {\n     \
    \           letterGrade += \"C-\"\n            } else if (i > 1.0) {\n       \
    \         letterGrade += \"D+\"\n            } else if (i > 0.7) {\n         \
    \       letterGrade += \"D\"\n            } else if (i > 0.0) {\n            \
    \    letterGrade += \"D-\"\n            } else {\n                letterGrade\
    \ += \"E\"\n            }\n        }\n        letterGrade.toList", "        //\
    \ Write your code here\n        return List[String]()", "        // Fill in the\
    \ code here\n        var result = List[String]()\n        for (grade <- grades)\
    \ {\n            if (grade >= 4.0) {\n                result = result :+ \"A+\"\
    \n            } else if (grade >= 3.7) {\n                result = result :+ \"\
    A\"\n            } else if (grade >= 3.3) {\n                result = result :+\
    \ \"A-\"\n            } else if (grade >= 3.0) {\n                result = result\
    \ :+ \"B+\"\n            } else if (grade >= 2.7) {\n                result =\
    \ result :+ \"B\"\n            } else if (grade >= 2.3) {\n                result\
    \ = result :+ \"B-\"\n            } else if (grade >= 2.0) {\n               \
    \ result = result :+ \"C+\"\n            } else if (grade >= 1.7) {\n        \
    \        result = result :+ \"C\"\n            } else if (grade >= 1.3) {\n  \
    \              result = result :+ \"C-\"\n            } else if (grade >= 1.0)\
    \ {\n                result = result :+ \"D+\"\n            } else if (grade >=\
    \ 0.7) {\n                result = result :+ \"D\"\n            } else if (grade\
    \ >= 0.0) {\n                result = result :+ \"D-\"\n            } else {\n\
    \                result = result :+ \"E\"\n            }\n        }\n        result",
  "        // Fill in the code here\n        var letterGrades = List[String]()\n \
    \       for (grade <- grades) {\n            if (grade >= 4.0) {\n           \
    \     letterGrades = letterGrades :+ \"A+\"\n            } else if (grade >= 3.7)\
    \ {\n                letterGrades = letterGrades :+ \"A\"\n            } else\
    \ if (grade >= 3.3) {\n                letterGrades = letterGrades :+ \"A-\"\n\
    \            } else if (grade >= 3.0) {\n                letterGrades = letterGrades\
    \ :+ \"B+\"\n            } else if (grade >= 2.7) {\n                letterGrades\
    \ = letterGrades :+ \"B\"\n            } else if (grade >= 2.3) {\n          \
    \      letterGrades = letterGrades :+ \"B-\"\n            } else if (grade >=\
    \ 2.0) {\n                letterGrades = letterGrades :+ \"C+\"\n            }\
    \ else if (grade >= 1.7) {\n                letterGrades = letterGrades :+ \"\
    C\"\n            } else if (grade >= 1.3) {\n                letterGrades = letterGrades\
    \ :+ \"C-\"\n            } else if (grade >= 1.0) {\n                letterGrades\
    \ = letterGrades :+ \"D+\"\n            } else if (grade >= 0.7) {\n         \
    \       letterGrades = letterGrades :+ \"D\"\n            } else if (grade >=\
    \ 0.0) {\n                letterGrades = letterGrades :+ \"D-\"\n            }\
    \ else {\n                letterGrades = letterGrades :+ \"E\"\n            }\n\
    \        }\n        letterGrades", "        // Fill in the function here\n   \
    \     val gradeMap = Map(4.0f -> \"A+\", 3.7f -> \"A\", 3.3f -> \"A-\", 3.0f ->\
    \ \"B+\", 2.7f -> \"B\", 2.3f -> \"B-\", 2.0f -> \"C+\", 1.7f -> \"C\", 1.3f ->\
    \ \"C-\", 1.0f -> \"D+\", 0.7f -> \"D\", 0.0f -> \"D-\", 0.0f -> \"E\")\n    \
    \    var result = List[String]()\n        for (grade <- grades) {\n          \
    \  var letterGrade = \"\"\n            for (key <- gradeMap.keys) {\n        \
    \        if (grade >= key) {\n                    letterGrade = gradeMap(key)\n\
    \                    break\n                }\n            }\n            result\
    \ = result :+ letterGrade\n        }\n        result", "        // Fill in the\
    \ code here\n        var letterGrades = List[String]()\n        for (grade <-\
    \ grades) {\n            if (grade >= 4.0) {\n                letterGrades = letterGrades\
    \ :+ \"A+\"\n            } else if (grade >= 3.7) {\n                letterGrades\
    \ = letterGrades :+ \"A\"\n            } else if (grade >= 3.3) {\n          \
    \      letterGrades = letterGrades :+ \"A-\"\n            } else if (grade >=\
    \ 3.0) {\n                letterGrades = letterGrades :+ \"B+\"\n            }\
    \ else if (grade >= 2.7) {\n                letterGrades = letterGrades :+ \"\
    B\"\n            } else if (grade >= 2.3) {\n                letterGrades = letterGrades\
    \ :+ \"B-\"\n            } else if (grade >= 2.0) {\n                letterGrades\
    \ = letterGrades :+ \"C+\"\n            } else if (grade >= 1.7) {\n         \
    \       letterGrades = letterGrades :+ \"C\"\n            } else if (grade >=\
    \ 1.3) {\n                letterGrades = letterGrades :+ \"C-\"\n            }\
    \ else if (grade >= 1.0) {\n                letterGrades = letterGrades :+ \"\
    D+\"\n            } else if (grade >= 0.7) {\n                letterGrades = letterGrades\
    \ :+ \"D\"\n            } else if (grade >= 0.0) {\n                letterGrades\
    \ = letterGrades :+ \"D-\"\n            } else {\n                letterGrades\
    \ = letterGrades :+ \"E\"\n            }\n        }\n        letterGrades"]
stop_tokens:
- "\n    }\n"

name: HumanEval_19_sort_numbers
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
  \    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\
  \ 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted from\
  \ smallest to largest\n    // >>> sortNumbers((\"three one five\"))\n    // (\"\
  one three five\")\n    def sortNumbers(numbers : String) : String = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(sortNumbers((\"\"\
  )).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
  \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
  \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero four\
  \ five seven eight nine\")));\n    assert(sortNumbers((\"six five four three two\
  \ one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n}\n"
completions: ["        val nums = numbers.split(\" \").map(x => x match {\n      \
    \      case \"zero\" => 0\n            case \"one\" => 1\n            case \"\
    two\" => 2\n            case \"three\" => 3\n            case \"four\" => 4\n\
    \            case \"five\" => 5\n            case \"six\" => 6\n            case\
    \ \"seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" =>\
    \ 9\n        })\n        val numsSorted = nums.sorted\n        val numsSortedStr\
    \ = numsSorted.map(x => x match {\n            case 0 => \"zero\"\n          \
    \  case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        numsSortedStr.mkString(\"\
    \ \")", "        val numeralMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" ->\
    \ 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" ->\
    \ 7, \"eight\" -> 8, \"nine\" -> 9)\n        val nums = numbers.split(\" \").map(numeralMap(_)).sorted\n\
    \        nums.map(numeralMap.find(_._2 == _).get._1).mkString(\" \")", "     \
    \   val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        val sorted = nums.sorted\n        sorted.map(x => x match {\n       \
    \     case 0 => \"zero\"\n            case 1 => \"one\"\n            case 2 =>\
    \ \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\n \
    \           case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.mkString(\" \")", "   \
    \     val nums = numbers.split(\" \").map(s => s match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        nums.sorted.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        val result = sorted.map(x => x match {\n            case 0 => \"zero\"\
    \n            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        result.mkString(\"\
    \ \")", "        val numeralMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" ->\
    \ 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" ->\
    \ 7, \"eight\" -> 8, \"nine\" -> 9)\n        val nums = numbers.split(\" \").map(numeralMap(_)).sorted\n\
    \        nums.map(num => numeralMap.find(_._2 == num).get._1).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        val sorted = nums.sorted\n        sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.mkString(\" \")", "   \
    \     val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        nums.sorted.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(numeralToInt).sorted\n        nums.map(intToNumeral).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        val sorted = nums.sorted\n        val words = sorted.map(x => x\
    \ match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n   \
    \         case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        words.mkString(\" \")", "        val\
    \ nums = numbers.split(\" \").map(x => x match {\n            case \"zero\" =>\
    \ 0\n            case \"one\" => 1\n            case \"two\" => 2\n          \
    \  case \"three\" => 3\n            case \"four\" => 4\n            case \"five\"\
    \ => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n     \
    \       case \"eight\" => 8\n            case \"nine\" => 9\n        })\n    \
    \    val sorted = nums.sorted\n        val result = sorted.map(x => x match {\n\
    \            case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        })\n        result.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val sortedString = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        sortedString.mkString(\" \")", " \
    \       val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        val sorted = nums.sorted\n        val res = sorted.map(x => x match\
    \ {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n         \
    \   case 2 => \"two\"\n            case 3 => \"three\"\n            case 4 =>\
    \ \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\n  \
    \          case 7 => \"seven\"\n            case 8 => \"eight\"\n            case\
    \ 9 => \"nine\"\n        })\n        res.mkString(\" \")", "        var nums =\
    \ numbers.split(\" \")\n        var nums2 = nums.map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        var nums3 = nums2.sorted\n        var nums4 = nums3.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        var result = nums4.mkString(\" \"\
    )\n        return result", "        val nums = numbers.split(\" \").map(x => x\
    \ match {\n            case \"zero\" => 0\n            case \"one\" => 1\n   \
    \         case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        val result = sorted.map(x => x match {\n            case 0 => \"zero\"\
    \n            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        result.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val result = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        result.mkString(\" \")", "       \
    \ val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        nums.sorted.mkString(\" \")", "        val nums = numbers.split(\" \"\
    ).map(x => x match {\n            case \"zero\" => 0\n            case \"one\"\
    \ => 1\n            case \"two\" => 2\n            case \"three\" => 3\n     \
    \       case \"four\" => 4\n            case \"five\" => 5\n            case \"\
    six\" => 6\n            case \"seven\" => 7\n            case \"eight\" => 8\n\
    \            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        sorted.map(x => x match {\n            case 0 => \"zero\"\n         \
    \   case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(_.toInt).sorted\n        nums.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val result = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        result.mkString(\" \")", "       \
    \ val numeralToInt = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"three\"\
    \ -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\"\
    \ -> 8, \"nine\" -> 9)\n        val intToNumeral = Map(0 -> \"zero\", 1 -> \"\
    one\", 2 -> \"two\", 3 -> \"three\", 4 -> \"four\", 5 -> \"five\", 6 -> \"six\"\
    , 7 -> \"seven\", 8 -> \"eight\", 9 -> \"nine\")\n        val numbersList = numbers.split(\"\
    \ \").toList\n        val intList = numbersList.map(numeralToInt(_))\n       \
    \ val sortedIntList = intList.sorted\n        val sortedNumeralList = sortedIntList.map(intToNumeral(_))\n\
    \        sortedNumeralList.mkString(\" \")", "        var nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        var sorted = nums.sorted\n\
    \        var result = \"\"\n        for (i <- 0 until sorted.length) {\n     \
    \       result += sorted(i) match {\n                case 0 => \"zero\"\n    \
    \            case 1 => \"one\"\n                case 2 => \"two\"\n          \
    \      case 3 => \"three\"\n                case 4 => \"four\"\n             \
    \   case 5 => \"five\"\n                case 6 => \"six\"\n                case\
    \ 7 => \"seven\"\n                case 8 => \"eight\"\n                case 9\
    \ => \"nine\"\n            }\n            if (i != sorted.length - 1) result +=\
    \ \" \"\n        }\n        result", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        val words = sorted.map(x => x match {\n            case 0 => \"zero\"\
    \n            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        words.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val numsStr = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        numsStr.mkString(\" \")", "      \
    \  val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        val sorted = nums.sorted\n        sorted.map(x => x match {\n       \
    \     case 0 => \"zero\"\n            case 1 => \"one\"\n            case 2 =>\
    \ \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\n \
    \           case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        val\
    \ words = sorted.map(x => x match {\n            case 0 => \"zero\"\n        \
    \    case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        words.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val numeral = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        numeral.mkString(\" \")", "      \
    \  val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        val sorted = nums.sorted\n        sorted.map(x => x match {\n       \
    \     case 0 => \"zero\"\n            case 1 => \"one\"\n            case 2 =>\
    \ \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\n \
    \           case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(num\
    \ => num match {\n            case \"zero\" => 0\n            case \"one\" =>\
    \ 1\n            case \"two\" => 2\n            case \"three\" => 3\n        \
    \    case \"four\" => 4\n            case \"five\" => 5\n            case \"six\"\
    \ => 6\n            case \"seven\" => 7\n            case \"eight\" => 8\n   \
    \         case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n \
    \       sorted.map(num => num match {\n            case 0 => \"zero\"\n      \
    \      case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 =>\
    \ \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n\
    \            case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        nums.sorted.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val result = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        result.mkString(\" \")", "       \
    \ val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        nums.sorted.mkString(\" \")", "        val nums = numbers.split(\" \"\
    ).map(x => x match {\n            case \"zero\" => 0\n            case \"one\"\
    \ => 1\n            case \"two\" => 2\n            case \"three\" => 3\n     \
    \       case \"four\" => 4\n            case \"five\" => 5\n            case \"\
    six\" => 6\n            case \"seven\" => 7\n            case \"eight\" => 8\n\
    \            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        sorted.map(x => x match {\n            case 0 => \"zero\"\n         \
    \   case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")",
  "        val numeralMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"three\"\
    \ -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\"\
    \ -> 8, \"nine\" -> 9)\n        val numeralList = numbers.split(\" \").map(numeralMap(_)).sorted\n\
    \        numeralList.map(numeralMap.find(_._2 == _).get._1).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        val sorted = nums.sorted\n        val result = sorted.map(x => x\
    \ match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n   \
    \         case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        result.mkString(\" \")", "       \
    \ var nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        nums = nums.sorted\n        var result = \"\"\n        for (i <- 0 until\
    \ nums.length) {\n            result += nums(i) + \" \"\n        }\n        result.trim",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        nums.sorted.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        val result = sorted.map(x => x match {\n            case 0 => \"zero\"\
    \n            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        result.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(numeralToInt)\n        val\
    \ sorted = nums.sorted\n        sorted.map(intToNumeral).mkString(\" \")", " \
    \       val nums = numbers.split(\" \").map(_.toInt).sorted\n        nums.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val words = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        words.mkString(\" \")", "        val\
    \ nums = numbers.split(\" \").map(x => x match {\n            case \"zero\" =>\
    \ 0\n            case \"one\" => 1\n            case \"two\" => 2\n          \
    \  case \"three\" => 3\n            case \"four\" => 4\n            case \"five\"\
    \ => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n     \
    \       case \"eight\" => 8\n            case \"nine\" => 9\n        })\n    \
    \    nums.sorted.mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        val numeral = sorted.map(x => x match {\n            case 0 => \"zero\"\
    \n            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        numeral.mkString(\"\
    \ \")", "        val numeralMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" ->\
    \ 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" ->\
    \ 7, \"eight\" -> 8, \"nine\" -> 9)\n        val nums = numbers.split(\" \").map(numeralMap(_)).sorted\n\
    \        nums.map(num => numeralMap.find(_._2 == num).get._1).mkString(\" \")",
  "        val numeralMap = Map(\n            \"zero\" -> 0,\n            \"one\"\
    \ -> 1,\n            \"two\" -> 2,\n            \"three\" -> 3,\n            \"\
    four\" -> 4,\n            \"five\" -> 5,\n            \"six\" -> 6,\n        \
    \    \"seven\" -> 7,\n            \"eight\" -> 8,\n            \"nine\" -> 9\n\
    \        )\n        val numeralList = numbers.split(\" \").toList\n        val\
    \ numberList = numeralList.map(numeral => numeralMap(numeral))\n        val sortedNumberList\
    \ = numberList.sorted\n        val sortedNumeralList = sortedNumberList.map(number\
    \ => numeralMap.find(_._2 == number).get._1)\n        sortedNumeralList.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        sorted.mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        val sorted = nums.sorted\n        val result = sorted.map(x => x\
    \ match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n   \
    \         case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        result.mkString(\" \")", "       \
    \ val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        val sorted = nums.sorted\n        val numsStr = sorted.map(x => x match\
    \ {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n         \
    \   case 2 => \"two\"\n            case 3 => \"three\"\n            case 4 =>\
    \ \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\n  \
    \          case 7 => \"seven\"\n            case 8 => \"eight\"\n            case\
    \ 9 => \"nine\"\n        })\n        numsStr.mkString(\" \")", "        val nums\
    \ = numbers.split(\" \").map(x => x match {\n            case \"zero\" => 0\n\
    \            case \"one\" => 1\n            case \"two\" => 2\n            case\
    \ \"three\" => 3\n            case \"four\" => 4\n            case \"five\" =>\
    \ 5\n            case \"six\" => 6\n            case \"seven\" => 7\n        \
    \    case \"eight\" => 8\n            case \"nine\" => 9\n        })\n       \
    \ nums.sorted.mkString(\" \")", "        var nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums = nums.sorted\n        var result\
    \ = \"\"\n        for (i <- 0 until nums.length) {\n            result += nums(i)\
    \ + \" \"\n        }\n        result.trim", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        sorted.map(x => x match {\n            case 0 => \"zero\"\n         \
    \   case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        val sorted = nums.sorted\n        val words = sorted.map(x => x\
    \ match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n   \
    \         case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        words.mkString(\" \")", "        val\
    \ nums = numbers.split(\" \").map(x => x match {\n            case \"zero\" =>\
    \ 0\n            case \"one\" => 1\n            case \"two\" => 2\n          \
    \  case \"three\" => 3\n            case \"four\" => 4\n            case \"five\"\
    \ => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n     \
    \       case \"eight\" => 8\n            case \"nine\" => 9\n        })\n    \
    \    val sortedNums = nums.sorted\n        val sortedStrings = sortedNums.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        sortedStrings.mkString(\" \")", " \
    \       val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        val sorted = nums.sorted\n        sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        val\
    \ result = sorted.map(x => x match {\n            case 0 => \"zero\"\n       \
    \     case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 =>\
    \ \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n\
    \            case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        result.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val res = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        res.mkString(\" \")", "        val\
    \ nums = numbers.split(\" \").map(x => x match {\n            case \"zero\" =>\
    \ 0\n            case \"one\" => 1\n            case \"two\" => 2\n          \
    \  case \"three\" => 3\n            case \"four\" => 4\n            case \"five\"\
    \ => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n     \
    \       case \"eight\" => 8\n            case \"nine\" => 9\n        })\n    \
    \    val sorted = nums.sorted\n        val result = sorted.map(x => x match {\n\
    \            case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        })\n        result.mkString(\" \")", "        val numberMap = Map(\"\
    zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"three\" -> 3, \"four\" -> 4, \"five\"\
    \ -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\" -> 8, \"nine\" -> 9)\n       \
    \ val numberList = numbers.split(\" \").map(numberMap(_)).sorted\n        numberList.map(numberMap.find(_._2\
    \ == _).get._1).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        val\
    \ numeral = sorted.map(x => x match {\n            case 0 => \"zero\"\n      \
    \      case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 =>\
    \ \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n\
    \            case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        numeral.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        sorted.map(x => x match\
    \ {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n         \
    \   case 2 => \"two\"\n            case 3 => \"three\"\n            case 4 =>\
    \ \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\n  \
    \          case 7 => \"seven\"\n            case 8 => \"eight\"\n            case\
    \ 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(_.toInt).sorted\n        nums.mkString(\" \")", "        val nums =\
    \ numbers.split(\" \").map(x => x match {\n            case \"zero\" => 0\n  \
    \          case \"one\" => 1\n            case \"two\" => 2\n            case\
    \ \"three\" => 3\n            case \"four\" => 4\n            case \"five\" =>\
    \ 5\n            case \"six\" => 6\n            case \"seven\" => 7\n        \
    \    case \"eight\" => 8\n            case \"nine\" => 9\n        })\n       \
    \ nums.sorted.mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        val\
    \ result = sorted.map(x => x match {\n            case 0 => \"zero\"\n       \
    \     case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 =>\
    \ \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n\
    \            case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        result.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        val numeral = sorted.map(x => x match {\n            case 0 => \"zero\"\
    \n            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        numeral.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        val numeral = sorted.map(x => x match {\n            case 0 => \"zero\"\
    \n            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        numeral.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val result = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        result.mkString(\" \")", "       \
    \ val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        nums.sorted.mkString(\" \")", "        val nums = numbers.split(\" \"\
    ).map(x => x match {\n            case \"zero\" => 0\n            case \"one\"\
    \ => 1\n            case \"two\" => 2\n            case \"three\" => 3\n     \
    \       case \"four\" => 4\n            case \"five\" => 5\n            case \"\
    six\" => 6\n            case \"seven\" => 7\n            case \"eight\" => 8\n\
    \            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        val result = sorted.map(x => x match {\n            case 0 => \"zero\"\
    \n            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        result.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        sorted.map(x => x match\
    \ {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n         \
    \   case 2 => \"two\"\n            case 3 => \"three\"\n            case 4 =>\
    \ \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\n  \
    \          case 7 => \"seven\"\n            case 8 => \"eight\"\n            case\
    \ 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        val words = sorted.map(x => x match {\n            case 0 => \"zero\"\
    \n            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        words.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val nums2 = nums.sorted\n        val nums3 = nums2.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        nums3.mkString(\" \")", "        val\
    \ nums = numbers.split(\" \").map(x => x match {\n            case \"zero\" =>\
    \ 0\n            case \"one\" => 1\n            case \"two\" => 2\n          \
    \  case \"three\" => 3\n            case \"four\" => 4\n            case \"five\"\
    \ => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n     \
    \       case \"eight\" => 8\n            case \"nine\" => 9\n        })\n    \
    \    val sorted = nums.sorted\n        sorted.map(x => x match {\n           \
    \ case 0 => \"zero\"\n            case 1 => \"one\"\n            case 2 => \"\
    two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\n     \
    \       case 5 => \"five\"\n            case 6 => \"six\"\n            case 7\
    \ => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val result = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        result.mkString(\" \")", "       \
    \ val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        nums.sorted.mkString(\" \")", "        val nums = numbers.split(\" \"\
    ).map(x => x match {\n            case \"zero\" => 0\n            case \"one\"\
    \ => 1\n            case \"two\" => 2\n            case \"three\" => 3\n     \
    \       case \"four\" => 4\n            case \"five\" => 5\n            case \"\
    six\" => 6\n            case \"seven\" => 7\n            case \"eight\" => 8\n\
    \            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        val result = sorted.map(x => x match {\n            case 0 => \"zero\"\
    \n            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        result.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        val numStrings = sorted.map(x => x match {\n            case 0 => \"\
    zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n       \
    \     case 3 => \"three\"\n            case 4 => \"four\"\n            case 5\
    \ => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\n\
    \            case 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n\
    \        numStrings.mkString(\" \")", "        val nums = numbers.split(\" \"\
    ).map(x => x match {\n            case \"zero\" => 0\n            case \"one\"\
    \ => 1\n            case \"two\" => 2\n            case \"three\" => 3\n     \
    \       case \"four\" => 4\n            case \"five\" => 5\n            case \"\
    six\" => 6\n            case \"seven\" => 7\n            case \"eight\" => 8\n\
    \            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        sorted.map(x => x match {\n            case 0 => \"zero\"\n         \
    \   case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        nums.sorted.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        sorted.map(x => x match {\n            case 0 => \"zero\"\n         \
    \   case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        val sorted = nums.sorted\n        val result = sorted.map(x => x\
    \ match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n   \
    \         case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        result.mkString(\" \")", "       \
    \ val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        val sorted = nums.sorted\n        val numeral = sorted.map(x => x match\
    \ {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n         \
    \   case 2 => \"two\"\n            case 3 => \"three\"\n            case 4 =>\
    \ \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\n  \
    \          case 7 => \"seven\"\n            case 8 => \"eight\"\n            case\
    \ 9 => \"nine\"\n        })\n        numeral.mkString(\" \")", "        val nums\
    \ = numbers.split(\" \").map(x => x match {\n            case \"zero\" => 0\n\
    \            case \"one\" => 1\n            case \"two\" => 2\n            case\
    \ \"three\" => 3\n            case \"four\" => 4\n            case \"five\" =>\
    \ 5\n            case \"six\" => 6\n            case \"seven\" => 7\n        \
    \    case \"eight\" => 8\n            case \"nine\" => 9\n        })\n       \
    \ val sorted = nums.sorted\n        sorted.map(x => x match {\n            case\
    \ 0 => \"zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n\
    \            case 3 => \"three\"\n            case 4 => \"four\"\n           \
    \ case 5 => \"five\"\n            case 6 => \"six\"\n            case 7 => \"\
    seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\n   \
    \     }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x => x\
    \ match {\n            case \"zero\" => 0\n            case \"one\" => 1\n   \
    \         case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        val numsToWords = Map(0 -> \"zero\", 1 -> \"one\", 2 -> \"two\", 3 ->\
    \ \"three\", 4 -> \"four\", 5 -> \"five\", 6 -> \"six\", 7 -> \"seven\", 8 ->\
    \ \"eight\", 9 -> \"nine\")\n        val words = sorted.map(x => numsToWords(x))\n\
    \        words.mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        val\
    \ words = sorted.map(x => x match {\n            case 0 => \"zero\"\n        \
    \    case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        words.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val result = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        result.mkString(\" \")", "       \
    \ val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        val sorted = nums.sorted\n        sorted.map(x => x match {\n       \
    \     case 0 => \"zero\"\n            case 1 => \"one\"\n            case 2 =>\
    \ \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\n \
    \           case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val numsSorted = nums.sorted\n    \
    \    val numsSortedStr = numsSorted.map(x => x match {\n            case 0 =>\
    \ \"zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n   \
    \         case 3 => \"three\"\n            case 4 => \"four\"\n            case\
    \ 5 => \"five\"\n            case 6 => \"six\"\n            case 7 => \"seven\"\
    \n            case 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n\
    \        numsSortedStr.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(_.toInt).sorted\n        nums.mkString(\" \")", "        val nums =\
    \ numbers.split(\" \").map(x => x match {\n            case \"zero\" => 0\n  \
    \          case \"one\" => 1\n            case \"two\" => 2\n            case\
    \ \"three\" => 3\n            case \"four\" => 4\n            case \"five\" =>\
    \ 5\n            case \"six\" => 6\n            case \"seven\" => 7\n        \
    \    case \"eight\" => 8\n            case \"nine\" => 9\n        })\n       \
    \ val sorted = nums.sorted\n        sorted.map(x => x match {\n            case\
    \ 0 => \"zero\"\n            case 1 => \"one\"\n            case 2 => \"two\"\n\
    \            case 3 => \"three\"\n            case 4 => \"four\"\n           \
    \ case 5 => \"five\"\n            case 6 => \"six\"\n            case 7 => \"\
    seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\n   \
    \     }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x => x\
    \ match {\n            case \"zero\" => 0\n            case \"one\" => 1\n   \
    \         case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.mkString(\" \")", "   \
    \     val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        val sorted = nums.sorted\n        sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        val\
    \ words = sorted.map(x => x match {\n            case 0 => \"zero\"\n        \
    \    case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        words.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        sorted.map(x => x match\
    \ {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n         \
    \   case 2 => \"two\"\n            case 3 => \"three\"\n            case 4 =>\
    \ \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\n  \
    \          case 7 => \"seven\"\n            case 8 => \"eight\"\n            case\
    \ 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.mkString(\"\
    \ \")", "        val numeralMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" ->\
    \ 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" ->\
    \ 7, \"eight\" -> 8, \"nine\" -> 9)\n        val numeralList = numbers.split(\"\
    \ \").map(numeralMap(_)).toList.sorted\n        numeralList.map(numeralMap.find(_._2\
    \ == _).get._1).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        val\
    \ result = sorted.map(x => x match {\n            case 0 => \"zero\"\n       \
    \     case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 =>\
    \ \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n\
    \            case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        result.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val result = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        result.mkString(\" \")", "       \
    \ val nums = numbers.split(\" \").map(x => {\n            x match {\n        \
    \        case \"zero\" => 0\n                case \"one\" => 1\n             \
    \   case \"two\" => 2\n                case \"three\" => 3\n                case\
    \ \"four\" => 4\n                case \"five\" => 5\n                case \"six\"\
    \ => 6\n                case \"seven\" => 7\n                case \"eight\" =>\
    \ 8\n                case \"nine\" => 9\n            }\n        })\n        val\
    \ sorted = nums.sorted\n        val words = sorted.map(x => {\n            x match\
    \ {\n                case 0 => \"zero\"\n                case 1 => \"one\"\n \
    \               case 2 => \"two\"\n                case 3 => \"three\"\n     \
    \           case 4 => \"four\"\n                case 5 => \"five\"\n         \
    \       case 6 => \"six\"\n                case 7 => \"seven\"\n             \
    \   case 8 => \"eight\"\n                case 9 => \"nine\"\n            }\n \
    \       })\n        words.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        sorted.map(x => x match {\n            case 0 => \"zero\"\n         \
    \   case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        val sorted = nums.sorted\n        val result = sorted.map(x => x\
    \ match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n   \
    \         case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        result.mkString(\" \")", "       \
    \ val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        val sorted = nums.sorted\n        val result = sorted.map(x => x match\
    \ {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n         \
    \   case 2 => \"two\"\n            case 3 => \"three\"\n            case 4 =>\
    \ \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\n  \
    \          case 7 => \"seven\"\n            case 8 => \"eight\"\n            case\
    \ 9 => \"nine\"\n        })\n        result.mkString(\" \")", "        val nums\
    \ = numbers.split(\" \").map(x => x match {\n            case \"zero\" => 0\n\
    \            case \"one\" => 1\n            case \"two\" => 2\n            case\
    \ \"three\" => 3\n            case \"four\" => 4\n            case \"five\" =>\
    \ 5\n            case \"six\" => 6\n            case \"seven\" => 7\n        \
    \    case \"eight\" => 8\n            case \"nine\" => 9\n        })\n       \
    \ nums.sorted.mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        val\
    \ words = sorted.map(x => x match {\n            case 0 => \"zero\"\n        \
    \    case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        words.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val words = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        words.mkString(\" \")", "        val\
    \ nums = numbers.split(\" \").map(x => x match {\n            case \"zero\" =>\
    \ 0\n            case \"one\" => 1\n            case \"two\" => 2\n          \
    \  case \"three\" => 3\n            case \"four\" => 4\n            case \"five\"\
    \ => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n     \
    \       case \"eight\" => 8\n            case \"nine\" => 9\n        })\n    \
    \    val sorted = nums.sorted\n        val numStrings = sorted.map(x => x match\
    \ {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n         \
    \   case 2 => \"two\"\n            case 3 => \"three\"\n            case 4 =>\
    \ \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\n  \
    \          case 7 => \"seven\"\n            case 8 => \"eight\"\n            case\
    \ 9 => \"nine\"\n        })\n        numStrings.mkString(\" \")", "        val\
    \ nums = numbers.split(\" \").map(x => x match {\n            case \"zero\" =>\
    \ 0\n            case \"one\" => 1\n            case \"two\" => 2\n          \
    \  case \"three\" => 3\n            case \"four\" => 4\n            case \"five\"\
    \ => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n     \
    \       case \"eight\" => 8\n            case \"nine\" => 9\n        })\n    \
    \    val sorted = nums.sorted\n        val words = sorted.map(x => x match {\n\
    \            case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        })\n        words.mkString(\" \")", "        val numMap = Map(\"zero\"\
    \ -> 0, \"one\" -> 1, \"two\" -> 2, \"three\" -> 3, \"four\" -> 4, \"five\" ->\
    \ 5, \"six\" -> 6, \"seven\" -> 7, \"eight\" -> 8, \"nine\" -> 9)\n        val\
    \ nums = numbers.split(\" \").map(numMap(_)).sorted\n        nums.map(num => numMap.find(_._2\
    \ == num).get._1).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        val\
    \ numStrings = sorted.map(x => x match {\n            case 0 => \"zero\"\n   \
    \         case 1 => \"one\"\n            case 2 => \"two\"\n            case 3\
    \ => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        numStrings.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val words = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        words.mkString(\" \")", "        val\
    \ nums = numbers.split(\" \").map(x => x match {\n            case \"zero\" =>\
    \ 0\n            case \"one\" => 1\n            case \"two\" => 2\n          \
    \  case \"three\" => 3\n            case \"four\" => 4\n            case \"five\"\
    \ => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n     \
    \       case \"eight\" => 8\n            case \"nine\" => 9\n        })\n    \
    \    val sorted = nums.sorted\n        val words = sorted.map(x => x match {\n\
    \            case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        })\n        words.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        sorted.mkString(\" \")", "        val numeralMap = Map(\"zero\" -> 0,\
    \ \"one\" -> 1, \"two\" -> 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"\
    six\" -> 6, \"seven\" -> 7, \"eight\" -> 8, \"nine\" -> 9)\n        val nums =\
    \ numbers.split(\" \").map(numeralMap(_)).sorted\n        nums.map(numeralMap.find(_._2\
    \ == _).get._1).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.mkString(\" \")", "   \
    \     val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        val sorted = nums.sorted\n        sorted.map(x => x match {\n  \
    \          case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        nums.sorted.mkString(\" \")", "   \
    \     val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        nums.sorted.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val words = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        words.mkString(\" \")", "        val\
    \ nums = numbers.split(\" \").map(x => x match {\n            case \"zero\" =>\
    \ 0\n            case \"one\" => 1\n            case \"two\" => 2\n          \
    \  case \"three\" => 3\n            case \"four\" => 4\n            case \"five\"\
    \ => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n     \
    \       case \"eight\" => 8\n            case \"nine\" => 9\n        })\n    \
    \    nums.sorted.mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        val\
    \ numeral = sorted.map(x => x match {\n            case 0 => \"zero\"\n      \
    \      case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 =>\
    \ \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n\
    \            case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        numeral.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val numeral = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        numeral.mkString(\" \")", "      \
    \  val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        val sorted = nums.sorted\n        val result = sorted.map(x => x match\
    \ {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n         \
    \   case 2 => \"two\"\n            case 3 => \"three\"\n            case 4 =>\
    \ \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\n  \
    \          case 7 => \"seven\"\n            case 8 => \"eight\"\n            case\
    \ 9 => \"nine\"\n        })\n        result.mkString(\" \")", "        val nums\
    \ = numbers.split(\" \").map(numeralToInt).sorted\n        nums.map(intToNumeral).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val numStrings = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        numStrings.mkString(\" \")", "   \
    \     val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        val sorted = nums.sorted\n        val result = sorted.map(x => x\
    \ match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n   \
    \         case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        result.mkString(\" \")", "       \
    \ val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        val sorted = nums.sorted\n        sorted.map(x => x match {\n       \
    \     case 0 => \"zero\"\n            case 1 => \"one\"\n            case 2 =>\
    \ \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\n \
    \           case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        val\
    \ words = sorted.map(x => x match {\n            case 0 => \"zero\"\n        \
    \    case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        words.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val words = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        words.mkString(\" \")", "        val\
    \ nums = numbers.split(\" \").map(x => x match {\n            case \"zero\" =>\
    \ 0\n            case \"one\" => 1\n            case \"two\" => 2\n          \
    \  case \"three\" => 3\n            case \"four\" => 4\n            case \"five\"\
    \ => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n     \
    \       case \"eight\" => 8\n            case \"nine\" => 9\n        })\n    \
    \    val sorted = nums.sorted\n        val result = sorted.map(x => x match {\n\
    \            case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        })\n        result.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        val words = sorted.map(x => x match {\n            case 0 => \"zero\"\
    \n            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        words.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val result = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        result.mkString(\" \")", "       \
    \ val numeralToInt = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"three\"\
    \ -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\"\
    \ -> 8, \"nine\" -> 9)\n        val intToNumeral = Map(0 -> \"zero\", 1 -> \"\
    one\", 2 -> \"two\", 3 -> \"three\", 4 -> \"four\", 5 -> \"five\", 6 -> \"six\"\
    , 7 -> \"seven\", 8 -> \"eight\", 9 -> \"nine\")\n        val numbersList = numbers.split(\"\
    \ \").toList\n        val numbersIntList = numbersList.map(numeralToInt(_))\n\
    \        val numbersIntListSorted = numbersIntList.sorted\n        val numbersListSorted\
    \ = numbersIntListSorted.map(intToNumeral(_))\n        numbersListSorted.mkString(\"\
    \ \")", "        val numeralMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" ->\
    \ 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" ->\
    \ 7, \"eight\" -> 8, \"nine\" -> 9)\n        val numeralList = numbers.split(\"\
    \ \").map(numeralMap(_)).sorted\n        numeralList.map(numeralMap.find(_._2\
    \ == _).get._1).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        val\
    \ result = sorted.map(x => x match {\n            case 0 => \"zero\"\n       \
    \     case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 =>\
    \ \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n\
    \            case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        result.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val numeral = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        numeral.mkString(\" \")", "      \
    \  val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        val sorted = nums.sorted\n        val result = sorted.map(x => x match\
    \ {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n         \
    \   case 2 => \"two\"\n            case 3 => \"three\"\n            case 4 =>\
    \ \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\n  \
    \          case 7 => \"seven\"\n            case 8 => \"eight\"\n            case\
    \ 9 => \"nine\"\n        })\n        result.mkString(\" \")", "        val nums\
    \ = numbers.split(\" \").map(x => x match {\n            case \"zero\" => 0\n\
    \            case \"one\" => 1\n            case \"two\" => 2\n            case\
    \ \"three\" => 3\n            case \"four\" => 4\n            case \"five\" =>\
    \ 5\n            case \"six\" => 6\n            case \"seven\" => 7\n        \
    \    case \"eight\" => 8\n            case \"nine\" => 9\n        })\n       \
    \ nums.sorted.mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        val\
    \ numsStr = sorted.map(x => x match {\n            case 0 => \"zero\"\n      \
    \      case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 =>\
    \ \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n\
    \            case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        numsStr.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        sorted.map(x => x match\
    \ {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n         \
    \   case 2 => \"two\"\n            case 3 => \"three\"\n            case 4 =>\
    \ \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\n  \
    \          case 7 => \"seven\"\n            case 8 => \"eight\"\n            case\
    \ 9 => \"nine\"\n        }).mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => {\n            x match {\n                case \"zero\" => 0\n\
    \                case \"one\" => 1\n                case \"two\" => 2\n      \
    \          case \"three\" => 3\n                case \"four\" => 4\n         \
    \       case \"five\" => 5\n                case \"six\" => 6\n              \
    \  case \"seven\" => 7\n                case \"eight\" => 8\n                case\
    \ \"nine\" => 9\n            }\n        })\n        nums.sorted.map(x => {\n \
    \           x match {\n                case 0 => \"zero\"\n                case\
    \ 1 => \"one\"\n                case 2 => \"two\"\n                case 3 => \"\
    three\"\n                case 4 => \"four\"\n                case 5 => \"five\"\
    \n                case 6 => \"six\"\n                case 7 => \"seven\"\n   \
    \             case 8 => \"eight\"\n                case 9 => \"nine\"\n      \
    \      }\n        }).mkString(\" \")", "        val nums = numbers.split(\" \"\
    ).map(s => s match {\n            case \"zero\" => 0\n            case \"one\"\
    \ => 1\n            case \"two\" => 2\n            case \"three\" => 3\n     \
    \       case \"four\" => 4\n            case \"five\" => 5\n            case \"\
    six\" => 6\n            case \"seven\" => 7\n            case \"eight\" => 8\n\
    \            case \"nine\" => 9\n        })\n        nums.sorted.mkString(\" \"\
    )", "        val nums = numbers.split(\" \").map(x => x match {\n            case\
    \ \"zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n\
    \            case \"three\" => 3\n            case \"four\" => 4\n           \
    \ case \"five\" => 5\n            case \"six\" => 6\n            case \"seven\"\
    \ => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n    \
    \    })\n        nums.sorted.mkString(\" \")", "        val numeralMap = Map(\"\
    zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"three\" -> 3, \"four\" -> 4, \"five\"\
    \ -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\" -> 8, \"nine\" -> 9)\n       \
    \ val nums = numbers.split(\" \").map(numeralMap(_)).sorted\n        nums.map(numeralMap.find(_._2\
    \ == _).get._1).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        val\
    \ result = sorted.map(x => x match {\n            case 0 => \"zero\"\n       \
    \     case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 =>\
    \ \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n\
    \            case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        result.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val numeral = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        numeral.mkString(\" \")", "      \
    \  val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        val sorted = nums.sorted\n        val result = sorted.map(x => x match\
    \ {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n         \
    \   case 2 => \"two\"\n            case 3 => \"three\"\n            case 4 =>\
    \ \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\n  \
    \          case 7 => \"seven\"\n            case 8 => \"eight\"\n            case\
    \ 9 => \"nine\"\n        })\n        result.mkString(\" \")", "        val nums\
    \ = numbers.split(\" \").map(x => x match {\n            case \"zero\" => 0\n\
    \            case \"one\" => 1\n            case \"two\" => 2\n            case\
    \ \"three\" => 3\n            case \"four\" => 4\n            case \"five\" =>\
    \ 5\n            case \"six\" => 6\n            case \"seven\" => 7\n        \
    \    case \"eight\" => 8\n            case \"nine\" => 9\n        })\n       \
    \ val sorted = nums.sorted\n        val result = sorted.map(x => x match {\n \
    \           case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        })\n        result.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").toList\n        val numMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" ->\
    \ 2, \"three\" -> 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" ->\
    \ 7, \"eight\" -> 8, \"nine\" -> 9)\n        val numsInt = nums.map(numMap(_))\n\
    \        val sortedNums = numsInt.sorted\n        val sortedNumsStr = sortedNums.map(numMap.map(_.swap))\n\
    \        sortedNumsStr.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        val result = sorted.map(x => x match {\n            case 0 => \"zero\"\
    \n            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        result.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(numeralToInt)\n        val\
    \ sorted = nums.sorted\n        sorted.map(intToNumeral).mkString(\" \")", " \
    \       val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        val sorted = nums.sorted\n        val result = sorted.map(x => x\
    \ match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n   \
    \         case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        result.mkString(\" \")", "       \
    \ val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        val sorted = nums.sorted\n        val numStrings = sorted.map(x => x\
    \ match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n   \
    \         case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        numStrings.mkString(\" \")", "   \
    \     val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        val sorted = nums.sorted\n        val numeral = sorted.map(x =>\
    \ x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n \
    \           case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        numeral.mkString(\" \")", "      \
    \  val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        val sorted = nums.sorted\n        val res = sorted.map(x => x match {\n\
    \            case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        })\n        res.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        sorted.map(x => x match {\n            case 0 => \"zero\"\n         \
    \   case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 => \"\
    three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n    \
    \        case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        }).mkString(\" \")",
  "        // TODO: Implement me\n        return \"\"", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        val result = sorted.map(x => x match {\n            case 0 => \"zero\"\
    \n            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        result.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        val result = sorted.map(x => x match {\n            case 0 => \"zero\"\
    \n            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        result.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val result = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        result.mkString(\" \")", "       \
    \ val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        val sorted = nums.sorted\n        sorted.map(x => x match {\n       \
    \     case 0 => \"zero\"\n            case 1 => \"one\"\n            case 2 =>\
    \ \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\n \
    \           case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        val\
    \ result = sorted.map(x => x match {\n            case 0 => \"zero\"\n       \
    \     case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 =>\
    \ \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n\
    \            case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        result.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        nums.sorted.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val result = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        result.mkString(\" \")", "       \
    \ val numeralMap = Map(\"zero\" -> 0, \"one\" -> 1, \"two\" -> 2, \"three\" ->\
    \ 3, \"four\" -> 4, \"five\" -> 5, \"six\" -> 6, \"seven\" -> 7, \"eight\" ->\
    \ 8, \"nine\" -> 9)\n        val nums = numbers.split(\" \").map(numeralMap(_)).sorted\n\
    \        nums.map(num => numeralMap.find(_._2 == num).get._1).mkString(\" \")",
  "        val nums = numbers.split(\" \").map(x => x match {\n            case \"\
    zero\" => 0\n            case \"one\" => 1\n            case \"two\" => 2\n  \
    \          case \"three\" => 3\n            case \"four\" => 4\n            case\
    \ \"five\" => 5\n            case \"six\" => 6\n            case \"seven\" =>\
    \ 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n       \
    \ })\n        val sorted = nums.sorted\n        val result = sorted.map(x => x\
    \ match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n   \
    \         case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        result.mkString(\" \")", "       \
    \ val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        val sorted = nums.sorted\n        sorted.map(x => x match {\n       \
    \     case 0 => \"zero\"\n            case 1 => \"one\"\n            case 2 =>\
    \ \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\n \
    \           case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => x match {\n            case \"zero\" => 0\n            case \"one\" => 1\n\
    \            case \"two\" => 2\n            case \"three\" => 3\n            case\
    \ \"four\" => 4\n            case \"five\" => 5\n            case \"six\" => 6\n\
    \            case \"seven\" => 7\n            case \"eight\" => 8\n          \
    \  case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n        val\
    \ numeral = sorted.map(x => x match {\n            case 0 => \"zero\"\n      \
    \      case 1 => \"one\"\n            case 2 => \"two\"\n            case 3 =>\
    \ \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\n\
    \            case 6 => \"six\"\n            case 7 => \"seven\"\n            case\
    \ 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        return numeral.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val numeral = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        numeral.mkString(\" \")", "      \
    \  val nums = numbers.split(\" \").map(x => x match {\n            case \"zero\"\
    \ => 0\n            case \"one\" => 1\n            case \"two\" => 2\n       \
    \     case \"three\" => 3\n            case \"four\" => 4\n            case \"\
    five\" => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n\
    \            case \"eight\" => 8\n            case \"nine\" => 9\n        })\n\
    \        val sorted = nums.sorted\n        sorted.map(x => x match {\n       \
    \     case 0 => \"zero\"\n            case 1 => \"one\"\n            case 2 =>\
    \ \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\n \
    \           case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        }).mkString(\" \")", "        val nums = numbers.split(\" \").map(x\
    \ => {\n            x match {\n                case \"zero\" => 0\n          \
    \      case \"one\" => 1\n                case \"two\" => 2\n                case\
    \ \"three\" => 3\n                case \"four\" => 4\n                case \"\
    five\" => 5\n                case \"six\" => 6\n                case \"seven\"\
    \ => 7\n                case \"eight\" => 8\n                case \"nine\" =>\
    \ 9\n            }\n        })\n        val sorted = nums.sorted\n        val\
    \ numWords = sorted.map(x => {\n            x match {\n                case 0\
    \ => \"zero\"\n                case 1 => \"one\"\n                case 2 => \"\
    two\"\n                case 3 => \"three\"\n                case 4 => \"four\"\
    \n                case 5 => \"five\"\n                case 6 => \"six\"\n    \
    \            case 7 => \"seven\"\n                case 8 => \"eight\"\n      \
    \          case 9 => \"nine\"\n            }\n        })\n        numWords.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val words = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        words.mkString(\" \")", "        var\
    \ nums = numbers.split(\" \").map(x => x match {\n            case \"zero\" =>\
    \ 0\n            case \"one\" => 1\n            case \"two\" => 2\n          \
    \  case \"three\" => 3\n            case \"four\" => 4\n            case \"five\"\
    \ => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n     \
    \       case \"eight\" => 8\n            case \"nine\" => 9\n        })\n    \
    \    nums = nums.sorted\n        var result = \"\"\n        for (i <- 0 until\
    \ nums.length) {\n            result += nums(i) match {\n                case\
    \ 0 => \"zero\"\n                case 1 => \"one\"\n                case 2 =>\
    \ \"two\"\n                case 3 => \"three\"\n                case 4 => \"four\"\
    \n                case 5 => \"five\"\n                case 6 => \"six\"\n    \
    \            case 7 => \"seven\"\n                case 8 => \"eight\"\n      \
    \          case 9 => \"nine\"\n            }\n            if (i != nums.length\
    \ - 1) result += \" \"\n        }\n        result", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val nums2 = nums.sorted\n\
    \        val nums3 = nums2.map(x => x match {\n            case 0 => \"zero\"\n\
    \            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        nums3.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val result = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        result.mkString(\" \")", "       \
    \ val nums = numbers.split(\" \").map(toInt(_)).sorted\n        nums.map(toString(_)).mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        val sorted = nums.sorted\n        val words = sorted.map(x\
    \ => x match {\n            case 0 => \"zero\"\n            case 1 => \"one\"\n\
    \            case 2 => \"two\"\n            case 3 => \"three\"\n            case\
    \ 4 => \"four\"\n            case 5 => \"five\"\n            case 6 => \"six\"\
    \n            case 7 => \"seven\"\n            case 8 => \"eight\"\n         \
    \   case 9 => \"nine\"\n        })\n        words.mkString(\" \")", "        val\
    \ nums = numbers.split(\" \").map(x => x match {\n            case \"zero\" =>\
    \ 0\n            case \"one\" => 1\n            case \"two\" => 2\n          \
    \  case \"three\" => 3\n            case \"four\" => 4\n            case \"five\"\
    \ => 5\n            case \"six\" => 6\n            case \"seven\" => 7\n     \
    \       case \"eight\" => 8\n            case \"nine\" => 9\n        })\n    \
    \    val sorted = nums.sorted\n        val result = sorted.map(x => x match {\n\
    \            case 0 => \"zero\"\n            case 1 => \"one\"\n            case\
    \ 2 => \"two\"\n            case 3 => \"three\"\n            case 4 => \"four\"\
    \n            case 5 => \"five\"\n            case 6 => \"six\"\n            case\
    \ 7 => \"seven\"\n            case 8 => \"eight\"\n            case 9 => \"nine\"\
    \n        })\n        result.mkString(\" \")", "        val nums = numbers.split(\"\
    \ \").map(x => x match {\n            case \"zero\" => 0\n            case \"\
    one\" => 1\n            case \"two\" => 2\n            case \"three\" => 3\n \
    \           case \"four\" => 4\n            case \"five\" => 5\n            case\
    \ \"six\" => 6\n            case \"seven\" => 7\n            case \"eight\" =>\
    \ 8\n            case \"nine\" => 9\n        })\n        val sorted = nums.sorted\n\
    \        val result = sorted.map(x => x match {\n            case 0 => \"zero\"\
    \n            case 1 => \"one\"\n            case 2 => \"two\"\n            case\
    \ 3 => \"three\"\n            case 4 => \"four\"\n            case 5 => \"five\"\
    \n            case 6 => \"six\"\n            case 7 => \"seven\"\n           \
    \ case 8 => \"eight\"\n            case 9 => \"nine\"\n        })\n        result.mkString(\"\
    \ \")", "        val nums = numbers.split(\" \").map(x => x match {\n        \
    \    case \"zero\" => 0\n            case \"one\" => 1\n            case \"two\"\
    \ => 2\n            case \"three\" => 3\n            case \"four\" => 4\n    \
    \        case \"five\" => 5\n            case \"six\" => 6\n            case \"\
    seven\" => 7\n            case \"eight\" => 8\n            case \"nine\" => 9\n\
    \        })\n        nums.sorted.mkString(\" \")"]
stop_tokens:
- "\n    }\n"

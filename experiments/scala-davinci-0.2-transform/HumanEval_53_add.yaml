name: HumanEval_53_add
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n    //\
  \ >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(add((0l), (1l)) ==\
  \ (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n\
  \    assert(add((5l), (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n\
  \    }\n\n}\n"
completions: ["        var carry = 0l\n        var sum = 0l\n        var x1 = x\n\
    \        var y1 = y\n        while (x1 != 0 || y1 != 0) {\n            sum = sum\
    \ << 1\n            sum = sum | (x1 & 1) ^ (y1 & 1) ^ carry\n            carry\
    \ = ((x1 & 1) & (y1 & 1)) | ((x1 & 1) & carry) | ((y1 & 1) & carry)\n        \
    \    x1 = x1 >> 1\n            y1 = y1 >> 1\n        }\n        if (carry == 1)\
    \ {\n            sum = sum << 1\n            sum = sum | carry\n        }\n  \
    \      return sum", '        return x + y', '        return x + y', '        return
    x + y', '        return x + y', '        return x + y', '        return x + y',
  '        return x + y', '        return x + y', '        return x + y', '        return
    x + y', '        return x + y', '        return x + y', '        return x + y',
  '        return x + y', '        return x + y', "        if (y == 0) x\n       \
    \ else add(x ^ y, (x & y) << 1)", '        return x + y', "        if (y == 0)\
    \ x\n        else add(x ^ y, (x & y) << 1)", "        if (y == 0) return x\n \
    \       val sum = x ^ y\n        val carry = (x & y) << 1\n        return add(sum,\
    \ carry)"]
stop_tokens:
- "\n    }\n"

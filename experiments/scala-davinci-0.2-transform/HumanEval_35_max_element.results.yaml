language: scala
name: HumanEval_35_max_element
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var m = l(0)\n        for (i <- 1 until l.length)\
    \ {\n            if (l(i) > m) m = l(i)\n        }\n        return m\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- l)\
    \ {\n            if (i > max) {\n                max = i\n            }\n    \
    \    }\n        return max\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (3l));\n\
    \    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong,\
    \ -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong, -10l.toLong)))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0l\n        for (i <- l)\
    \ {\n            if (i > max) {\n                max = i\n            }\n    \
    \    }\n        return max\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (3l));\n\
    \    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong,\
    \ -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong, -10l.toLong)))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0l\n        for (i <- l)\
    \ {\n            if (i > max) {\n                max = i\n            }\n    \
    \    }\n        return max\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (3l));\n\
    \    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong,\
    \ -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong, -10l.toLong)))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) max = l(i)\n        }\n     \
    \   return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var m : Long = l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) > m) {\n                m = l(i)\n       \
    \     }\n        }\n        return m\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) max = l(i)\n        }\n     \
    \   return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) max = l(i)\n        }\n     \
    \   return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0\n        for (i <- l) {\n\
    \            if (i > max) {\n                max = i\n            }\n        }\n\
    \        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        // >>> maxElement((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong)))\n        // (3l)\n        // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n        // (123l)\n        l.max\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) max = l(i)\n        }\n     \
    \   return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0l\n        for (i <- l)\
    \ {\n            if (i > max) max = i\n        }\n        return max\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0l\n        for (i <- l)\
    \ {\n            if (i > max) {\n                max = i\n            }\n    \
    \    }\n        return max\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (3l));\n\
    \    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong,\
    \ -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong, -10l.toLong)))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) max = l(i)\n        }\n     \
    \   return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0l\n        for (i <- l)\
    \ {\n            if (i > max) {\n                max = i\n            }\n    \
    \    }\n        return max\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (3l));\n\
    \    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong,\
    \ -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong, -10l.toLong)))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0\n        for (i <- l) {\n\
    \            if (i > max) {\n                max = i\n            }\n        }\n\
    \        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max = l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) > max) max = l(i)\n        }\n        return\
    \ max\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0l\n        for (i <- l)\
    \ {\n            if (i > max) {\n                max = i\n            }\n    \
    \    }\n        return max\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (3l));\n\
    \    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong,\
    \ -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong, -10l.toLong)))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) max = l(i)\n        }\n     \
    \   return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 0\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max = l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) > max) {\n                max = l(i)\n   \
    \         }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0l\n        for (i <- l)\
    \ {\n            if (i > max) {\n                max = i\n            }\n    \
    \    }\n        return max\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (3l));\n\
    \    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong,\
    \ -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong, -10l.toLong)))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var m : Long = l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) > m) {\n                m = l(i)\n       \
    \     }\n        }\n        return m\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        // >>> maxElement((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong)))\n        // (3l)\n        // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n        // (123l)\n        // >>> maxElement((List[Long](-1l.toLong,\
    \ -2l.toLong, -3l.toLong)))\n        // (-1l)\n        // >>> maxElement((List[Long](-5l.toLong,\
    \ -3l.toLong, 5l.toLong, -2l.toLong, 3l.toLong, -3l.toLong, -9l.toLong, 0l.toLong,\
    \ -123l.toLong, -1l.toLong, 10l.toLong)))\n        // (10l)\n        // >>> maxElement((List[Long](-1l.toLong,\
    \ 1l.toLong)))\n        // (1l)\n        // >>> maxElement((List[Long](1l.toLong,\
    \ -1l.toLong)))\n        // (1l)\n        // >>> maxElement((List[Long](0l.toLong,\
    \ 0l.toLong)))\n        // (0l)\n        // >>> maxElement((List[Long](-1l.toLong,\
    \ 0l.toLong)))\n        // (0l)\n        // >>> maxElement((List[Long](0l.toLong,\
    \ -1l.toLong)))\n        // (0l)\n        // >>> maxElement((List[Long](1l.toLong,\
    \ 0l.toLong)))\n        // (1l)\n        // >>> maxElement((List[Long](0l.toLong,\
    \ 1l.toLong)))\n        // (1l)\n        // >>> maxElement((List[Long](0l.toLong,\
    \ 0l.toLong, 0l.toLong)))\n        // (0l)\n        // >>> maxElement((List[\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6ssykbrd.scala:9:44\
    \ ---------------------\e[0m\e[0m\n\e[31m 9 |\e[0m    \e[33mdef\e[0m \e[36mmaxElement\e\
    [0m(\e[36ml\e[0m : \e[35mList\e[0m[\e[35mLong\e[0m]) : \e[35mLong\e[0m = {\n\e\
    [31m\e[31m   |\e[0m                                            ^\e[0m\n\e[31m\
    \   |\e[0m                                            Found:    Unit\n\e[31m \
    \  |\e[0m                                            Required: Long\n\e[31m10\
    \ |\e[0m        \e[34m// >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\e\
    [0m\n\e[31m11 |\e[0m        \e[34m// (3l)\e[0m\n\e[31m12 |\e[0m        \e[34m//\
    \ >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong,\
    \ 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\e[0m\n\
    \e[31m13 |\e[0m        \e[34m// (123l)\e[0m\n\e[31m14 |\e[0m        \e[34m// >>>\
    \ maxElement((List[Long](-1l.toLong, -2l.toLong, -3l.toLong)))\e[0m\n\e[31m15\
    \ |\e[0m        \e[34m// (-1l)\e[0m\n\e[31m16 |\e[0m        \e[34m// >>> maxElement((List[Long](-5l.toLong,\
    \ -3l.toLong, 5l.toLong, -2l.toLong, 3l.toLong, -3l.toLong, -9l.toLong, 0l.toLong,\
    \ -123l.toLong, -1l.toLong, 10l.toLong)))\e[0m\n\e[31m17 |\e[0m        \e[34m//\
    \ (10l)\e[0m\n\e[31m18 |\e[0m        \e[34m// >>> maxElement((List[Long](-1l.toLong,\
    \ 1l.toLong)))\e[0m\n\e[31m19 |\e[0m        \e[34m// (1l)\e[0m\n\e[31m20 |\e[0m\
    \        \e[34m// >>> maxElement((List[Long](1l.toLong, -1l.toLong)))\e[0m\n\e\
    [31m21 |\e[0m        \e[34m// (1l)\e[0m\n\e[31m22 |\e[0m        \e[34m// >>> maxElement((List[Long](0l.toLong,\
    \ 0l.toLong)))\e[0m\n\e[31m23 |\e[0m        \e[34m// (0l)\e[0m\n\e[31m24 |\e[0m\
    \        \e[34m// >>> maxElement((List[Long](-1l.toLong, 0l.toLong)))\e[0m\n\e\
    [31m25 |\e[0m        \e[34m// (0l)\e[0m\n\e[31m26 |\e[0m        \e[34m// >>> maxElement((List[Long](0l.toLong,\
    \ -1l.toLong)))\e[0m\n\e[31m27 |\e[0m        \e[34m// (0l)\e[0m\n\e[31m28 |\e\
    [0m        \e[34m// >>> maxElement((List[Long](1l.toLong, 0l.toLong)))\e[0m\n\e\
    [31m29 |\e[0m        \e[34m// (1l)\e[0m\n\e[31m30 |\e[0m        \e[34m// >>> maxElement((List[Long](0l.toLong,\
    \ 1l.toLong)))\e[0m\n\e[31m31 |\e[0m        \e[34m// (1l)\e[0m\n\e[31m32 |\e[0m\
    \        \e[34m// >>> ma"
  stdout: ''
  timestamp: 1659792538
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max = l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) > max) {\n                max = l(i)\n   \
    \         }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = Long.MinValue\n        for\
    \ (i <- l) {\n            if (i > max) {\n                max = i\n          \
    \  }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0l\n        for (i <- l)\
    \ {\n            if (i > max) {\n                max = i\n            }\n    \
    \    }\n        return max\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (3l));\n\
    \    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong,\
    \ -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong, -10l.toLong)))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 0\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0l\n        for (i <- l)\
    \ {\n            if (i > max) {\n                max = i\n            }\n    \
    \    }\n        return max\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (3l));\n\
    \    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong,\
    \ -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong, -10l.toLong)))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max = l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) > max) max = l(i)\n        }\n        return\
    \ max\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        // >>> maxElement((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong)))\n        // (3l)\n        // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n        // (123l)\n        return l.max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792538
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0l\n        for (i <- l)\
    \ {\n            if (i > max) {\n                max = i\n            }\n    \
    \    }\n        return max\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (3l));\n\
    \    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong,\
    \ -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong, -10l.toLong)))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max = l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) > max) {\n                max = l(i)\n   \
    \         }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max = l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) > max) max = l(i)\n        }\n        return\
    \ max\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max = l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) > max) max = l(i)\n        }\n        return\
    \ max\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0l\n        for (i <- l)\
    \ {\n            if (i > max) {\n                max = i\n            }\n    \
    \    }\n        return max\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (3l));\n\
    \    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong,\
    \ -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong, -10l.toLong)))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0l\n        for (i <- l)\
    \ {\n            if (i > max) {\n                max = i\n            }\n    \
    \    }\n        return max\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (3l));\n\
    \    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong,\
    \ -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong, -10l.toLong)))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max = l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) > max) max = l(i)\n        }\n        return\
    \ max\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = Long.MinValue\n        for\
    \ (i <- l) {\n            if (i > max) {\n                max = i\n          \
    \  }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max = l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) > max) {\n                max = l(i)\n   \
    \         }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        // >>> maxElement((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong)))\n        // (3l)\n        // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n        // (123l)\n        // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n        // (3l)\n        // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n        // (123l)\n        // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n        // (3l)\n        // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n        // (123l)\n        // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n        // (3l)\n        // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n        // (123l)\n        // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp86pkg0vw.scala:9:44\
    \ ---------------------\e[0m\e[0m\n\e[31m 9 |\e[0m    \e[33mdef\e[0m \e[36mmaxElement\e\
    [0m(\e[36ml\e[0m : \e[35mList\e[0m[\e[35mLong\e[0m]) : \e[35mLong\e[0m = {\n\e\
    [31m\e[31m   |\e[0m                                            ^\e[0m\n\e[31m\
    \   |\e[0m                                            Found:    Unit\n\e[31m \
    \  |\e[0m                                            Required: Long\n\e[31m10\
    \ |\e[0m        \e[34m// >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\e\
    [0m\n\e[31m11 |\e[0m        \e[34m// (3l)\e[0m\n\e[31m12 |\e[0m        \e[34m//\
    \ >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong,\
    \ 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\e[0m\n\
    \e[31m13 |\e[0m        \e[34m// (123l)\e[0m\n\e[31m14 |\e[0m        \e[34m// >>>\
    \ maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\e[0m\n\e[31m15 |\e\
    [0m        \e[34m// (3l)\e[0m\n\e[31m16 |\e[0m        \e[34m// >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\e[0m\n\e[31m17 |\e[0m        \e[34m//\
    \ (123l)\e[0m\n\e[31m18 |\e[0m        \e[34m// >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\e[0m\n\e[31m19 |\e[0m        \e[34m// (3l)\e[0m\n\e\
    [31m20 |\e[0m        \e[34m// >>> maxElement((List[Long](5l.toLong, 3l.toLong,\
    \ -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong,\
    \ 1l.toLong, -10l.toLong)))\e[0m\n\e[31m21 |\e[0m        \e[34m// (123l)\e[0m\n\
    \e[31m22 |\e[0m        \e[34m// >>> maxElement((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong)))\e[0m\n\e[31m23 |\e[0m        \e[34m// (3l)\e[0m\n\e[31m24 |\e[0m\
    \        \e[34m// >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong,\
    \ -10l.toLong)))\e[0m\n\e[31m25 |\e[0m        \e[34m// (123l)\e[0m\n\e[31m26 |\e\
    [0m        \e[34m// >>> maxElement((List[Long](1l.toLong, 2l.\e[0m\n\e[31m27 |\e\
    [0m    }\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-exp"
  stdout: ''
  timestamp: 1659792499
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) max = l(i)\n        }\n     \
    \   return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max = l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) > max) max = l(i)\n        }\n        return\
    \ max\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0\n        for (i <- l) {\n\
    \            if (i > max) {\n                max = i\n            }\n        }\n\
    \        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0\n        for (i <- l) {\n\
    \            if (i > max) {\n                max = i\n            }\n        }\n\
    \        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max = l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) > max) max = l(i)\n        }\n        return\
    \ max\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 0\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max = l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) > max) max = l(i)\n        }\n        return\
    \ max\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        // >>> maxElement((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong)))\n        // (3l)\n        // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n        // (123l)\n        l.max\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var m = l(0)\n        for (i <- 1 until l.length)\
    \ {\n            if (l(i) > m) m = l(i)\n        }\n        return m\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0l\n        for (i <- l)\
    \ {\n            if (i > max) {\n                max = i\n            }\n    \
    \    }\n        return max\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (3l));\n\
    \    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong,\
    \ -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong, -10l.toLong)))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var m : Long = l(0)\n        for (i <- l)\
    \ {\n            if (i > m) {\n                m = i\n            }\n        }\n\
    \        return m\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792539
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0l\n        for (i <- l)\
    \ {\n            if (i > max) {\n                max = i\n            }\n    \
    \    }\n        return max\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (3l));\n\
    \    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong,\
    \ -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong, -10l.toLong)))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0l\n        for (i <- l)\
    \ {\n            if (i > max) {\n                max = i\n            }\n    \
    \    }\n        return max\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (3l));\n\
    \    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong,\
    \ -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong, -10l.toLong)))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var m : Long = l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) > m) {\n                m = l(i)\n       \
    \     }\n        }\n        return m\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0\n        for (i <- l) {\n\
    \            if (i > max) {\n                max = i\n            }\n        }\n\
    \        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0l\n        for (i <- l)\
    \ {\n            if (i > max) {\n                max = i\n            }\n    \
    \    }\n        return max\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (3l));\n\
    \    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong,\
    \ -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong, -10l.toLong)))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        // >>> maxElement((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong)))\n        // (3l)\n        // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n        // (123l)\n        l.max\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        // >>> maxElement((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong)))\n        // (3l)\n        // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n        // (123l)\n        l.max\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var m : Long = l(0)\n        for (i <- 1 until\
    \ l.length) {\n            if (l(i) > m) {\n                m = l(i)\n       \
    \     }\n        }\n        return m\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 0\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = l(0)\n        for (i <- 1\
    \ until l.length) {\n            if (l(i) > max) {\n                max = l(i)\n\
    \            }\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        // >>> maxElement((List[Long](1l.toLong, 2l.toLong,\
    \ 3l.toLong)))\n        // (3l)\n        // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n        // (123l)\n        l.max\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        if (l.length == 0) 0l\n        else l.reduceLeft((x,\
    \ y) => if (x > y) x else y)\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (3l));\n\
    \    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong,\
    \ -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong, -10l.toLong)))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792538
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        return l.max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) ==\
    \ (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong,\
    \ 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong,\
    \ -10l.toLong))) == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong,\
    \ 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong,\
    \ 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong,\
    \ 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l\
    \ : List[Long]) : Long = {\n        var max : Long = 0l\n        for (i <- l)\
    \ {\n            if (i > max) {\n                max = i\n            }\n    \
    \    }\n        return max\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (3l));\n\
    \    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong,\
    \ -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong, -10l.toLong)))\
    \ == (124l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792500

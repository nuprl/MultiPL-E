name: HumanEval_66_digitSum
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Task\n    // Write a function that takes a string as input and returns the\
  \ sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n   \
  \ // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n    //\
  \ (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
  helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n  \
  \  // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String) :\
  \ Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\"))\
  \ == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
  abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
  woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
  \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\")) ==\
  \ (327l));\n    }\n\n}\n"
completions: ['        s.toUpperCase.map(_.toLong).sum', "        // Write your code\
    \ here\n        return 0", "        // Write your code here\n        var sum =\
    \ 0l\n        for (i <- 0 until s.length) {\n            val c = s(i)\n      \
    \      if (c.isUpper) {\n                sum += c.toInt\n            }\n     \
    \   }\n        sum", "        // Write your code here\n        0l", "        //\
    \ Write your code here\n        0", "        // Write your code here\n       \
    \ // Return the sum of the upper characters only' ASCII codes.\n        var sum\
    \ = 0l\n        for (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n\
    \                sum += s(i).toInt\n            }\n        }\n        return sum",
  "        // Write your code here\n        return 0", "        // Write your code\
    \ here\n        return 0l", "        var sum : Long = 0\n        for (c <- s)\
    \ {\n            if (c.isUpper) {\n                sum += c.toInt\n          \
    \  }\n        }\n        return sum", "        // Write your code here\n     \
    \   return 0", "        // Write your code here\n        var sum = 0l\n      \
    \  for (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n\
    \            }\n        }\n        sum", "        // Write your code here\n  \
    \      // Return the sum of the upper characters only' ASCII codes\n        s.map(_.toInt).filter(_\
    \ >= 65).filter(_ <= 90).sum", "        // Write your code here\n        // Return\
    \ the sum of the upper characters only' ASCII codes\n        0l", "        //\
    \ Write your code here\n        var sum = 0l\n        for (i <- 0 until s.length)\
    \ {\n            if (s(i).isUpper) {\n                sum += s(i).toInt\n    \
    \        }\n        }\n        sum", "        // Write your code here\n      \
    \  return 0l", "        // Write your code here\n        0l", "        // Write\
    \ your code here\n        return 0", "        // Write your code here\n      \
    \  return 0l", "        // Write your code here\n        return 0l", "       \
    \ // Write your code here\n        0", "        var sum = 0l\n        for (c <-\
    \ s) {\n            if (c.isUpper) {\n                sum += c.toInt\n       \
    \     }\n        }\n        sum", '        s.foldLeft(0l)((acc, c) => acc + (if
    (c.isUpper) c.toInt else 0))', "        // Write your code here\n        0", " \
    \       var sum = 0l\n        for (c <- s) {\n            if (c >= 'A' && c <=\
    \ 'Z') {\n                sum += c.toInt\n            }\n        }\n        return\
    \ sum", "        // Write your code here\n        return 0l", "        // Write\
    \ your code here\n        return 0", "        // Write your code here\n      \
    \  0", "        // Write your code here\n        return 0l", "        // Write\
    \ your code here\n        var sum = 0l\n        for (i <- 0 until s.length) {\n\
    \            if (s(i).isUpper) {\n                sum += s(i).toInt\n        \
    \    }\n        }\n        sum", "        // Write your code here\n        var\
    \ sum = 0l\n        for (i <- 0 until s.length) {\n            if (s(i).isUpper)\
    \ {\n                sum += s(i).toInt\n            }\n        }\n        sum",
  "        // Write your code here\n        var sum = 0l\n        for (c <- s) {\n\
    \            if (c.isUpper) {\n                sum += c.toInt\n            }\n\
    \        }\n        sum", "        // Write your code here\n        0", "    \
    \    // Write your code here\n        // Return the sum of the upper characters\
    \ only'\n        // ASCII codes.\n        var sum = 0l\n        for (c <- s) {\n\
    \            if (c.isUpper) {\n                sum += c.toInt\n            }\n\
    \        }\n        sum", "        var sum = 0l\n        for (c <- s) {\n    \
    \        if (c.isUpper) {\n                sum += c.toInt\n            }\n   \
    \     }\n        sum", "        var sum : Long = 0\n        for (c <- s) {\n \
    \           if (c.isUpper) {\n                sum += c.toInt\n            }\n\
    \        }\n        return sum", "        // Write your code here\n        0l",
  "        // Write your code here\n        0", "        // Write your code here\n\
    \        0l", "        // Write your code here\n        0l", "        // Write\
    \ your code here\n        return 0", "        // Write your code here\n      \
    \  return 0l", "        // Write your code here\n        // Return the sum of\
    \ the upper characters only' ASCII codes\n        s.toUpperCase.map(_.toInt).sum",
  "        var sum : Long = 0\n        for (i <- 0 until s.length) {\n           \
    \ if (s(i).isUpper) {\n                sum += s(i).toInt\n            }\n    \
    \    }\n        return sum", "        // Write your code here\n        // Return\
    \ the sum of the upper characters only' ASCII codes\n        var sum = 0l\n  \
    \      for (c <- s) {\n            if (c >= 'A' && c <= 'Z') {\n             \
    \   sum += c.toInt\n            }\n        }\n        sum", "        // Write\
    \ your code here\n        // Return the sum of the upper characters only' ASCII\
    \ codes\n        var sum = 0l\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum", " \
    \       var sum = 0l\n        for (c <- s) {\n            if (c >= 'A' && c <=\
    \ 'Z') {\n                sum += c\n            }\n        }\n        return sum",
  "        // Write your code here\n        0", "        // Write your code here\n\
    \        s.foldLeft(0l)((acc, c) => if (c.isUpper) acc + c.toInt else acc)", '        return
    s.toList.map(c => c.toInt).filter(i => i >= 65 && i <= 90).sum', "        // Write\
    \ your code here\n        s.filter(_.isUpper).map(_.toLong).sum", "        //\
    \ Write your code here\n        0", '        s.filter(c => c.isUpper).map(c =>
    c.toLong).sum', "        // Write your code here\n        var sum = 0l\n     \
    \   for (i <- 0 until s.length) {\n            val c = s(i)\n            if (c\
    \ >= 'A' && c <= 'Z') {\n                sum += c.toInt\n            }\n     \
    \   }\n        sum", '        s.foldLeft(0l)((acc, c) => if (c.isUpper) acc +
    c.toInt else acc)', "        // Write your code here\n        // Return the sum\
    \ of the upper characters only' ASCII codes\n        var sum = 0l\n        for\
    \ (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n \
    \           }\n        }\n        sum", "        // Write your code here\n   \
    \     0", "        // Write your code here\n        // Return the sum of the upper\
    \ characters only' ASCII codes.\n        return 0", "        // Write your code\
    \ here\n        0", "        // Write your code here\n        0l", "        //\
    \ Write your code here\n        0l", "        // Write your code here\n      \
    \  return 0l", "        var sum : Long = 0\n        for (c <- s) {\n         \
    \   if (c >= 'A' && c <= 'Z') {\n                sum += c.toInt\n            }\n\
    \        }\n        return sum", "        // Write your code here\n        return\
    \ 0", "        // Write your code here\n        return 0l", "        // Write\
    \ your code here\n        0l", "        // Write your code here\n        return\
    \ 0l", "        // Write your code here\n        // Return the sum of the upper\
    \ characters only' ASCII codes\n        s.toUpperCase.map(_.toInt).sum", '        s.foldLeft(0l)((acc,
    c) => if (c.isUpper) acc + c.toInt else acc)', "        // Write your code here\n\
    \        return 0;", "        // Write your code here\n        val upper = s.toUpperCase\n\
    \        var sum = 0\n        for (i <- 0 until upper.length) {\n            sum\
    \ += upper(i).toInt\n        }\n        sum", "        // Write your code here\n\
    \        0l", "        // Write your code here\n        return 0l", '        s.filter(_.isUpper).map(_.toLong).sum',
  "        // Write your code here\n        return 0l", "        // Write your code\
    \ here\n        0", "        // Write your code here\n        // Return the sum\
    \ of the upper characters only' ASCII codes.\n        return 0l", "        //\
    \ Write your code here\n        return 0l", "        // Write your code here\n\
    \        // Return the sum of the upper characters only' ASCII codes\n       \
    \ var sum = 0l\n        for (i <- 0 until s.length) {\n            if (s(i).isUpper)\
    \ {\n                sum += s(i).toInt\n            }\n        }\n        return\
    \ sum", "        // Write your code here\n        0l", "        // Write your\
    \ code here\n        var sum = 0l\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum", " \
    \       var sum = 0l\n        for (c <- s) {\n            if (c.isUpper) {\n \
    \               sum += c.toInt\n            }\n        }\n        sum", "    \
    \    // Write your code here\n        // Return the sum of the upper characters\
    \ only' ASCII codes.\n        var sum = 0l\n        for (c <- s) {\n         \
    \   if (c.isUpper) {\n                sum += c.toInt\n            }\n        }\n\
    \        sum", '        s.toUpperCase.map(x => x.toInt).sum', "        // Write\
    \ your code here\n        return 0l", "        // Write your code here\n     \
    \   var sum = 0l\n        for (i <- 0 until s.length) {\n            val c = s(i)\n\
    \            if (c >= 'A' && c <= 'Z') {\n                sum += c\n         \
    \   }\n        }\n        sum", "        // Write your code here\n        var\
    \ sum = 0l\n        for (c <- s) {\n            if (c.isUpper) {\n           \
    \     sum += c.toInt\n            }\n        }\n        sum", "        // Write\
    \ your code here\n        return 0l", "        // Write your code here\n     \
    \   return 0l", "        // Write your code here\n        // Return the sum of\
    \ the upper characters only' ASCII codes.\n        var sum = 0\n        for (i\
    \ <- 0 until s.length) {\n            if (s(i).isUpper) {\n                sum\
    \ += s(i).toInt\n            }\n        }\n        return sum", "        // Write\
    \ your code here\n        // Return the sum of the upper characters only' ASCII\
    \ codes\n        val upper = s.filter(_.isUpper)\n        upper.map(_.toInt).sum",
  "        // Write your code here\n        0l", "        // Write your code here\n\
    \        return 0l", "        // Write your code here\n        0", "        //\
    \ Write your code here\n        return 0l", "        // Write your code here\n\
    \        return 0l", "        var sum = 0l\n        for (c <- s) {\n         \
    \   if (c.isUpper) {\n                sum += c.toInt\n            }\n        }\n\
    \        sum", "        // Write your code here\n        0l", "        // Write\
    \ your code here\n        return 0l", "        // Write your code here\n     \
    \   return 0l", "        // Write your code here\n        0", "        // Write\
    \ your code here\n        0", "        val upper = s.filter(_.isUpper)\n     \
    \   upper.map(_.toLong).sum", "        var sum : Long = 0\n        for (i <- 0\
    \ until s.length) {\n            if (s(i).isUpper) {\n                sum += s(i).toInt\n\
    \            }\n        }\n        return sum", "        // Write your code here\n\
    \        return 0l", "        // Write your code here\n        var sum = 0l\n\
    \        for (c <- s) {\n            if (c.isUpper) {\n                sum +=\
    \ c.toInt\n            }\n        }\n        sum", "        // Write your code\
    \ here\n        // Return the sum of the upper characters only' ASCII codes\n\
    \        var sum = 0l\n        for (c <- s) {\n            if (c.isUpper) {\n\
    \                sum += c.toInt\n            }\n        }\n        sum", "   \
    \     // Write your code here\n        return 0l", "        // Write your code\
    \ here\n        return 0l", "        // Write your code here\n        0", '        s.filter(_.isUpper).map(_.toInt).sum',
  "        // Write your code here\n        return 0l", '        s.filter(_.isUpper).map(_.toInt).sum',
  "        // Write your code here\n        return 0", "        var sum : Long = 0\n\
    \        for (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n    \
    \            sum += s(i).toInt\n            }\n        }\n        return sum",
  "        val upper = s.toUpperCase\n        var sum = 0\n        for (i <- 0 until\
    \ upper.length) {\n            sum += upper(i).toInt\n        }\n        sum",
  "        // Your code here\n        0", "        // Write your code here\n     \
    \   var sum = 0l\n        for (i <- 0 until s.length) {\n            if (s(i).isUpper)\
    \ {\n                sum += s(i).toInt\n            }\n        }\n        sum",
  "        // Write your code here\n        // Return the sum of the upper characters\
    \ only' ASCII codes\n        var sum = 0l\n        for (i <- 0 until s.length)\
    \ {\n            if (s(i).isUpper) {\n                sum += s(i).toInt\n    \
    \        }\n        }\n        return sum", "        // Write your code here\n\
    \        return 0l", "        // Write your code here\n        return 0l", " \
    \       // Write your code here\n        0l", "        // Write your code here\n\
    \        return 0l", '        s.filter(c => c.isUpper).map(c => c.toInt).sum',
  "        // Write your code here\n        s.map(x => if (x.isUpper) x.toInt else\
    \ 0).sum", "        // Write your code here\n        0l", "        // Write your\
    \ code here\n        // Return the sum of the upper characters only' ASCII codes\n\
    \        var sum = 0l\n        for (i <- 0 until s.length) {\n            if (s(i).isUpper)\
    \ {\n                sum += s(i).toInt\n            }\n        }\n        return\
    \ sum", "        var sum = 0l\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        sum", " \
    \       var sum = 0l\n        for (c <- s) {\n            if (c.isUpper) {\n \
    \               sum += c.toInt\n            }\n        }\n        sum", "    \
    \    // your code here\n        0l", "        // Write your code here\n      \
    \  // Return the sum of the upper characters only' ASCII codes.\n        var sum\
    \ = 0l\n        for (c <- s) {\n            if (c.isUpper) {\n               \
    \ sum += c.toInt\n            }\n        }\n        sum", "        // Write your\
    \ code here\n        s.foldLeft(0L)((acc, c) => if (c.isUpper) acc + c.toInt else\
    \ acc)", '        s.filter(c => c.isUpper).map(c => c.toInt).sum', "        //\
    \ Write your code here\n        return 0l", "        var sum = 0l\n        for\
    \ (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n \
    \           }\n        }\n        sum", "        // Write your code here\n   \
    \     return 0l", "        // Write your code here\n        return 0l", "    \
    \    var sum : Long = 0\n        for (i <- 0 until s.length) {\n            if\
    \ (s(i).isUpper) {\n                sum += s(i).toInt\n            }\n       \
    \ }\n        return sum", "        // Write your code here\n        0", "    \
    \    val upper = s.toUpperCase\n        var sum = 0l\n        for (i <- 0 until\
    \ upper.length) {\n            sum += upper(i).toInt\n        }\n        sum",
  "        var sum : Long = 0\n        for (c <- s) {\n            if (c.isUpper)\
    \ {\n                sum += c.toInt\n            }\n        }\n        return\
    \ sum", "        // Write your code here\n        // Return the sum of the upper\
    \ characters only' ASCII codes.\n        return 0", "        // Write your code\
    \ here\n        // Return the sum of the upper characters only' ASCII codes\n\
    \        s.filter(_.isUpper).map(_.toLong).sum", "        // Write your code here\n\
    \        return 0l", "        val upper = s.filter(c => c.isUpper)\n        upper.map(c\
    \ => c.toInt).sum", "        // Write your code here\n        var sum = 0l\n \
    \       for (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n\
    \            }\n        }\n        sum", '        // Write your code here', " \
    \       // Write your code here\n        0l", "        // Write your code here\n\
    \        return 0l", "        // Write your code here\n        return 0l", '        s.filter(c
    => c.isUpper).map(c => c.toLong).sum', '        s.toList.map(x => x.toInt).filter(x
    => x >= 65 && x <= 90).sum', "        // Write your code here\n        // Return\
    \ the sum of the upper characters only' ASCII codes\n        var sum = 0l\n  \
    \      for (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n\
    \            }\n        }\n        sum", "        // Write your code here\n  \
    \      return 0l", "        // Write your code here\n        0", "        // Write\
    \ your code here\n        0l", "        // Write your code here\n        0", " \
    \       var sum = 0l\n        for (c <- s) {\n            if (c.isUpper) {\n \
    \               sum += c.toInt\n            }\n        }\n        sum", "    \
    \    // Write your code here\n        var sum = 0l\n        for (c <- s) {\n \
    \           if (c.isUpper) {\n                sum += c.toInt\n            }\n\
    \        }\n        sum", "        var sum : Long = 0\n        for (c <- s) {\n\
    \            if (c.isUpper) {\n                sum += c.toInt\n            }\n\
    \        }\n        return sum", "        // Write your code here\n        var\
    \ sum = 0l\n        for (i <- 0 until s.length) {\n            val c = s(i)\n\
    \            if (c >= 'A' && c <= 'Z') {\n                sum += c\n         \
    \   }\n        }\n        sum", "        // Write your code here\n        // Return\
    \ the sum of the upper characters only' ASCII codes\n        var sum = 0\n   \
    \     for (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n\
    \            }\n        }\n        sum", "        // Write your code here\n  \
    \      return 0l", "        // Write your code here.\n        // Replace the following\
    \ line with your code.\n        return 0l", "        // Write your code here\n\
    \        // Return the sum of the upper characters only' ASCII codes.\n      \
    \  var sum = 0l\n        for (i <- 0 until s.length) {\n            if (s(i).isUpper)\
    \ {\n                sum += s(i).toInt\n            }\n        }\n        sum",
  '        s.filter(c => c.isUpper).map(c => c.toInt).sum', "        // Write your\
    \ code here\n        s.map(x => x.toInt).filter(x => x >= 65 && x <= 90).sum",
  "        // Write your code here\n        var sum = 0l\n        for (c <- s) {\n\
    \            if (c.isUpper) {\n                sum += c.toInt\n            }\n\
    \        }\n        sum", "        // Write your code here\n        var sum =\
    \ 0l\n        for (c <- s) {\n            if (c.isUpper) {\n                sum\
    \ += c.toInt\n            }\n        }\n        sum", "        var sum = 0l\n\
    \        for (c <- s) {\n            if (c.isUpper) {\n                sum +=\
    \ c.toInt\n            }\n        }\n        sum", '        s.filter(c => c.isUpper).map(c
    => c.toLong).sum', "        // Write your code here\n        // Return the sum\
    \ of the upper characters only' ASCII codes.\n        var sum = 0\n        for\
    \ (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n \
    \           }\n        }\n        sum", "        var sum : Long = 0\n        for\
    \ (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n               \
    \ sum += s(i).toInt\n            }\n        }\n        return sum", "        //\
    \ Write your code here\n        0", "        // Write your code here\n       \
    \ return 0l", "        // Write your code here\n        return 0l", "        //\
    \ Write your code here\n        0l", '        s.filter(c => c.isUpper).map(c =>
    c.toLong).sum', "        // Write your code here\n        0", "        // Write\
    \ your code here\n        return 0l", "        // Write your code here\n     \
    \   var sum = 0l\n        for (c <- s) {\n            if (c.isUpper) {\n     \
    \           sum += c.toInt\n            }\n        }\n        sum", "        //\
    \ Write your code here\n        return 0", "        // >>> digitSum((\"\"))\n\
    \        // (0l)\n        // >>> digitSum((\"abAB\"))\n        // (131l)\n   \
    \     // >>> digitSum((\"abcCd\"))\n        // (67l)\n        // >>> digitSum((\"\
    helloE\"))\n        // (69l)\n        // >>> digitSum((\"woArBld\"))\n       \
    \ // (131l)\n        // >>> digitSum((\"aAaaaXa\"))\n        // (153l)\n     \
    \   // >>> digitSum((\"aAaaaXa\"))\n        // (153l)\n        // >>> digitSum((\"\
    aAaaaXa\"))\n        // (153l)\n        // >>> digitSum((\"aAaaaXa\"))\n     \
    \   // (153l)\n        // >>> digitSum((\"aAaaaXa\"))\n        // (153l)\n   \
    \     // >>> digitSum((\"aAaaaXa\"))\n        // (153l)\n        // >>> digitSum((\"\
    aAaaaXa\"))\n        // (153l)\n        // >>> digitSum((\"aAaaaXa\"))\n     \
    \   // (153l)\n        // >>> digitSum((\"aAaaaXa\"))\n        // (153l)\n   \
    \     // >>> digitSum((\"aAaaaXa\"))\n        // (153l)\n        // >>> digitSum((\"\
    aAaaaXa\"))\n        // (153l)\n        // >>> digitSum((\"aAaaaXa\"))\n     \
    \   // (153l)\n        // >>> digitSum((\"aAaaaXa\"))\n        // (153l)\n   \
    \     // >>> digitSum((\"aAaaaXa\"))\n        // (153l)\n        // >>> digitSum((\"\
    aAaaaXa\"))\n        // (153l)\n        // >>> digitSum((\"aAaaaXa\"))\n     \
    \   // (153l)\n        // >>> digitSum((\"aAaaaXa\"))\n        // (153l)\n   \
    \     // >>> digitSum((\"aAaaaXa\"))\n        // (153l)\n        // >>> digitSum((\"\
    aAaaaXa\"))\n        // (153l)\n        // >>> digitSum((\"aAaaaXa\"))\n     \
    \   // (153l)\n", "        // Write your code here\n        var sum = 0l\n   \
    \     for (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n\
    \            }\n        }\n        sum", "        // Write your code here\n  \
    \      return 0l", "        // Write your code here\n        0", "        // Write\
    \ your code here\n        var sum = 0\n        for (i <- 0 until s.length) {\n\
    \            if (s(i).isUpper) {\n                sum += s(i).toInt\n        \
    \    }\n        }\n        sum", "        // Write your code here\n        0",
  "        // Write your code here\n        0", "        // Write your code here\n\
    \        s.filter(c => c.isUpper).map(c => c.toLong).sum", "        // Write your\
    \ code here\n        // Return the sum of the upper characters only' ASCII codes\n\
    \        var sum = 0l\n        for (c <- s) {\n            if (c.isUpper) {\n\
    \                sum += c.toInt\n            }\n        }\n        sum", "   \
    \     var sum : Long = 0\n        for (c <- s) {\n            if (c.isUpper) {\n\
    \                sum += c.toInt\n            }\n        }\n        return sum",
  '        s.filter(c => c.isUpper).map(c => c.toInt).sum', '        s.toList.map(x
    => x.toInt).filter(x => x >= 65 && x <= 90).sum', "        // Write your code\
    \ here\n        val upper = s.toUpperCase()\n        var sum = 0l\n        for\
    \ (i <- 0 until upper.length) {\n            sum += upper(i).toInt\n        }\n\
    \        sum", "        // Write your code here\n        return 0l", "       \
    \ // Write your code here\n        return 0l", "        // Write your code here\n\
    \        s.map(x => x.toInt).filter(x => x >= 65 && x <= 90).sum", '        s.map(c
    => c.toInt).filter(i => i >= 65 && i <= 90).sum', "        // Write your code\
    \ here\n        // Return the sum of the upper characters only' ASCII codes.\n\
    \        // Do not use any other imports.\n        // Do not use any mutable data\
    \ structures.\n        // Do not use any loops.\n        // Do not use any if\
    \ statements.\n        // Do not use any pattern matching.\n        // Do not\
    \ use any match expressions.\n        // Do not use any try/catch/finally blocks.\n\
    \        // Do not use any throw statements.\n        // Do not use any return\
    \ statements.\n        // Do not use any break statements.\n        // Do not\
    \ use any continue statements.\n        // Do not use any goto statements.\n \
    \       // Do not use any while statements.\n        // Do not use any do/while\
    \ statements.\n        // Do not use any for statements.\n        // Do not use\
    \ any for/yield statements.\n        // Do not use any for/yield/if statements.\n\
    \        // Do not use any for/yield/if/else statements.\n        // Do not use\
    \ any for/yield/if/else/if statements.\n        // Do not use any for/yield/if/else/if/else\
    \ statements.\n        // Do not use any for/yield/if/else/if/else/if statements.\n\
    \        // Do not use any for/yield/if/else/if/else/if/else statements.\n   \
    \     // Do not use any for/yield/if/else/if/else/if/else/if statements.\n   \
    \     // Do not use any for/yield/if/else/if/else/if/else/if/else statements.\n\
    \        // Do not use any for/yield/if/else/if/else/if/else/if/else/if statements.\n\
    \        // Do not use any for/yield/if/else/if/else/if/else/if/else/if/else statements.\n\
    \        // Do not use any for/yield/if/else/if/else/if/else/if/else/if/else/if\
    \ statements.\n        // Do not use any for/yield/if/else/if/else/if/else/if/else/if/else/if/else\
    \ statements.\n        // Do not use any", "        // Write your code here\n\
    \        return 0l"]
stop_tokens:
- "\n    }\n"

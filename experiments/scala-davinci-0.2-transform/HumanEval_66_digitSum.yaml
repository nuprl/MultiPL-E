name: HumanEval_66_digitSum
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Task\n    // Write a function that takes a string as input and returns the\
  \ sum of the upper characters only'\n    // ASCII codes.\n    // Examples:\n   \
  \ // >>> digitSum((\"\"))\n    // (0l)\n    // >>> digitSum((\"abAB\"))\n    //\
  \ (131l)\n    // >>> digitSum((\"abcCd\"))\n    // (67l)\n    // >>> digitSum((\"\
  helloE\"))\n    // (69l)\n    // >>> digitSum((\"woArBld\"))\n    // (131l)\n  \
  \  // >>> digitSum((\"aAaaaXa\"))\n    // (153l)\n    def digitSum(s : String) :\
  \ Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(digitSum((\"\"))\
  \ == (0l));\n    assert(digitSum((\"abAB\")) == (131l));\n    assert(digitSum((\"\
  abcCd\")) == (67l));\n    assert(digitSum((\"helloE\")) == (69l));\n    assert(digitSum((\"\
  woArBld\")) == (131l));\n    assert(digitSum((\"aAaaaXa\")) == (153l));\n    assert(digitSum((\"\
  \ How are yOu?\")) == (151l));\n    assert(digitSum((\"You arE Very Smart\")) ==\
  \ (327l));\n    }\n\n}\n"
completions: ['        s.toUpperCase.map(_.toLong).sum', "        // Write your code\
    \ here\n        return 0", "        // Write your code here\n        var sum =\
    \ 0l\n        for (i <- 0 until s.length) {\n            val c = s(i)\n      \
    \      if (c.isUpper) {\n                sum += c.toInt\n            }\n     \
    \   }\n        sum", "        // Write your code here\n        0l", "        //\
    \ Write your code here\n        0", "        // Write your code here\n       \
    \ // Return the sum of the upper characters only' ASCII codes.\n        var sum\
    \ = 0l\n        for (i <- 0 until s.length) {\n            if (s(i).isUpper) {\n\
    \                sum += s(i).toInt\n            }\n        }\n        return sum",
  "        // Write your code here\n        return 0", "        // Write your code\
    \ here\n        return 0l", "        var sum : Long = 0\n        for (c <- s)\
    \ {\n            if (c.isUpper) {\n                sum += c.toInt\n          \
    \  }\n        }\n        return sum", "        // Write your code here\n     \
    \   return 0", "        // Write your code here\n        var sum = 0l\n      \
    \  for (c <- s) {\n            if (c.isUpper) {\n                sum += c.toInt\n\
    \            }\n        }\n        sum", "        // Write your code here\n  \
    \      // Return the sum of the upper characters only' ASCII codes\n        s.map(_.toInt).filter(_\
    \ >= 65).filter(_ <= 90).sum", "        // Write your code here\n        // Return\
    \ the sum of the upper characters only' ASCII codes\n        0l", "        //\
    \ Write your code here\n        var sum = 0l\n        for (i <- 0 until s.length)\
    \ {\n            if (s(i).isUpper) {\n                sum += s(i).toInt\n    \
    \        }\n        }\n        sum", "        // Write your code here\n      \
    \  return 0l", "        // Write your code here\n        0l", "        // Write\
    \ your code here\n        return 0", "        // Write your code here\n      \
    \  return 0l", "        // Write your code here\n        return 0l", "       \
    \ // Write your code here\n        0"]
stop_tokens:
- "\n    }\n"

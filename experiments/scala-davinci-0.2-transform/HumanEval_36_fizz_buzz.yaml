name: HumanEval_36_fizz_buzz
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Return the number of times the digit 7 appears in integers less than n which\
  \ are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n    // (0l)\n    // >>>\
  \ fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n    // (3l)\n    def\
  \ fizzBuzz(n : Long) : Long = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(fizzBuzz((50l)) ==\
  \ (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n\
  \    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
  \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
  \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
completions: ["        val dp = Array.fill(n.toInt + 1)(0)\n        for (i <- 1 to\
    \ n.toInt) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                val\
    \ s = i.toString\n                for (c <- s) {\n                    if (c ==\
    \ '7') dp(i) += 1\n                }\n            }\n        }\n        for (i\
    \ <- 1 to n.toInt) dp(i) += dp(i - 1)\n        dp(n.toInt)", "        var count\
    \ = 0l\n        for (i <- 1l to n) {\n            if (i % 11 == 0 || i % 13 ==\
    \ 0) {\n                val s = i.toString\n                for (c <- s) {\n \
    \                   if (c == '7') count += 1\n                }\n            }\n\
    \        }\n        count", "        var count = 0l\n        for (i <- 1l to n)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                var j = i\n\
    \                while (j > 0) {\n                    if (j % 10 == 7) count +=\
    \ 1\n                    j /= 10\n                }\n            }\n        }\n\
    \        return count", "        var count = 0l\n        for (i <- 1l to n - 1)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                var j = i\n\
    \                while (j > 0) {\n                    if (j % 10 == 7) count +=\
    \ 1\n                    j /= 10\n                }\n            }\n        }\n\
    \        count", "        var count = 0l\n        for (i <- 1l to n) {\n     \
    \       if (i % 11 == 0 || i % 13 == 0) {\n                var j = i\n       \
    \         while (j > 0) {\n                    if (j % 10 == 7) count += 1\n \
    \                   j /= 10\n                }\n            }\n        }\n   \
    \     return count", "        var count = 0l\n        for (i <- 1l to n) {\n \
    \           if (i % 11 == 0 || i % 13 == 0) {\n                var j = i\n   \
    \             while (j > 0) {\n                    if (j % 10 == 7) count += 1\n\
    \                    j /= 10\n                }\n            }\n        }\n  \
    \      return count", "        var count = 0l\n        for (i <- 1l to n - 1)\
    \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                var x = i\n\
    \                while (x > 0) {\n                    if (x % 10 == 7) count +=\
    \ 1\n                    x /= 10\n                }\n            }\n        }\n\
    \        count", "        var count = 0l\n        for (i <- 1l to n) {\n     \
    \       if (i % 11 == 0 || i % 13 == 0) {\n                var j = i\n       \
    \         while (j > 0) {\n                    if (j % 10 == 7) count += 1\n \
    \                   j /= 10\n                }\n            }\n        }\n   \
    \     return count", "        var count = 0l\n        for (i <- 1l to n - 1) {\n\
    \            if (i % 11 == 0 || i % 13 == 0) {\n                var j = i\n  \
    \              while (j > 0) {\n                    if (j % 10 == 7) count +=\
    \ 1\n                    j /= 10\n                }\n            }\n        }\n\
    \        count", "        var count = 0l\n        for (i <- 1l to n) {\n     \
    \       if (i % 11 == 0 || i % 13 == 0) {\n                val s = i.toString\n\
    \                for (c <- s) {\n                    if (c == '7') count += 1\n\
    \                }\n            }\n        }\n        count", "        var count\
    \ = 0l\n        for (i <- 1l to n - 1l) {\n            if (i % 11 == 0 || i %\
    \ 13 == 0) {\n                var j = i\n                while (j > 0) {\n   \
    \                 if (j % 10 == 7) count += 1\n                    j /= 10\n \
    \               }\n            }\n        }\n        count", "        var count\
    \ = 0l\n        for (i <- 1l to n) {\n            if (i % 11 == 0 || i % 13 ==\
    \ 0) {\n                var j = i\n                while (j > 0) {\n         \
    \           if (j % 10 == 7) count += 1\n                    j /= 10\n       \
    \         }\n            }\n        }\n        return count", "        var count\
    \ = 0l\n        for (i <- 1l to n) {\n            if (i % 11 == 0 || i % 13 ==\
    \ 0) {\n                var j = i\n                while (j > 0) {\n         \
    \           if (j % 10 == 7) count += 1\n                    j /= 10\n       \
    \         }\n            }\n        }\n        return count", "        var count\
    \ = 0l\n        for (i <- 1l to n) {\n            if (i % 11 == 0 || i % 13 ==\
    \ 0) {\n                var temp = i\n                while (temp > 0) {\n   \
    \                 if (temp % 10 == 7) count += 1\n                    temp /=\
    \ 10\n                }\n            }\n        }\n        return count", "  \
    \      var count = 0l\n        for (i <- 1l to n - 1) {\n            if (i % 11\
    \ == 0 || i % 13 == 0) {\n                count += i.toString.count(_ == '7')\n\
    \            }\n        }\n        return count", "        var count = 0l\n  \
    \      for (i <- 1l to n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n \
    \               var temp = i\n                while (temp > 0) {\n           \
    \         if (temp % 10 == 7) count += 1\n                    temp /= 10\n   \
    \             }\n            }\n        }\n        return count", "        var\
    \ count = 0l\n        for (i <- 1l to n) {\n            if (i % 11 == 0 || i %\
    \ 13 == 0) {\n                var j = i\n                while (j > 0) {\n   \
    \                 if (j % 10 == 7) count += 1\n                    j /= 10\n \
    \               }\n            }\n        }\n        return count", "        var\
    \ count = 0l\n        for (i <- 1l to n) {\n            if (i % 11 == 0 || i %\
    \ 13 == 0) {\n                count += i.toString.count(_ == '7')\n          \
    \  }\n        }\n        return count", "        var count = 0l\n        for (i\
    \ <- 1l to n) {\n            if (i % 11 == 0 || i % 13 == 0) {\n             \
    \   var j = i\n                while (j > 0) {\n                    if (j % 10\
    \ == 7) count += 1\n                    j /= 10\n                }\n         \
    \   }\n        }\n        return count", "        var count = 0l\n        for\
    \ (i <- 1l to n - 1l) {\n            if (i % 11 == 0 || i % 13 == 0) {\n     \
    \           var temp = i\n                while (temp > 0) {\n               \
    \     if (temp % 10 == 7) count += 1\n                    temp /= 10\n       \
    \         }\n            }\n        }\n        return count"]
stop_tokens:
- "\n    }\n"

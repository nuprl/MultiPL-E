language: sh
name: HumanEval_114_minSubArraySum
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  echo $(($(( $#1 * $2 + $2 ))\
    \ | bc))\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_5cn2n7j.sh: line 12: 11 *  +  : syntax error: operand expected
    (error token is "+  ")

    '
  stdout: ''
  timestamp: 1660058944
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums\n    local sum\n\
    \    local i j k min\n    # Convert from space-separated list to array of integers\n\
    \    nums=( $@ )\n    # Find minimum sum\n    min=$(echo $nums | tr -d '[]' |\
    \ tr ' ' '\\n' | sort -n | tail -1)\n    sum=0\n    for ((i=0; i<${#nums[@]};\
    \ i++)); do\n        if [[ $nums[$i] == '' ]]; then\n            continue\n  \
    \      fi\n        sum=$(($sum + $nums[$i]))\n    done\n    echo $(($min == $sum\
    \ ? $min : \"$sum\"))\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1c5s_y_5.sh: line 24: 0 + 2[0]: syntax error: invalid arithmetic
    operator (error token is "[0]")

    '
  stdout: ''
  timestamp: 1660058944
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local array\n  local min\n\
    \  local minIndex\n  local max\n  local maxIndex\n  local i\n  array=${1// / }\n\
    \  local length=${#array[@]}\n  if [ $length -gt 1 ]; then\n    min=${array[0]}\n\
    \    minIndex=0\n    max=${array[0]}\n    maxIndex=0\n  else\n    min=${array[0]}\n\
    \    minIndex=0\n    max=${array[0]}\n    maxIndex=0\n  fi\n  for ((i=1;i<length;i++));\
    \ do\n    local current=${array[i]}\n    if (( current < min )) ; then\n     \
    \ min=${current}\n      minIndex=$i\n    fi\n    if (( current > max )) ; then\n\
    \      max=${current}\n      maxIndex=$i\n    fi\n  done\n  local sum=0\n  for\
    \ ((i=minIndex;i<=maxIndex;i++)); do\n    sum=$(( sum + array[i] ))\n  done\n\
    \  if (( $max >= 0 )) ; then\n    if (( $min == $sum )) ; then\n      echo $((\
    \ $max ))\n    elif (( $min > $sum )) ; then\n      echo $(( $min - $sum ))\n\
    \    else\n      echo $(( $sum - $min ))\n    fi\n  else\n    if (( $min == $sum\
    \ )) ; then\n      echo $(( $min ))\n    elif (( $min < $sum )) ; then\n     \
    \ echo $(( $sum - $min ))\n    else\n      echo $(( $max - $sum))\n    fi\n  fi\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0ls69gcz.sh: line 44: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660058944
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ maxSum=0\n    local min=10000000\n    local max\n    local sum\n\n    # Loop\
    \ through all array elements\n    for (( i=0; i<${#nums[@]}; i++ )); do\n    \
    \    # Remove this element from the array\n        local tmpSum=$(($nums[$i]))\n\
    \        nums[$i]=$(( ${tmpSum} + ${nums[$i]} ))\n\n        # Check if this element\
    \ is less than the currently highest found\n        # value\n        if [ \"$tmpSum\"\
    \ -lt \"$max\" ]; then\n            maxSum=$tmpSum\n        fi\n        # Check\
    \ if this element is less than the currently lowest found\n        # value\n \
    \       if [ \"$tmpSum\" -gt \"$min\" ]; then\n            min=$tmpSum\n     \
    \   fi\n    done\n\n    # Return the max sum or the minimum value\n    if [ \"\
    $maxSum\" -gt \"$min\" ]; then\n        echo \"$maxSum\"\n    else\n        echo\
    \ \"$min\"\n    fi\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoyk67zh4.sh: line 21: 2 3 4 1 2 4[0]: syntax error in expression
    (error token is "3 4 1 2 4[0]")

    '
  stdout: ''
  timestamp: 1660058944
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -n arr=$1\n    local\
    \ -i min=0\n    local -i max=${#arr[@]}\n    local -i i\n\n    for ((i=0; i<max;\
    \ i++)); do\n        min=$((min + ${arr[i]}))\n    done\n\n    for ((i=min; i<max;\
    \ i++)); do\n        arr[i]=${arr[i]}\n        arr[i]=${arr[i]#-}\n    done\n\n\
    \    local sum=0\n    local i=$((max-min))\n    while ((i<${#arr[@]}-1)); do\n\
    \        ((sum+=arr[$i]))\n        ((sum+=arr[$i+1]))\n        ((i++))\n    done\n\
    \n    echo \"$sum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpv9ls1zhg.sh: line 12: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660058944
- exit_code: -1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local n i sum\n    n=\"${1:-$(cat\
    \ /dev/stdin)}\"\n    read -d ' ' sum\n    for ((i=1; i<n; i++)); do\n       \
    \ sum=$((sum + i))\n    done\n    echo $sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=22 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660058949
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -a nums\n  local -a result\n\
    \n  nums=( $1 )\n  result=( )\n  local -a prefix\n  local -a remainder\n  local\
    \ -a current\n  local -a remain\n  local -a sum\n\n  for (( i = 1; i <= ${#nums[*]};\
    \ i++ )); do\n    current=$(( ${nums[$i]} - 1 ))\n    prefix=${nums[$(i)]}\n \
    \   remainder=${nums[$i - 1]}\n\n    if [ $current -eq 0 ]; then\n      remain=\"\
    ${remainder}\"\n    elif [ $current -ne 0 ]; then\n      remain=\"${remainder}${remain}\"\
    \n    fi\n\n    if [ $remain -ne 0 ]; then\n      sum=\"${prefix}${sum}\"\n  \
    \  fi\n\n    push \"${remainder}\" \"${prefix}\" \\\n        ${result[@]}\n  done\n\
    \n  echo \"${sum}\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvu3ee5bg.sh: line 25: i: command not found

    /tmp/tmpvu3ee5bg.sh: line 38: push: command not found

    /tmp/tmpvu3ee5bg.sh: line 25: i: command not found

    /tmp/tmpvu3ee5bg.sh: line 38: push: command not found

    /tmp/tmpvu3ee5bg.sh: line 25: i: command not found

    /tmp/tmpvu3ee5bg.sh: line 38: push: command not found

    /tmp/tmpvu3ee5bg.sh: line 25: i: command not found

    /tmp/tmpvu3ee5bg.sh: line 38: push: command not found

    /tmp/tmpvu3ee5bg.sh: line 25: i: command not found

    /tmp/tmpvu3ee5bg.sh: line 38: push: command not found

    /tmp/tmpvu3ee5bg.sh: line 25: i: command not found

    /tmp/tmpvu3ee5bg.sh: line 38: push: command not found

    '
  stdout: ''
  timestamp: 1660058944
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local array sum\n  array=$1\n\
    \  sum=0\n  for i in $(seq 0 $((${#array[@]}-1)) )\n  do\n    sum=$((sum+${array[$i]}))\n\
    \  done\n  echo \"${sum}\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjm_j0_9y.sh: line 17: sum+2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660058944
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  declare -i i nums\n  nums=${1:-}\n\
    \  sum=0\n  for (( i=0; i<${#nums[@]}; i++ )); do\n    (( sum+=${nums[i]} ))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf2hz3seo.sh: line 13: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660058944
- exit_code: -1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums\n  nums=\"${1}\"\
    \n  local -n res=\"=\"\n  local -n n=\"=\"\n  local -n min=\"=\"\n  local -n max=\"\
    =\"\n\n  while IFS=, read -r n max; do\n    local -n min=\"=\"\n    local -n max=\"\
    =\"\n    for ((i=0; i<n; i++ )); do\n      (( (n+=nums[i])>max )) && { max=$((n+=nums[i]));\
    \ };\n      (( (n+=nums[i])<min )) && { min=$((n+=nums[i])); };\n    done\n  \
    \  res=\"$(( $n+min ))\"\n  done\n  echo \"$res\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=35 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=28 encoding='utf-8'>
  timestamp: 1660058949
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -r nums=\"${1}\"\n\
    \    local -r min=\"${2}\"\n\n    while [ ! -z \"${nums}\" ]; do\n        local\
    \ min=\"$(( ${min} + ${nums} ))\"\n        local -r nums=\"${nums//,/ }\"\n  \
    \  done\n    echo \"${min}\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5yucoytw.sh: line 16: + 2 3 4 1 2 4 : syntax error in expression
    (error token is "3 4 1 2 4 ")

    '
  stdout: ''
  timestamp: 1660058944
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  # initialize min to zero\n\
    \  local min=${1:-0}\n\n  # iterate through each element of the list\n  for num\
    \ in \"$@\"; do\n    # if the current element is greater than min\n    if [[ $num\
    \ > $min ]]; then\n      # set min equal to the current element\n      min=$num\n\
    \    fi\n  done\n\n  # return the min value\n  echo \"$min\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058944
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local max=0\n\
    \  local min=0\n  local total=0\n\n  for i in `seq 0 $((${#nums[@]} - 1))`;\n\
    \    do\n      if [[ ${#nums[@]} -gt 0 ]]; then\n\tlocal temp=$((${nums[$i]} +\
    \ ${nums[$((i + 1))]}))\n\tif [[ ${temp} -gt ${max} ]]; then\n\t  max=${temp}\n\
    \tfi\n\tif [[ ${temp} < ${min} ]]; then\n\t  min=${temp}\n\tfi\n      fi\n   \
    \ done\n\n  total=$((${min} + ${max}))\n  echo ${total}\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy0iqsut7.sh: line 20: 2 3 4 1 2 4 + : syntax error in expression
    (error token is "3 4 1 2 4 + ")

    '
  stdout: ''
  timestamp: 1660058944
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -n args=$1\n    local\
    \ -r nums_string=$1\n\n    local nums sum\n    while read -r num; do\n       \
    \ ((sum+=num))\n    done <<<\"$nums_string\"\n\n    local -n min=$[sum + 1]\n\
    \    for ((i=1; i<=$sum; i++)) {\n        if [[ ${nums[*]:$i:1} \\\n         \
    \   != *[[:space:]]* \\\n            ]]; then\n            ((min=${min}))\n  \
    \      elif ((sum+$i) < $min) {\n            min=$sum+$i\n        fi\n    }\n\
    \    echo \"$min\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9c8vjc6h.sh: line 26: syntax error near unexpected token `{''

    /tmp/tmp9c8vjc6h.sh: line 26: `        elif ((sum+$i) < $min) {''

    '
  stdout: ''
  timestamp: 1660058944
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    min=$((${#1}))\n    array=(${1//\
    \ *})\n    for ((i=1; i<${#array[@]}; i++)); do\n        if (( ${array[$i]} <\
    \ min )); then\n            min=${array[$i]}\n        fi\n    done\n    echo \"\
    $min\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058944
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -n arr=$1\n    local\
    \ result=0 maxsum\n    for ((i=0; i<${#arr[@]}; i++)); do\n        local sum=${arr[i]}\n\
    \        for ((j=0; j<i; j++)); do\n            sum=$((sum+${arr[j]}))\n     \
    \   done\n        if (( sum < 0 )) {\n            sum=$((sum * -1))\n        }\n\
    \        if (( sum > maxsum )) {\n            maxsum=${sum}\n            result=${i}\n\
    \        }\n    done\n    echo \"${result}\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf0ex3ykf.sh: line 19: syntax error near unexpected token `{''

    /tmp/tmpf0ex3ykf.sh: line 19: `        if (( sum < 0 )) {''

    '
  stdout: ''
  timestamp: 1660058944
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  # Convert input to array\n\
    \  local nums=$(echo ${1//,/ })\n  local total=0\n  for i in \"${nums[@]}\"; do\n\
    \    total=$(($total+$i))\n  done\n  echo $(($total))\n}\n\ncandidate() {\n  \
    \  minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3\
    \ 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq8gi_h4l.sh: line 16: 0+2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660058944
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local a=$1\n  echo $a | tr\
    \ ' ' '\\n' | sort -n | sed -n '1{s/^[^ ]* //;s/ [^ ]*$//;p}'\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ minSum=\"$2\"\n    for (( i=0; i<${#nums[@]} && i<${#minSum[@]}; i++ )); do\n\
    \        minSum[$i]=\"$(( minSum[$i] || \"$(( ${nums[$i]}+$minSum[$i] ))\" ))\"\
    \n    done\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgvvna66h.sh: line 15: 2 3 4 1 2 4+[0] : syntax error in expression
    (error token is "3 4 1 2 4+[0] ")

    '
  stdout: ''
  timestamp: 1660058944
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  min=$1\n  shift\n  for num\
    \ in \"$@\"\n  do\n    if test $num -le $min; then\n      min=$num\n    fi\n \
    \ done\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058944
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -a arr=( $1 )\n   \
    \ local -i sum\n    local -a min=( )\n    local -i i\n    sum=0\n    for (( i=0;\
    \ i < ${#arr[@]}; i++ )); do\n        (( sum < arr[i] )) && sum=$arr[i]\n    \
    \    (( sum < min )) && min[${#min[@]}]=${sum}\n    done\n    echo \"${min[@]}\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuc9luvpo.sh: line 18: 2[i]: syntax error: invalid arithmetic operator
    (error token is "[i]")

    '
  stdout: ''
  timestamp: 1660058944
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ nums_arr=($nums)\n    local sum=0\n    local index=0\n    local num_flag=false\n\
    \    local min_sum=1000000001\n\n    for index in ${!nums_arr[@]}; do\n      \
    \  if [ $index -gt 0 ] && [ ${nums_arr[$index]} -le 0 ]; then\n            num_flag=true\n\
    \        fi\n        if [ $num_flag = false ]; then\n            sum=$((sum+nums_arr[$index]))\n\
    \        else\n            if [ $sum -le $min_sum ]; then\n                min_sum=$sum\n\
    \            fi\n            num_flag=false\n        fi\n    done\n    echo \"\
    $min_sum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -a nums\n    nums=(\
    \ \"${@}\" )\n    local -a indices\n    indices=()\n    for (( i=0; i < ${#nums[@]}\
    \ ; i++)); do\n        indices+=( \"${i}\" )\n    done\n    for (( i=0; i < ${#nums[@]}\
    \ ; i++)); do\n        for (( j=i+1; j < ${#nums[@]} ; j++)); do\n           \
    \ local minSum=$(minSum \"${nums[$i]}\" \"${nums[$j]}\")\n            if [[ ${minSum}\
    \ -gt ${nums[$i]} ]]; then\n                local minSum=\"$minSum\"\n       \
    \     fi\n        done\n        local maxSum=${nums[$i]}\n        for (( j=0;\
    \ j<${#nums[@]} ; j++)); do\n            local sum=$(sum \"${nums[$i]}\" \"${nums[$j]}\"\
    )\n            if [[ ${maxSum} -lt ${sum} ]]; then\n                maxSum=\"\
    $sum\"\n            fi\n        done\n        echo -n \"${maxSum}\"\n    done\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'sum: ''2 3 4 1 2 4'': No such file or directory

    sum: ''2 3 4 1 2 4'': No such file or directory

    /tmp/tmpwv44s9ov.sh: line 29: [[: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: -1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local numsStr prev minSum\n\
    \    read -r numsStr\n    numsStr=${numsStr// / }\n    numsStr=${numsStr// +/\
    \ }\n    numsStr=${numsStr//-/ }\n    numsStr=${numsStr//+/ }\n\n    local i minSum\
    \ cur\n    for (( i=1; i<${#numsStr}; i++ )); do\n        if [[ ${numsStr:i} ==\
    \ ${numsStr:i} ]]; then\n            minSum+=${numsStr:i}\n        else\n    \
    \        prev=${numsStr:i}\n            if [[ ${prev} == * ]]; then\n        \
    \        minSum=${minSum}+${prev}\n            else\n                cur=${prev}\n\
    \                while [[ ${cur} != * ]] && [[ ${cur} != ${numsStr} ]]; do\n \
    \                   cur=${cur}${cur}\n                done\n                minSum=${minSum}+${cur}\n\
    \            fi\n        fi\n    done\n    echo \"${minSum}\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=45 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=13 encoding='utf-8'>
  timestamp: 1660058949
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local i sum\n    local -a\
    \ nums=( $1 )\n    for ((i=1; i${#nums[@]} <= ${#nums[@]}-1; i++)); do\n     \
    \   sum=0\n        for ((j=0; j<${#nums[@]}; j++)); do\n            ((sum += nums[j]))\
    \ || continue\n        done\n        [[ ${sum} -gt 0 ]] && return ${sum}\n   \
    \ done\n    return 0\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058944
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -n nums=$1\n    local\
    \ -i sum=0\n    for (( i=0; i<${#nums[@]}\"; i++ )); do\n        if (( ${nums[i]}\
    \ )) ; then\n            sum=$(( $sum + ${nums[i]} ))\n        fi\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr1l1hnu3.sh: line 39: unexpected EOF while looking for matching
    `"''

    /tmp/tmpr1l1hnu3.sh: line 43: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660058944
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local numArray=\"$1\"\n  local\
    \ sum=\"${numArray[0]}\"\n  for (( i=1; i<${#numArray[@]}; i++ )); do\n    local\
    \ minSum=\"${sum}\"\n    if [ \"${numArray[i]}\" -gt \"${sum}\" ]; then\n    \
    \  minSum=\"${numArray[i]}\"\n    fi\n    sum=\"${minSum}\"\n  done\n  echo \"\
    ${sum}\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058944
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local arr=( $1 )\n    for\
    \ ((i=0; i<${#arr[@]}; i++)) ; do\n        if (( ${arr[i]} )) ; then\n       \
    \     arr[i]=( $(eval echo \"$((${arr[i]}+${arr[i+1]}))\") )\n        fi\n   \
    \ done\n    echo ${arr[*]}\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmp8u7kgd.sh: line 15: arr[i]: cannot assign list to array member

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local arrStr=$1\n  local result\
    \ minVal\n  arrStr=${arrStr//[[ \\t]+/}\n  arrStr=${arrStr// /}\n  IFS=' ' read\
    \ -a arr <<< \"$arrStr\"\n  for index in \"${!arr[@]}\"; do\n    if [[ $((index))\
    \ -lt ${#arr[@]} ]]; then\n      result=\n      minVal=${arr[0]}\n      while\
    \ [[ $((index)) -lt ${#arr[@]} ]]; do\n        if ((index) > 0)\n        then\n\
    \          (( minVal+=arr[$((index-1))] ))\n        fi\n        ((index+=1 ))\n\
    \      done\n      if [[ $minVal -lt $result ]]; then\n        result=$minVal\n\
    \      fi\n    fi\n  done\n  echo $result\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzecwairl.sh: line 22: index: command not found

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: -1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n\n  local\
    \ minSum=0\n  local minNum\n\n  for num in \"${nums[@]}\"; do\n    local maxSum=$(maxSubArraySum\
    \ \"$num\")\n    local minSum=$(minSubArraySum \"$num\")\n\n    if [[ $minSum\
    \ -gt $maxSum ]]; then\n      minSum=$maxSum\n      minNum=\"$num\"\n    elif\
    \ [[ $minSum -eq $maxSum ]]; then\n      if [[ $minNum -ne $num ]]; then\n   \
    \     minSum=$minNum\n        minNum=\"$num\"\n      fi\n    fi\n  done\n\n  echo\
    \ \"$minSum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=31 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=26 encoding='utf-8'>
  timestamp: 1660058950
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local i min sum=0 sum2 minSum\n\
    \    declare -a nums\n    IFS=' ' read -ra nums <<< \"$1\"\n    for ((i=${#nums[@]}-1;\
    \ i>0; i--)); do\n        sum=0\n        for ((j=0; j<i; j++)); do\n         \
    \   sum+=${nums[j]}\n        done\n        sum2=$(( ${sum} + ${nums[${#nums[@]}-i]}\
    \ ))\n        echo \"$sum2\"\n        if [ $sum2 -gt $min ]; then\n          \
    \  minSum=$min\n            min=$sum2\n        fi\n    done\n    echo \"$min\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpr6v2k8yg.sh: line 22: [: 9997: unary operator expected

    /tmp/tmpr6v2k8yg.sh: line 22: [: 1253: unary operator expected

    /tmp/tmpr6v2k8yg.sh: line 22: [: 157: unary operator expected

    /tmp/tmpr6v2k8yg.sh: line 22: [: 21: unary operator expected

    /tmp/tmpr6v2k8yg.sh: line 22: [: 6: unary operator expected

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    read -a array <<< \"$1\"\n\
    \    sum=0\n    for num in \"${array[@]}\"; do\n        sum=$(( sum + num ))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: -1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ res=$(echo \"${nums}\" | grep -Eo \"\\d+\" | sort -n | head -n 1)\n    local\
    \ count\n    while [[ \"${nums}\" =~ ^([[:digit:]]+)\\s* ]]; do\n        ((count++))\n\
    \        local nums1=${BASH_REMATCH[1]}\n        ((res+=$nums1))\n        nums=${nums%$nums1}\n\
    \    done\n    echo \"${res}\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=37 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=30 encoding='utf-8'>
  timestamp: 1660058950
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n    local num\n    local minIndex=0\n    local minValue=0\n    local\
    \ count\n    # Sort the list\n    local sortedNums\n    sortedNums=$(echo \"${nums}\"\
    \ | tr \" \" \"\\n\")\n    sortedNums=$(echo \"${sortedNums}\" | sort -n)\n  \
    \  for (( i=0; i < ${#sortedNums}; i++ )); do\n      num=${sortedNums[i]}\n  \
    \    if [[ $num -gt 0 ]]; then\n        sum=$((sum+num))\n        if (( i < ${#nums}\
    \ )) && [[ \"${nums[$((i+1))]}\" -lt 0 ]]; then\n          minIndex=$((i+1))\n\
    \        fi\n      fi\n    done\n    if (( minIndex > 0 )); then\n      minValue=$sum-$minIndex\n\
    \      count=$(echo \"${nums}\" | wc -w)\n      while (( count > 0 )); do\n  \
    \      num=$(echo \"${nums}\" | sed -n \"${minIndex}p\")\n        sum=$((sum+num))\n\
    \        sortedNums=$((sortedNums+num))\n        count=$(echo \"${nums}\" | wc\
    \ -w)\n      done\n    fi\n    echo \"${minValue}\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmmv3y0eh.sh: line 24: [[: 1

    2

    2

    3

    4

    4: syntax error in expression (error token is "2

    2

    3

    4

    4")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local curSum\n\
    \  local i sum\n  local minSum=10000000\n  for ((i = 0; i < ${#nums[@]}; i++));\
    \ do\n    sum=0\n    curSum=${nums[$i]}\n    for ((j = i; j < ${#nums[@]}; j++));\
    \ do\n      ((sum += ${nums[$j]}))\n      ((curSum -= nums[$j]))\n    done\n \
    \   if [[ ${sum} -gt $minSum ]]; then\n      minSum=${sum}\n    fi\n  done\n \
    \ echo \"${minSum}\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzu1utu7c.sh: line 20: ((: sum += 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    /tmp/tmpzu1utu7c.sh: line 21: ((: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -n nums=$1\n  local -n\
    \ min=max\n  local -n sum\n  local -n count\n\n  min=$2\n  max=$((min+1))\n  sum=0\n\
    \n  count=0\n  for i in \"${!nums[@]}\"; do\n    if [[ $((nums[i])) -gt $((max))\
    \ ]]; then\n      max=$((nums[i]))\n    fi\n    ((count++))\n    ((sum+=nums[i]))\n\
    \  done\n\n  if ((min > sum)); then\n    min=$((sum))\n  fi\n\n  echo -n \"$min\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmkjtlmig.sh: line 12: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    /tmp/tmpmkjtlmig.sh: line 19: `0'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -n nums=\"$1\"\n  \
    \  local -n minSum=\"${nums}\"\n    local -i sum=0\n\n    while (( ${#nums[@]}\
    \ > 0 )); do\n        local -a parts\n        parts=(${nums[@]:0:$((${#nums[@]}-1))})\n\
    \        ((sum+=${parts[@]})) && nums=(\"${nums[@]:$((${#nums[@]}-1))}\")\n  \
    \  done\n    echo \"${minSum:+$sum}\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjazqf20h.sh: line 12: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    /tmp/tmpjazqf20h.sh: line 13: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  if [ \"$#\" -lt 1 ]; then\n\
    \    echo \"Invalid arguments\"\n    exit 1\n  fi\n\n  # Convert the input to\
    \ an array and sort it\n  arr=( $1 )\n  IFS=\" \" read -r -a arr <<<\"$arr\"\n\
    \  arr=($(sort -n <<<\"${arr[@]}\"))\n\n  # Find minimum\n  min=0\n  for i in\
    \ \"${arr[@]:1:${#arr[@]}}\"\n  do\n    if [[ ${i} -gt ${min} ]]; then\n     \
    \ min=${i}\n    fi\n  done\n\n  # Return minimum\n  echo \"$min\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ sum=0\n  local i=0\n  while IFS= read -r num; do\n    local j=0\n    while ((j<i));\
    \ do\n      local sum=$(expr \"$sum\" + \"$num\")\n      ((j+=1))\n    done\n\
    \    ((i+=1))\n  done <<< \"$nums\"\n  echo $sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ sum=0\n    local max=0\n    for num in \"${nums[@]}\"; do\n        sum=$((sum\
    \ + num))\n        max=$((num > max ? num : max))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph8azny_0.sh: line 16: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  # Parse input arguments\n \
    \ local nums=$(IFS=' '; echo \"$1\")\n  # Loop through input arguments\n  for\
    \ (( i = 0; i < ${#nums[@]}; i++ )); do\n    # If we're already at a solution,\
    \ quit here\n    if [ $i -eq 0 ] && [ \"$minSubArraySum\" != \"\" ]; then\n  \
    \    break\n    fi\n    # If there's no more input arguments, break here\n   \
    \ if [ $i -eq ${#nums[@]} ]; then\n      break\n    fi\n    # Find next argument\n\
    \    local nextArg=$(echo \"${nums[$i]}\" | awk '{print $1}')\n    local sum=$((\
    \ ${nums[$i]} + ${nextArg} ))\n    # Save the new solution if this is the smallest\
    \ sum\n    if [ \"$sum\" -lt \"$minSubArraySum\" ]; then\n      minSubArraySum=$sum\n\
    \    fi\n    # Remove the new argument from the input array\n    shift \"${#nums[@]}\"\
    \n  done\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7fb5rnex.sh: line 26: 2 3 4 1 2 4 + 2 : syntax error in expression
    (error token is "3 4 1 2 4 + 2 ")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local i nums minSubArraySum;\n\
    \    [[ $1 =~ ^ *[0-9]+$ ]] || { echo \"Invalid input\"; return 1; };\n    nums=(\
    \ $1 );\n    minSubArraySum=\"${nums[*]}\"\n    # min of empty array is 0\n  \
    \  local emptyNums=( ${nums[@]:0:} );\n    for ((i=0; i<${#nums[@]};++i)); do\n\
    \        local emptyIndex=${#emptyNums[@]}\n        if (( emptyIndex > 0 )); then\n\
    \            local emptyValue=${emptyNums[$(($emptyIndex-1))]}\n            minSubArraySum=\"\
    ${minSubArraySum} ${emptyValue+nums[$i]}\"\n            emptyNums=( ${emptyNums[@]:0:$emptyIndex-1}\
    \ );\n        fi\n    done\n    echo \"$minSubArraySum\"\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp462_6gf0.sh: line 13: syntax error in conditional expression

    /tmp/tmp462_6gf0.sh: line 13: syntax error near `*[0-9]+$''

    /tmp/tmp462_6gf0.sh: line 13: `    [[ $1 =~ ^ *[0-9]+$ ]] || { echo "Invalid input";
    return 1; };''

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \n  for (( i=0; i<${#nums[@]}-${#sum}-1; i++ )); do\n    (( sum+=${nums[$i]} ))\n\
    \  done\n\n  echo $sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n\tlocal i j sum nums\n\tnums=$(echo\
    \ \"$1\" | tr -d ' ') \n\tfor i in $(seq 0 $((${#nums[@]}-1)) -1 1); do\n\t\t\
    sum=$(echo $nums | tr -d ' ' | cut -s -d \" \" -f $i)\n\t\tif [[ \"$sum\" != \"\
    \" ]]; then\n\t\t\tj=$((i-1))\n\t\t\tbreak\n\t\tfi\n\tdone\n\techo $sum\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "seq: extra operand \u20181\u2019\nTry 'seq --help' for more information.\n"
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -a nums=\"$1\"\n  local\
    \ sum=0\n\n  for i in $(seq 1 \"${#nums[@]}\")\n  do\n    (( sum += ${nums[i]}\
    \ ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpevzc3gwk.sh: line 17: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  echo $1 | awk '\n    BEGIN\
    \ { min = INT_MAX }\n    { sum = min + $1 }\n    END { print sum }\n    '\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local sum=0\n  for i in $@;\
    \ do\n    sum=$(( $sum + $i ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local i\n    local sum=0\n\
    \    local n\n    for ((i=1; i<=$#; i++) {\n\tsum=$((sum+${1[i]}))\n    })\n \
    \   n=$((${#1}-1))\n    if [[ $n -gt 0 ]]; then\n\tsum=$((sum-${1[n]}))\n    fi\n\
    \    echo $sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoktvpk1u.sh: line 15: syntax error near `{''

    /tmp/tmpoktvpk1u.sh: line 15: `    for ((i=1; i<=$#; i++) {''

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local numbers=${1// /}\n  local\
    \ sum=0\n  local array=\"${numbers}\\n${numbers[@]}\"\n\n  for (( i=0; i<${#array[@]};\
    \ i++ )); do\n    sum=$(( sum + ${array[$i]} ))\n  done\n\n  echo \"${sum}\"\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcsmi27a5.sh: line 17: sum + 234124\n234124 : syntax error: invalid
    arithmetic operator (error token is "\n234124 ")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local input=\"$1\"\n    local\
    \ output=\"$2\"\n    local spaces\n\n    IFS=$'\\n' read -r -d '' -a array <<<\
    \ \"$input\"\n\n    for ((i = 0; i < ${#array[@]}; i++));\n    do\n        spaces=\"\
    ${array[@]:$i:${#array[@]} - i}\"\n        local temp=\"$(echo \"$spaces\" | sed\
    \ 's/^ *//g' | sort -n | tail -1)\"\n        spaces=\"$spaces$temp\"\n       \
    \ ((temp - i))\n        ((minElement=${array[$i]+$minElement}))\n    done\n\n\
    \    echo \"$minElement\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjlobcumk.sh: line 23: ((: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    /tmp/tmpjlobcumk.sh: line 24: ((: minElement=: syntax error: operand expected
    (error token is "=")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1 sum=0\n   \
    \ local i\n    read -r -a nums <<<\"$(printf '%s\\n' \"$1\")\"\n\n    for (( i=0;\
    \ i<${#nums[@]}; i++ )); do\n        if (( ${nums[i]} != 0 )); then\n        \
    \    sum=$(( sum + nums[i] ))\n        fi\n    done\n\n    echo $sum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums\n  local num\n \
    \ local min\n  read -r -a nums <<< \"$1\"\n  local sum\n  sum=0\n  for num in\
    \ \"${nums[@]}\"; do\n    ((sum+=num))\n  done\n  echo \"${sum}\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$(echo $1 | sed\
    \ 's/ /\" \"/g')\n  local min=${nums[0]}\n  local sum=${min}\n\n  for i in $(seq\
    \ 1 ${#nums}); do\n    local curr=${nums[i]}\n    local newsum=$(( $sum + $curr\
    \ ))\n    [ $newsum -le $min ] && min=$newsum\n    sum=$newsum\n  done\n\n  echo\
    \ $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpklwrxqjo.sh: line 18: 2" "3" "4" "1" "2" "4 +  : syntax error:
    invalid arithmetic operator (error token is "" "3" "4" "1" "2" "4 +  ")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: -1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ sum=0\n\n    while ((${#nums[@]})); do\n        local val=${nums[0]}\n     \
    \   (( sum += val ))\n        nums=${nums[@]:1}\n    done\n\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=20 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=16 encoding='utf-8'>
  timestamp: 1660058950
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums\n    nums=\"${1:-$(\
    \ cat /dev/null )}\" && IFS=$' \\t\\n'\n\n    # Convert to an array\n    IFS=$'\\\
    n' read -a nums <<< \"$nums\"\n    # Check for empty subarrays and return the\
    \ result\n    [[ ${#nums[@]} -eq 0 ]] && return 0\n    local i\n    for (( i =\
    \ 0; i < ${#nums[@]}; i++ )); do\n        local currSum=$0\n        for (( j =\
    \ i; j < ${#nums[@]}; j++ )); do\n            currSum=$(($currSum + nums[$j]))\n\
    \        done\n        [[ $currSum -gt $0 ]] && return $currSum\n    done\n  \
    \  return $0\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxk21rexc.sh: line 23: /tmp/tmpxk21rexc.sh + nums[0]: syntax error:
    operand expected (error token is "/tmp/tmpxk21rexc.sh + nums[0]")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: -1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ i=1 sum=0\n    while [[ $nums != *[!0-9]*$ ]]; do\n        local -a numsArr\n\
    \        local -a numsArrInc\n        numsArr=( $( echo $nums | tr \" \" \"\\\
    n\" ) )\n        numsArrInc=( $( echo $nums | tr \"\\n\" \" \" ) )\n        ((\
    \ sum += ( ( ${numsArr[@]:$(( $i + 1 ))} - ${numsArr[@]:$(( $i - 1 ))} ) + ${numsArrInc[$i]}\
    \ ) ))\n        (( i++ ))\n    done\n    printf \"%s\" \"$sum\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=36 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660058950
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local arg=\"$1\"\n    minArraySum\
    \ \"$arg\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmprkxki6kt.sh: line 13: minArraySum: command not found

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local sum=0\n  local min=$1\n\
    \  shift\n  while (( $# > 0 )) {\n    local num=$1\n    shift\n    local j=0\n\
    \    local sum2=0\n    for (( j=0; j<${#num[@]}; j++ )) {\n      (( sum2 = sum2\
    \ + ${num[j]} ))\n    }\n    if (( sum2 < sum )) {\n      sum=sum2\n      min=${num[@]}\n\
    \    }\n  }\n  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqly79sg4.sh: line 15: syntax error near unexpected token `{''

    /tmp/tmpqly79sg4.sh: line 15: `  while (( $# > 0 )) {''

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums i sum\n  nums=\"\
    $1\"\n  i=1\n  sum=0\n  while [ $i -le ${#nums[*]} ]; do\n    sum=$((sum+nums[$i]))\n\
    \    ((i++))\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums curSum=0\n   \
    \ local len=0\n    local minSum=0\n    local minIndex=0\n    for n in \"$1\";\
    \ do\n        curSum=0\n        for ((i=0; i < len; ++i)); do\n            curSum=$((curSum\
    \ + nums[i]))\n            if ((curSum < minSum)); then\n                minSum=$curSum\n\
    \                minIndex=$i\n            fi\n        done\n        len=$((len\
    \ + 1))\n        nums=$(echo \"${nums/$((len-1)) /$n}\" | sed -e \"s/-/+/\" -e\
    \ \"s/^/-/\" -e \"s/$/-/\")\n    done\n    echo \"${minSum}\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local list=\"$1\"\n    local\
    \ sum=0\n    local i\n\n    for ((i=0; i<${#list[@]}; i++)); do\n        if [[\
    \ ${list[i]} == *[!0-9] ]]; then\n            sum=$(( sum + ${list[i]} ))\n  \
    \      else\n            sum=$(( sum - ${list[i]} ))\n        fi\n    done\n \
    \   echo $sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr0u05yy4.sh: line 20: sum - 2 3 4 1 2 4 : syntax error in expression
    (error token is "3 4 1 2 4 ")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: -1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local n arr\n    read n arr\n\
    \    if [ -n \"$n\" ] && [ -n \"$arr\" ]; then \n        local i=0 min\n     \
    \   while [ $i -lt $n ]; do\n            [ -z \"$min\" ] && min=$( echo $( echo\
    \ $( echo \"$arr\" | grep \"^$i\\s.*$i\" ) )  | awk '{ sum += $1 } END { print\
    \ sum }')\n            [ ! -z \"$min\" ] && [ $min -gt $( echo $( echo $( echo\
    \ \"$arr\" | grep \"^$i\\s.*$i\" ) )  | awk '{ sum += $1 } END { print sum }')\
    \  ] && min=$( echo $( echo $( echo \"$arr\" | grep \"^$i\\s.*$i\" ) )  | awk\
    \ '{ sum += $1 } END { print sum }')\n            i=$(( i + 1 ))\n        done\n\
    \        echo \"$min\"\n    fi\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=17 encoding='utf-8'>
  timestamp: 1660058950
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local i\n  local sum\n  local\
    \ minSum\n  \n  sum=$1\n  minSum=$((${sum}+${sum}))\n\n  for i in $(seq 2 $#);\
    \ do\n    sum=$((${sum}-${!i}))\n    minSum=$((minSum+${sum}))\n  done\n  echo\
    \ ${minSum}\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprcwwu1bl.sh: line 17: 2 3 4 1 2 4+2 3 4 1 2 4: syntax error in
    expression (error token is "3 4 1 2 4+2 3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ sum=0\n  for item in $nums; do\n    ((sum+=item))\n  done\n  echo \"$sum\"\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -n arr=$1\n  # The array\
    \ is guaranteed to have at least two elements.\n  local min=$2\n  local sum=0\n\
    \  local max=${#arr[@]}\n  while [ \"$min\" -lt \"$max\" ]; do\n    # find largest\
    \ possible sum\n    local sum=$(printf \"%s\" \"$sum\" \"${arr[@]:$min}\")\n \
    \   local idx=$(expr \"$sum\" \"$max\")\n    local elt=${arr[$idx]}\n    # find\
    \ smallest possible sum\n    sum=$(expr \"$sum\" \"$sum\" +  -\"$elt\")\n    local\
    \ rem=$(expr \"$sum\" \"$max\")\n    arr[$idx-1]=$rem\n    min=$(($min + $rem))\n\
    \  done\n  echo \"$min\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9gtcysyu.sh: line 12: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    /tmp/tmp9gtcysyu.sh: line 17: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -a nums=($*)\n    local\
    \ sum=0\n    for n in \"${nums[@]}\"; do\n        (( sum += n ))\n    done\n \
    \   echo \"$sum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums numsLen minSum\n\
    \    IFS=$' ' read -rd '' nums <<<\"$1\"\n    numsLen=${#nums[@]}\n    minSum=$(minSumArrayIndividual\
    \ \"${nums[@]}\")\n    for i in $(seq \"$((numsLen - 1))\"); do\n        minSum=\"\
    $((minSum + ${nums[$i]}))\"\n    done\n    echo \"$minSum\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpddiklrr1.sh: line 15: minSumArrayIndividual: command not found

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  # Loop through each integer\
    \ in $1, summing the smaller ones.\n  for value in \"$1\"; do\n    total=0\n \
    \   # Loop through each array element $i of $2.\n    for index in \"${!2}\"; do\n\
    \      # If element $i of $2 is smaller than $value, add it to total.\n      if\
    \ [[ ${2[$index]} -le $value ]]; then\n        total=$((total + ${2[$index]}))\n\
    \      fi\n    done\n    # If $total is the smallest so far, set it as the smallest\
    \ so far.\n    [[ $total -eq $total ]] && min=$total || min=${total}\n  done\n\
    \  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpg7ql_2my.sh: line 18: ${2[$index]}: bad substitution

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -n args=$1; shift\n\
    \    local nums=(\"$@\")\n    local -a sums=()\n\n    for (( i=0; i < ${#nums[@]}\
    \ ; i++)); do\n        local -n sum=0\n        local j=$(( i + 1 ))\n        while\
    \ (( j < ${#nums[@]} )) && [[ ${nums[i]} != ${nums[j-1]} ]] && [[ ${nums[i]} -gt\
    \ ${nums[j]} ]]; then\n            (( sum += nums[i] ))\n            (( j += 1\
    \ ))\n        done\n        sums+=(\"${sum}\")\n    done\n    local -n min=${!sums[@]}\n\
    \    for (( i=0; i < ${#sums[@]} ; i++)); do\n        if [[ ${min} -gt ${sums[i]}\
    \ ]]; then\n            min=${sums[i]}\n        fi\n    done\n    echo \"$min\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx33bfku0.sh: line 19: syntax error near unexpected token `then''

    /tmp/tmpx33bfku0.sh: line 19: `        while (( j < ${#nums[@]} )) && [[ ${nums[i]}
    != ${nums[j-1]} ]] && [[ ${nums[i]} -gt ${nums[j]} ]]; then''

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local numbers=\"${1}\"\n\
    \    local sum=${2}\n\n    local num=\"${numbers}\" && echo \"${sum}\" && return\
    \ 0\n\n    local num=\"${numbers//[^0-9-]}\"\n    local last=\"${num}\"\n    local\
    \ i=0\n    while [ -n \"${num}\" ]; do\n        last=\"${num%?}\"\n        echo\
    \ \"${last}\" > numbers.txt\n        (( i=i+1 ))\n        echo \"${sum}\" >> numbers.txt\n\
    \        (( sum+=last ))\n        num=\"${num#-}\"\n    done\n    last=\"${num}\"\
    \n    echo \"${sum}\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  if [[ ! $1 =~ ^[0-9]*$ ]];\
    \ then\n    echo \"ERROR: invalid input. minSubArraySum requires space-separated\
    \ integers\"\n    exit 1\n  fi\n  local nums\n  nums=$1\n  local sum\n  sum=$(echo\
    \ $nums | tr ' ' '+' | sort -n | tr '+' '-')\n  echo $sum\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local i sums min\n  read -a\
    \ nums <<< \"$1\"\n  sums=()\n  min=\"-\"\n  for ((i=1; i<${#nums[@]}; i++));\
    \ do\n    sums[$i]=$((${sums[$i]} + nums[$i]))\n  done\n  for ((i=0; i<${#sums[@]};\
    \ i++)) do\n    if [[ $sums[$i] == \"-\" ]]; then\n      if (( ${#min} == 0 ));\
    \ then\n        min=i\n      else\n        if (( ${min} < i )); then\n       \
    \   min=i\n        fi\n      fi\n    fi\n  done\n  echo \"${min}\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ minSum\n    for num in $nums; do\n        local elemSum=$(( (num+min)%1 ))\n\
    \        minSum=$(( (minSum+elemSum)%1 ))\n    done\n    echo \"$minSum\"\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\";\n  local\
    \ maxSum=\"-1\"\n  local sum=\"\"\n  local i j;\n  for ((i=0; i<${#nums[@]}; i++));\
    \ do\n    local currentSum=\"-1\";\n    for ((j=0; j<i; j++)); do\n      local\
    \ current=\"${nums[j]}\"\n      local next=\"${nums[j+1]}\"\n      currentSum=\"\
    ${currentSum}+${next}\"\n    done\n    local currentSumInBase=${currentSum}\n\
    \    currentSumInBase=\"${currentSumInBase//+([0-9])/}\"\n    currentSumInBase=\"\
    ${currentSumInBase//(-)/}\"\n    currentSumInBase=\"${currentSumInBase//([0-9])/}\"\
    \n    currentSumInBase=\"${currentSumInBase//([0-9])/}\"\n    currentSumInBase=\"\
    ${currentSumInBase//([0-9])/}\"\n    currentSumInBase=\"${currentSumInBase//([0-9])/}\"\
    \n    currentSumInBase=\"${currentSumInBase//([0-9])/}\"\n    currentSumInBase=\"\
    ${currentSumInBase//([0-9])/}\"\n    currentSumInBase=\"${currentSumInBase//([0-9])/}\"\
    \n    currentSumInBase=\"${currentSumInBase//([0-9])/}\"\n    currentSumInBase=\"\
    ${currentSumInBase//([0-9])/}\"\n    currentSumInBase=\"${currentSumInBase//([0-9])/}\"\
    \n    currentSumInBase=\"${currentSumInBase//([0-9])/}\"\n    currentSumInBase=\"\
    ${currentSumInBase//([0-9])/}\"\n    currentSumInBase=\"${currentSumInBase//([0-9])/}\"\
    \n    currentSumInBase=\"${currentSumInBase//([0-9])/}\"\n    currentSumInBase=\"\
    ${currentSumInBase//([0-9])/}\"\n    currentSumInBase=\"${currentSumInBase//([0-9])/}\"\
    \n    currentSumInBase=\"${currentSumInBase//([0-9])/}\"\n    currentSumInBase=\"\
    ${currentSumInBase//([0-9])/}\"\n    currentSumInBase=\"${currentSumInBase//([0-9])/}\"\
    \n    currentSumInBase=\"${currentSumInBase//([0-9])/}\"\n    currentSumInBase=\"\
    ${currentSumInBase//([0-9])/}\"\n    currentSumInBase=\"${currentSumInBase//([0-9])/}\"\
    \n    currentSumInBase=\"${currentSumInBase//([0-9])/}\"\n    currentSumInBase=\"\
    ${currentSumInBase\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdxynizms.sh: line 69: unexpected EOF while looking for matching
    `"''

    /tmp/tmpdxynizms.sh: line 73: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  declare -A nums=()\n  local\
    \ -n min_sum=$1\n  local -n sub_sums=()\n  for line in \"${@:2}\"; do\n    local\
    \ -a numbers=( $(echo \"$line\" | tr '\\n' ' ') )\n    local sum=0\n    while\
    \ (( ${#numbers[@]} > 0 )); do\n      local -a sub_numbers=( ${numbers[@]:0:$((${#numbers[@]}\
    \ - 1))} )\n      sum=$(( $sum + $sub_sums[$((${#sub_numbers[@]} - 1))] ))\n \
    \     numbers=( \"${numbers[@]:$((${#numbers[@]} - 1))}\" )\n    done\n    min_sum[$((\
    \ ${#numbers[@]} + 1 ))]=$(echo \"$sum\" | bc)\n    sub_sums[$(( ${#numbers[@]}\
    \ + 1 ))]=$(echo \"$sum\" | bc)\n  done\n  echo \"${min_sum[$(( ${#min_sum[@]}\
    \ - 1 ))]}\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpuem_3hft.sh: line 13: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    /tmp/tmpuem_3hft.sh: line 14: local: sub_sums: reference variable cannot be an
    array

    /tmp/tmpuem_3hft.sh: line 26: min_sum: bad array subscript

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ -a sums=()\n    local sum=0\n    local i=0\n    while (( i < ${#nums[*]} ));\
    \ do\n        (( sum += ${nums[$i]} ))\n        (( i++ ))\n    done\n    local\
    \ j=0\n    while (( j < ${#nums[*]} )); do\n        local -a a=()\n        local\
    \ a=0\n        local k=0\n        while (( k < ${#nums[*]} )); do\n          \
    \  ((a+=(nums[k]))) >  sum ? a[${#a}]=${nums[k]} : a[${#a}]=0\n            k=$((\
    \ k + 1 ))\n        done\n        sums[$j]=$a\n        j=$(( j + 1 ))\n    done\n\
    \    echo ${sums[0]}\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnpfahom8.sh: line 26: syntax error near unexpected token `?''

    /tmp/tmpnpfahom8.sh: line 26: `            ((a+=(nums[k]))) >  sum ? a[${#a}]=${nums[k]}
    : a[${#a}]=0''

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local i\n\
    \  local sum=0\n  for i in $nums; do\n    sum=$((sum+i))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -r nums=\"${1// / }\"\
    \n  local sum=\"${nums}*\"\n  local len=\"${#nums}\"\n  local min\n  \n  # find\
    \ the minimum value of a string that contains the minimum value of\n  # the substring\
    \ that starts with the same index until the end.\n  # for example, if the string\
    \ has \"1 2 3\" as its elements, and the substring\n  # \"1 2\" starts at position\
    \ 1, the minimum value should be \"1\".\n  local -a indices\n  indices=()\n  for\
    \ (( i=0; i < ${#nums}; i++ )); do\n    local i=\"${nums}${i}\"\n    indices+=(\"\
    $i\")\n  done\n  \n  indices=( \"${indices[*]:1}\" )\n  for (( i=0; i < ${#nums};\
    \ i++ )); do\n    local i=\"${nums}${i}\"\n    local j=\"${nums}${i+1}\"\n   \
    \ local c=\"${nums}\"\n    local -a sub\n    sub=()\n    while [[ \"$i\" != \"\
    $j\" && \"$c\" != \"\" ]]; do\n      sub+=(\"$c\") # keep track of substring $c\n\
    \      c=\"${c#\"$i\"}\"\n      i=$((i+1))\n    done\n    if [[ \"$i\" != \"$j\"\
    \ ]]; then\n      local min=\"${sub[*]:1}\"\n      indices=\"${indices[*]:1}\"\
    \n      for (( j=0; j < ${#indices}; j++ )); do\n        indices=\"${indices:0:j}${indices:j}\"\
    \n      done\n      if [[ \"$min\" < \"$sum\" ]]; then\n        sum=\"${min}\"\
    \n      fi\n    fi\n  done\n  \n  # return the sum of the substring that contains\
    \ the minimum value of\n  # the substring that starts with the same index until\
    \ the end\n  local i\n  for i in \"${!indices[@]}\"; do\n    local c=\"${nums}\"\
    \n    while [[ \"$c\" != \"\" ]]; do\n      c=\"${c#\"$i\"}\"\n      i=$((i+1))\n\
    \    done\n    indices=\"${indices[*]:1}\"\n    if [[ \"$c\" != \"\" ]]; then\n\
    \      sum=\"${sum} ${c}\"\n    fi\n  done\n  \n  # if sum is less than 1, then\
    \ return 0\n  if [[ \"$sum\" -lt \"1\" ]]; then\n    echo \"0\"\n    return\n\
    \  fi\n  \n  # return the sum\n  echo $sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9itgrr4e.sh: line 23: ((: 2 3 4 1 2 40: syntax error in expression
    (error token is "3 4 1 2 40")

    /tmp/tmp9itgrr4e.sh: line 38: 2 3 4 1 2 40: syntax error in expression (error
    token is "3 4 1 2 40")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: -1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  declare -a nums\n  read -a\
    \ nums <<< \"$1\"\n\n  local -a minSums\n  local sum\n\n  minSums=(\n    $(\n\
    \      while read sum\n      do\n        local -i i\n        sum=$(expr $sum +\
    \ 1)\n        minSums[$i]=\"$sum\"\n      done\n      printf \"%s\\n\" \"${minSums[@]}\"\
    \ | sort -n)\n  )\n\n  printf \"$minSums[$(( ${#minSums[@]} - 1 ))]\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=56 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=33 encoding='utf-8'>
  timestamp: 1660058950
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local numArray=$1\n    local\
    \ minArray=0\n    local minSum=0\n    for i in $(seq 0 $((${#numArray[@]}-1)));\
    \ do\n        local sum=$((${numArray[i]} + ${minSum}))\n        if [[ \"$sum\"\
    \ -gt \"$minSum\" ]]; then\n            minSum=$sum\n        fi\n    done\n  \
    \  echo $minSum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfareujbd.sh: line 16: 2 3 4 1 2 4 + 0: syntax error in expression
    (error token is "3 4 1 2 4 + 0")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums min sum i\n  read\
    \ -r -a nums <<< \"$1\"\n  min=$(IFS=+; echo \"${nums[*]}\" | sort -n | tail -n\
    \ 1)\n  sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    ((sum+=${nums[$i]}))\n\
    \    if ((sum < min)); then\n      min=sum\n    fi\n  done\n  echo \"$min\"\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local i j x sum\n    for\
    \ ((i=0; i<${#1}; i++)); do\n        sum=0\n        for ((j=0; j<${#1[$i]}; j++));\
    \ do\n            x=${1[$i]}[j]\n            (( sum += x ))\n        done\n  \
    \      echo \"$sum\"\n    done\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp7cyo_9z8.sh: line 15: j<${#1[$i]}: bad substitution

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  read -a array <<< \"$1\"\n\
    \  for i in \"${!array[@]}\"; do\n    sum=0\n    for j in \"${!array[@]:$i}\"\
    ; do\n      sum=$((sum+array[$j]))\n    done\n    echo \"$sum\"\n  done\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmppyoke3dv.sh: line 15: 2 3 4 1 2 4: invalid variable name

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local i\n    local sum\n\
    \    sum=$1\n    for ((i=1; i<$#; i++)); do\n        sum=$(( $sum + $i ))\n  \
    \  done\n    echo $sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=${1:-}\n    local\
    \ sum=0\n\n    # Loop through the array backwards, so that we find the largest\
    \ sum\n    # of sub-arrays first\n    for i in ${!nums[@]}; do\n        local\
    \ len=${#nums[*]}\n        if (( i < (len - 1) )); then\n            sum=$(( $sum\
    \ + $nums[i] ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -n subArraySums=$1\
    \ sum=$2 element=$3\n    local -i subArrayCount=0\n\n    while read line; do\n\
    \        (( subArrayCount++; ))\n        sum=$(( sum + element ))\n\n        if\
    \ [ \"$subArrayCount\" -gt \"$subArraySums\" ]; then\n            echo \"$sum\"\
    \n            break\n        fi\n\n        subArraySums=$subArraySums\n      \
    \  sum=$(( sum - element ))\n    done < <(echo \"$element\")\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp96yp88mh.sh: line 12: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    /tmp/tmp96yp88mh.sh: line 12: local: `'': not a valid identifier

    /tmp/tmp96yp88mh.sh: line 12: local: `'': not a valid identifier

    /tmp/tmp96yp88mh.sh: line 16: ((: subArrayCount++; : syntax error: invalid arithmetic
    operator (error token is "; ")

    /tmp/tmp96yp88mh.sh: line 19: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -n nums\n    local\
    \ i arr sum\n    nums=(\"${@}\")\n    arr=()\n    sum=0\n    # Traverse the array\
    \ from the end\n    for i in \"${#nums[@]}\"; do\n        if [[ -n \"${nums[i]}\"\
    \ ]]; then\n            arr+=(\"${nums[i]}\")\n        fi\n    done\n    # Traverse\
    \ the array from the beginning\n    for i in \"${!nums[@]}\"; do\n        if [[\
    \ -n \"${nums[$i]}\" ]]; then\n            arr+=(\"${nums[$i]}\")\n        fi\n\
    \    done\n    # Traverse the array from the middle until we reach a negative\
    \ value\n    local j=0\n    while [[ \"$j\" -lt \"${#arr[@]}\" ]] && [[ \"$sum\"\
    \ -lt \"$((${arr[$j]}+${arr[$((j+1))]})\" ]] ]]; do\n        sum=$(( ${arr[$j]}\
    \ + ${arr[$((j+1))]} ))\n        j=$(( j + 2 ))\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbjc82nrv.sh: line 55: unexpected EOF while looking for matching
    `"''

    /tmp/tmpbjc82nrv.sh: line 59: unexpected argument to conditional binary operator

    /tmp/tmpbjc82nrv.sh: line 59: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    arr=($1)\n    arr=($arr[@])\n\
    \    local minsum=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n        sum=$((${arr[$i]}+${arr[$((i+1))]}))\n\
    \        if [[ $sum -gt $minsum ]]; then\n            minsum=$sum\n        fi\n\
    \    done\n    echo \"$minsum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplvm37nfz.sh: line 16: 2[@]+: syntax error: invalid arithmetic operator
    (error token is "[@]+")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local i sum\n\
    \  read -a array <<< $nums\n  for ((i=0; i<${#array[@]}; i++)); do\n    sum=${array[i]}\n\
    \    for ((j=$i+1; j<${#array[@]}; j++)); do\n      sum=$(( sum+array[j] ))\n\
    \    done\n    echo \"$sum\"\n  done\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local input=\"$1\"\n  local\
    \ output=0\n  local subarray\n\n  for subarray in \"${input//,/ }\"; do\n    local\
    \ sum\n    sum=$(echo \"$subarray\" | awk '{ print ($1 + $2) }')\n    if [[ $sum\
    \ -gt $output ]]; then\n      output=$sum\n    fi\n  done\n  echo \"$output\"\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$(echo \"$1\"\
    \ | sed 's/ /\\n/g')\n    local minsum=$(( ${nums:-1}+${nums:-2}+${nums:-3}+${nums:-4}+${nums:-5}+${nums:-6}+${nums:-7}+${nums:-8}+${nums:-9}+${nums:-10}+${nums:-11}+${nums:-12}+${nums:-13}+${nums:-14}+${nums:-15}+${nums:-16}+${nums:-17}+${nums:-18}+${nums:-19}+${nums:-20}+${nums:-21}\
    \ ))\n    echo \"$minsum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf00y9ms5.sh: line 13: 2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4 : syntax error in expression (error token is "3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4+2

    3

    4

    1

    2

    4 ")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n\n  local sum=0\n\
    \  local min=-999\n  local max=999\n\n  for i in $(seq 1 ${#nums})\n  do\n   \
    \ sum=$(( ${sum} + ${nums[$i]} ))\n    [ $(( ${sum} < ${min} )) == 1 ] || [ \"\
    $(( ${min} < ${sum} ))\" != 0 ] && min=${sum}\n    [ $(( ${sum} > ${max} )) ==\
    \ 1 ] || [ \"$(( ${max} > ${sum} ))\" != 0 ] && max=${sum}\n  done\n  echo \"\
    $min\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3vwl13ab.sh: line 20: 0 +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  if [[ \"$#\" -lt 2 ]]; then\n\
    \    echo \"Invalid argument, expecting at least 2 integers\" >&2; exit 1;\n \
    \ fi\n\n  local arr=($@)\n  local i j min sum max_idx min_idx\n  sum=0\n  for\
    \ i in \"${arr[@]}\"; do\n    sum=$((sum + i))\n  done\n  echo \"$sum\"\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'Invalid argument, expecting at least 2 integers

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -n arr=$1 sum\n  local\
    \ -i i len=${#arr[@]} min\n  echo \"${arr[@]}\"\n  for ((i=0; i<len; i++)); do\n\
    \    ((sum += arr[i]))\n    if ((min == 0)); then\n      min=$sum\n    elif (sum\
    \ < min); then\n      min=sum\n    fi\n  done\n  echo \"$min\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnjr_hvsp.sh: line 12: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ min sum\n    local -i i j k kmin len\n\n    min=-1\n    sum=0\n    len=$(expr\
    \ ${#nums} - 1)\n    for ((i=0; i<len; i++)); do\n        if (( $(echo \"${nums[$i]}\"\
    \ | grep -q \" \") )); then\n            j=$((i+1))\n            sum=$((sum+nums[$j]))\n\
    \        else\n            sum=$((sum+nums[$i]))\n        fi\n        if (( sum\
    \ < 0 )); then\n            sum=$((sum+1))\n        elif (( sum > 0 )); then\n\
    \            sum=$((sum-1))\n        fi\n        if (( sum < min )); then\n  \
    \          min=$((sum))\n            kmin=$((i))\n        fi\n    done\n    echo\
    \ \"${min}\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuzd2r21v.sh: line 24: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    echo\
    \ \"$(($(echo $nums | awk '{print $1}' | sort -n | head -1) ))\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local i\n    local a\n  \
    \  local sum\n    local tmp\n    local num\n\n    sum=0\n    for i in  $( echo\
    \ $1 | sed 's/ /,/g' ); do\n        a=$( echo $1 | sed \"s/$i/0 0 /g\" )\n   \
    \     sum=$( echo \"$sum + $a\" | bc )\n    done\n    if [ $( echo $sum | bc )\
    \ -gt 0 ]; then\n        echo \"$sum\"\n    else\n        echo \"0\"\n    fi\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    /tmp/tmp1g28akav.sh: line 23: [: -gt: unary operator expected

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: -1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local i sum\n    local array=\"\
    $1\" ; shift\n\n    while read i; do\n        sum=$(expr \"$sum\" - \"$i\" | bc\
    \ -l)\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=49 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=43 encoding='utf-8'>
  timestamp: 1660058950
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums\n  local -i numslen=$#\n\
    \  nums=($1)\n  local min\n  local minlen\n  min=$nums[0]\n  minlen=$(echo $nums\
    \ | wc -w)\n  for (( i=1; i<$numslen; i++ )); do\n    local tmp\n    tmp=$(echo\
    \ \"$min + $nums[i]\" | bc)\n    if [[ \"$min\" -gt \"$tmp\" ]]; then\n      min=$tmp\n\
    \      minlen=$(echo $nums | wc -w)\n    fi\n  done\n  echo $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  declare -a nums=(\"$@\")\n\
    \  nums=(${nums[@]#*[^ ]})\n  declare -i minSum\n  minSum=\"${nums[0]}\"\n  for\
    \ ((i=1;i<\"${#nums[@]}\" ;i++)); do\n    minSum=$((minSum+nums[i]))\n  done\n\
    \  echo -n \"${minSum}\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: -1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local max=0\n\
    \  local min=$((${#nums[*]} - 1))\n  local i sum\n  for ((i=1; i<=${#nums[*]};\
    \ i++)); do\n    if ((${nums[$i]} > 0 && $min > 0)); then\n      max=$((${max}\
    \ + ${nums[$i]}))\n      min=$((${min} - 1))\n    fi\n    ((i--))\n  done\n  sum=$((${max}\
    \ + ${min}))\n  echo \"$sum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=38 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=34 encoding='utf-8'>
  timestamp: 1660058950
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n\tlocal nums=\"${1:-}\"\n\tlocal\
    \ -a maxsum=0\n\tlocal -a minsum=(-${nums//,/ })\n\tlocal -a sums=()\n\tlocal\
    \ minnum\n\tlocal maxnum\n\tlocal -a numssplit\n\tfor num in \"${minsum[@]}\"\
    ; do\n\t\tif [[ $num -gt $maxsum ]]; then\n\t\t\tminnum=$(echo $num | cut -d '\
    \ ' -f 1)\n\t\t\tmaxsum=$num\n\t\tfi\n\tdone\n\n\twhile (( ${#minsum[@]} > 0 ))\
    \ ; do\n\t\tlocal sum=$(echo $minsum[0] | awk '{s+=$1} END {print s}')\n\t\tlocal\
    \ numssplit=($nums)\n\t\tlocal num=\"${numssplit[$(( ${#minsum[@]} - 1))]}\"\n\
    \t\t(( ${#numssplit[@]} - 1 )) || numssplit+=(\"$num\")\n\t\tnumssplit=(${numssplit[@]})\n\
    \t\tif [[ ${numssplit[@]} > 0 ]]; then\n\t\t\tlocal num=\"${numssplit[$(( ${#minsum[@]}\
    \ - 1))]}\"\n\t\t\t(( ${#numssplit[@]} - 1 )) || numssplit+=(\"$num\")\n\t\t\t\
    numssplit=(${numssplit[@]})\n\t\t\tlocal num=\"${numssplit[$(( ${#minsum[@]} -\
    \ 1))]}\"\n\t\t\t(( ${#numssplit[@]} - 1 )) || numssplit+=(\"$num\")\n\t\t\tnumssplit=(${numssplit[@]})\n\
    \t\t\tlocal num=\"${numssplit[$(( ${#minsum[@]} - 1))]}\"\n\t\t\t(( ${#numssplit[@]}\
    \ - 1 )) || numssplit+=(\"$num\")\n\t\t\tnumssplit=(${numssplit[@]})\n\t\t\tlocal\
    \ num=\"${numssplit[$(( ${#minsum[@]} - 1))]}\"\n\t\t\t(( ${#numssplit[@]} - 1\
    \ )) || numssplit+=(\"$num\")\n\t\t\tnumssplit=(${numssplit[@]})\n\t\t\tlocal\
    \ num=\"${numssplit[$(( ${#minsum[@]} - 1))]}\"\n\t\t\t(( ${#numssplit[@]} - 1\
    \ )) || numssplit+=(\"$num\")\n\t\t\tnumssplit=(${numssplit[@]})\n\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2z0onl99.sh: line 49: syntax error near unexpected token `}''

    /tmp/tmp2z0onl99.sh: line 49: `}''

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local array=\"$1\"\n  local\
    \ sum=0\n\n  local i len subarray\n  for ((i=1; i<${#array[@]}; i++)); do\n  \
    \  sum=$((${sum}+${array[i]}))\n  done\n  len=${#array[@]}\n  for ((i=0; i<len;\
    \ i++)); do\n    subarray=( \"${array[@]:$i:$((len-i))}\")\n    local sum\n  \
    \  sum=$((${sum}+${subarray[0]}))\n  done\n  echo -n \"$sum\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local min=\"${1}\"\n    local\
    \ input=\"${@:2}\"\n    for number in $input; do\n        let min+=$number\n \
    \   done\n    echo \"$min\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$(echo $1 | tr -s\
    \ \" \" \"+\")\n  local min\n  local sum\n  local i\n  for (( i = 0; i < ${#nums[@]}\
    \ - 3; i++ )); do\n    sum=0\n    for (( j = i + 1; j < ${#nums[@]}; j++ )); do\n\
    \      (( sum += ${nums[j]} - ${nums[i]} ))\n    done\n    [[ \"${sum}\" -gt ${min}\
    \ ]] && min=${sum}\n  done\n  echo ${min}\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1 sum\n  local\
    \ i j min minlen num\n  sum=0\n  minlen=${#nums}\n  min=${nums[$minlen]}\n  for\
    \ ((i=$minlen; i>0; i--)); do\n    num=${nums[$i]}\n    sum=$(( $sum + $num ))\n\
    \    (( min > sum )) && min=$sum\n    num=$(( num - min ))\n  done\n  echo $min\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_jr0gn9h.sh: line 19: 0 +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"${1}\"\n   \
    \ local sum=0\n    local max=0\n    local i\n    for ((i=0; i < ${#nums[@]} -\
    \ 1; i++)); do\n        if [[ ${nums[$i]} -le ${nums[$i+1]} ]]; then\n       \
    \     sum=$(( ${sum} + ${nums[$i]} ))\n        elif [[ ${nums[$i]} -gt ${nums[$i+1]}\
    \ ]]; then\n            sum=$(( ${sum} - ${nums[$i]} ))\n        else\n      \
    \      sum=$(( ${sum} ))\n        fi\n    done\n    sum=$(( ${sum} + ${nums[${#nums[@]}\
    \ - 1]} ))\n    if [ $(( sum < $max )) -eq 1 ]; then\n        echo \"$sum\"\n\
    \    else\n        echo \"$max\"\n    fi\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2ngozlqc.sh: line 25: 0 + 2 3 4 1 2 4 : syntax error in expression
    (error token is "3 4 1 2 4 ")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local subArr\n    local sum\n\
    \n    arr=$1\n    sum=$(eval \"($arr | awk '{for (i=1;i<=NF;i++) {printf \\\"\
    %s\\\", $i;}}' | sort -nr | sed 's/ /+/g'|awk '{print $1$2}' | sort -nr | head\
    \ -n 1)\")\n    arr=$(eval \"($arr | awk '{for (i=1;i<=NF;i++) {printf \\\"%s\\\
    \", $i;}}' | sort -nr | sed 's/ /+/g'|awk '{print $1 $2}' | sort -nr | head -n\
    \ 1)\")\n    while [[ $arr != \"\" ]]; do\n        subArr=\"${arr} ${arr}\"\n\
    \        sum=$(eval \"($sum + $subArr | awk '{print $1$2}' | sort -nr | head -n\
    \ 1)\")\n        arr=$(eval \"($arr | awk '{printf \\\"%s\\\", $1 $2}')\")\n \
    \   done\n    echo \"$sum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4qyyxpk2.sh: line 16: 2: command not found

    awk: cmd. line:1: {for (i=1;i<=NF;i++) {printf "%s", ;}}

    awk: cmd. line:1:                                    ^ syntax error

    /tmp/tmp4qyyxpk2.sh: line 17: 2: command not found

    awk: cmd. line:1: {for (i=1;i<=NF;i++) {printf "%s", ;}}

    awk: cmd. line:1:                                    ^ syntax error

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local numArray=($(echo $1\
    \ | awk '{print $1}'))\n    local minSum=$((${#numArray[@]} - 1))\n    local minSubArrayIndex=0\n\
    \    local curSum=0\n\n    for i in $(seq 0 $((${#numArray[@]} - 1))); do\n  \
    \      local curSum=$((${curSum}+${numArray[$i]}))\n        local curSumVal=$((${curSum}\
    \ % ${#numArray[@]} - 1))\n        local curSubArrayIndex=$((${curSumVal} + ${minSubArrayIndex}))\n\
    \        ((${curSubArrayIndex} <= ${#numArray[@]} )) && minSubArrayIndex=$curSubArrayIndex\n\
    \    done\n\n    if (( ${minSubArrayIndex} <= ${#numArray[@]} )) ; then\n    \
    \    echo \"${numArray[${minSubArrayIndex}]}\"\n        return 0\n    fi\n\n \
    \   local sum=$((${#numArray[@]} - ${minSubArrayIndex}))\n\n    echo \"${minSum+sum}\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local i\n    local sum\n\
    \    local arr\n\n    arr=( $1 )\n    sum=0\n    for ((i=0; i<${#arr[@]}; i++));\
    \ do\n        if [ $i -eq 0 ]; then\n            sum=$(( $arr[ i ] + $sum ))\n\
    \        else\n            sum=$(( $arr[ i ] + $sum + $arr[ $((i-1)) ] ))\n  \
    \      fi\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfu8s6_nr.sh: line 20: 2[ i ] + 0 : syntax error: invalid arithmetic
    operator (error token is "[ i ] + 0 ")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local numArray=\"$1\"\n  local\
    \ numArraySlice=\"$(IFS=' '; echo \"${numArray[*]}\" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')\"\
    \n  local minSum=\"$2\"\n  local minSumInd=\"${numArraySlice//,/}\"\n  local numArraySliceInd=\"\
    ${numArraySlice//-/}\"\n  local minSumIdx=\"${numArraySliceInd//,/}\"\n  local\
    \ minSumIdxInd=\"${numArraySliceInd//-/}\"\n  local numArraySliceInd=\"${numArraySliceInd//0/}\"\
    \n  local idx=0\n\n  while (( \"$idx\" < \"$numArraySliceInd\" )) ; do\n    local\
    \ idxVal=\"${minSumInd[$idx]}${minSumIdxInd[$idx]}${minSumIdx[$idx]}${minSumIdxInd[$idx]}${minSumInd[$idx]}${minSumIdxInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx]}${minSumInd[$idx\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1h6dreg6.sh: line 43: unexpected EOF while looking for matching
    `"''

    /tmp/tmp1h6dreg6.sh: line 47: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local i j k tmp sum\n  sum=0\n\
    \  for ((i=0; i<${#1}; i++)); do\n    sum+=\"${1:$i:1}\"\n  done\n  for ((j=0;\
    \ j<${#sum}; j++)); do\n    tmp=\"${sum:$j:1}\"\n    for ((k=0; k<${#tmp}; k++));\
    \ do\n      if [ \"${tmp:$k:1}\" == \"-\" ]; then\n        sum=\"${sum:0:$j}${sum:$j:1:-1}${sum:$j:$k+1}\"\
    \n      fi\n    done\n  done\n  echo \"${sum}\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n\tlocal nums=$1\n\n\tlocal maxArrayLength\n\
    \tmaxArrayLength=$(expr ${nums}|wc -w)\n\n\tlocal minArrayLength\n\tminArrayLength=0\n\
    \n\tlocal minArraySum\n\tminArraySum=0\n\n\tlocal minArraySumIndex\n\tminArraySumIndex=0\n\
    \n\tlocal minArraySumArrayLength\n\tminArraySumArrayLength=0\n\n\tlocal minArraySumArrayIndex\n\
    \tminArraySumArrayIndex=0\n\n\tfor ((arrayIndex=0; arrayIndex<maxArrayLength;\
    \ arrayIndex++)); do\n\t\tlocal currentElement\n\t\tcurrentElement=$(echo $nums|awk\
    \ '{print $arrayIndex}'|cut -d \" \" -f1)\n\t\t((arraySum=0))\n\n\t\tlocal arrayLength\n\
    \t\tarrayLength=$(expr ${nums}|wc -w)\n\n\t\tfor ((arrayIndex2=0; arrayIndex2<arrayLength;\
    \ arrayIndex2++)); do\n\t\t\tlocal currentElement2\n\t\t\tcurrentElement2=$(echo\
    \ $nums|awk '{print $arrayIndex2}'|cut -d \" \" -f1)\n\n\t\t\t((currentElementSum=$currentElement+$currentElement2))\n\
    \t\t\t((arraySum+=currentElementSum))\n\t\tdone\n\n\t\tlocal arraySumIndex\n\t\
    \tarraySumIndex=$(echo $arraySum|awk '{print $1}')\n\t\t((arraySumIndex=$arraySumIndex+1))\n\
    \n\t\tif ((arraySum>minArraySum)); then\n\t\t\tminArraySum=$arraySum\n\t\t\tminArraySumIndex=$arraySumIndex\n\
    \t\t\tminArraySumArrayLength=$arrayLength\n\t\t\tminArraySumArrayIndex=$arrayIndex2\n\
    \t\tfi\n\tdone\n\n\tlocal result\n\tresult=$(echo $minArraySum|awk '{print $minArraySumIndex}')\n\
    \n\tif ((${result}<${minArraySumArrayIndex})); then\n\t\tresult=$(echo $minArraySum|awk\
    \ '{print $minArraySumArrayIndex}')\n\tfi\n\n\techo $result\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "expr: syntax error: unexpected argument \u20183\u2019\n"
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local i sum\n    sum=$(awk\
    \ '{ sum+=0 } END { print sum }' <<< \"${1//,/ }\")\n    for i in \"${1[@]:1}\"\
    \n    do\n        sum=$((sum+i))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpku65qbt3.sh: line 14: ${1[@]:1}: bad substitution

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local sum=0\n    for word\
    \ in $@; do\n        sum=$(( $sum + $word ))\n    done\n    echo \"$sum\"\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums result\n  nums=($1)\n\
    \  result=${nums[0]}\n  for (( i=1; i<${#nums[@]}; i++ )); do\n    if [[ ${nums[$i]}\
    \ -gt $result ]]; then\n      result=${nums[$i]}\n    fi\n  done\n  echo \"$result\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local i sum\n    local nums=\"\
    $1\"\n    for (( i = 0; i < ${#nums[@]} && i < $numsLength ; i++ )); do\n    \
    \    sum=\"${nums[$i]}\"\n        for (( j = 0 ; j < $numsLength ; j++ )); do\n\
    \            sum=\"${sum} ${nums[$j+$i]}\"\n        done\n        echo $sum\n\
    \    done\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfwfekscn.sh: line 16: ((: i < 1 && i <  : syntax error: operand
    expected (error token is "<  ")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums sum\n    read\
    \ -r -a nums < <(echo $1)\n    sum=$(minSumInRange $nums 1)\n    for num in \"\
    ${nums[@]:1}\" ; do\n        sum=$((sum + num))\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpdmgbwixs.sh: line 14: minSumInRange: command not found

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local a b;\n    local -a\
    \ nums i sum;\n    local -A sums;\n    nums=( $1 );\n    sums=();\n    for a in\
    \ \"${nums[@]}\"; do\n        for b in \"${nums[@]}\"; do\n            if (( b\
    \ > a )); then\n                sums[$a]+=$b\n            fi\n        done\n \
    \   done\n    sum=$(( ${#sums[@]} < 0 ? -${#sums[@]} : ${#sums[@]}+1 ));\n   \
    \ for (( i=0; i<${#sums[@]}\"; i++ )); do\n        (( sum += sums[$i] ));\n  \
    \  done\n    echo \"${sum}\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqyaf3wi9.sh: line 48: unexpected EOF while looking for matching
    `"''

    /tmp/tmpqyaf3wi9.sh: line 52: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -n numsAsArray=$1; shift\n\
    \  local minSum=2147483647\n  local minSumIndex=$((${#numsAsArray[@]} - 1))\n\
    \  local minSubArray=\"$numsAsArray[0]\"\n\n  while (( minSumIndex >= 0 )); do\n\
    \    local sum=0\n    local idx=0\n\n    while (( idx < ${#numsAsArray[@]} &&\
    \ numsAsArray[${idx}] != minSubArray )); do\n      local num=$(( ${numsAsArray[${idx}]}\
    \ + num ))\n      sum=$(( ${sum} + num ))\n      idx=$(( ${idx} + 1 ))\n    done\n\
    \n    if (( sum < minSum )); then\n      minSum=$sum\n      minSumIndex=$idx\n\
    \      minSubArray=${numsAsArray[${idx}]}\n    fi\n\n    (( numsAsArray[${idx}]\
    \ = minSubArray ))\n    (( idx-- ))\n  done\n\n  echo \"$minSum\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpntmospvl.sh: line 12: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: -1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local in=\"$1\"\n  local len=\"\
    ${#in}\"\n  local sum=$(minSubArraySum 0 $len)\n  local sub\n  local i\n\n  for\
    \ ((i=0; i<len; ++i)); do\n    sub=${in:$i:$len}\n    if [[ ${sub} ]]; then\n\
    \      sum=$(($sum + $sub))\n    fi\n  done\n\n  return $sum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=42 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=27 encoding='utf-8'>
  timestamp: 1660058950
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local IFS=\\' '\n  local -n\
    \ nums=$1\n  local -n sums=$2\n  # Make sure we start by checking if we have any\
    \ valid numbers at all.\n  if [[ -z \"$sums\" ]]; then\n    sums=$((\n      $(\n\
    \        local IFS=\\' '\n        local -n numbers=$*\n        # Since we can't\
    \ do an arithmetic comparison in bash we do a\n        # string comparison here.\n\
    \        [[ \"${numbers[@]}\" =~ ^-?[0-9]+$ ]]\n      ) +\n      $(\n        local\
    \ IFS=\\' '\n        local -n numbers=$*\n        [[ \"${numbers[@]}\" =~ ^-?[0-9]+$\
    \ ]] ||\n          echo \"invalid input\" >&2\n      )\n    ))\n  fi\n  # The\
    \ last element is the result of the operation on empty list\n  local -n num=$((\
    \ nums+1 ))\n  local -n sum=$(( sums + nums[-1] ))\n  local -n num2\n  for num2\
    \ in ${nums[@]}; do\n    local -n num3=$(( num+1 ))\n    if [[ ${num3} -ge ${#nums[@]}\
    \ ]]; then\n      local -n num4=$(( num3 ))\n      local -n sum3=$(( sum + nums[num4]\
    \ ))\n      sums=$(( sum3 + sum4 ))\n      num=$(( num4 ))\n    fi\n  done\n \
    \ echo \"$sum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz0wr8zwt.sh: line 24: syntax error near unexpected token `)''

    /tmp/tmpz0wr8zwt.sh: line 24: `      ) +''

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local numArray=( \"$1\" )\n\
    \    local sum=0\n    local numArraySize=$(( ${#numArray[@]} - 1 ))\n    for ((\
    \ i=1; i<$numArraySize; i++ )); do\n        local num=$(( $i + 1 ))\n        local\
    \ min=$(( ${numArray[num]} ))\n        for (( j=$i; j<$numArraySize; j++ )); do\n\
    \            local jnum=$(( $j + 1 ))\n            local jmin=$(( ${numArray[jnum]}\
    \ ))\n            local max=$(( $jmin > $min ? $jmin : $min ))\n            min=$((\
    \ $max > min ? $max : min ))\n        done\n        local sum=$(( $sum + min ))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ minSum=\"$2\"\n    local i\n    local sum\n\n    for i in $(seq ${#nums}); do\n\
    \        if [[ $i -eq 0 ]]; then\n            sum=0\n        else\n          \
    \  sum=$(echo \"${nums[*]:$i}\" | tr -d ' ')\n        fi\n        if [[ ${sum}\
    \ -lt $minSum ]]; then\n            minSum=${sum}\n        fi\n    done\n\n  \
    \  echo \"$minSum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  echo \"$1\" | tr \" \" \",\"\
    \ | sed 's/,$//;s/,/ /g' | sort -n | uniq -c | sort -n -r\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums\n  read -a nums\
    \ <<< \"$1\"\n  local minSum=${nums[0]}\n  local maxSum=${nums[0]}\n\n  for num\
    \ in \"${nums[@]:1}\"\n  do\n    local i=$(($num - 1))\n    local sum=$((${maxSum}\
    \ - ${minSum} + ${num}))\n    if [ $i -gt 0 ]; then\n      minSum=$sum\n    else\n\
    \      maxSum=$sum\n    fi\n  done\n  echo $minSum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  # Get all input as space-separated\
    \ integers\n  local nums=$1\n\n  # Find the smallest sum\n  local smallestSum=\"\
    ${nums[0]}\"\n  local currentSum\n\n  for i in \"${!nums[@]}\"; do\n    currentSum=$((\
    \ ${nums[i]} + ${smallestSum} ))\n    # Check if currentSum is smaller than the\
    \ smallest sum\n    [ \"$currentSum\" -lt \"$smallestSum\" ] && smallestSum=$currentSum\n\
    \  done\n  echo \"$smallestSum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw1qy_cta.sh: line 20: 2 3 4 1 2 4 + 2 3 4 1 2 4 : syntax error
    in expression (error token is "3 4 1 2 4 + 2 3 4 1 2 4 ")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ sum=\"-100000000000000\"\n    local i\n\n    for (( i=0; i<${#nums[@]}; i++\
    \ )); do\n        if (( ${nums[$i]} < 0 )); then\n            echo \"Invalid negative\
    \ number: $nums[$i]\"\n            return 1\n        fi\n        sum=$(( ${sum}\
    \ + ${nums[$i]} ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpevubox68.sh: line 17: ((: 2 3 4 1 2 4 < 0 : syntax error in expression
    (error token is "3 4 1 2 4 < 0 ")

    /tmp/tmpevubox68.sh: line 21: -100000000000000 + 2 3 4 1 2 4 : syntax error in
    expression (error token is "3 4 1 2 4 ")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  # Convert string to an array\n\
    \  local inputString=$1\n  local nums=()\n  while read -r line; do\n    array+=(\"\
    $line\")\n  done <<< \"$inputString\"\n  # Keep track of min sum\n  local minSum=${array[0]}\n\
    \  # Find the min sum from each sub-array\n  for index in ${!array[@]}; do\n \
    \   local sum=${array[index]}\n    for (( i=1; i<$((index+1)); i++ )); do\n  \
    \    local nextSum=${array[$((i+1))]}\n      sum=$((sum+nextSum))\n    done\n\
    \    minSum=$((minSum>sum?minSum:sum))\n  done\n  echo $minSum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmfxjrfrp.sh: line 27: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local array=$1\n    local\
    \ sum=0\n    for i in $(seq 0 $((${#array[@]} - 1))); do\n        local j=$i\n\
    \        while ((j > 0)); do\n            ((sum=$((sum + ${array[$j]} + ${array[$((j\
    \ - 1))]}))));\n            ((j--));\n        done\n    done\n    echo \"${sum}\"\
    \n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -n nums=$1\n    local\
    \ -n nums_cum_sum=$2\n    local -n min_sum=$3\n\n    local -n i=$((${#nums[@]}\
    \ - 1))\n    local -n j=$((${#nums_cum_sum[@]} - 1))\n    while [ $((j > 0)) -eq\
    \ $((${#nums_cum_sum[@]} - 1)) ]; do\n        nums_cum_sum[$j]=$((nums_cum_sum[$j]\
    \ + nums[$i]))\n        ((j--))\n        ((i--))\n    done\n    ((min_sum=$((nums_cum_sum[${#nums_cum_sum[@]}-1])))\n\
    \    printf -v min_sum_str '%g' $min_sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4zoj__og.sh: line 25: syntax error near unexpected token `}''

    /tmp/tmp4zoj__og.sh: line 25: `}''

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local i nums sum\n    set\
    \ $1 || return\n    sum=$(echo $1 | cut -d' ' -f1)\n    nums=($(echo $1 | cut\
    \ -d' ' -f2- | sed 's/ //g'))\n    for ((i=0;i<${#nums[@]};i++)); do\n       \
    \ sum=$(($sum + $((${nums[$i]}))))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -n arr=$1\n  local -i\
    \ sum=0\n  for (( i=0; i<${#arr[@]} && sum<${arr[i]}; ++i )); do\n    sum=$((sum+${arr[i]}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8e8zlv41.sh: line 12: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    /tmp/tmp8e8zlv41.sh: line 14: ((: i<0 && sum<: syntax error: operand expected
    (error token is "<")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"${1}\"\n   \
    \ local min=\"${1}\"\n    local max=\"${1}\"\n    local i=0\n    while [[ \"${nums[$i]}\"\
    \ != \"\" ]]; do\n        if [[ \"${min}\" -lt \"${nums[$i]}\" ]]; then\n    \
    \        min=\"${nums[$i]}\"\n        fi\n        ((i++))\n    done\n    ((i++))\n\
    \    while [[ \"${nums[$i]}\" != \"\" ]]; do\n        if [[ \"${nums[$i]}\" -lt\
    \ \"${min}\" ]]; then\n            min=\"${nums[$i]}\"\n        fi\n        ((i++))\n\
    \    done\n    echo ${min}\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8jlgm8fm.sh: line 17: [[: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: -1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local minsum i sum\n    read\
    \ nums <<< \"$1\"\n    sum=$nums\n    i=0\n    until [ \"$sum\" -eq 0 ]; do\n\
    \        sum=`expr $sum + $nums[$i]`\n        ((i++))\n    done\n    minsum=$sum\n\
    \    local num\n    for num in $nums; do\n        if [ \"$num\" -le 0 ]; then\n\
    \            minsum=$((minsum + num))\n        else\n            minsum=$((minsum\
    \ - num))\n        fi\n    done\n    echo \"$minsum\"\n}\n\ncandidate() {\n  \
    \  minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3\
    \ 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=47 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=3 encoding='utf-8'>
  timestamp: 1660058950
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  for ((i=1; i<${#nums[@]}; i++))\n    do\n      sum=$((${sum} + ${nums[$i]}))\n\
    \    done\n  echo $((${sum}+1))\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local array=\"${1}\"\n\n\
    \    local result=\"${array[0]}\"\n    for (( i=1; i<${#array[@]}; i++ )); do\n\
    \        local sum=0\n        for element in ${array[@]:i}; do\n            sum=$((sum+element))\n\
    \        done\n        result=$((result<sum?result:sum))\n    done\n    echo \"\
    ${result}\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -n array=$1\n  local\
    \ -n sum=$2\n  local -n min=$3\n  local -n i=$(( ${#array[@]} - 1 ))\n  local\
    \ -n j=$(( ${#sum[@]} - 1 ))\n\n  # Handle empty input array\n  if [ -z \"${array[@]}\"\
    \ ]; then\n    return 0\n  fi\n\n  # Check if all array elements contain at least\
    \ one negative number\n  if [[ ${array[i]} -eq -1 ]]; then\n    return ${min}\n\
    \  fi\n\n  # Initialize min and sum arrays\n  local -n mins=$min\n  local -n sums=$sum\n\
    \n  # Initialize min/sum index variables\n  local -n mini=$i\n  local -n sumi=$j\n\
    \n  # Initialize min/sum loop variables\n  local -n min=$(( ${array[i]} + sums[i]\
    \ ))\n  local -n sum=${array[i]}\n\n  # Initialize min/sum loop values\n  local\
    \ -n i=$(( ${i} + 1 ))\n\n  # Perform loop until all array elements have been\
    \ handled\n  while [[ $i -eq ${#array[@]} ]]; do\n    mins=$(( ${mins} + min ))\n\
    \    sums=$(( ${sums} + sum ))\n    mini=$(( ${mini} + 1 ))\n    sumi=$(( ${sumi}\
    \ + 1 ))\n    min=$(( ${min} + ${array[$mini]} ))\n    sum=$(( ${sum} + ${array[$sumi]}\
    \ ))\n    i=$(( ${i} + 1 ))\n  done\n\n  # Reverse the minimum sum/min values\
    \ so they are all positive\n  mins=$(( ${mins} ))\n  mins=$(( ${mins} + min ))\n\
    \n  return $mins\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbadc7zdb.sh: line 12: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    /tmp/tmpbadc7zdb.sh: line 13: local: `'': not a valid identifier

    /tmp/tmpbadc7zdb.sh: line 14: local: `'': not a valid identifier

    /tmp/tmpbadc7zdb.sh: line 15: local: `-1'': invalid variable name for name reference

    /tmp/tmpbadc7zdb.sh: line 16: local: `-1'': invalid variable name for name reference

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local IFS= read -r -a array\
    \ <<< \"$1\"\n  # Sort the array in place\n  local sortedArray=( \"${array[@]}\"\
    \ )\n  local minimum\n\n  for (( i=0; i<${#sortedArray[@]}; i++ )); do\n    minimum=$((\
    \ minimum + sortedArray[i] ))\n  done\n\n  # Return the minimum sum\n  printf\
    \ \"%s\\n\" \"${minimum}\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_clzybfh.sh: line 12: local: `-r'': not a valid identifier

    /tmp/tmp_clzybfh.sh: line 12: local: `-a'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local i nums sum\n    nums=$(echo\
    \ $1 | tr -d ' ')\n    for ((i=0; i<${#nums[@]}; ++i)); do\n        sum=0\n  \
    \      for ((j=0; j<${#nums[@]}; ++j)); do\n            sum=$((sum+${nums[$((j+i))]}))\n\
    \        done\n        echo \"${sum}\"\n    done\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local i j l sum result cur\n\
    \    sum=$2\n    for ((i=0; i<${#1}; i++)); do\n        cur=$1[i]\n        ((j=0))\n\
    \        while ((j<l)); do\n            ((j+=1))\n            ((sum+=cur))\n \
    \       done\n        ((result=${sum//$cur}))\n        cur=${cur//$result/}\n\
    \        sum=`echo $((sum%$result))`\n        ((l=${#result}))\n    done\n   \
    \ echo $sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphkclm8ig.sh: line 21: ((: result=: syntax error: operand expected
    (error token is "=")

    /tmp/tmphkclm8ig.sh: line 23: sum%: syntax error: operand expected (error token
    is "%")

    /tmp/tmphkclm8ig.sh: line 21: ((: result=: syntax error: operand expected (error
    token is "=")

    /tmp/tmphkclm8ig.sh: line 23: sum%: syntax error: operand expected (error token
    is "%")

    /tmp/tmphkclm8ig.sh: line 21: ((: result=: syntax error: operand expected (error
    token is "=")

    /tmp/tmphkclm8ig.sh: line 23: sum%: syntax error: operand expected (error token
    is "%")

    /tmp/tmphkclm8ig.sh: line 21: ((: result=: syntax error: operand expected (error
    token is "=")

    /tmp/tmphkclm8ig.sh: line 23: sum%: syntax error: operand expected (error token
    is "%")

    /tmp/tmphkclm8ig.sh: line 21: ((: result=: syntax error: operand expected (error
    token is "=")

    /tmp/tmphkclm8ig.sh: line 23: sum%: syntax error: operand expected (error token
    is "%")

    /tmp/tmphkclm8ig.sh: line 21: ((: result=: syntax error: operand expected (error
    token is "=")

    /tmp/tmphkclm8ig.sh: line 23: sum%: syntax error: operand expected (error token
    is "%")

    /tmp/tmphkclm8ig.sh: line 21: ((: result=: syntax error: operand expected (error
    token is "=")

    /tmp/tmphkclm8ig.sh: line 23: sum%: syntax error: operand expected (error token
    is "%")

    /tmp/tmphkclm8ig.sh: line 21: ((: result=: syntax error: operand expected (error
    token is "=")

    /tmp/tmphkclm8ig.sh: line 23: sum%: syntax error: operand expected (error token
    is "%")

    /tmp/tmphkclm8ig.sh: line 21: ((: result=: syntax error: operand expected (error
    token is "=")

    /tmp/tmphkclm8ig.sh: line 23: sum%: syntax error: operand expected (error token
    is "%")

    /tmp/tmphkclm8ig.sh: line 21: ((: result=: syntax error: operand expected (error
    token is "=")

    /tmp/tmphkclm8ig.sh: line 23: sum%: syntax error: operand expected (error token
    is "%")

    /tmp/tmphkclm8ig.sh: line 21: ((: result=: syntax error: operand expected (error
    token is "=")

    /tmp/tmphkclm8ig.sh: line 23: sum%: syntax error: operand expected (error token
    is "%")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=( $1 )\n    local\
    \ maxValue=${nums[0]}\n    local minValue=${nums[0]}\n    local minSum=${nums[0]}\n\
    \    for (( i=1; i<${#nums[@]}; i++ )); do\n        if [[ ${nums[i]} -le ${maxValue}\
    \ ]]; then\n            maxValue=${nums[i]}\n        elif [[ ${nums[i]} -ge ${minValue}\
    \ ]]; then\n            minValue=${nums[i]}\n        else\n            minSum=${nums[i]}\n\
    \        fi\n    done\n    echo \"${minSum}\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local array nums\n    IFS='\
    \ ' read array nums < <(printf '%s\\n' \"$1\")\n    local len=${#nums[@]}\n  \
    \  ((len--))\n    local sum min\n    local i\n    for ((i=0; i<len; i++)); do\n\
    \        if ((sum=$(($sum + nums[i]))) <= $min); then\n            min=$sum\n\
    \        elif ((sum=$(($sum + nums[i])) - $min) < 0); then\n            min=$sum\n\
    \        fi\n    done\n    printf '%d' \"$min\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx8wm3zx5.sh: line 19: syntax error near unexpected token `$min''

    /tmp/tmpx8wm3zx5.sh: line 19: `        if ((sum=$(($sum + nums[i]))) <= $min);
    then''

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local sum=0\n\
    \  for i in $(seq 1 ${#nums})\n  do\n    sum=$(($sum + ${nums[$i]}))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvhxeabr1.sh: line 16: 0 + : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: -1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -n numbers=$1\n   \
    \ # Parse $1 into a list of integers.\n    local -a sums\n    local sum len\n\
    \    sums=( )\n    while read -a num; do\n        sum=$(( ${#num[@]} - 1 ))\n\
    \        # Skip empty arrays so they do not cause problems.\n        if [ ${#num[@]}\
    \ -gt 1 ]; then\n            # Add the current number to the sums.\n         \
    \   sums[$(( ${#sums[@]} + 1 ))]=( \"$sum\" \"$num\")\n        fi\n    done\n\n\
    \    # Sum all the elements in the sub-arrays.\n    local count=0\n    local max\n\
    \    max=0\n    for (( i=${#sums[@]}; i>0; i-- )); do\n        if [ $count -lt\
    \ $i ]; then\n            # Sub-array is empty.\n            (( count++))\n  \
    \          sum=${sums[$i][1]}\n        else\n            # Sub-array is not empty.\n\
    \            sum=$(( ${sums[$i][1]} + ${sums[$(( ${#sums[$i][1]} -1 ))][1]} ))\n\
    \        fi\n        if [ $sum -gt $max ]; then\n            max=$sum\n      \
    \  fi\n    done\n    echo \"$max\"\n}\n\ncandidate() {\n    minSubArraySum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=10 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=52 encoding='utf-8'>
  timestamp: 1660058950
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local nums_len=${#nums}\n\
    \  local minSum=${nums[0]}\n  local start=0\n  local end=0\n\n  for (( i=1; i<nums_len;\
    \ i++ )); do\n    local min=$(( ${nums[i]} < ${minSum} ? ${nums[i]} : ${minSum}\
    \ ))\n    (( ${min} > ${minSum} )) && minSum=${min}\n    (( ${start} >= nums_len-1\
    \ )) && break\n    (( ${nums[start]} == ${nums[end]} )) && start=$(( ${start}\
    \ + 1 ))\n    (( ${nums[end]} < ${nums[start]} )) && end=$(( ${end} + 1 ))\n \
    \ done\n\n  (( ${start} >= nums_len-1 )) && return ${minSum}\n  (( ${end} >= nums_len-1\
    \ )) && return ${minSum}\n  (( ${nums[start]} == ${nums[end]} )) && start=$((\
    \ ${start} + 1 ))\n  (( ${nums[end]} < ${nums[start]} )) && end=$(( ${end} + 1\
    \ ))\n  local currentSum=${nums[start]}\n  while (( ${end} < nums_len )) do\n\
    \    currentSum=$(( currentSum + ${nums[end]} ))\n    (( ${currentSum} < ${minSum}\
    \ )) && minSum=${currentSum}\n    (( ${end} < nums_len )) && end=$(( ${end} +\
    \ 1 ))\n  done\n  local sum=${currentSum}\n  while (( ${start} > 0 )) do\n   \
    \ sum=$(( sum - ${nums[start]} ))\n    (( ${sum} < ${minSum} )) && minSum=${sum}\n\
    \    (( ${start} > 0 )) && start=$(( ${start} - 1 ))\n  done\n  return ${minSum}\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwl8vsu00.sh: line 31: syntax error near unexpected token `do''

    /tmp/tmpwl8vsu00.sh: line 31: `  while (( ${end} < nums_len )) do''

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local array\n    array=($(echo\
    \ $1 | sed \"s/ /, /g\"))\n    # we can't use return here because we are using\
    \ eval\n    local -n result=\n    # eval only works inside of double quotes, so\
    \ we can't just use \"eval result=${array[*]}\";\n    eval result=$(eval \"echo\
    \ \\${${array[*]}:-1:1}\")\n    echo \"$result\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpz89os189.sh: line 15: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums min result\n \
    \   min=$(($1+0))\n    local i j\n    nums=$@\n    for (( i=0; i<${#nums[@]};\
    \ i++ )); do\n        result=$(($min+${nums[$i]}))\n        for (( j=i+1; j<${#nums[@]};\
    \ j++ )); do\n            result=$((result+${nums[$j]}))\n        done\n     \
    \   if (( result < min )); then\n            min=result\n        fi\n    done\n\
    \    echo \"$min\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph53w2bm8.sh: line 13: 2 3 4 1 2 4+0: syntax error in expression
    (error token is "3 4 1 2 4+0")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n\tlocal array=$1;\n\tlocal sum=${array[0]};\n\
    \n\tfor i in $(seq 1 ${#array[@]})\n\tdo\n\t\tsum=$(($sum + ${array[$i]}));\n\t\
    done;\n\n\treturn $sum;\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz3rsh0xp.sh: line 17: 2 3 4 1 2 4 + : syntax error in expression
    (error token is "3 4 1 2 4 + ")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -n arr=$1\n  local len=${#arr[@]}\n\
    \  if [ $len -eq 0 ]\n  then\n    echo \"0\"\n    return 0\n  fi\n  local sum=${arr[0]}\n\
    \  local i=1\n  while [ $i -le $len -a $(( sum+${arr[i]} )) == $sum ]\n  do\n\
    \    sum=$(( sum+${arr[i]} ))\n    i=$(( i+1 ))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbxxjl7m3.sh: line 12: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ min\n    local max\n    for ((i = 0; i < ${#nums}; i++)); do\n        if [ $i\
    \ -lt $(( ${#nums} - 1 )) ]; then\n            min=$(( ${nums[$i]} + ${nums[$((\
    \ ${#nums} - 1 ))]} ))\n            max=$(( ${nums[$i]} + ${nums[$(( ${#nums}\
    \ - 1 ))]} ))\n        elif [ $i -gt $(( ${#nums} - 1 )) ]; then\n           \
    \ min=$(( ${nums[$i]} + ${nums[$(( ${#nums} - 1 ))]} ))\n            max=$(( ${nums[$i]}\
    \ + ${nums[$i]} ))\n        else\n            min=$(( ${nums[$i]} ))\n       \
    \ fi\n        if [ $min -gt $max ]; then\n            min=$min\n        else\n\
    \            min=$max\n        fi\n    done\n    printf \"%d\" $min\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb20dicx_.sh: line 17: 2 3 4 1 2 4 +  : syntax error in expression
    (error token is "3 4 1 2 4 +  ")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  read -a nums <<< \"$1\"\n \
    \ local minimum=0\n  local i subArraySize\n  subArraySize=\"${#nums[@]}\"\n  for\
    \ ((i=0; i < subArraySize; i++)); do\n    (( minimum+=\"${nums[i]}\" )) && continue\n\
    \  done\n  echo \"$minimum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local n=$1; shift\n  local\
    \ sum=$(echo $1 | tr -d '\\n')\n  local i=0\n  local min\n  while [ \"$i\" -lt\
    \ \"$n\" ]\n  do\n    min=$(( sum + $1 ))\n    local j=0\n    while [ \"$j\" -lt\
    \ \"$n\" ]\n    do\n      local sum2=$(( sum + $1 ))\n      [ $sum2 < $min ] &&\
    \ min=$sum2\n      [ $sum2 -eq $min ] && break 2\n      j=$(( j + 1 ))\n    done\n\
    \    sum=$min\n    i=$(( i + 1 ))\n  done\n  echo \"$min\"\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbp1wu0g9.sh: line 16: [: 2 3 4 1 2 4: integer expression expected

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  if [[ \"$#\" -lt \"2\" ]];\
    \ then\n    echo \"Usage: $(basename \"$0\") <array>\"\n    echo \"Example usage:\
    \ $(basename \"$0\") 1 2 3 4 5 6\"\n    exit 1\n  fi\n  local result=0 nums=\"\
    $1\"\n  local i\n  for ((i=1; i<$((${#nums}-1)); i++)); do\n    local ii num\n\
    \    num=$(echo $nums | tr \" \" \"\\n\" | head -n $i | tail -1)\n    ii=$(echo\
    \ $nums | tr \" \" \"\\n\" | sed \"s/ .*//g\" | head -n $i | tail -1)\n    ((ii++))\n\
    \    result=$((result+${num:i}-${nums[ii]:ii}))\n  done\n  echo \"$result\"\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums\n  nums=$(echo \"\
    $1\" | sed 's/ /\",\"/g')\n  mins=$(echo \"$nums\" | sed 's/^\\(\\\"\\?\\)[0-9]\\\
    +\\([0-9]\\+\\)$/\\1\\2/' | sort -n)\n  echo \"$mins\" | sed 's/^\\(\\\"\\?\\\
    )[0-9]\\+\\([0-9]\\+\\)$/\\1\\2/' | sort -nr | head -1\n}\n\ncandidate() {\n \
    \   minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3\
    \ 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -n arr=$1; shift\n  local\
    \ sum=0\n  for i in $(seq 0 $((${#arr[@]} - 1))); do\n    local -n x=$i\n    local\
    \ -n y=$((i + 1))\n    while [ $((x + 1)) < $((${#arr[@]})) ] do\n      local\
    \ val=$((${arr[${x}]}+${arr[${y}]}))\n      if (( $val > 0 )); then\n        sum=$((${sum}+$val))\n\
    \      else\n        break\n      fi\n      x=$((x + 1))\n      y=$((y + 1))\n\
    \    done\n  done\n  echo $sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvut97dkj.sh: line 26: syntax error near unexpected token `done''

    /tmp/tmpvut97dkj.sh: line 26: `    done''

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n   local x=\"${1:-}\"\n   local\
    \ sum=0\n   local i=0\n   local nums[]\n\n   [[ \"$x\" =~ ^[0-9]+(\\s*,\\s*[0-9]+)*$\
    \ ]] || return 0\n\n   while (( \"$#\" != 0 )) ; do\n      (( i++))\n      nums[$i]=\"\
    $1\"\n      shift\n   done\n\n   for i in \"${!nums[@]}\" ; do\n      (( sum+=\"\
    ${nums[$i]}\" ))\n   done\n\n   echo \"$sum\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptl0rg6ug.sh: line 15: local: `nums[]'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ min_sum=\"$2\"\n\n    for num in $(echo \"$nums\" | tr ' ' ','); do\n      \
    \  ((min_sum += num))\n    done\n    echo $min_sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: -1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=$1\n  local minSum=0\n\
    \  local curSum\n\n  echo -n \"minSubArraySum (${nums})\"\n\n  local i=0 j=0\n\
    \  while [ $i -lt ${#nums[@]} ]\n  do\n    (( curSum=${nums[$i]} + $minSum ))\n\
    \    (( $j < ${#nums[@]} )) && [ $curSum -gt $nums[$j] ] && curSum=$nums[$j]\n\
    \    (( $j++ ))\n    (( $i <= ${#nums[@]} - 1 )) && [ $curSum -gt $nums[$i] ]\
    \ && curSum=$nums[$i]\n    (( $i++ ))\n    (( minSum=$curSum ))\n  done\n\n  echo\
    \ $minSum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=59 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=60 encoding='utf-8'>
  timestamp: 1660058950
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -i n=\"$#\"\n    local\
    \ -i ret\n\n    echo $n\n    local -a nums\n    while (( \"$#\" )); do\n     \
    \   (( $# )) && nums+=( \"$1\" )\n        shift\n    done\n\n    local -i cur=$n\n\
    \    local -i min=$n\n    for (( i=1; i<=$n; i++ )); do\n        if [[ -z ${nums[$i]}\
    \ ]]; then\n            local -a s\n            s=( $(( $n - $i )) )\n       \
    \     (( \"${#s[@]}\" )) && ret+=$(( \"${#s[@]}\" ))\n        fi\n        local\
    \ -a s\n        s=( $(minArray \"$cur\" \"${nums[@]:$i:$(( $n - $i ))}\") )\n\
    \        if (( \"${#s[@]}\" )) && ret+=$(( \"${#s[@]}\" )); then\n           \
    \ (( \"${#s[@]}\" )) && cur+=$(( \"${#s[@]}\" ))\n        fi\n    done\n\n   \
    \ echo $ret\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxfhvdj91.sh: line 31: minArray: command not found

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -a nums\n  read -a nums\
    \ <<< \"$1\"\n  local sum=0\n  for num in \"${nums[@]}\"; do\n    ((sum += num))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local IFS=$1\n  local nums\
    \ maxIndex\n  IFS=$' \\t\\n'\n  nums=\"${@:3}\"\n  maxIndex=$(getMaxIndex \"${nums}\"\
    )\n  local sum\n  sum=0\n  while (( ${#nums[@]} > 0 )); do\n    local sum=\"$((\
    \ ${sum} + ${nums[0]} ))\"\n    nums=\"${nums[@]:1}\"\n  done\n  echo \"${sum}\"\
    \ # sum the remaining elements\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_ewpmh5x.sh: line 16: getMaxIndex: command not found

    /tmp/tmp_ewpmh5x.sh: line 20: 0 +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1 nums2 minSum\
    \ curSum\n    local len=$((${#nums}-1))\n    minSum=0\n    for (( i = 0; i < len;\
    \ i++ )); do\n        curSum=0\n        nums2=${nums:$i:$((len-i-1))}\n      \
    \  for (( j = (i+1); j < len; j++ )); do\n            curSum=$(( curSum + $nums2\
    \ ))\n        done\n        (( minSum < curSum )) && minSum=$curSum\n    done\n\
    \    echo \"$minSum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoi72rib9.sh: line 19: curSum + 2 3 4 1 2 : syntax error in expression
    (error token is "3 4 1 2 ")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    min=$1\n    shift\n    sum=$(echo\
    \ $1 | sed 's/^[ \\t]*//')\n    for num; do\n        sum=$(( sum + num ))\n  \
    \      if [[ sum < min ]]; then\n            min=$sum\n        fi\n    done\n\
    \    echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local array=\"$1\"\n    local\
    \ min=0\n    local max=0\n    local temp=\n    for i in $(seq 0 ${#array[@]});\
    \ do\n        if [ ${array[$i]} -lt 0 ]; then\n            temp=\n        else\n\
    \            ((temp+=${array[$i]}))\n        fi\n        if [ ${temp} -gt ${max}\
    \ ]; then\n            max=${temp}\n        elif [ ${temp} -lt ${min} ]; then\n\
    \            min=${temp}\n        fi\n    done\n    echo \"${min}\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkmh2w4k.sh: line 17: [: too many arguments

    /tmp/tmpfkmh2w4k.sh: line 20: ((: temp+=2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    /tmp/tmpfkmh2w4k.sh: line 17: [: -lt: unary operator expected

    /tmp/tmpfkmh2w4k.sh: line 20: ((: temp+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  arr=$(echo $1 | tr \" \" \"\
    ,\")\n  min=$(($(echo $arr | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3\
    \ $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1\
    \ $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3\
    \ $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1\
    \ $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3\
    \ $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1\
    \ $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3\
    \ $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1\
    \ $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3\
    \ $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1 $2 $3 $4 | $1\
    \ $2 $3 $4 | $1 $2 $3 $\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphf8aqife.sh: line 13: unexpected EOF while looking for matching
    `)''

    /tmp/tmphf8aqife.sh: line 37: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n\tlocal nums=( $1 )\n\tlocal\
    \ minSum=$(echo $nums | awk '{min=$1; for(i=1;i<=NF;i++){ if($i<min) min=$i}};\
    \ {print min}')\n\techo \"${minSum}\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -n nums=$1\n  local maxsum=0\n\
    \  local minsum=${nums[0]}\n  local cursum=0\n  local idx=0\n  local num\n  for\
    \ (( idx=0; idx < ${#nums[@]}; idx++ )); do\n    num=${nums[$idx]}\n    ( [[ $cursum\
    \ == 0 ]] || [ \"$cursum\" -gt \"$minsum\" ] && [ \"$cursum\" -lt \"$maxsum\"\
    \ ] || [ \"$cursum\" -eq \"$minsum\" ] && [ \"$maxsum\" -eq \"$cursum\" ] && maxsum=$cursum\
    \ )\n    cursum=$(( ${num} + ${cursum} ))\n  done\n  echo \"$maxsum\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbe50x11r.sh: line 12: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local i sum\n    sum=0\n\
    \    for ((i=0; i < \"${#1[@]}\"; i++ )); do\n        (( sum+=${1[i]} ))\n   \
    \ done\n    echo \"$sum\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpy_5_gd0s.sh: line 14: ${#1[@]}: bad substitution

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  declare -i n=$#\n  declare\
    \ -n array=(\"${!#}\")\n  declare -i m\n  declare -i i\n  declare -i sum\n  declare\
    \ -i minsum\n  \n  # Initialize minsum\n  sum=0\n  for i in \"${!array[@]}\";\
    \ do\n    sum=$((sum + ${array[$i]}))\n  done\n  minsum=$sum\n\n  # Find the minimum\n\
    \  for i in \"${!array[@]}\"; do\n    sum=$((sum + ${array[$i]}))\n    if ((sum\
    \ < minsum)); then\n      minsum=$sum\n    fi\n  done\n\n  # Return the minimum\n\
    \  echo $minsum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpde_rkh1g.sh: line 13: declare: array: reference variable cannot
    be an array

    /tmp/tmpde_rkh1g.sh: line 22: sum + 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -r nums=$1\n  local -r\
    \ nums_len=${#nums}\n  local -r sum=0\n  local -r i\n  local j\n  for i in $(seq\
    \ 0 $((nums_len-1)) )\n  do\n    for j in $(seq 0 $((nums_len-1)) )\n    do\n\
    \      if [ $((j+i)) -lt $nums_len ]\n      then\n        continue\n      fi\n\
    \      if [ \"$j\" != \"$i\" -a \"$nums[$j]\" -le \"$nums[$((j+1))]\" -a \"$nums[$j]\"\
    \ -gt \"$nums[$((j+2))]\" ]\n      then\n        continue\n      fi\n      sum=$(($sum+$nums[$j]))\n\
    \    done\n  done\n  echo $sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n  \
    \  [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpm719qxiq.sh: line 17: i: readonly variable

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local i\n  local max\n  local\
    \ min\n\n  max=$1\n  min=-1\n  for ((i = 0; i < ${#max[@]}; i++))\n  do\n    local\
    \ temp=$((${max[i]} + ${min}))\n    if ((temp < ${max[i]})); then\n      min=temp\n\
    \    fi\n    if ((temp > ${max[i]})); then\n      max=temp\n    fi\n  done\n \
    \ echo \"$min\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvmnmd0uf.sh: line 20: 2 3 4 1 2 4 + -1: syntax error in expression
    (error token is "3 4 1 2 4 + -1")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local i j sum nums\n    local\
    \ min\n    IFS=' ' read -ra nums <<< \"$1\"\n    sum=0\n    for i in \"${nums[@]}\"\
    ; do\n        sum=\"$((sum + i))\"\n    done\n    echo \"$sum\"\n    for i in\
    \ \"${nums[@]}\"; do\n        local min=\"$min\"\n        if [ \"$((sum - i))\"\
    \ -gt \"$min\" ]; then\n            min=\"$((sum - i))\"\n        fi\n    done\n\
    \    echo \"$min\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp51mkvwfl.sh: line 22: [: : integer expression expected

    /tmp/tmp51mkvwfl.sh: line 22: [: : integer expression expected

    /tmp/tmp51mkvwfl.sh: line 22: [: : integer expression expected

    /tmp/tmp51mkvwfl.sh: line 22: [: : integer expression expected

    /tmp/tmp51mkvwfl.sh: line 22: [: : integer expression expected

    /tmp/tmp51mkvwfl.sh: line 22: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local array\n  array=($1)\n\
    \  local minVal\n  minVal=0\n  for ((i=0;i<${#array[@]};i++)); do\n    local subArrSum\n\
    \    subArrSum=0\n    for ((j=i;j<${#array[@]};j++)); do\n      if [ ${array[$j]}\
    \ -gt 0 ]; then\n        subArrSum=$(($subArrSum + ${array[$j]}))\n      else\n\
    \        break\n      fi\n    done\n    if [ \"$subArrSum\" -lt \"$minVal\" ];\
    \ then\n      minVal=$subArrSum\n    fi\n  done\n  echo $minVal\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local arg\n    local nums\n\
    \    local sum\n    local currSum\n    local i\n    local j\n    local tmp\n \
    \   local output\n\n    nums=\"${1:-}\"\n\n    # Strip all empty elements from\
    \ nums array\n    nums=$(echo \"${nums//[[:space:]]}\" | sort)\n\n    # Initialize\
    \ output to empty string\n    output=\"\"\n\n    # Loop through each num in nums\
    \ array\n    for ((i=0; i < ${#nums[@]}; i++)); do\n\n        # Calculate sum\
    \ of current num\n        currSum=0\n        for ((j=0; j < ${#nums[@]}; j++));\
    \ do\n            currSum=$(( ${currSum} + ${nums[$j]} ))\n        done\n\n  \
    \      # Update sum, if currSum is greater than the previous one\n        if [[\
    \ $currSum > $sum ]]; then\n            sum=$currSum\n            output=\"$output${sum}\"\
    \n        fi\n\n    done\n\n    # Remove trailing characters\n    output=\"${output%?}\"\
    \n\n    echo \"${output}\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums sum\n  nums=($1)\n\
    \  sum=$(minArray $nums)\n  if [ $nums == ($sum) ]; then\n    echo $sum\n  else\n\
    \    echo $sum\n  fi\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprzecg2_l.sh: line 15: syntax error near unexpected token `(''

    /tmp/tmprzecg2_l.sh: line 15: `  if [ $nums == ($sum) ]; then''

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=$1\n    local\
    \ min\n    local currSum=0\n    local currMin=1\n    for ((i=1; i<${#nums[@]};++i));\
    \ do\n        currSum=$((${nums[$i]} + ${currSum}))\n        if ((currSum < min))\
    \ then\n            min=currSum\n        fi\n        currSum=$((${nums[$i]} -\
    \ ${currSum}))\n        if ((currSum > currMin)) then\n            currMin=currSum\n\
    \        fi\n    done\n    echo \"$min\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfxn1zho7.sh: line 18: syntax error near unexpected token `then''

    /tmp/tmpfxn1zho7.sh: line 18: `        if ((currSum < min)) then''

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums sum min\n  nums=$1\n\
    \  sum=0\n  min=$(cat <<<\"$nums\" | tr ' ' '+' | sort -n)[0]\n  for num in \"\
    $nums\"; do\n    sum=$(( num + sum ))\n    [ $sum -gt $min ] && min=$sum\n  done\n\
    \  echo $min\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf8xo79xu.sh: line 17: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local -r nums=\"$1\"\n  \
    \  local -r result=\"-1\"\n    local -a subArray=( )\n    local -a currentSum=(\
    \ )\n    local index=0\n    while (( index < ${#nums[*]} )) ; do\n        currentSum=$(\
    \ expr $currentSum + ${nums[index]} )\n        subArray+=( $( expr $currentSum\
    \ + ${subArray[index]}))\n        ((index++))\n    done\n    for (( index=0 ;\
    \ index < ${#subArray[*]} ; index++ )) ; do\n        result=$( expr $result +\
    \ ${subArray[index]} )\n    done\n    echo -n $result\n}\n\ncandidate() {\n  \
    \  minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3\
    \ 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "expr: syntax error: unexpected argument \u20183\u2019\nexpr: syntax error:\
    \ missing argument after \u2018+\u2019\n"
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums\n  local sum\n \
    \ local i\n  local min\n  local num\n  nums=$1\n  sum=0\n  min=$(echo \"$nums\"\
    \ | wc -w)\n  for ((i=0;i<$(echo \"$nums\" | wc -w);i++));do\n    num=\"${nums:$i:1}\"\
    \n    sum=\"$((sum+num))\"\n  done\n  echo $((min+sum))\n}\n\ncandidate() {\n\
    \    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\
    \ 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ arr=()\n  local sum\n  local num\n  for num in $(echo ${nums} |tr \" \" \"\\\
    n\"); do\n    arr+=(\"$num\")\n  done\n  for num in ${arr[@]}; do\n    sum=0\n\
    \    for ((i=1; i<num; i++)); do\n      sum=$((sum + i))\n    done\n    echo $sum\n\
    \  done\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -n a=$1\n  local -n aSum=${a[*]}\n\
    \  local -n bSum=${a[*]}\n  local -n curSum\n  local -n curSumAbs\n  local -n\
    \ idx\n\n  local -n sum=${a[*]} # sum of the current sub array\n  local -n curMin=${a[*]}\
    \ # min of the current sub array\n  local -n curMinAbs=${a[*]} # absolute min\
    \ of the current sub array\n\n  for ((i=0; i<${#a[@]}; i++))\n  do\n    bSum=0\n\
    \    for ((j=0; j<${#aSum[@]}; j++))\n    do\n      bSum+=${aSum[j]}\n    done\n\
    \    sum=${aSum[i]}\n    for ((j=0; j<${#bSum[@]}; j++))\n    do\n      if ((curSumAbs=${bSum[j]}<${curSumAbs}))\n\
    \      then\n        curSum=${bSum[j]}\n      else\n        curSumAbs=${bSum[j]}\n\
    \      fi\n    done\n\n    if ((${#curMin[@]} <= ${#curSum[@]}))\n    then\n \
    \     curMin=( ${curMin[@]} ${curSum} )\n    else\n      curMin=( ${curMin[@]}\
    \ ${curSumAbs} )\n    fi\n  done\n\n  echo $((${curMin[1]}+${curMin[2]}))\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5clw0aqn.sh: line 12: local: `2 3 4 1 2 4'': invalid variable name
    for name reference

    /tmp/tmp5clw0aqn.sh: line 13: local: `'': not a valid identifier

    /tmp/tmp5clw0aqn.sh: line 14: local: `'': not a valid identifier

    /tmp/tmp5clw0aqn.sh: line 19: local: `'': not a valid identifier

    /tmp/tmp5clw0aqn.sh: line 20: local: `'': not a valid identifier

    /tmp/tmp5clw0aqn.sh: line 21: local: `'': not a valid identifier

    /tmp/tmp5clw0aqn.sh: line 49: +: syntax error: operand expected (error token is
    "+")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  declare -a nums=(\"$1\")\n\n\
    \  for ((i = 0; i < ${#nums[*]}; i++)); do\n    if (( ${nums[$i]} == 0 )); then\n\
    \      echo \"$i\"\n      return\n    fi\n  done\n\n  (( total = 0))\n  (( numCnt\
    \ = 0 ))\n\n  for ((i = 0; i < ${#nums[*]}; i++)); do\n    (( numCnt += nums[$i]\
    \ ))\n    total=$(( $total + nums[$i] ))\n    if (( numCnt >= 0 )); then\n   \
    \   break\n    fi\n  done\n\n  echo \"$total\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpla3vt25n.sh: line 15: ((: 2 3 4 1 2 4 == 0 : syntax error in expression
    (error token is "3 4 1 2 4 == 0 ")

    /tmp/tmpla3vt25n.sh: line 25: ((: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    /tmp/tmpla3vt25n.sh: line 26: 2 3 4 1 2 4: syntax error in expression (error token
    is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n\tlocal array sum\n\tIFS=\" \"\
    \ read -a array <<< \"$1\"\n\tsum=\"${array[0]}\"\n\tfor (( i = 1 ; i < ${#array[@]}\
    \ ; i++)); do\n\t\tsum=\"${sum}+${array[i]}\"\n\tdone\n\techo \"$sum\"\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: -1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums sum\n\n  sum=$(minSubArraySum\
    \ $1)\n  for num in $2; do\n    sum=$(( sum + $num ))\n  done\n  echo $sum\n}\n\
    \ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") =\
    \ \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=55 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=32 encoding='utf-8'>
  timestamp: 1660058950
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums\n    nums=($1)\n\
    \    local sum=0\n    local i\n    local n\n    # Loop through each element in\
    \ the array\n    for ((i=0; i<${#nums[@]}; i++)); do\n        # Loop through each\
    \ element in the array and add it to the sum\n        for ((j=0; j<${#nums[@]};\
    \ j++)); do\n            ((sum+=${nums[j]}))\n        done\n        # When we\
    \ find a new minimum sum, store that sum, and reset\n        # the sum variable\n\
    \        if ((sum < 0)); then\n            n=j\n        fi\n        sum=0\n  \
    \  done\n    # Return the minimum sum\n    echo $sum\n}\n\ncandidate() {\n   \
    \ minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4\
    \ 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\")\
    \ = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local array=\"$1\"\n\n  \
    \  # Split array into an array of integers\n    # nums=( $array )\n    nums=(\
    \ \"${array}\" )\n    # echo \"${nums[@]}\"\n    # ${nums[@]} is an array of the\
    \ words in the array\n    # echo \"${nums[0]}\"\n\n    # sum=0\n    sum=0\n  \
    \  # index=0\n    index=0\n    # while [ $index -lt ${#nums[@]} ]; do\n    while\
    \ [ ${#nums[@]} -gt ${#nums[@]} ]; do\n        # echo \"${nums[$index]}\"\n  \
    \      # ${nums[$index]} is an array of the words in the array\n        # echo\
    \ \"${nums[$index]}[0]\"\n        sum=$(( ${sum} + ${nums[$index]} ))\n      \
    \  # echo \"${sum}\"\n        # ${nums[$index]} is an array of the words in the\
    \ array\n        # echo \"${nums[$index]}[1]\"\n        index=$(( ${index} + 1\
    \ ))\n        # echo \"${index}\"\n    done\n    # echo \"${sum}\"\n    echo \"\
    ${sum}\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n   \
    \ [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate\
    \ \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate\
    \ \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") =\
    \ \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"\
    7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local input=\"$1\" output=\"\
    \"\n    for i in $(seq 0 $(expr $(expr length $input) - 2)); do\n        local\
    \ a=0\n        for j in $(seq 1 $(($(expr length $input) - 2))); do\n        \
    \    local b=$(($(expr index $input $((${i} + ${j}))) - ${i} - ${j}))\n      \
    \      a=$((a+b)) if [[ $a -lt \"$a\" ]]; then\n                a=$a\n       \
    \     fi\n        done\n        output=\"${output}$a\"\n    done\n    echo $output\n\
    }\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
    ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
    \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10\
    \ 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n\
    \    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"\
    -33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\")\
    \ = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpti1frfuv.sh: line 17: syntax error near unexpected token `then''

    /tmp/tmpti1frfuv.sh: line 17: `            a=$((a+b)) if [[ $a -lt "$a" ]]; then''

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums=\"$1\"\n    local\
    \ sum=\"-99999\"\n    for i in $nums; do\n        sum=\"$(expr \"$sum\" + \"$i\"\
    )\"\n    done\n    expr \"$sum\" : '-?[0-9]*'\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    arr=$1\n    currMin=$2\n\
    \    arrLength=${#arr[@]}\n    minSum=$currMin\n    currMinSubArrayLength=0\n\n\
    \    for (( i=0; i < ${arrLength}; i++ )); do\n        currSum=${arr[i]}\n   \
    \     if (( currSum <= 0 ));then\n            if (( currMinSubArrayLength == 0\
    \ )); then\n                minSum=$currSum\n                currMinSubArrayLength=$i\n\
    \            else\n                minSum=$(( minSum + currSum ))\n          \
    \  fi\n        else\n            currMinSubArrayLength=$(( currMinSubArrayLength\
    \ + 1 ))\n            if (( currMinSubArrayLength == $i ));then\n            \
    \    minSum=$(( minSum + currSum ))\n            fi\n        fi\n    done\n  \
    \  return $minSum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzposnv7t.sh: line 20: ((: 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n    local nums result\n    nums=\"\
    ${1// / }\"\n    for ((i=1; $i -lt ${#nums}; i=\"${i}1\")); do\n        result=\"\
    $(printf -v result \"%+d\" \"${nums//[^0-9]/}\")\"\n        if [ \"$result\" =\
    \ \"$nums\" ]; then\n            result=-1\n        fi\n        result=\"$((result+nums[$i]))\"\
    \n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwdbrlqa0.sh: line 14: ((: 1 -lt 11: syntax error in expression
    (error token is "11")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 2
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -n arr=$1\n  local minsum=0\n\
    \  local tmpsum\n  local num\n  while read num do\n    eval \"tmpsum=\\($num+\\\
    )\"\n    if [ \"$minsum\" -lt \"$tmpsum\" ]; then\n      minsum=\"$tmpsum\"\n\
    \    fi\n  done <<< \"${arr[@]}\"\n  echo \"$minsum\"\n}\n\ncandidate() {\n  \
    \  minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3\
    \ 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprc9kiewy.sh: line 21: syntax error near unexpected token `done''

    /tmp/tmprc9kiewy.sh: line 21: `  done <<< "${arr[@]}"''

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  arr=($(echo $1 | tr ' ' '\\\
    n'))\n  sum=$(echo $1 | tr ' ' '\\n')\n\n  for n in \"${arr[@]}\"; do\n    sum=$((sum\
    \ + $n))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2\
    \ -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpttwdjbsw.sh: line 16: 2

    3

    4

    1

    2

    4: syntax error in expression (error token is "3

    4

    1

    2

    4")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local -a nums=(\"${@}\")\n\
    \  local -a minSum=()\n  local i\n\n  for ((i=0; i < ${#nums[@]}; ++i)); do\n\
    \    minSum[$i]=0\n  done\n  for ((i=0; i < ${#nums[@]}; ++i)); do\n    minSum[$i]=$((${minSum[$i]}\
    \ + ${nums[$i]}))\n  done\n  local j\n  for ((i=0; i < ${#minSum[@]}; ++i)); do\n\
    \    for ((j=0; j < ${#minSum[@]}; ++j)); do\n      if ((minSum[i] > ${minSum[j]}));\
    \ then\n        ((minSum[i] = minSum[j]))\n      fi\n    done\n  done\n  echo\
    \ ${minSum[${#minSum[@]}]}\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[\
    \ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\"\
    ) = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\"\
    \ ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"\
    -6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\"\
    \ ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"\
    -1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1h6lqd4s.sh: line 20: 0 + 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  arr=( $1 )\n  declare -a sum\n\
    \  declare -i i\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    sum[i]=0\n  done\n\
    \n  for ((i=0; i<${#arr[@]}; i++)); do\n    ((sum[i]+=${arr[i]}))\n  done\n  \n\
    \  echo \"${sum[@]}\"\n}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate\
    \ \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\"\
    \ ]]\n    [[ $(candidate \"-9999999999999999\") = \"-9999999999999999\" ]]\n \
    \   [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\"\
    \ ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"\
    100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"-10\") = \"-10\" ]]\n\
    \    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate \"1 -1\") = \"-1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  read -a nums <<<\"$1\"\n  local\
    \ n=0\n  local sum=0\n  local cur=0\n  local i=0 j=0 k=0\n\n  while [ $n -lt $((${#nums[*]}-1))\
    \ ]; do\n    i=${nums[$n]} j=$(( ${nums[$n+1]} + 1 ))\n    sum=$(( sum + cur ))\n\
    \    while [ $i -lt ${#nums[*]} ]; do\n      k=$(( ${nums[$i]} + ${nums[$(( ${i}+1\
    \ ))]} ))\n      if [ $k -gt $j ]; then\n        cur=$(( ${cur} + $k ))\n    \
    \  fi\n      i=$(( ${i} + 1 ))\n    done\n    if [ $i -gt $n ]; then\n      sum=$((\
    \ sum + cur ))\n    fi\n    n=$(( ${n} + 1 ))\n  done\n\n  echo \"$sum\"\n}\n\n\
    candidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk_9evi3f.sh: line 22: 4 +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  min=$1\n  for i in $@; do\n\
    \    min=$((min + i))\n  done\n  echo \"$min\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjpjfq2sb.sh: line 14: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  nums=$1\n  local sum=0\n  local\
    \ i\n  local num\n  for ((i=0; i<${#nums[@]}; i++)); do\n    num=${nums[$i]}\n\
    \    sum=$((${sum} + $num))\n  done\n  echo $sum\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy8x0i9yv.sh: line 18: 0 + 2 3 4 1 2 4: syntax error in expression
    (error token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n  local nums=\"$1\"\n  local\
    \ sum\n  local i\n  local minsum\n  local len\n\n  sum=0\n\n  IFS=$'\\t' read\
    \ -r -a nums <<< \"$nums\"\n  len=${#nums[@]}\n\n  for ((i=0; i<len; ++i)); do\n\
    \    sum=$((sum + nums[$i]))\n  done\n\n  minsum=$((sum / len))\n\n  for ((i=0;\
    \ i<len; ++i)); do\n    if (( nums[$i] < minsum )); then\n      minsum=$nums[$i]\n\
    \    fi\n  done\n\n  echo \"$minsum\"\n}\n\ncandidate() {\n    minSubArraySum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 4 1 2 4\") = \"\
    1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n    [[ $(candidate \"-1\
    \ -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\") = \"\
    -9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\" ]]\n \
    \   [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"100 -1\
    \ -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"3\" ]]\n\
    \    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate \"\
    -10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu91vysjo.sh: line 24: 2 3 4 1 2 4: syntax error in expression (error
    token is "3 4 1 2 4")

    '
  stdout: ''
  timestamp: 1660058945
- exit_code: 1
  program: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of\
    \ any non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3\
    \ 4 1 2 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1\
    \ is a space-separated list\nminSubArraySum() {\n\tlocal nums=$@\n\t# print out\
    \ the input in case\n\techo \"$nums\"\n\tlocal n1=${#nums[@]};\n\tlocal min=${nums[0]};\n\
    \tlocal max=${nums[0]};\n\tlocal minSum=${min};\n\tfor ((i=1; i<$n1;i++)) do\n\
    \t\tlocal current=${nums[i]};\n\t\tlocal currentSum=${current};\n\t\tlocal currentMin=${current};\n\
    \t\tlocal currentMax=${current};\n\t\tlocal currentMaxSum=${current};\n\t\tfor\
    \ ((j=i; j<$n1;j++)) do\n\t\t\tlocal next=${nums[j]};\n\t\t\tlocal nextSum=${next};\n\
    \t\t\tlocal nextMin=${next};\n\t\t\tlocal nextMax=${next};\n\t\t\tlocal nextMaxSum=${next};\n\
    \t\t\tif [ \"$current\" -gt \"$next\" ]; then\n\t\t\t\tif [ \"$current\" -gt \"\
    $min\" ]; then\n\t\t\t\t\tcurrentMin=$currentMin;\n\t\t\t\t\tcurrentMax=$currentMax;\n\
    \t\t\t\t\tcurrentSum=$currentSum+$current;\n\t\t\t\t\tcurrentMinSum=$currentMinSum+$currentMin;\n\
    \t\t\t\t\tcurrentMaxSum=$currentMaxSum+$currentMax;\n\t\t\t\tfi\n\t\t\t\tcurrent=$next;\n\
    \t\t\t\tcurrentSum=$currentSum+$next;\n\t\t\t\tcurrentMin=$nextMin;\n\t\t\t\t\
    currentMax=$nextMax;\n\t\t\t\tcurrentMaxSum=$nextMaxSum+$nextMax;\n\t\t\telse\n\
    \t\t\t\tif [ \"$current\" -lt \"$next\" ]; then\n\t\t\t\t\tcurrentMax=$currentMax;\n\
    \t\t\t\t\tcurrentMaxSum=$currentMaxSum+$currentMax;\n\t\t\t\t\tcurrentSum=$currentSum+$current;\n\
    \t\t\t\t\tcurrentMaxSum=$currentMaxSum+$currentMax;\n\t\t\t\tfi\n\t\t\t\tcurrent=$next;\n\
    \t\t\t\tcurrentSum=$currentSum+$next;\n\t\t\t\tcurrentMin=$nextMin;\n\t\t\t\t\
    currentMax=$nextMax;\n\t\t\t\tcurrentMinSum=$nextMinSum+$nextMin;\n\t\t\tfi\n\t\
    \tdone\n\t\tif [ \"$minSum\" -gt \"$currentSum\" ]; then\n\t\t\tminSum=$currentSum;\n\
    \t\t\tmin=${current};\n\t\t\tmax=${current};\n\t\t\tminSum=${currentMinSum};\n\
    \t\t\tmaxSum=${currentMaxSum};\n\t\tfi\n\tdone\n\techo \"$minSum\"\n}\n\ncandidate()\
    \ {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\") = \"-6\" ]]\n\
    \    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate \"-9999999999999999\"\
    ) = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20 1000000\") = \"0\"\
    \ ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"\
    100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11 13 8 3 4\") = \"\
    3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n    [[ $(candidate\
    \ \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n    [[ $(candidate\
    \ \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058945

language: sh
name: HumanEval_91_is_bored
results:
- exit_code: -1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    awk '{for (i=1; i<=NF; i++) {if ($i == \"I\") {print $i; exit}} }'\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=11 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660058056
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local str=$1\n  local bored=0\n  local bored=\"I\"\n\n  while read -r;\
    \ do\n    if [[ \"$str\" == \"$bored\" ]]; then\n      bored=1\n    fi\n  done\
    \ < <(\n    # Get the next line and filter it to get rid of trailing newlines\n\
    \    sed 's/.//' <<< \"${str}\" | \\\n      # Get rid of lines that start with\
    \ a question mark\n      grep -v '^[?!]' | \\\n      # Filter out all lines that\
    \ start with a period.\n      # This removes '.', '?' and '.!' from a line\n \
    \     grep -v '^\\.'\n  )\n\n  echo $bored\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  [[ \"${1}\" =~ ([!?.]|\\'.*\\')$ ]] || return 1\n  printf '%t' \"${1#?}\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local -a sentences=($1)\n    local -a words=($2)\n\n    local -i num_bored=0\n\
    \    for (( i=0; i<${#sentences[@]}; ++i )); do\n        if [[ ${sentences[$i]}\
    \ == ${words[0]} ]]; then\n            (( num_bored += 1 ))\n            sentences[$i]=${words[$((\
    \ $i + 1 ))]}\n        fi\n    done\n    echo \"$num_bored\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local IFS=.?! count=0\n  for i in \"$@\"; do\n    [[ \"$i\" == \"I\" ]]\
    \ && count=$((count+1))\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    local pattern=\"^I[\\.\\?!]*$\"\n    local count=$(echo\
    \ \"$string\" | grep -c \"$pattern\")\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local num_boredoms=0\n  local i=0\n  while [ \"\
    $i\" -lt \"$#\" ] && [ \"$string\" != \"${string%.}\"\\\n      && \"${string%.}\"\
    \\\n      != \"${string##*.}\" ]; do\n    if [ \"$string\" = \"${string%.}\" ];\
    \ then\n      num_boredoms=\"$num_boredoms\"\n    fi\n    i=$((i+1))\n  done\n\
    \  echo $num_boredoms\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp05g26a5k.sh: line 16: [: missing `]''

    /tmp/tmp05g26a5k.sh: line 16: [: missing `]''

    /tmp/tmp05g26a5k.sh: line 16: [: missing `]''

    '
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local str=$1\n    local num=$(echo $str | grep -Eo '^[I][.!?]*')\n  \
    \  if [[ \"$num\" -eq 0 ]]; then\n        echo \"0\"\n    else\n        echo \"\
    1\"\n    fi\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local sentence=\"$1\"\n    local i word\n    i=0\n    while read -r word;\
    \ do\n        ((i++))\n        if [[ $word == I ]] && [[ $sentence =~ (^|[.?!])\
    \ $word ]]\n        then\n            echo \"$i\"\n            return 0\n    \
    \    fi\n    done < \"$2\"\n    echo \"0\"\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp24pj48yd.sh: line 18: syntax error in conditional expression

    /tmp/tmp24pj48yd.sh: line 18: syntax error near `$word''

    /tmp/tmp24pj48yd.sh: line 18: `        if [[ $word == I ]] && [[ $sentence =~
    (^|[.?!]) $word ]]''

    '
  stdout: ''
  timestamp: 1660058051
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    # your code here\n    count=0\n    for word in $@; do\n        case \"\
    $word\" in\n            I*)\n                count=$((count+1))\n            \
    \    ;;\n            *\".\"*\"?\"*\"!) ;;\n            *) ;;\n        esac\n \
    \   done\n    echo \"$count\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn9bxo8g3.sh: line 38: unexpected EOF while looking for matching
    `"''

    /tmp/tmpn9bxo8g3.sh: line 42: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local line=$1\n  local bored=0\n  while read -r line\n  do\n    if [[ \"\
    $line\" == *\".\"* ]]; then\n      bored=0\n      continue\n    elif [[ \"$line\"\
    \ == *\"!\"* ]]; then\n      bored=0\n      continue\n    elif [[ \"$line\" ==\
    \ *\"?\"* ]]; then\n      bored=0\n      continue\n    elif [[ \"$line\" == *\"\
    *\"* ]]; then\n      bored=0\n      continue\n    elif [[ \"$line\" == *\"\\.\"\
    * ]]; then\n      bored=0\n      continue\n    else\n      ((bored++))\n    fi\n\
    \  done < \"$1\"\n  echo ${bored}\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmppprsl7o5.sh: line 12: Hello world: No such file or directory

    /tmp/tmppprsl7o5.sh: line 12: Is the sky blue?: No such file or directory

    /tmp/tmppprsl7o5.sh: line 12: I love It \!: No such file or directory

    '
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    local boredom_count=0\n    for word in $string;\
    \ do\n        if [ \"$word\" == \"$BOREDOM\" ]; then\n            boredom_count=$((boredom_count+1))\n\
    \        fi\n    done\n    echo \"$boredom_count\"\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local s=$1\n  local bored_p\n  bored_p=\"${s:0:1}\"\n  [[ \"$bored_p\"\
    \ =~ [?!] ]] && [[ $bored_p == \"$s\" ]] && return 1\n  [[ \"$bored_p\" =~ ^I\
    \ ]] && [[ $bored_p == *. ]] && return 1\n  [[ \"$bored_p\" =~ ^. ]] && [[ $bored_p\
    \ == *? ]] && return 1\n  [[ \"$bored_p\" =~ ^! ]] && [[ $bored_p == *! ]] &&\
    \ return 1\n  return 0\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local input_string=\"$1\"\n    local count=`grep -c \"^I$\" $input_string\
    \ | cut -d \\. -f1`\n    echo \"$count\"\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'grep: Hello: No such file or directory

    grep: world: No such file or directory

    '
  stdout: ''
  timestamp: 1660058051
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local sentence=$1\n  local boredom_count=$2\n  local BOREDOMS\n  local\
    \ sentence\n  local boredom_count\n  local BOREDOMS\n  for sentence in $sentence;\
    \ do\n    while [[ \"$sentence\" =~ (^|[^.?!])I([^.?!])$ ]; do\n      boredom_count=$((boredom_count+1))\n\
    \      sentence=\"${BASH_REMATCH[1]}.${sentence}\"\n    done\n  done\n  echo $boredom_count\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfcfn2idk.sh: line 20: syntax error in conditional expression

    /tmp/tmpfcfn2idk.sh: line 20: syntax error near `;''

    /tmp/tmpfcfn2idk.sh: line 20: `    while [[ "$sentence" =~ (^|[^.?!])I([^.?!])$
    ]; do''

    '
  stdout: ''
  timestamp: 1660058051
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  # Your code goes here\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe3m9z6bt.sh: line 14: syntax error near unexpected token `}''

    /tmp/tmpe3m9z6bt.sh: line 14: `}''

    '
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    # initialize count\n    count=0\n    # split on '.', '?' or '!'\n   \
    \ words=($1)\n    # loop through all words\n    for word in ${words[@]}; do\n\
    \        if [[ \"$word\" == \"I\" ]]; then\n            (( count+=1 ))\n     \
    \   fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  echo ${1} | grep -E '^I.'\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    set +e\n    # Your code here\n    boredom=$(grep -F '^I' \"$1\")\n  \
    \  set -e\n    echo \"${boredom:-0}\"\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'grep: Hello world: No such file or directory

    grep: Is the sky blue?: No such file or directory

    grep: I love It \!: No such file or directory

    '
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local -n boredoms=$1;\n  local -i boredom_cnt=0;\n  local -i boredom_words=0;\n\
    \n  for boredom in $boredoms; do\n    [[ \"$boredom\" =~ ^([.?!]*I[.?!]*)$ ]]\
    \ || continue;\n    boredom_words+=${#BASH_REMATCH[1]}\n    ((boredom_cnt++));\n\
    \  done;\n\n  echo \"$boredom_cnt\";\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpyhz9p10n.sh: line 13: local: `Hello world'': invalid variable name
    for name reference

    /tmp/tmpyhz9p10n.sh: line 13: local: `Is the sky blue?'': invalid variable name
    for name reference

    /tmp/tmpyhz9p10n.sh: line 13: local: `I love It \!'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=$1\n    echo $(echo \"${string}\" | awk '$0~\"^[[:<:]]I[[:>:]]\"\
    ')\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\"\
    ) = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate\
    \ \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'awk: cmd. line:1: (FILENAME=- FNR=1) fatal: invalid regexp: Invalid character
    class name: /^[[:<:]]I[[:>:]]/

    '
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local line=$1\n  echo $line | sed -e 's/^.\\*$/\\*/'\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n\tlocal input=$1\n\tlocal count=0\n\tlocal line\n\tfor line in $input; do\n\
    \t\tif [[ $line =~ ^.*(I)\\.* ]]; then\n\t\t\t(( count+=1 ))\n\t\tfi\n\tdone\n\
    \techo $count\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local input=\"$1\"\n  local bored=0\n  local word\n  local i\n  local j\n\
    \  local len\n  local word\n  local bored_string\n  local word_count\n\n  bored_string=\"\
    $(echo \"$input\" | grep -o '[\\.?!]*$')\"\n  if [[ \"$bored_string\" == \"\"\
    \ ]]; then\n    return 0\n  fi\n\n  len=\"${#bored_string}\"\n  for ((i=1; i <=\
    \ len; i=i+1)); do\n    word=\"$(echo \"$bored_string\" | cut -d \" \" -f $i)\"\
    \n    word_count=\"$(echo \"$input\" | grep -w \"$word\")\"\n    if [[ \"$word_count\"\
    \ != \"\" ]]; then\n      bored=$((bored+1))\n    fi\n  done\n\n  return $bored\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_word=$1\n  # YOUR CODE HERE\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local -r bored_string=$1\n  local num_bored_words=$(echo $bored_string\
    \ | grep -c \"^[I].+\\.[?!]\")\n  echo $num_bored_words\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    if [ $# -eq 0 ]; then\n        return 1\n    fi\n    local str=$1\n \
    \   local boredom=0\n    local i=0\n    local last=\"I\"\n    local c=0\n    \n\
    \    # Loop over every character in the string\n    for (( i=1; i<${#str}; i++\
    \ )); do\n        c=${str[$i]}\n        if [ \"$c\" == \"$last\" ]; then\n   \
    \         boredom=$((boredom+1))\n        else\n            boredom=0\n      \
    \      last=$c\n        fi\n    done\n    \n    echo \"$boredom\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    while read -r; do\n        case \"$REPLY\" in\n  \
    \          '') echo \"$REPLY\"; return ;;\n            *[!.?]*) echo \"$REPLY\"\
    ; return ;;\n            I*) ((bored++))\n        esac\n    done < <(echo \"$1\"\
    )\n    echo \"$bored\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local input=$1\n    for word in $input; do\n     \
    \   if [ \"$word\" == \"I\" ]; then\n            bored=$((bored + 1))\n      \
    \  fi\n    done\n    echo \"$bored\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n\tlocal input=\"$1\"\n\tlocal boredom_count=0\n\tlocal BOREDOM=\"^.*(I).*\"\
    \n\tlocal BOREDOM_LINE=$(echo \"$input\" | grep -n \"$BOREDOM\")\n\tlocal BOREDOM_LINE_NUMBER=$(echo\
    \ \"$input\" | sed \"s/$BOREDOM//g\" | cut -d: -f1)\n\twhile read line\n\tdo\n\
    \t\tlocal boredom_count=$(($boredom_count + 1))\n\tdone <<< \"$input\"\n\techo\
    \ \"$boredom_count\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local STR=$1\n\n  local RESULT=0\n  local WORD\n  local STR_WORD\n\n  while\
    \ IFS='' read -r STR_WORD || [[ -n \"$STR_WORD\" ]]; do\n    if [[ \"$STR_WORD\"\
    \ == \"I\" ]]; then\n      ((RESULT++))\n    fi\n  done < <(echo \"$STR\" | sed\
    \ 's/\\./ \\. /g; s/\\?/ \\? /g; s/\\!/ \\! /g')\n\n  echo $RESULT\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  echo \"$1\" | tr '.' '!' | grep -q '^[I!]' | wc -l\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0 bored_string=\"$1\" delimiter=. bored_count=0\n  for word\
    \ in $bored_string; do\n    bored_string=${word%$delimiter}\n    bored_string=${bored_string#$delimiter}\n\
    \    if [[ $bored_string == $bored ]]; then\n      (( bored_count = bored_count\
    \ + 1 ))\n    fi\n  done\n  echo $bored_count\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    grep \"^I\" $1 | wc -l\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'grep: Hello: No such file or directory

    grep: world: No such file or directory

    grep: Is: No such file or directory

    grep: the: No such file or directory

    grep: sky: No such file or directory

    grep: blue?: No such file or directory

    grep: I: No such file or directory

    grep: love: No such file or directory

    grep: It: No such file or directory

    grep: \!: No such file or directory

    '
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local str=\"$1\"\n  local delimiters=\".?!\"\n  local\
    \ word\n\n  for word in $str; do\n    if [[ ${str} == *\"I${word}\"* ]]; then\n\
    \      bored=1\n    fi\n  done\n\n  echo \"${bored}\"\n}\n\ncandidate() {\n  \
    \  is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    [[ \"$1\" =~ ^([.?!]) ]]\n    local is_bored=\"0\"\n    [[ \"$1\" =~\
    \ ^([.?!])\\1$ ]] && is_bored=\"1\"\n    [[ \"$1\" =~ ^I\\$ ]] && is_bored=\"\
    1\"\n    [[ \"$1\" =~ ^I\\.\\$ ]] && is_bored=\"1\"\n    echo \"$is_bored\"\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local words=$1;\n    local nbored=0;\n    while read -r line; do\n  \
    \      if [[ \"$line\" == *\"I\"* ]]; then\n            nbored=$((nbored + 1))\n\
    \        fi\n    done < <(echo \"$words\" | sed 's/\\.\\|?\\|!//g');\n    echo\
    \ \"$nbored\";\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    if [ \"'$1'\" == \"'$1' \" ]; then\n        echo \"0\"\n    else\n  \
    \      for sentence in \"$1\"; do\n            if [[ $sentence == *\".\"* ]] ||\
    \ [[ $sentence == *\"?\"* ]] || [[ $sentence == *\"!\"* ]]; then\n           \
    \     echo \"0\"\n            else\n                echo \"1\"\n            fi\n\
    \        done\n    fi\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local str=\"$1\"\n    local bored=0\n    while [[ ! \"$str\" =~ ^.[?!]*\
    \ ]]; do\n        ((bored++))\n        local str=\"${str#.}\"\n    done\n    echo\
    \ \"$bored\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local input=\"$1\"\n  local num_boredoms=0\n  local word\n  while IFS='.?!'\
    \ read -r word ; do\n    [[ $word == \"I\" ]] && num_boredoms+=1\n  done <<< \"\
    $input\"\n\n  echo \"$num_boredoms\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    [[ \"$1\" =~ ^[\\.\\?!]$ ]]\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local s=$1\n    local bored=0\n    local w\n    local i\n    local last\n\
    \    local first\n    for w in $(echo $s |tr ' ' \"\\n\")\n    do\n        if\
    \ [[ $(echo $w |grep -iq '^[Ii][!.]') ]]; then\n            bored=1\n        elif\
    \ [[ $(echo $w |grep -iq '^[Ii][!.]\\?') ]]; then\n            bored=1\n     \
    \   elif [[ $(echo $w |grep -iq '^[Ii][!.]\\!') ]]; then\n            bored=1\n\
    \        fi\n    done\n    return $bored\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local var=$1\n    local i\n    local count=0\n\n    for i in $var\n \
    \   do\n        if [[ $i == I* ]]; then\n            ((count++))\n        fi\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local -r str=$1\n  local i boredom_count=0\n  for i in $str; do\n    if\
    \ [[ \"$i\" == \"$boredom_word\" ]]; then\n      boredom_count=$((boredom_count+1))\n\
    \    fi\n  done\n  echo $boredom_count\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local words=$1\n\n    local n_bored=0\n    local i\n\n    for (( i =\
    \ 0; i < ${#words}; i++ )); do\n        if is_bored \"${words[i]}\"; then\n  \
    \          n_bored+=1\n        fi\n    done\n\n    echo \"$n_bored\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058054
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local -r boredoms=$1\n\n    local boredom_list\n    for boredom in $boredoms;\
    \ do\n        if [[ \"$boredom\" =~ ^(I|i|i\\.)* ]]; then\n            (( boredom_list+=1\
    \ ))\n        fi\n    done\n    echo \"$boredom_list\"\n}\n\ncandidate() {\n \
    \   is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local BOREDOM=\"I\";\n  local SENTENCE=\"$1\"\n  local BOREDOM_COUNT=\"\
    $(expr ${BOREDOM} - ${SENTENCE} | bc)\"\n  echo \"${BOREDOM_COUNT}\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'expr: non-integer argument

    '
  stdout: ''
  timestamp: 1660058051
- exit_code: -1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local -n bored=$1\n    local -n words=\"${2:-$(cat)}\"\n    local -n\
    \ count=0\n    local word wordcount\n\n    while read -r word; do\n        if\
    \ [[ \"${bored}\" == \"${word}.\" ]]; then\n            ((count++))\n        elif\
    \ [[ \"${bored}\" == \"${word}?\" ]]; then\n            ((count++))\n        elif\
    \ [[ \"${bored}\" == \"${word}!\" ]]; then\n            ((count++))\n        elif\
    \ [[ \"${bored}\" == \"${word}?${word}\" ]]; then\n            ((count++))\n \
    \       elif [[ \"${bored}\" == \"${word}!${word}\" ]]; then\n            ((count++))\n\
    \        elif [[ \"${bored}\" == *\"${word}\"* ]]; then\n            ((count++))\n\
    \        fi\n    done < <(echo \"${words}\")\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=44 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660058056
- exit_code: -1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  # 'string' required\n  local BOREDS=$1\n  local COUNT=0\n  local BORED=\"\
    $(echo \"${BOREDS}\" | grep -q '^I')\"\n  while read -r LINE; do\n    COUNT=$((COUNT\
    \ + 1))\n  done\n  echo \"${COUNT}\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=38 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=28 encoding='utf-8'>
  timestamp: 1660058056
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    boredoms=$1\n    declare -A counts\n    counts[\"I\"]=0\n    counts[\"\
    !\"]=0\n    counts[\".\"]=0\n    counts[\"?\"]=0\n    counts[\" \"]=0\n    counts[\"\
    \\t\"]=0\n    for i in \"${boredoms[@]}\"\n    do\n        counter=0\n       \
    \ for j in \"${!counts[@]}\"\n        do\n            if [ \"$i\" == \"$j\" ];\
    \ then\n                let counter=counter+1\n            fi\n        done\n\
    \        if [ \"$counter\" -eq 0 ]; then\n            counts[\"$i\"]=1\n     \
    \   fi\n    done\n    echo ${#counts[\"I\"]} # Print the count of I\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local -r bored_string=$1\n  local count=0\n  for word in $bored_string;\
    \ do\n    if [ \"$word\" = \"I\" ]; then\n      count=$(( $count + 1 ))\n    fi\n\
    \  done\n  echo $count\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    echo \"$1\" | grep -i boredom\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local line=$1\n    local boredoms\n    boredoms=$(echo \"$line\" | grep\
    \ -Eo '^I.*\\.?$|^I.*\\?$|^I.*\\!$')\n    echo $((${#boredoms} > 0))\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    bored_string=$1\n\n    bored_count=$(grep -E '^I' <<< \"$bored_string\"\
    \ | wc -l)\n    echo \"$bored_count\"\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local text=$1\n    local bored=0\n\n    for word in $text; do\n     \
    \   case \"$word\" in\n            I*)\n                bored=1\n            \
    \    ;;\n            *)\n                bored=0\n                ;;\n       \
    \ esac\n    done\n\n    echo \"$bored\"\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  [[ \"$1\" =~ \"^[\\.\\?\\!]\" ]] && echo \"0\" || echo \"1\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=\"$(echo \"$1\" | tr '.?!' '?' | sed -r 's/(^|[.?!])([^.?!]+)/\\\
    1\\2/g')\"\n  echo \"$boredoms\" | grep -q \"^[I]\" | wc -l\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  if [[ ! $1 =~ ^.* ]]; then\n    echo 0\n    return\n  fi\n  local boredom_count=0\n\
    \  local words=$@\n  local boredom_start=\"^I\"\n  local boredom_end=\"^\\.\"\n\
    \  local boredom_delimiter=\"^\\.|\\.$|\\.\\.|\\.!|\\.?$|\\.\\?\"\n  local boredom_pattern=$boredom_start$boredom_end$boredom_delimiter\n\
    \  for word in ${words[@]}; do\n    if [[ $boredom_pattern =~ $word ]]; then\n\
    \      ((boredom_count+=1))\n    fi\n  done\n  echo $boredom_count\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local sentence=$1\n    if [[ ! -z \"$sentence\" ]]; then\n        local\
    \ bored=''\n        local word_count=0\n        for word in $sentence; do\n  \
    \          if [[ $word == I* ]]; then\n                let word_count++\n    \
    \        fi\n        done\n        if [[ $word_count == 1 ]]; then\n         \
    \   bored=\"1\"\n        fi\n    fi\n    echo \"$bored\"\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored_words=$1;\n    local bored_chars=$(echo $bored_words | tr\
    \ ' ' '\\n');\n    local i=\"I\";\n    local j=\".\";\n    local k=\"!\";\n  \
    \  local bored_count=0;\n    local words=\"\";\n    local word=\"\";\n    local\
    \ char=\"\";\n\n    for word in $bored_chars; do\n      char=$(echo $word | tr\
    \ $i $j | tr $k $j);\n      char_count=$(echo $bored_count | grep $char);\n  \
    \    if [[ \"$char_count\" == \"\" ]]; then\n        char_count=$bored_count;\n\
    \      else\n        char_count=$(echo $char_count | awk '{print $1}');\n    \
    \  fi\n      echo $char_count;\n      bored_count=$(echo $char_count + $bored_count);\n\
    \    done\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n\tlocal bored_sentence=$1\n\tlocal bored_count=0\n\twhile read -r line; do\n\
    \t\tbored_sentence=${bored_sentence/\\./'\\.'}\n\t\tbored_sentence=${bored_sentence/\\\
    ?/'\\?'}\n\t\tbored_sentence=${bored_sentence/\\!/'\\!'}\n\t\tif [[ \"$line\"\
    \ == *\"I\"$ ]]; then\n\t\t\t(( bored_count+=1 ))\n\t\tfi\n\tdone <<< \"$bored_sentence\"\
    \n\techo $bored_count\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  echo \"$(echo \"$1\" | grep -o '^[I]*\\.[!.?]\\?' | wc -l | tr -d '[:space:]')\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local sentence=$1\n  # Boredom is anything that starts with \"I\"\n  local\
    \ boredom=0\n  local boredom_words=$(echo $sentence | grep -i \"^I\" | wc -w)\n\
    \  boredom=$(($boredom_words > 0))\n  return $boredom\n}\n\ncandidate() {\n  \
    \  is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    awk '/^[Iy]*$/ {print 1}' $1\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'awk: fatal: cannot open file `Hello'' for reading (No such file or directory)

    '
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    echo -n \"$1\" | sed 's/^.[Ii]//g;s/\\.[?!]//g' | wc -l\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local num_bore=0\n  local line_num=$1\n  local line=$2\n  local bore_chars=\"\
    \ .?!\"\n\n  while [[ $line != \"\" ]]; do\n    local bore_count=`echo \"${line}\"\
    \ | grep -n \"^I\" | cut -d':' -f1`\n    if [[ ${bore_count} -gt 0 ]]; then\n\
    \      ((num_bore++))\n    fi\n    line_num=$(($line_num+1))\n    line=$(echo\
    \ \"${line}\" | grep -n \"^[${bore_chars}]*$\")\n  done\n\n  echo \"${num_bore}\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local sentence=\"${1}\"\n    local count=\"${2:-1}\"\n\n    # remove\
    \ punctuation and convert to lower case\n    sentence=\"$(sed -r \"s/[^.?!]+$//\"\
    \ <<< ${sentence} | tr '[:upper:]' '[:lower:]')\"\n\n    # if the sentence starts\
    \ with \"I\", count it\n    [[ \"${sentence:0:1}\" == 'i' ]] && \\\n        count=\"\
    ${sentence:0:1}\"\n\n    # if the sentence ends with \"!\", count it\n    [[ \"\
    ${sentence:${#sentence} - 1}\" == '!' ]] && \\\n        count=\"${sentence:${#sentence}\
    \ - 1}\"\n\n    # otherwise, count it as an \"A\"\n    [[ -z \"${count}\" ]] &&\
    \ count=\"A\"\n\n    echo \"${count}\"\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local s=$1\n\n    echo \"$s\" | grep -E \"^[\\.\\?\\!][I][^\\.\\?\\!]*\"\
    \ | wc -l\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local s=$1\n    s=${s// /.}\n    s=${s//?/}\n    s=${s//!/}\n    echo\
    \ ${#s} | cut -c3-\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=$1\n  local delimiters=(\"\\.\" \"?\" \"!\")\n  local count=0\n\
    \  local i\n  for i in \"${delimiters[@]}\"; do\n    count=$(echo $string | grep\
    \ -o \"$i\" | wc -c)\n    [[ \"$count\" -gt 0 ]] && break\n  done\n  return $count\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local input_string=\"$1\"\n\n    # YOUR CODE HERE\n    if [[ \"$input_string\"\
    \ =~ \"\\.\\.\" ]]\n    then\n        return 0\n    else\n        return 1\n \
    \   fi\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  grep -q \"^[I].*\" <<< \"$1\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local input=$1\n    \n    local words=$input\n    local i=0\n    local\
    \ bored=0\n    while [[ $i -lt ${#words[@]} ]]; do\n        local word=${words[$i]}\n\
    \        local j=0\n        while [[ $j -le $i ]]; do\n            local prev=${words[$j-1]}\n\
    \            if [[ \"$prev\" == \"$word\" ]]; then\n                bored=1\n\
    \                break\n            fi\n            j=$(( j + 1 ))\n        done\n\
    \        i=$(( i + 1 ))\n    done\n    \n    echo \"$bored\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxgq2t6c2.sh: line 22: words: bad array subscript

    /tmp/tmpxgq2t6c2.sh: line 22: words: bad array subscript

    /tmp/tmpxgq2t6c2.sh: line 22: words: bad array subscript

    '
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local -r boredoms=\"$1\"\n    local -r delimiter=\".\"\n    local -a\
    \ words=( $boredoms )\n    local -a count=(0)\n    local -a boredoms=( $boredoms\
    \ )\n    local i=0\n    local word\n    local boredom\n    local num_boredoms\n\
    \n    IFS=$'\\n' read -r -a lines <<<\"$boredoms\"\n\n    while IFS=$delimiter\
    \ read -r -a words; do\n        word=\"${words[0]}\"\n        boredom=\"${boredoms[i]}\"\
    \n        if [ \"$boredom\" == \"$word\" ]; then\n            (( count[$i]++ ))\n\
    \        fi\n        (( i++ ))\n    done <<< \"$lines\"\n\n    num_boredoms=$((\
    \ ${#boredoms[@]} - 1 ))\n    for (( i=1; i<=$num_boredoms; i++ )); do\n     \
    \   echo \"${count[i]}\"\n    done\n\n    exit 0\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: '/tmp/tmprtq7_ae8.sh: line 17: boredoms: readonly variable

    '
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  [[ \"$1\" =~ ^[!?.]* ]] || echo \"$1 is not bored\" >&2\n  grep -E -q \"\
    ^I[\\.\\?!]\" <<< \"$1\" || echo \"$1 is not bored\" >&2\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: 'Hello world is not bored

    '
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    echo \"$1\" | egrep -c \"^[Ii|!iI]\\.\"\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom=0\n    local boredom_word=\"$1\"\n    shift\n\n    for\
    \ word in $boredom_word; do\n        if [ \"$word\" = \"I\" ]; then boredom=1;\
    \ fi\n    done\n\n    echo $boredom\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=$1; shift\n  local words=($@)\n  local num_bored=0\n  while\
    \ read line; do\n    if [[ \"$line\" =~ ^\"I.*\"$ ]]; then\n      num_bored=$((num_bored\
    \ + 1))\n    fi\n  done <<< \"$bored\"\n  return $num_bored\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local -r line=$1\n    local -a arr=(\"$line\")\n    local idx=0\n   \
    \ local bored=\"false\"\n    local stop=false\n\n    while [ \"$idx\" -lt \"${#arr[@]}\"\
    \ ] && [ \"$stop\" == \"false\" ] do\n        local word=${arr[idx]}\n       \
    \ ((idx+=1))\n\n        if [ \"${word:0:1}\" == \"$boredom\" ] ; then\n      \
    \      bored=\"true\"\n        fi\n        if [ \"$bored\" == \"true\" ] ; then\n\
    \            stop=true\n        fi\n    done\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeb4nk2sb.sh: line 29: syntax error near unexpected token `done''

    /tmp/tmpeb4nk2sb.sh: line 29: `    done''

    '
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=0\n    local boredom_count=0\n    local boredom_words=\"\
    \"\n    local boredom_i=1\n    local boredom_i1=1\n    local boredom_i2=1\n  \
    \  local boredom_i3=1\n    local boredom_i4=1\n    local boredom_i5=1\n    local\
    \ boredom_i6=1\n    local boredom_i7=1\n    local boredom_i8=1\n    local boredom_i9=1\n\
    \    local boredom_i10=1\n    local boredom_i11=1\n    local boredom_i12=1\n \
    \   local boredom_i13=1\n    local boredom_i14=1\n    local boredom_i15=1\n  \
    \  local boredom_i16=1\n    local boredom_i17=1\n    local boredom_i18=1\n   \
    \ local boredom_i19=1\n    local boredom_i20=1\n    local boredom_i21=1\n    local\
    \ boredom_i22=1\n    local boredom_i23=1\n    local boredom_i24=1\n    local boredom_i25=1\n\
    \    local boredom_i26=1\n    local boredom_i27=1\n    local boredom_i28=1\n \
    \   local boredom_i29=1\n    local boredom_i30=1\n    local boredom_i31=1\n  \
    \  local boredom_i32=1\n    local boredom_i33=1\n    local boredom_i34=1\n   \
    \ local boredom_i35=1\n    local boredom_i36=1\n    local boredom_i37=1\n    local\
    \ boredom_i38=1\n    local boredom_i39=1\n    local boredom_i40=1\n    local boredom_i41=1\n\
    \    local boredom_i42=1\n    local boredom_i43=1\n    local boredom_i44=1\n \
    \   local boredom_i45=1\n    local boredom_i46=1\n    local boredom_i47=1\n  \
    \  local boredom_i48=1\n    local boredom_i49=1\n    local boredom_i50=1\n   \
    \ local boredom_i51=1\n    local boredom_i52=1\n    local boredom_i53=1\n    local\
    \ boredom_i\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local STR=$1\n  local NUM=0\n  echo $STR | grep -i \"^I\" | wc -l | sed\
    \ -e 's/^I//g' | sed -e 's/\\.//g' -e 's/\\?//g' -e 's/!//g'\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local input=\"$1\"\n    local boredoms=\"$(echo \"$input\" | grep -i\
    \ -i -e 'I' -e '[.?!]' -e '$' -e '^$' | tr -cd '[:alnum:]' | wc -l)\"\n    echo\
    \ \"$boredoms\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored_string=$1\n  [[ \"$bored_string\" =~ ^[!?.][[:blank:]]*[I]\
    \ ]]\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=( $1 )\n    local bored_count=( 0 )\n\n    local prefix=(\
    \ '^I' )\n    local suffix=( '[.!?]' );\n\n    local delimiter=( '.' );\n\n  \
    \  local sentence=$( IFS=$'\\n'; echo \"${bored}\" )\n    while IFS= read -r line\
    \ || [[ -n \"$line\" ]]; do\n        bored_count=$(( bored_count + ${#prefix[*]}\
    \ ))\n        bored_count=$(( bored_count + ${#suffix[*]} ))\n        for (( i=0;\
    \ i<${#bored[*]}; i++ )); do\n            [[ \"${bored[i]}\" =~ \"${prefix[i]}${delimiter}${sentence}\"\
    \ ]]\n        done\n    done < <( echo \"${sentence}\" )\n\n    echo \"$bored_count\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored_word=\"$1\"\n    local bored=0\n    if grep -q '^I' <<< \"\
    $bored_word\"; then\n        bored=1\n    fi\n    return $bored\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  cat \"$1\" | tr -c \"!?.\" \".\" | grep -c ^I\n}\n\ncandidate() {\n   \
    \ is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: 'cat: ''Hello world'': No such file or directory

    cat: ''Is the sky blue?'': No such file or directory

    cat: ''I love It \!'': No such file or directory

    '
  stdout: ''
  timestamp: 1660058051
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n\tlocal bored=0\n\tlocal bored_str\n\tfor bored_str in $1 '.' '!' '?'; do\n\
    \t\tcase \"$bored_str\" in\n\t\t\t'$bored_str'|\"$bored_str\"|\"*\")\n\t\t\t\t\
    bored=1\n\t\t\t\tbreak;\n\t\t\t*)\n\t\t\t\tbreak;\n\t\tesac\n\tdone\n\techo \"\
    $bored\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "/tmp/tmpbvk7dv6a.sh: line 20: syntax error near unexpected token `)'\n\
    /tmp/tmpbvk7dv6a.sh: line 20: `\t\t\t*)'\n"
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=$1\n    local result=0\n\n    local pattern=\"^I.*\"\n \
    \   local words=$(echo \"$string\" | egrep -o \"$pattern\")\n    echo \"$words\"\
    \ | grep -w \"$words\" | wc -l | awk '{print $1}'\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local s=$1\n    local patt=\"^I.*\" # case insensitive boredom\n    local\
    \ num_words=0\n    local num_boredoms=0\n    for w in $(echo $s | cut -d. -f1-2);\
    \ do\n        if [[ \"$w\" =~ $patt ]]; then\n            num_words=$((num_words+1))\n\
    \            if [[ \"$w\" == \"$s\" ]]; then\n                num_boredoms=$((num_boredoms+1))\n\
    \            fi\n        fi\n    done\n    echo \"$num_boredoms\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  grep -q \"^I$\" \"$1\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'grep: Hello world: No such file or directory

    '
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local -r input=\"$1\"\n  local -n boredoms=0\n  for i in \"$input\"\n \
    \ do\n    if [[ \"$i\" == \"$BOREDOM_TYPE_STRING\" ]]\n    then\n      boredoms=\"\
    $((boredoms+1))\"\n    fi\n  done\n  echo \"$boredoms\"\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: '/tmp/tmp6dluyaq4.sh: line 14: local: `0'': invalid variable name for name
    reference

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    boredom=$1\n    boredom_cnt=0\n    for word in $boredom; do\n       \
    \ if [[ \"$word\" == I* ]]; then\n            ((boredom_cnt=boredom_cnt+1))\n\
    \        fi\n    done\n    echo \"$boredom_cnt\"\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    local bored=0\n    # Loop over all words, count\
    \ bored ones\n    for word in $(echo $string | tr \" \" \"\\n\")\n    do\n   \
    \     if [[ \"$word\" == \"I\" || \"$word\" == \"i\" ]]; then\n            ((\
    \ bored++ ))\n        fi\n    done\n    echo \"$bored\"\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    [[ \"$1\" =~ ^[\\.\\?!]$ ]] || return 1\n    read -r BORED <<<\"$1\"\n\
    \    [[ \"$BORED\" =~ ^I$ ]] || return 1\n    [[ \"$BORED\" =~ (^|\\.)[^\\.]*\\\
    .[^\\.]*$ ]] || return 1\n    [[ \"$BORED\" =~ ^I\\.[\\.\\?!]$ ]] || return 1\n\
    \    [[ \"$BORED\" =~ (^|\\.)[^\\.]*\\.[^\\.]*$\\.[\\.\\?!]$ ]] || return 1\n\
    \    [[ \"$BORED\" =~ ^I\\.[\\.\\?!]\\.[^\\.]*$ ]] || return 1\n    [[ \"$BORED\"\
    \ =~ (^|\\.)[^\\.]*\\.[^\\.]*$\\.[\\.\\?!]\\.[^\\.]*$ ]] || return 1\n    return\
    \ 0\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\"\
    ) = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate\
    \ \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    # Your code here\n    read -r -a words <<<\"$1\"\n    boredom_cnt=0\n\
    \    for word in \"${words[@]}\"; do\n        if [[ \"$word\" == *\"I\"* ]]; then\n\
    \            ((boredom_cnt++))\n        fi\n    done\n    echo $boredom_cnt\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  for word in $* ; do\n    if [ \"$word\" = \"I\" ]; then\n\
    \      bored=1\n    fi\n  done\n  echo $bored\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local STR=$1\n    local NUM\n    NUM=0\n    for WORD in $STR ; do\n \
    \       if [[ $WORD =~ ^I[\\.\\?!]$ ]] ; then\n            (( NUM++ ))\n     \
    \   fi\n    done\n    echo \"$NUM\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058051
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  echo \"$1\" | grep -q \"^[\\.\\?!]\\?$\"\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom=\"$(echo \"$1\" | tr '.' '?')\"\n    local result=\"$(cat\
    \ << EOF\n$1 contains boredom:\nEOF\n$boredom\nEOF\n)\"\n    echo \"$result\"\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjbf38xmr.sh: line 22: Hello: command not found

    /tmp/tmpjbf38xmr.sh: line 23: EOF: command not found

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n\tlocal b=\"${1:?missing argument}\"\n\tlocal i=$(echo \"${b}\" | sed -e\
    \ 's/^I\\?\\.*//g')\n\tlocal j=$(echo \"${b}\" | sed -e 's/^I\\!\\.*//g')\n\t\
    local k=$(echo \"${b}\" | sed -e 's/^I\\?\\.*//g')\n\tlocal l=$(echo \"${b}\"\
    \ | sed -e 's/^I\\!\\.*//g')\n\tlocal m=\"$(echo \"${b}\" | sed -e 's/^[!?.]*//g')\"\
    \n\tlocal n=$(( ${#m} - 1 ))\n\t(( i < n )) && return 0\n\t(( k < n )) && return\
    \ 1\n\t(( l < n )) && return 2\n\treturn 3\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd27b11p6.sh: line 20: ((: Hello world: syntax error in expression
    (error token is "world")

    /tmp/tmpd27b11p6.sh: line 21: ((: Hello world: syntax error in expression (error
    token is "world")

    /tmp/tmpd27b11p6.sh: line 22: ((: Hello world: syntax error in expression (error
    token is "world")

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  cat \"$1\" | grep -o -E '^[I]?\\..*\\.\\??|^[I]?\\..*\\.!?' |\n    grep\
    \ -o -E '^[I]?[!?.]\\??|[I]?\\..*\\.!?' | sort | uniq | wc -l\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'cat: ''Hello world'': No such file or directory

    cat: ''Is the sky blue?'': No such file or directory

    cat: ''I love It \!'': No such file or directory

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: -1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local str=\"$1\"\n  local sep=\"$2\"\n  local first=\"\
    I\"\n  local last=\".\"\n\n  while read -r str; do\n    case \"$str\" in\n   \
    \   \"$first\")\n        # a bored sentence begins with \"I\"\n        bored=1\n\
    \        break\n        ;;\n      \"$sep\"*)\n        # a bored sentence ends\
    \ with \".\" or \"?\"\n        bored=1\n        break\n        ;;\n      \"$last\"\
    *)\n        # a bored sentence ends with \"!\"\n        bored=1\n        break\n\
    \        ;;\n      *)\n        # not an actual bored sentence\n        continue\n\
    \        ;;\n    esac\n  done\n\n  echo \"$bored\"\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=41 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=37 encoding='utf-8'>
  timestamp: 1660058057
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    local count=0\n    local delimiters=($(is_bored_delimiters))\n\
    \n    for word in $(echo $string | tr \" \" \"\\n\"); do\n        for delimiter\
    \ in \"${delimiters[@]}\"; do\n            if [[ \"$word\" == \"$delimiter\" ]];then\n\
    \                ((count++))\n                break\n            fi\n        done\n\
    \    done\n    echo $count\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3ez7euiv.sh: line 15: is_bored_delimiters: command not found

    /tmp/tmp3ez7euiv.sh: line 15: is_bored_delimiters: command not found

    /tmp/tmp3ez7euiv.sh: line 15: is_bored_delimiters: command not found

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  # Your code here\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo4p75b2e.sh: line 14: syntax error near unexpected token `}''

    /tmp/tmpo4p75b2e.sh: line 14: `}''

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    local n=0\n    local b=\"^I[^.!?]*\"\n    local\
    \ b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local\
    \ b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local\
    \ b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local\
    \ b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local\
    \ b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local\
    \ b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local\
    \ b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local\
    \ b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local\
    \ b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local\
    \ b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local\
    \ b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local\
    \ b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local b=\"^I[^.!?]*\"\n    local\
    \ b=\"^I[^.!?]*\"\n    local b=\"^I[^\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpp82v_15x.sh: line 67: unexpected EOF while looking for matching
    `"''

    /tmp/tmpp82v_15x.sh: line 71: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local -r bored=\"$1\"\n  local bored_array=( \"$bored\" )\n  local result=$((\
    \ bored_array[1] == \\? ))\n  echo \"$result\" | tr ' ' '\\n'\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr3unno5d.sh: line 15: bored_array[1] == \? : syntax error: operand
    expected (error token is "\? ")

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=\"$1\"\n    echo \"${#string#*[!?.]}\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmppbg5rtdn.sh: line 14: ${#string#*[!?.]}: bad substitution

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    bored=0\n    for i in $(echo $1 | sed 's/^\\.\\?*//'); do\n        bored=$((bored\
    \ + i))\n    done\n    echo $bored\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 10: Invalid preceding regular expression

    sed: -e expression #1, char 10: Invalid preceding regular expression

    sed: -e expression #1, char 10: Invalid preceding regular expression

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=$1\n  local boredom_count=0\n  local boredom_chars=($(echo\
    \ \"${string}\" | grep -i \"\\.\\?|\\!\" |sed 's/^.//'))\n  local boredom_words=($(echo\
    \ \"${string}\" | grep -i \"\\.\\?|\\!\" |sed 's/^[^a-z]*//g'))\n\n  for boredom_char\
    \ in \"${boredom_chars[@]}\"; do\n    for boredom_word in \"${boredom_words[@]}\"\
    ; do\n      if [[ \"${boredom_char}\" == \"${boredom_word}\" ]]; then\n      \
    \  ((boredom_count+=1))\n      fi\n    done\n  done\n  echo \"${boredom_count}\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    count=0\n    sentence=$1\n    if [[ $sentence == *\"I'\"* ]]; then\n\
    \        count=$(($count+1))\n    fi\n    if [[ $sentence == *\"Boredom\"* ]];\
    \ then\n        count=$(($count+1))\n    fi\n    if [[ $sentence == *\"Bye\"*\
    \ ]]; then\n        count=$(($count+1))\n    fi\n    if [[ $sentence == *\"Hello\"\
    * ]]; then\n        count=$(($count+1))\n    fi\n    if [[ $sentence == *\"Greetings\"\
    * ]]; then\n        count=$(($count+1))\n    fi\n    if [[ $sentence == *\"Hi\"\
    * ]]; then\n        count=$(($count+1))\n    fi\n    if [[ $sentence == *\"Hello!\"\
    * ]]; then\n        count=$(($count+1))\n    fi\n    if [[ $sentence == *\"Hi!\"\
    * ]]; then\n        count=$(($count+1))\n    fi\n    if [[ $sentence == *\"Hi\"\
    * ]]; then\n        count=$(($count+1))\n    fi\n    if [[ $sentence == *\"Hello\"\
    * ]]; then\n        count=$(($count+1))\n    fi\n    if [[ $sentence == *\"Good\
    \ morning\"* ]]; then\n        count=$(($count+1))\n    fi\n    if [[ $sentence\
    \ == *\"Good afternoon\"* ]]; then\n        count=$(($count+1))\n    fi\n    if\
    \ [[ $sentence == *\"Good evening\"* ]]; then\n        count=$(($count+1))\n \
    \   fi\n    if [[ $sentence == *\"Good night\"* ]]; then\n        count=$(($count+1))\n\
    \    fi\n    if [[ $sentence == *\"Good morning\"* ]]; then\n        count=$(($count+1))\n\
    \    fi\n    if [[ $sentence == *\"Good afternoon\"* ]]; then\n        count=$(($count+1))\n\
    \    fi\n    if [[ $sentence == *\"Good evening\"* ]]; then\n        count=$(($count+1))\n\
    \    fi\n    if [[ $sentence == *\"Good night\"* ]]; then\n        count=$(($count+1))\n\
    \    fi\n    if [[ $sentence == *\"Good morning\"* ]]; then\n        count=$(($count+1))\n\
    \    fi\n    if [[ $sentence == *\"Good afternoon\"* ]]; then\n        count=$(($count+1))\n\
    \    fi\n    if [[ $sentence == *\"Good evening\"* ]]; then\n        count=$(($count+1))\n\
    \    fi\n    if [[ $sentence == *\"Good night\"* ]]; then\n        count=$(($count+1))\n\
    \    fi\n    if [[ $sentence == *\"Good morning\"* ]]; then\n        count=$(($count+1))\n\
    \    fi\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local i\n  for i in $*; do\n    if [ \"$i\" = \"$i\"I ]; then\n      echo\
    \ \"0\"\n      return\n    fi\n  done\n  echo \"1\"\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=$1\n    local count=0\n    local string1=$(echo $string\
    \ | sed -r \"s/[.?!]//g\")\n    local string2=$(echo $string | sed -r \"s/([[:space:]]*)($string1)([[:space:]]*)([.?!])/\\\
    1\\2\\3/ig\")\n    echo $string2 | grep -Eo \"$string2\"\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n\tboredom_count=0\n\tstring=$1\n\twhile read -r line; do\n\t\tboredom_count=$((boredom_count\
    \ + ${#boredom_string}+1))\n\tdone <<< \"$string\"\n\techo \"$boredom_count\"\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local input=$1\n    local output=0\n    for word in $input; do\n    \
    \    if [[ $word == I* ]]; then\n            output=1\n            break\n   \
    \     fi\n    done\n    echo $output\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    echo $(grep -Eo \"\\<I\\>\" <<< \"$1\")\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local s=\"$1\"\n    local count=0\n    for s in $s; do\n        if [[\
    \ $s = \"I\" || $s = \"i\" || $s = \"!\" || $s = \"!.\" || $s = \".?\" || $s =\
    \ \"?\" ]]; then\n            ((count++))\n        fi\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n\twords=$1\n\t((boredoms+=1))\n\twhile read -r word || [[ -n \"$word\" ]];do\n\
    \t\tif [[ $word == \"I\" ]]; then\n\t\t\tboredoms=0\n\t\tfi\n\tdone <<< \"$words\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=()\n  local word=$1\n  local delimiters=(\"?\" \"!\" \".\"\
    )\n  local i\n\n  for (( i=0; i < ${#delimiters[@]} ); i++ ))\n  do\n    local\
    \ delimiter=${delimiters[i]}\n    if [[ \"$word\" == ${word#\"$delimiter\"} ]]\n\
    \    then\n      bored+=(\"$i\")\n    fi\n  done\n  echo ${#bored[@]}\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo1ajtlfu.sh: line 18: syntax error near `;''

    /tmp/tmpo1ajtlfu.sh: line 18: `  for (( i=0; i < ${#delimiters[@]} ); i++ ))''

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local output=0\n    local boredom_string=\"$1\"\n    local delimiter=\"\
    .\"\n    local delimiter_count=2\n    local delimiter_count=$(($delimiter_count-1))\n\
    \    local delimiter_count=${!delimiter_count}\n    local delimiter_count=$(($delimiter_count-1))\n\
    \    local delimiter_count=${!delimiter_count}\n    local delimiter_count=$(($delimiter_count-1))\n\
    \    local delimiter_count=${!delimiter_count}\n    local delimiter_count=$(($delimiter_count-1))\n\
    \    local delimiter_count=${!delimiter_count}\n    local delimiter_count=$(($delimiter_count-1))\n\
    \    local delimiter_count=${!delimiter_count}\n\n    for boredom in $boredom_string;\
    \ do\n        echo \"${boredom}\" | grep -E \"^I\" > /dev/null\n        if [ $?\
    \ -ne 0 ]; then\n            let \"output += 1\"\n        fi\n    done\n    return\
    \ $output\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp889v2zrh.sh: line 19: Hello world-1: syntax error in expression
    (error token is "world-1")

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=\"$1\"\n  local words=$2\n  \n  if [[ ${#words} -eq 0 ]]; then\n\
    \    return 0\n  fi\n  \n  local num_bored=0\n  \n  for word in $words; do\n \
    \   case \"$word\" in\n      [!.!?]*) continue;;\n      [I]*) continue;;\n   \
    \   *) num_bored=$(expr $num_bored + 1) ;;\n    esac\n  done\n  \n  return $num_bored\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: -1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    read -p \"($1) \" input\n    while IFS=\".?!\" read -r word; do\n   \
    \     input=\"${input} ${word}\"\n    done <<< \"$input\"\n    echo \"${#input}\
    \ boredoms in $1\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=52 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=29 encoding='utf-8'>
  timestamp: 1660058057
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    echo \"$1\" | awk '{if($1 == \"I\"){bored++};}END {print bored}'\n}\n\
    \ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local words=$1 word\n    local boredoms\n    \n    for word in $words\n\
    \    do\n        if [[ \"$word\" == *\"I\"* ]]; then\n            ((boredoms=boredoms+1))\n\
    \        fi\n    done\n    \n    echo \"$boredoms\"\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  cat $1 | grep -E \"^(I[!.?]| |[!.?])\"\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: 'cat: Hello: No such file or directory

    cat: world: No such file or directory

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n   local STRING=\"$1\"\n   local WORD\n   local COUNT\n   for WORD in $STRING;\
    \ do\n      if [[ \"$WORD\" == \"I\" ]]; then\n         COUNT=$((COUNT+1))\n \
    \     fi\n   done\n   echo \"$COUNT\"\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local str=$1\n    local num_boredoms=0\n\n    echo $str |\n    while\
    \ read line; do\n        echo $line |\n        if grep -q \"^I\" \"$line\"; then\n\
    \            num_boredoms=$(( num_boredoms + 1 ))\n        fi\n    done\n\n  \
    \  echo \"$num_boredoms\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'grep: Hello world: No such file or directory

    grep: Is the sky blue?: No such file or directory

    grep: I love It !: No such file or directory

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local words=$1\n    local num_bored=0\n    local sentence\n    local\
    \ i\n    \n    for i in \"${words[@]}\"; do\n        if [[ $i =~ [\\.\\?!] ]];\
    \ then\n            sentence=\"$i\"\n            break\n        fi\n    done\n\
    \    \n    # Check if sentence starts with \"I\"\n    if [[ \"$sentence\" == I*\
    \ ]]; then\n        num_bored=1\n    fi\n    \n    return $num_bored\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: -1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local boredom_word=$1\n    local pattern=\"^((^[I])|([?!])|([.])|([.?])|([!.]))+\"\
    \n    local pattern_word=\"([.?!])\"\n    local string=${boredom_word//${pattern}}\n\
    \    local i=0\n    local j=0\n    local k=0\n    while [[ ${#string} > 0 ]]\n\
    \    do\n        j=$(( ${j} + 1 ))\n        i=$(( j - 1 ))\n        pattern=${boredom_word:${i}:${j}}\n\
    \        string=${string//${pattern_word}}\n    done\n    echo ${bored}\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=40 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=35 encoding='utf-8'>
  timestamp: 1660058057
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    grep -c \"^I$\" $1\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'grep: Hello: No such file or directory

    grep: world: No such file or directory

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    boredom=$(grep -io \"[?.!]$1\" <<< \"$1\")\n    boredom_count=$(wc -w\
    \ <<< \"$boredom\")\n    echo -n \"$boredom_count\"\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: -1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local word=$1\n  local boredoms=$(grep -E '^I' $2 | wc -w)\n  echo \"$boredoms\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=32 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=26 encoding='utf-8'>
  timestamp: 1660058057
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n\tlocal line=$1\n\tlocal bored=0\n\tlocal boredom=0\n\tlocal boredoms=()\n\
    \t\n\tif [[ $line == *\".\"* ]]; then bored=1\n\tfi\n\tif [[ $line == *\".?\"\
    * ]]; then bored=2\n\tfi\n\tif [[ $line == *\".!\"* ]]; then bored=3\n\tfi\n\t\
    \n\tfor i in $(seq 0 $(( ${#bored} -1 )); do \n\t\tboredom=$(echo $line | sed\
    \ -n \"s/^$i\\.//p\")\n\t\t(( ${bored:-0} == 2 && $boredom == *\".?\"* )) && bored=1\n\
    \t\t(( ${bored:-0} == 3 && $boredom == *\".!\"* )) && bored=3\n\t\t(( ${bored:-0}\
    \ == 1 )) && bored=2\n\t\tboredoms[${#boredoms[*]}]=$boredom\n\tdone\n\t\n\techo\
    \ $((${#boredoms} > 0 )) \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1leq6sgj.sh: line 25: unexpected EOF while looking for matching
    `)''

    /tmp/tmp1leq6sgj.sh: line 51: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    # check if string begins with \"I\", else return 0\n    [[ \"$1\" =~\
    \ ^I.*$ ]] || return 0\n    # use awk to count boredoms in sentence, starting\
    \ with word\n    # print count\n    awk -F'[.?!]' '$1==p{c++}; p{print c+0}' p=\"\
    $1\" <<< \"$2\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local BOREDOM_REGEX=$1\n    local STRING=$2\n    local NUMBER_OF_BOREDOMS=0\n\
    \    # Loop through each boredom\n    for BOREDOM in $STRING; do\n        # Check\
    \ if current boredom starts with \"I\"\n        if [ \"$BOREDOM\" =~ \"^I\" ];\
    \ then\n            # Increment count by 1\n            let \"NUMBER_OF_BOREDOMS+=1\"\
    \n        fi\n    done\n    # Return result\n    echo \"$NUMBER_OF_BOREDOMS\"\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredoms=$1\n    boredoms=$(echo \"$boredoms\" | sed -n 's/^I.*[.?!]/p')\n\
    \    echo \"$((${#boredoms} > 0))\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 13: unterminated `s'' command

    sed: -e expression #1, char 13: unterminated `s'' command

    sed: -e expression #1, char 13: unterminated `s'' command

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    echo \"$1\" | awk '{for (i=1; i<=NF; i++) {if ($i == \"I\"){count++}}}'\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local is_bored=0\n  local sentence=$1\n  local delimiters=$2 # use '\\\
    '.' as a special case delimiter\n  # if delimiters is \\'.', then use '\\.' as\
    \ a special case delimiter\n  if [ \"$delimiters\" = \"\\\\'\" ]\n  then\n   \
    \ delimiters=\".\"\n  fi\n  local delimiter_pattern='[^$delimiters]+'\n\n  echo\
    \ \"$sentence\" | grep -Eq \"$delimiter_pattern\" | wc -l\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  if [[ $1 =~ ^([.?!]+) ]]; then\n    boredoms+=\"1\"\n  fi\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom_count=0\n    local input=$1\n    local delimiter=.?!\n\
    \    local word\n\n    while IFS= read -r word ; do\n        if [[ \"$word\" ==\
    \ \"$input\" ]]; then\n            boredom_count=$((boredom_count + 1))\n    \
    \    fi\n    done <<< \"$input\"\n\n    echo \"$boredom_count\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  [[ \"$1\" = \"$2$3$4$5$6$7$8$9\" ]]\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: -1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  awk '\n  BEGIN{\n    bored=0\n    i=index($1,\".\")\n    if(i!=-1){\n \
    \     for(j=1;j<=i;j++){\n        if($j==\".\" || $j==\"?\" || $j==\"!\"){\n \
    \         bored=1\n        }\n      }\n    }\n    if(bored==0){\n      bored=0\n\
    \      i=index($1,\"?\")\n      if(i!=-1){\n        for(j=1;j<=i;j++){\n     \
    \     if($j==\".\"){\n            bored=1\n          }\n        }\n      }\n \
    \   }\n    if(bored==0){\n      bored=0\n      i=index($1,\"!\")\n      if(i!=-1){\n\
    \        for(j=1;j<=i;j++){\n          if($j==\".\"){\n            bored=1\n \
    \         }\n        }\n      }\n    }\n    if(bored==0){\n      bored=0\n   \
    \   i=index($1,\".\")\n      if(i!=-1){\n        for(j=1;j<=i;j++){\n        \
    \  if($j==\".\"){\n            bored=1\n          }\n        }\n      }\n    }\n\
    \  }\n  END{\n    print \"$bored\"\n  }\n  '\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=63 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=60 encoding='utf-8'>
  timestamp: 1660058057
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local input=\"$1\"\n  local boredom=0\n  local regex=\"^\"\n  local delimiters=\"\
    .?!.\"\n  local delimiters_word=$(IFS=\",\"; echo \"${delimiters[*]}\")\n  local\
    \ delimiters_char=$(IFS=\".\"; echo \"${delimiters[*]}\")\n  local delimiters_regex=\"\
    ^\"\n  local delimiters_char_regex=$(IFS=\".\"; echo \"${delimiters[*]}\")\n \
    \ local delimiters_char_regex=\"^\"\n  local delimiters_char_regex=\"^\"\n  local\
    \ delimiters_word=$(IFS=\",\"; echo \"${delimiters[*]}\")\n  local delimiters_word=$(IFS=\"\
    ,\"; echo \"${delimiters[*]}\")\n\n  for word in $input; do\n    if [[ \"$word\"\
    \ = \"I\" ]] &&\n      [[ \"$word\" != \"i\" ]]; then\n      boredom=$(( boredom\
    \ + 1 ))\n    fi\n  done\n  echo \"$boredom\"\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    [[ \"${1}\" =~ \"^[\\.?!]\" ]] && echo 0 || echo 1\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local -n bored_string=$1\n    local boredom_count=0\n    local -a boredom_string=($bored_string)\n\
    \    local -n boredom_word=$((${#boredom_string[@]} - 1))\n    local boredom_count=$((\
    \ ${boredom_count} + ${#boredom_string[@]} ))\n\n    local boredom_boredom=0\n\
    \    local boredom_boredom_string=($boredom_boredom)\n    local -n boredom_boredom_word=$((${#boredom_boredom_string[@]}\
    \ - 1))\n    local boredom_boredom_count=$(( ${boredom_boredom_count} + ${#boredom_boredom_string[@]}\
    \ ))\n\n    local boredom_boredom_boredom=0\n    local boredom_boredom_boredom_string=($boredom_boredom_boredom)\n\
    \    local -n boredom_boredom_boredom_word=$((${#boredom_boredom_boredom_string[@]}\
    \ - 1))\n    local boredom_boredom_boredom_count=$(( ${boredom_boredom_boredom_count}\
    \ + ${#boredom_boredom_boredom_string[@]} ))\n\n    for boredom in \"$boredom_string\"\
    ; do\n        if [[ $boredom == *\"I\"* ]]; then\n            boredom_count=$((\
    \ boredom_count + 1 ))\n        fi\n    done\n    \n    local boredom_boredom_boredom=0\n\
    \    local boredom_boredom_boredom_string=($boredom_boredom_boredom)\n    local\
    \ -n boredom_boredom_boredom_word=$((${#boredom_boredom_boredom_string[@]} - 1))\n\
    \    local boredom_boredom_boredom_count=$(( ${boredom_boredom_boredom_count}\
    \ + ${#boredom_boredom_boredom_string[@]} ))\n\n    local boredom_boredom_boredom_boredom=0\n\
    \    local boredom_boredom_boredom_boredom_string=($boredom_boredom_boredom_boredom)\n\
    \    local -n boredom_boredom_bo\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmplyq_9j4u.sh: line 13: local: `Hello world'': invalid variable name
    for name reference

    /tmp/tmplyq_9j4u.sh: line 16: local: `-1'': invalid variable name for name reference

    /tmp/tmplyq_9j4u.sh: line 21: local: `0'': invalid variable name for name reference

    /tmp/tmplyq_9j4u.sh: line 26: local: `0'': invalid variable name for name reference

    /tmp/tmplyq_9j4u.sh: line 37: local: `0'': invalid variable name for name reference

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local s=\"${1}\"\n    local ws=\".?!\"\n    for w\
    \ in $s; do\n        if [[ \"$w\" == \"$ws\" ]]; then\n            ((bored++))\n\
    \        elif [[ \"$w\" == *\"I\"* ]]; then\n            ((bored++))\n       \
    \ fi\n    done\n    echo \"$bored\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    [[ \"$1\" =~ [?!] ]] || return 0\n\n    local IFS='[.!?]'\n    local\
    \ word=$1\n\n    local -a boredoms=()\n    local -a bored_words=()\n    while\
    \ [ -n \"$word\" ]; do\n        for boredom in \"$word\"; do\n            if [[\
    \ \"$boredom\" == \"$word\" ]]; then\n                bored_words=( \"${bored_words[@]}\"\
    \ \"$word\" )\n                break\n            fi\n            boredoms=( \"\
    ${boredoms[@]}\" \"$boredom\" )\n        done\n        word=${word%\"$IFS\"}\n\
    \    done\n    bored_words=( \"${bored_words[@]}\" )\n    local -a counts=( )\n\
    \    for boredom in \"${boredoms[@]}\"; do\n        local -a bored_counts=( )\n\
    \        for word in \"${bored_words[@]}\"; do\n            if [[ $word == $boredom\
    \ ]]; then\n                bored_counts=( \"${bored_counts[@]}\" 1)\n       \
    \         break\n            fi\n        done\n        counts=( \"${counts[@]}\"\
    \ \"${#bored_counts[@]}\")\n    done\n    counts=( \"${counts[@]}\" )\n    echo\
    \ -n \"${#counts[@]}\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: -1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local str=$1\n    local i=0\n    while [ $i -lt ${#str} ]; do\n     \
    \   if [[ ${str:$i:1} == '.' || ${str:$i:1} == '?' || ${str:$i:1} == '!' ]]; then\n\
    \            i=$((i+1))\n        else\n            i=$((i-1))\n        fi\n  \
    \  done\n    echo \"$i\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=57 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=53 encoding='utf-8'>
  timestamp: 1660058057
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  echo \"$1\" | awk '{ for(i=1;i<=NF;i++) { if ($i==\".\" || $i==\"?\" ||\
    \ $i==\"!\") { ++bored; } } }'\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local str=\"$1\"\n  local boredom_count=0\n  for word in $str; do\n   \
    \ if [[ $word == I* ]]; then\n      boredom_count=$((boredom_count + 1))\n   \
    \ fi\n  done\n  echo \"$boredom_count\"\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local WORD=\"$1\"\n\n    local BOREDOMS=\"$(cut -d' ' -f1 <<< \"$WORD\"\
    \ | grep -Eo 'I[\\.\\!]' | wc -l)\"\n    if [[ \"$BOREDOMS\" -eq \"0\" ]]; then\n\
    \        return 0\n    fi\n\n    echo \"$BOREDOMS\"\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local s=$1\n  local n=0\n  local i=${#s}\n  while [[ $i -gt 0 ]]; do\n\
    \    if [[ \"${s:$i:1}\" = *[!?.] ]]; then\n      n=$((n + 1))\n    fi\n    i=$((i\
    \ - 1))\n  done\n  echo $n\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    echo -n $1 | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' -e 's/\\\
    .\\?$//' -e 's/\\.!$//' -e 's/\\!$//' | wc -c\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local BOREDOM=\"$(printf \"%s\" \"$1\" | sed -r \"s/^([\\.\\?\\!])/\\\
    \\1/g\")\"\n    local BOREDOM_WORD_COUNT=$(echo $BOREDOM | wc -w)\n    echo \"\
    $BOREDOM_WORD_COUNT\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  bored_count=0\n  for word in $1; do\n    [[ \"$word\" =~ ^I.*$ ]] && bored_count++\n\
    \  done\n  echo \"$bored_count\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpq1lotzkn.sh: line 15: bored_count++: command not found

    /tmp/tmpq1lotzkn.sh: line 15: bored_count++: command not found

    /tmp/tmpq1lotzkn.sh: line 15: bored_count++: command not found

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    # Get the boredoms word\n    local boredoms_word=$1\n    # Initialize\
    \ a count variable\n    local count=0\n    # Iterate over the string\n    for\
    \ word in $boredoms_word; do\n        # Iterate over the letters in the boredom\n\
    \        for letter in $word; do\n            # If the letter is a '.', increase\
    \ the count by 1\n            # Otherwise, if the letter is a '?', increase the\
    \ count by 2\n            # Otherwise, increase the count by 3\n            case\
    \ $letter in\n                .) count=$((count+1));;\n                ?) count=$((count+2));;\n\
    \                !) count=$((count+3));;\n            esac\n        done\n   \
    \ done\n    # Return the result\n    echo $count\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local -r boredom_list=\"$(echo $1 | tr '?!.' '?')\"\n    local -r boredom_count=$(cat\
    \ ${boredom_list} | sed -e \"s/^${1}//g\" | wc -l)\n    echo \"$boredom_count\"\
    \n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'cat: Hello: No such file or directory

    cat: world: No such file or directory

    cat: Is: No such file or directory

    cat: the: No such file or directory

    cat: sky: No such file or directory

    cat: ''blue?'': No such file or directory

    cat: I: No such file or directory

    cat: love: No such file or directory

    cat: It: No such file or directory

    cat: ''\?'': No such file or directory

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local lines=$(echo \"$1\" | sed 's/[.?!]/\\n/g')\n    local bored=0\n\
    \    while read line; do\n        bored=1\n        if [[ \"$line\" == \"I\" ]];\
    \ then\n            echo \"0\"\n            break\n        fi\n    done <<< \"\
    $lines\"\n    echo \"$bored\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n\tlocal string=\"$1\"\n\tlocal bored=0\n\n\tfor char in \"${string//[!?.]}\"\
    ; do\n\t\tcase \"$char\" in\n\t\t\tI*) bored=1 ;;\n\t\tesac\n\tdone\n\techo \"\
    $bored\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n   local is_bored=false\n   local sentence=$1\n   local sentence=${sentence//\\\
    .}\n   local sentence=${sentence//\\?}\n   local sentence=${sentence//\\!}\n \
    \  local boredoms=0\n   if [ ! -z \"$sentence\" ] ; then\n      for word in $sentence\
    \ ; do\n         if [ $word == \"I\" ] ; then\n            boredoms=$((boredoms\
    \ + 1))\n         fi\n      done\n   fi\n   return $is_bored\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmkeje1q0.sh: line 26: return: false: numeric argument required

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored=0\n    local str=$1\n    local delimiters=\". ? !\"\n   \
    \ for d in $delimiters; do\n        if [[ $str == *\"[\"$d\"]\"* ]]; then\n  \
    \          (( bored++ ))\n        fi\n    done\n    echo \"$bored\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local s=\"$1\"\n  local i\n  echo \"$s\"\n  for i in {1..3}; do\n    if\
    \ [[ \"$s\" =~ '^I' ]]; then\n      echo \"0\"\n      return\n    fi\n    s=\"\
    ${s%.*}${s#*.}\"\n  done\n  echo \"1\"\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=\"$1\"\n  local n=0\n  bored=\"$(echo \"${bored}\" | sed 's/\\\
    ./ \\. /g' | sed 's/\\?\\/ \\? /g' | sed 's/\\!\\/ \\! /g')\"\n  for b in $bored;\
    \ do\n    if [[ \"${b}\" == \"I\" ]]; then\n      n=$((n+1))\n    fi\n  done\n\
    \  echo $n\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 12: unterminated `s'' command

    sed: -e expression #1, char 12: unterminated `s'' command

    sed: -e expression #1, char 12: unterminated `s'' command

    sed: -e expression #1, char 12: unterminated `s'' command

    sed: -e expression #1, char 12: unterminated `s'' command

    sed: -e expression #1, char 12: unterminated `s'' command

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  echo \"$1\" | grep '^I\\|^.\\|^!' | wc -l\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredom_words=(\"I\")\n\n  for word in $1 \".\" \"$?\" \".\" \"!\"\
    \ ; do\n    case \"$word\" in\n      \"$boredom_words\")\n        echo \"0\"\n\
    \        ;;\n      *)\n        echo \"1\"\n        ;;\n    esac\n  done\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=\"$1\"\n  local bored=\"\"\n  for word in $string; do\n  \
    \  if [[ \"$bored\" != *\"bored\"$'\\''\" ]]; then\n      bored=\"$bored $word\"\
    \n    else\n      bored=\"\"\n    fi\n  done\n  local bored=0\n  local counter=0\n\
    \  for word in $bored; do\n    if [[ \"$counter\" == \"0\" ]]; then\n      if\
    \ [ \"$word\" = \"I\" ]; then\n        counter=1\n      fi\n    else\n      if\
    \ [ \"$word\" = \"I\" ]; then\n        counter=$((counter + 1))\n      fi\n  \
    \  fi\n  done\n  echo \"$counter\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy1t4v2ny.sh: line 49: unexpected EOF while looking for matching
    `"''

    /tmp/tmpy1t4v2ny.sh: line 16: unexpected EOF while looking for `]]''

    /tmp/tmpy1t4v2ny.sh: line 53: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredomed=$(grep -q \"^I$1\" <<< \"$1\")\n  echo \"$boredomed\" #\
    \ if boredomed, return 1\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local boredom=$1\n\n    local sentence=\".\"\n    local sentencecount=1\n\
    \    local sentencecharacters=0\n\n    while [ $boredom != \"$sentence\" ]; do\n\
    \        if [ $(echo \"$boredom\" | cut -c1 ) == \"I\" ]\n        then\n     \
    \       sentencecount=$((sentencecount+1))\n            sentencecharacters=$((sentencecharacters+1))\n\
    \        else\n            sentencecount=$((sentencecount+1))\n        fi\n  \
    \      sentence=$((sentence+1))\n    done\n\n    echo \"$sentencecount\"\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmppghrtf24.sh: line 19: [: too many arguments

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local sentences=$1\n  local boredom_count=0\n  IFS=\".? !\" read -r -a\
    \ sentences <<< \"$sentences\"\n  for sentence in \"${sentences[@]}\"; do\n  \
    \  if [[ ${sentence} == \"I\" ]]; then\n      ((boredom_count++))\n    fi\n  done\n\
    \  echo $boredom_count\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    # Remove trailing characters, if any\n    local input=${1%???}\n    #\
    \ Count number of boredoms \n    local n=$(awk '/^I/ {++n} END {print n}' <<<\
    \ \"$input\" | tr -d '\\n')\n    return 0\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local sentences=\"$1\"\n  local count=$(($(grep -E '^[Ii!.]+$' <<< \"$sentences\"\
    \ | wc -l) - 1))\n  echo \"$count\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n  \
    \  [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local input=\"$1\"\n    local bored=0\n    local sentence\n\n    while\
    \ read -r sentence; do\n        if [[ \"$sentence\" == \"$input\" ]]; then\n \
    \           bored=1\n            break\n        fi\n    done <<< \"$input\"\n\
    \    echo $bored\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local str=\"$1\"\n    local b=\"$(echo \"$str\" | grep -Eo '(^|[.?!])I')\"\
    \n    echo \"$b\" | wc -l\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n   local -n arr=$1; arr=${arr[@]}; arr=${arr[@]% *}\n   local idx=0\n   for\
    \ w in $arr; do\n      case \"$w\" in\n         [?.!])\n            idx=$((idx\
    \ + 1))\n            ;;\n         ..)\n            ;;\n         *)\n         \
    \   ;;\n      esac\n   done\n   return $idx\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: '/tmp/tmp0ilfs1aw.sh: line 13: local: `Hello world'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local -r boredoms=$1\n    local count=0\n    for sentence in $boredoms;\
    \ do\n        if [[ \"$sentence\" == *\"I\"* ]]; then\n            let count+=1\n\
    \        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored_words=\"$1\"\n    local bored_words=${bored_words//[?!.]/}\n\
    \n    local bored_count=0\n    local bored_word\n    local word\n    local i\n\
    \    local words=${bored_words//[.?!]/}\n    for ((i = 0; i < ${#words}; i++));\
    \ do\n        word=${words[i]}\n        if [[ \"${word}\" == \"I\" ]]; then\n\
    \            bored_count=$((bored_count + 1))\n        fi\n    done\n\n    echo\
    \ ${bored_count}\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local s=''\n  local t=''\n  local i=0\n  local c=0\n  local s=$1;\n  local\
    \ t=$1;\n  local i=0;\n  local c=0;\n  s=${s//\\./\\.}\n  t=${t//\\./\\.}\n  while\
    \ [ $i -lt $s ]; do\n    c=$(( $c + 1 ))\n    i=$(( $i + 1 ))\n    if [ $c -ge\
    \ 3 ]; then\n      s=$(( $s - 1 ))\n      t=$(( $t - 1 ))\n    fi\n  done\n  echo\
    \ $(( $c))\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky\
    \ blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[\
    \ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will\
    \ be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are\
    \ going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpaa_bwe37.sh: line 23: [: Hello: integer expression expected

    /tmp/tmpaa_bwe37.sh: line 23: [: Is: integer expression expected

    /tmp/tmpaa_bwe37.sh: line 23: [: I: integer expression expected

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=$1\n    local bored_count=0\n    local boredoms=$(echo $string\
    \ | cut -d \".\" -f 1)\n    for boredom in $boredoms; do\n        if [[ \"$boredom\"\
    \ = \"$string\" ]]; then\n            bored_count=$((bored_count + 1))\n     \
    \   fi\n    done\n    echo \"$bored_count\"\n}\n\ncandidate() {\n    is_bored\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"\
    0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored_words=0\n    local bored_word=$(echo \"$1\" | tr '.' '\\\
    n' | grep -Eo \"([a-zA-Z]+)(\\.|(?:\\?|!)$)\" | grep -Eo \"([a-zA-Z]+)(\\.|(?:\\\
    ?|!)$)\" | grep -Eo \"([a-zA-Z]+)$\")\n    if [ -z \"$bored_word\" ] ; then \n\
    \      bored_words=\"0\"\n      \n    elif [ \"$bored_word\" == \"$bored_words\"\
    \ ] ; then \n      bored_words=\"0\"\n\n    elif [ \"$bored_word\" == \"$bored_words\"\
    \ ] ; then \n      bored_words=\"0\"\n\n    elif [ \"$bored_word\" == \"$bored_words\"\
    \ ] ; then \n      bored_words=\"0\"\n\n    elif [ \"$bored_word\" == \"$bored_words\"\
    \ ] ; then \n      bored_words=\"0\"\n\n    elif [ \"$bored_word\" == \"$bored_words\"\
    \ ] ; then \n      bored_words=\"0\"\n\n    elif [ \"$bored_word\" == \"$bored_words\"\
    \ ] ; then \n      bored_words=\"0\"\n\n    elif [ \"$bored_word\" == \"$bored_words\"\
    \ ] ; then \n      bored_words=\"0\"\n\n    elif [ \"$bored_word\" == \"$bored_words\"\
    \ ] ; then \n      bored_words=\"0\"\n\n    elif [ \"$bored_word\" == \"$bored_words\"\
    \ ] ; then \n      bored_words=\"0\"\n\n    elif [ \"$bored_word\" == \"$bored_words\"\
    \ ] ; then \n      bored_words=\"0\"\n\n    elif [ \"$bored_word\" == \"$bored_words\"\
    \ ] ; then \n      bored_words=\"0\"\n\n    elif [ \"$bored_word\" == \"$bored_words\"\
    \ ] ; then \n      bored_words=\"0\"\n\n    elif [ \"$bored_word\" == \"$bored_words\"\
    \ ] ; then \n      bored_words=\"0\"\n\n    elif [ \"$bored_word\" == \"$bored_words\"\
    \ ] ; then \n      bored_words=\"0\"\n\n    elif [ \"$bored_word\" == \"$bored_words\"\
    \ ] ; then \n      bored_words=\"0\"\n\n    elif [ \"$bored_word\" == \"$bored_words\"\
    \ ] ; then \n      bored_words=\"0\"\n\n    elif [ \"$bored_word\" == \"$bored_words\"\
    \ ] ; then \n      bored_words=\"0\"\n\n    elif [ \"$bored_word\" == \"$bored_words\"\
    \ ] ; then \n      bored_words=\"0\"\n\n    elif [ \"$bored_word\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp34669vb8.sh: line 86: unexpected EOF while looking for matching
    `"''

    /tmp/tmp34669vb8.sh: line 90: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local BORED=0\n    local WORD=$1\n    local SEP=$2\n\n    if [[ $SEP\
    \ =~ \\.|!|?$ ]]; then\n        echo \"$WORD\" > /dev/null\n    elif [[ \"$WORD\"\
    \ = \"I\" ]]; then\n        BORED=$((BORED + 1))\n    else\n        while read\
    \ -r LINE; do\n            if [[ \"$LINE\" =~ (^|$) ]]; then\n               \
    \ echo \"$LINE\" > /dev/null\n            elif [[ \"$LINE\" =~ (^|[.?!])$ ]];\
    \ then\n                echo \"$LINE\" > /dev/null\n            else\n       \
    \         echo \"$LINE\" | grep -q \"^I\" && BORED=$((BORED + 1))\n          \
    \  fi\n        done <<< \"$WORD\"\n    fi\n    echo \"$BORED\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local bored=0\n  local str=\"$1\"\n\n  # $1 is passed as an argument. Loop\
    \ through each character in the string.\n  local i\n  for (( i=0; i < ${#str};\
    \ i++ )); do\n    # If the character is a \".\", add 1 to bored.\n    if [ \"\
    $str\" = \"${str:i:1}\" ]; then\n      (( bored += 1 ))\n    fi\n  done\n  # Return\
    \ the value of bored\n  echo \"${bored}\"\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local STR=$1\n  local WORD_SEP=\".\"\n  local QUESTION_SENT=\"?\"\n  local\
    \ EXCLAMATION_SENT=\"!\"\n\n  local BOREDOM=$(echo \"$STR\" | \\\n    sed -E \"\
    s/^($WORD_SEP)(.*)($QUESTION_SENT)(.*)($EXCLAMATION_SENT)(.*)/\\1\\3\\4\\5/g\"\
    )\n\n  echo \"$BOREDOM\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 35: Invalid preceding regular expression

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: -1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    boredom_count=0\n    sentence=$1\n    while IFS=\".?!\" read -r word\
    \ || [[ -n \"$word\" ]];\n    do\n        if [[ \"$word\" == \"$sentence\" ]];\
    \ then\n            boredom_count=$((boredom_count + 1))\n        fi\n    done\n\
    \    echo \"$boredom_count\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=14 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=19 encoding='utf-8'>
  timestamp: 1660058057
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local input=\"$1\"\n  local output=0\n\n  local wordcount=0\n  local word\n\
    \  for word in $input; do\n    if [ \"$word\" == \"I\" ]; then\n      wordcount=$((wordcount+1))\n\
    \    fi\n  done\n\n  output=$((wordcount-1))\n\n  return \"$output\"\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  echo $(grep -c \"$1\" bored/bored|cut -f1 -d. | sed 's/.* //');\n}\n\n\
    candidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'grep: bored/bored: No such file or directory

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local sentences=$1\n  \n  local count=0\n  for sentence in $sentences;\
    \ do\n    for word in $sentence; do\n      case $word in\n        \"I\")\n   \
    \       count=`expr $count + 1`\n        ;;\n      esac\n    done\n  done\n  \n\
    \  echo $count\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local bored_sentence=$1\n    local bored_array=($bored_sentence)\n  \
    \  local num_boredoms=0\n    for boredom in ${bored_array[@]}; do\n        if\
    \ [ \"$boredom\" == \"I\" ]; then\n            num_boredoms+=$((1))\n        fi\n\
    \    done\n    echo $num_boredoms\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[\
    \ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It\
    \ \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local BORED_LIST=${1}\n    local TEMP\n    local COUNTER\n    for TEMP\
    \ in ${BORED_LIST}; do\n        if [ \"$TEMP\" == \".\" ] || [ \"$TEMP\" == \"\
    ?\" ] || [ \"$TEMP\" == \"!\" ]; then\n            COUNTER=$((COUNTER+1))\n  \
    \      fi\n    done\n    echo \"$COUNTER\"\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local string=$1\n  local num_boredoms=0\n  local first_boredom\n\n  first_boredom=${string:0:1}\n\
    \  if [[ \"$first_boredom\" = \"I\" ]]; then\n    num_boredoms=$((num_boredoms+1))\n\
    \  else\n    # Make sure we don't count the final '!' as the last char\n    for\
    \ char in \"${string:(-1)}\"; do\n      if [[ \"$char\" == \"!\" ]]; then\n  \
    \      num_boredoms=$((num_boredoms+1))\n      fi\n    done\n  fi\n  return $num_boredoms\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local count=0\n    local words=$(echo $1 | tr \" \" \"\\n\")\n    for\
    \ word in $words; do\n        if [[ \"$word\" == \"I\" ]]; then\n            ((count++))\n\
    \        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 2
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local -r string=$1\n  [[ \"$string\" =~ ^[Ii][ \\.]* ]]\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4mqh2bgo.sh: line 14: syntax error in conditional expression

    /tmp/tmp4mqh2bgo.sh: line 14: syntax error near `\.]*''

    /tmp/tmp4mqh2bgo.sh: line 14: `  [[ "$string" =~ ^[Ii][ \.]* ]]''

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local boredoms=$(cat \"$1\" | cut -d\".\" -f1)\n  local total=0\n  for\
    \ boredom in $boredoms; do\n    case \"$boredom\" in\n      \"I\") \n        let\
    \ total=$((total+1));;\n      *)\n        echo \"$boredom: not a boredom.\";\n\
    \        return 1;\n        ;;\n    esac\n  done\n  echo $total\n}\n\ncandidate()\
    \ {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello\
    \ world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n \
    \   [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\")\
    \ = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive. will\
    \ kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'cat: ''Hello world'': No such file or directory

    cat: ''Is the sky blue?'': No such file or directory

    cat: ''I love It \!'': No such file or directory

    '
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    if [[ \"$1\" =~ $boredom_regex ]]; then\n        echo \"0\"\n    else\n\
    \        echo \"1\"\n    fi\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local input=\"$1\"\n    local bored=0\n    local delimiter=\"\\.\"\n\
    \    for word in $input; do\n        if [ \"$word\" == \"I\" ]; then\n       \
    \     bored=1;\n        fi\n    done\n    echo \"$bored\"\n}\n\ncandidate() {\n\
    \    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\"\
    ) = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[\
    \ $(candidate \"I feel good today. I will be productive. will kill It\") = \"\
    2\" ]]\n    [[ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local string=$1\n    echo \"$string\" | grep -E '\\.|!|?' | wc -l | sed\
    \ 's/^[ \\t]*//'\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    [[ \"$1\" =~ ^[\\.\\?\\!] ]]\n}\n\ncandidate() {\n    is_bored \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local s=$1 # Your code here\n  local count=0\n  while read -r line\n  do\n\
    \    [[ \"$line\" =~ ^I[^.?!]*$ ]] && count=$((count+1))\n  done <<< \"$s\"\n\
    \  echo $count\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the\
    \ sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n\
    \    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today.\
    \ I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and\
    \ I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local words=$1\n    local delimiters=\".\"\n    local boredom_count=0\n\
    \n    for word in $words; do\n        if [[ $word =~ ^I ]] && [[ $word =~ ^$delimiters[a-zA-Z]*\
    \ ]]; then\n            boredom_count=$((boredom_count+1))\n        fi\n    done\n\
    \n    echo \"$boredom_count\"\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  local BOREDOM_PREFIX=\"^I.\"\n  local BOREDOM_COMPILED=\"^I\\.[\\.\\?!].*\"\
    \n  if [ \"$1\" = \"$BOREDOM_PREFIX$BOREDOM_COMPILED\" ]; then\n    echo \"0\"\
    \n  else\n    echo \"1\"\n  fi\n}\n\ncandidate() {\n    is_bored \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n    [[ $(candidate\
    \ \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love It \\!\") = \"\
    1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good\
    \ today. I will be productive. will kill It\") = \"2\" ]]\n    [[ $(candidate\
    \ \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n    local line=\"$1\"\n    local word=''\n    local lines=`echo \"$line\"\
    \ | sed -n 's/^\\s*//p' | sed -n 's/\\s*$//p'`\n    local len=${#lines[@]}\n \
    \   for (( i=0; i<${len}; i++ )); do\n        word=${lines[$i]}\n        if [[\
    \ \"$word\" == \"$1\" ]]; then\n            echo \"0\"\n            return\n \
    \       fi\n    done\n    \n    echo \"1\"\n}\n\ncandidate() {\n    is_bored \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hello world\") = \"0\" ]]\n\
    \    [[ $(candidate \"Is the sky blue?\") = \"0\" ]]\n    [[ $(candidate \"I love\
    \ It \\!\") = \"1\" ]]\n    [[ $(candidate \"bIt\") = \"0\" ]]\n    [[ $(candidate\
    \ \"I feel good today. I will be productive. will kill It\") = \"2\" ]]\n    [[\
    \ $(candidate \"You and I are going for a walk\") = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052
- exit_code: 1
  program: "#!/bin/bash\n# You'll be given a string of words, and your task is to\
    \ count the number\n# of boredoms. A boredom is a sentence that starts with the\
    \ word \"I\".\n# Sentences are delimited by '.', '?' or '!'.\n# For example:\n\
    # >>> $(is_bored \"Hello world\")\n# \"0\"\n# >>> $(is_bored \"The sky is blue.\
    \ The sun is shining. I love this weather\")\n# \"1\"\n#\n# $1 is a string\nis_bored()\
    \ {\n  echo \"$1\" | sed -n 's/^[^.?!]*\\I\\.\\?\\([^.?!]*\\)\\.[^.?!]*$/\\1/p'\n\
    }\n\ncandidate() {\n    is_bored \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"Hello world\") = \"0\" ]]\n    [[ $(candidate \"Is the sky blue?\") = \"0\"\
    \ ]]\n    [[ $(candidate \"I love It \\!\") = \"1\" ]]\n    [[ $(candidate \"\
    bIt\") = \"0\" ]]\n    [[ $(candidate \"I feel good today. I will be productive.\
    \ will kill It\") = \"2\" ]]\n    [[ $(candidate \"You and I are going for a walk\"\
    ) = \"0\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058052

language: sh
name: HumanEval_36_fizz_buzz
results:
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  # We use an array as it is faster than\
    \ a regexp matching.\n  local digits=([0]=7 [2]=9 [3]=11 [4]=13 [5]=15 [6]=17\
    \ [7]=19 [8]=21 [9]=23 [10]= 25)\n  local num=$1 ret=0\n  if (( ${#num} < 1 ));\
    \ then\n    echo -n \"${digits[*]}\"\n    return\n  fi\n  local i=0\n  while ((\
    \ i < ${#num} )); do\n    if (( ${num} % ${digits[$i]} > 0 )); then\n      ((\
    \ ++ret ))\n    fi\n    (( ++i ))\n  done\n  printf \"%0*d\" $(( ${#num} - 1 ))\
    \ $ret\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n\
    \    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n\
    \    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\"\
    \ ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\"\
    ) = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwli11eqn.sh: line 21: ((: 50 %  > 0 : syntax error: operand expected
    (error token is "> 0 ")

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n digit\n  [[ \"$1\" =~ ^[0-9]+$\
    \ ]] || return 0\n  n=$1\n  [[ \"$n\" =~ ^[0-9]+$ ]] || return 0\n  digit=$((n\
    \ % 10))\n  [[ $((n % 11)) -eq 0 ]] && return $digit\n  [[ $((n % 13)) -eq 0 ]]\
    \ && return $digit+1\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\"\
    ) = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\"\
    ) = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\"\
    ) = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  # The \"-s\" option suppresses the output\
    \ of the shell command \"echo\"\n  # The \"-n\" option suppresses the newline\
    \ appended by echo\n  # The \"-f\" option disables the shell \"-e\" option\n \
    \ # The \"-r\" option causes $1 to be interpreted as a string rather than a script\
    \ variable name\n  # The \"-l\" option causes \"echo -e\" to not output the trailing\
    \ newline\n  # The \"-e\" option enables interpretation of backslash escapes\n\
    \  # The \"-F\" option enables interpretation of backslash escapes\n  # The \"\
    -n\" option suppresses the newline appended by echo\n  # The \"-n\" option suppresses\
    \ the newline appended by echo\n  x=$1 \n  (( $# )) && \n  (( $1 % 11 )) && \n\
    \  (( $1 % 13 )) && \n  (( $1 % 17 )) && \n  (( $1 % 19 )) && \n  (( $1 % 23 ))\
    \ && \n  (( $1 % 25 )) && \n  (( $1 % 27 )) && \n  (( $1 % 31 )) && \n  (( $1\
    \ % 37 )) && \n  (( $1 % 39 )) && \n  (( $1 % 43 )) && \n  (( $1 % 51 )) && \n\
    \  (( $1 % 59 )) && \n  (( $1 % 67 )) && \n  (( $1 % 71 )) && \n  (( $1 % 79 ))\
    \ && \n  (( $1 % 91 )) && \n  (( $1 % 99 )) && \n  (( $1 % 101 )) && \n  (( $1\
    \ % 107 )) && \n  (( $1 % 113 )) && \n  (( $1 % 121 )) && \n  (( $1 % 127 )) &&\
    \ \n  (( $1 % 139 )) && \n  (( $1 % 147 )) && \n  (( $1 % 153 )) && \n  (( $1\
    \ % 161 )) && \n  (( $1 % 169 )) && \n  (( $1 % 175 )) && \n  (( $1 % 181 )) &&\
    \ \n  (( $1 % 189 )) && \n  (( $1 % 197 )) && \n  (( $1 % 203 )) && \n  (( $1\
    \ % 211 )) && \n  (( $1 % 219 )) && \n  (( $1 % 223 )) && \n  (( $1 % 231 )) &&\
    \ \n  (( $1 % 239 )) && \n  (( $1 % 247 )) && \n  (( $1 % 253 )) && \n  (( $1\
    \ % \n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n\
    \    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n\
    \    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\"\
    \ ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\"\
    ) = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1cd8v9tx.sh: line 63: unexpected EOF while looking for matching
    `)''

    /tmp/tmp1cd8v9tx.sh: line 83: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  if [ $# -ne 1 ]\n  then\n    echo \"Invalid\
    \ number of arguments\"\n    return 0\n  fi\n  local n=$1\n  local count=0 num_buzz=0\n\
    \  local i j\n  for (( i=1; i <= n; i++ )); do\n    if [[ $(( i % 11 == 0 || i\
    \ % 13 == 0 )) ]]; then\n      (( num_buzz += 1 ))\n    fi\n  done\n  echo \"\
    $num_buzz\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    echo \"$1\" | while read x; do\n   \
    \     if [[ $x -le $1 ]];then\n            if [ $(( $x % 11)) -eq 0 -a $(( $x\
    \ % 13)) -eq 0 ];then\n                echo $(( $x / 11 ))\n            else\n\
    \                echo $(( $x / 13 ))\n            fi\n        else\n         \
    \   echo \"0\"\n        fi\n    done\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  echo $1 | awk '{\n   if($1 !~ /^[0-9]+$/)\
    \ {\n      print $1\n      return 0\n    }\n    for(i = 1; i <= $1; i++) {\n \
    \     if (i % 11 == 0 || i % 13 == 0) {\n        print i\n      }\n    }\n  }'\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: 'awk: cmd. line:4:       return 0

    awk: cmd. line:4:       ^ `return'' used outside function context

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n ret\n  n=\"$1\"\n  ret=0\n  while\
    \ [ \"$n\" -lt 100 ]; do\n    if [ \"$n\" -eq 7 ] ; then\n      ret=$((ret+1))\n\
    \    else\n      if [ \"$n\" -eq 11 ] || [ \"$n\" -eq 13 ] ; then\n        ret=$((ret+1))\n\
    \      else\n        echo \"$n\"\n        break\n      fi\n    fi\n    n=$(( n\
    \ - 1 ))\n  done\n  echo $ret\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=$1\n    echo \"$n\" | grep -Eo\
    \ \"^[0-9]{1,3}$\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=$1\n  # shellcheck disable=SC2154\n\
    \  [[ $n -gt 0 ]] && printf -v _i \"%02d\" \"$n\"\n  # shellcheck disable=SC2154\n\
    \  [[ $n -gt 0 ]] && local _i_=$(echo \"$_i\" | bc)\n  [[ $_i_ -eq 7 ]] && printf\
    \ \"%02d\" \"$n\"\n  # shellcheck disable=SC2154\n  [[ $_i_ -ne 7 ]] && let \"\
    n+=1\"\n  fizz_buzz \"$n\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=17 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=10 encoding='utf-8'>
  timestamp: 1660054907
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  # Convert $1 from string to integer.\n\
    \  local n=\"$1\"\n  local i\n  (( n % 11 == 0 )) && echo \"${n}\"\n  (( n % 13\
    \ == 0 )) && echo \"${n}\"\n  # Iterate from 1 to n.\n  for ((i=1; i<=n; i++));\
    \ do\n    (( i % 11 == 0 )) && echo \"${i}\"\n    (( i % 13 == 0 )) && echo \"\
    ${i}\"\n  done\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    number=$1\n    i=0\n    while [ $i -lt\
    \ $number ]\n    do\n        if [ $((i % 11)) -eq 0 ]\n        then\n        \
    \    echo \"$i\"\n        fi\n        if [ $((i % 13)) -eq 0 ]\n        then\n\
    \            echo \"$i\"\n        fi\n        let i++\n    done\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  [[ ${1} -ge 1 ]] || return 1\n  local\
    \ count i\n  for i in $(seq 0 $((${#1})-1)); do\n    [[ \"${1:$i:1}\" == \"7\"\
    \ ]] && count=$((count + 1))\n  done\n  [[ ${count} -ge 4 ]] && return $count\n\
    \  echo \"0\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxonk3x3c.sh: command substitution: line 14: syntax error near unexpected
    token `-1''

    /tmp/tmpxonk3x3c.sh: command substitution: line 14: `(${#1})-1''

    /tmp/tmpxonk3x3c.sh: command substitution: line 14: syntax error near unexpected
    token `-1''

    /tmp/tmpxonk3x3c.sh: command substitution: line 14: `(${#1})-1''

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\tlet n=\"$1\" ; shift ; if [ \"$n\" -gt\
    \ \"$1\" ] ; then printf \"\\\"$1\\\" is a very big number!\" ; exit 1 ; fi\n\t\
    printf \"\\\"$1\\\" is divisible by 11 or 13, thus it is fizz buzz!\\n\"\n\tlet\
    \ \"n = $n % 11\" ; printf \"\\\"$n\\\" is divisible by 11\\n\" ; let \"n = $n\
    \ % 13\" ; printf \"\\\"$n\\\" is divisible by 13\\n\" ; printf \"\\\"$n\\\" is\
    \ divisible by both\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\"\
    ) = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\"\
    ) = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\"\
    ) = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0f7700_y.sh: line 12: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n count=0\n    [[ \"$1\" =~ ^[0-9]+$\
    \ ]] || return 1\n    \n    for(( n=\"$1\" ; n>0 ; n=n/10 )); do let count++;\
    \ done\n    ((count > 0)) || return\n    \n    (( count % 11 == 0)) || ((( count\
    \ % 13 == 0)) || ((( n % 11 == 0)) || (( n % 13 == 0))))\n}\n\ncandidate() {\n\
    \    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") =\
    \ \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\")\
    \ = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=$1\n    if [ $n -lt 1 ]; then\n\
    \        echo \"Invalid argument\"\n        return 1\n    fi\n    local count=0\n\
    \    for (( i=1; $(( i+1 )**$n )<=n; i++ )); do\n        if [ $(($i % 13)) -eq\
    \ 0 ] && [ $(($i % 11)) -eq 0 ]; then\n            count=$(($count + 1))\n   \
    \     fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    fizz_buzz \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[\
    \ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[\
    \ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n  \
    \  [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\"\
    \ ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp61dnlyq7.sh: command substitution: line 18: syntax error near unexpected
    token `**$n''

    /tmp/tmp61dnlyq7.sh: command substitution: line 18: `( i+1 )**$n ''

    /tmp/tmp61dnlyq7.sh: line 18: ((: <=n: syntax error: operand expected (error token
    is "<=n")

    /tmp/tmp61dnlyq7.sh: command substitution: line 18: syntax error near unexpected
    token `**$n''

    /tmp/tmp61dnlyq7.sh: command substitution: line 18: `( i+1 )**$n ''

    /tmp/tmp61dnlyq7.sh: line 18: ((: <=n: syntax error: operand expected (error token
    is "<=n")

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\techo $1 | sed -n -e 's/^[[:digit:]]\\\
    +/&/p' | sort -n | uniq -c\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local number=$1\n  number=$(( number %\
    \ 10 ))\n  echo $(( (( number / 10 )) % 10 ))\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local i j\n    local n=$1\n    local\
    \ output=0\n    for (( i = 0; i <= n; i++ )); do\n        j=$(( i + 1 ))\n   \
    \     if [[ $(( n % j )) -eq 0 ]]; then\n            (( output = output + 1 ))\n\
    \        fi\n    done\n    echo $output\n}\n\ncandidate() {\n    fizz_buzz \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[\
    \ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[\
    \ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n  \
    \  [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\"\
    \ ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  declare -i n=\"${1}\"\n  declare -i c=0\n\
    \  declare -i z\n  (( z = \"${n}\" % 11 ))\n  (( z += z ? 1 : 0 ))\n  (( z = (\
    \ ( z == 1 ) ? 13 : 0 ) ))\n  (( z = ( z ? z : 0 ) ))\n  (( z = ( z > n ? 0 :\
    \ z ))\n  while [ \"${z}\" -eq 0 ]; do\n    (( c++ ))\n    (( z = \"${n}\" % 11\
    \ ))\n    (( z += z ? 1 : 0 ))\n    (( z = ( ( z == 1 ) ? 13 : 0 ) ))\n    ((\
    \ z = ( z ? z : 0 ) ))\n    (( z = ( z > n ? 0 : z ))\n  done\n  echo \"${c}\"\
    \n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[\
    \ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n   \
    \ [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n\
    \    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") =\
    \ \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuylxdh7h.sh: line 19: syntax error near unexpected token `(''

    /tmp/tmpuylxdh7h.sh: line 19: `( z = ( z > n ? 0 : z ))''

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=\"$1\"\n    test \"$n\" -ge\
    \ 1 && test \"$n\" -le \"$(( $n * 10 ))\" || return 1\n    local str\n    for\
    \ (( n = $n / 10; n >= 1; n /= 10 )); do\n        local j=1\n        for (( j\
    \ = $n; j > 0; j /= 10 )); do\n            str=\"$str $j\"\n        done\n   \
    \ done\n    printf '%s\\n' \"$str\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local count=0\n    local n=$1\n    local\
    \ i\n    for (( i=0; i < n; i++ )); do\n        if [ $(( $i % 13 )) -eq 0 ]; then\n\
    \            if [ $(( $i % 11 )) -eq 0 ]; then\n                if [ $(( $i %\
    \ 7 )) -eq 0 ]; then\n                    count=$(expr $count + 1)\n         \
    \       fi\n            fi\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=$1\n  local i=$((n-1))\n  local\
    \ j=$((n-i%10))\n  local z=$(((i/10)%10))\n  local k=$((j%10))\n  ((k<5)) && return\n\
    \  ((z<5)) && return\n  ((k==7)) && echo $((n%11+1) + 11*$((n/11)) | bc) && return\n\
    \  ((z==7)) && echo $((n%13+1) + 13*$((n/13)) | bc) && return\n  echo $((n%11+1)\
    \ + 11*$((n/11)) | bc) || \\\n  echo $((n%13+1) + 13*$((n/13)) | bc)\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    IFS=$'\\n'\n    set -- $@\n    local\
    \ n=$1; let \"n %= 100\" > /dev/null\n    for (( i = 0; i < n; ++i )); do\n  \
    \      if [[ ${#a[$i]} -gt 3 && ${a[$i]} -eq 7 ]]; then\n            let \"i -=\
    \ 3\"\n            (( i % 3 == 0 )); let \"i += 3\" > /dev/null\n            ((\
    \ i % 5 == 0 )); let \"i += 5\" > /dev/null\n            break\n        fi\n \
    \   done\n    echo $i\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\"\
    ) = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\"\
    ) = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\"\
    ) = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    [[ \"$1\" =~ ^[0-9]+$ ]] || return 1\n\
    \    \n    local result=0\n    \n    for (( i = 1; i <= $1; i++ )); do\n     \
    \   [[ $((i % 11)) -eq 0 ]] && [[ $((i % 13)) -eq 0 ]] || result=$((result+1))\n\
    \    done\n    \n    echo \"$result\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  if [ $1 -lt 100 ]\n  then\n      return\n\
    \  fi\n  if [[ $(($1%11==0)) && $(($1%13==0)) ]]; then\n      echo $(($1%7))\n\
    \  fi\n  fizz_buzz \"$(( $1 ))\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\tif [ \"$1\" -eq \"0\" ]; then\n\t\treturn\n\
    \tfi\n\tif [ \"$1\" -eq \"$1\" ]; then\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq \"\
    1\" ]; then\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq \"$1\" ]; then\n\t\treturn\n\t\
    fi\n\tif [ \"$1\" -eq \"2\" ]; then\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq \"2\"\
    \ ]; then\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq \"3\" ]; then\n\t\treturn\n\tfi\n\
    \tif [ \"$1\" -eq \"3\" ]; then\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq \"4\" ];\
    \ then\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq \"4\" ]; then\n\t\treturn\n\tfi\n\t\
    if [ \"$1\" -eq \"5\" ]; then\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq \"5\" ]; then\n\
    \t\treturn\n\tfi\n\tif [ \"$1\" -eq \"6\" ]; then\n\t\treturn\n\tfi\n\tif [ \"\
    $1\" -eq \"6\" ]; then\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq \"7\" ]; then\n\t\t\
    return\n\tfi\n\tif [ \"$1\" -eq \"7\" ]; then\n\t\treturn\n\tfi\n\tif [ \"$1\"\
    \ -eq \"8\" ]; then\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq \"8\" ]; then\n\t\treturn\n\
    \tfi\n\tif [ \"$1\" -eq \"9\" ]; then\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq \"\
    9\" ]; then\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq \"10\" ]; then\n\t\treturn\n\t\
    fi\n\tif [ \"$1\" -eq \"10\" ]; then\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq \"11\"\
    \ ]; then\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq \"11\" ]; then\n\t\treturn\n\t\
    fi\n\tif [ \"$1\" -eq \"12\" ]; then\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq \"12\"\
    \ ]; then\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq \"13\" ]; then\n\t\treturn\n\t\
    fi\n\tif [ \"$1\" -eq \"13\" ]; then\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq \"14\"\
    \ ]; then\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq \"14\" ]; then\n\t\treturn\n\t\
    fi\n\tif [ \"$1\" -eq \"15\" ]; then\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq \"15\"\
    \ ]; then\n\t\treturn\n\tfi\n\tif [ \"$1\" -eq \"16\" ]; then\n\t\treturn\n\t\
    fi\n\tif [ \"$1\" -eq \"16\" ]; then\n\t\treturn\n\tfi\n\tif [ \"$\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5cu6ap6s.sh: line 130: unexpected EOF while looking for matching
    `"''

    /tmp/tmp5cu6ap6s.sh: line 134: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n x y z\n  local -i result\n  ((result=5))\n\
    \  n=$1\n  for (( x=5; x<=n; x+=11 )); do\n    if [[ $((x%11)) = 0 ]]; then\n\
    \      ((result+=1))\n    fi\n    if [[ $((x%13)) = 0 ]]; then\n      ((result+=1))\n\
    \    fi\n  done\n  for (( y=11; y<=n; y+=13 )); do\n    if [[ $((y%11)) = 0 ]];\
    \ then\n      ((result+=1))\n    fi\n    if [[ $((y%13)) = 0 ]]; then\n      ((result+=1))\n\
    \    fi\n  done\n  echo $result\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=\"$1\"\n    local ndiv\n   \
    \ local nmod\n    local i\n    local j\n    local k\n    local count\n\n    ndiv=$((\
    \ 10#$n - 1 ))\n    nmod=$(( (10#$n - 1) / 10#$ndiv ))\n    count=$(( 0 ))\n \
    \   for (( i = 0 ; i <= ndiv ; i++ )); do\n        if (( i % $ndiv == 0 )); then\n\
    \            for (( j = 0, k = nmod ; k >= 0 ; j++, k-- )); do\n             \
    \   if [[ $(( i / $ndiv * $j + $k )) -eq 7 ]]; then\n                    count=$((\
    \ count + 1 ))\n                fi\n            done\n        fi\n    done\n \
    \   echo \"$count\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local number j=0 k=0\n  local max=$1\n\
    \n  while [ $max -gt 0 ]; do\n    number=`expr $(echo \"$max % 11\" | bc -l)`\n\
    \    if [ \"$number\" -eq 0 ]; then break; fi\n    max=`expr $max \\- 1`\n   \
    \ number=`expr $(echo \"$number % 13\" | bc -l)`\n    if [ \"$number\" -eq 0 ];\
    \ then break; fi\n    max=`expr $max \\- 1`\n    number=`expr $(echo \"$number\
    \ % 7\" | bc -l)`\n    if [ \"$number\" -eq 0 ]; then break; fi\n    max=`expr\
    \ $max \\- 1`\n    (( ++j ))\n  done\n\n  echo \"$j\"\n}\n\ncandidate() {\n  \
    \  fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"\
    0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"\
    3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") =\
    \ \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\"\
    ) = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8n2yywwk.sh: line 17: [: .00000000000000000006: integer expression
    expected

    /tmp/tmp8n2yywwk.sh: line 20: [: .00000000000000000006: integer expression expected

    /tmp/tmp8n2yywwk.sh: line 23: [: .00000000000000000006: integer expression expected

    /tmp/tmp8n2yywwk.sh: line 17: [: .00000000000000000003: integer expression expected

    /tmp/tmp8n2yywwk.sh: line 20: [: .00000000000000000003: integer expression expected

    /tmp/tmp8n2yywwk.sh: line 23: [: .00000000000000000003: integer expression expected

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local num=$1\n    local numString=${num#??}\n\
    \    local numString=${numString%%??}\n\n    while [ $numString != 7 ] && [ $numString\
    \ != 91 ]; do\n        if [ \"$numString\" -le \"$num\" ]; then\n            ((\
    \ numString *= 11 ))\n        fi\n        (( num += 1 ))\n        numString=${num#??}\n\
    \        numString=${numString%%??}\n    done\n    echo $num\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjjidtlbv.sh: line 16: [: !=: unary operator expected

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local x=\"$1\"\n  local res=\"$2\"\n \
    \ local xstr\n  ((res))\n  if (( x < 10 )); then\n    echo 0\n  else\n    echo\
    \ 1\n  fi\n  local j\n  while (( x ))\n  do\n    (( ((j=x*x)) % 11))\n    if ((\
    \ j == 7 )); then\n      (( res++ ))\n    else\n      (( res++ ))\n    fi\n  \
    \  (( xstr=$(echo \"$x 10\" | bc -l) ))\n    (( x=$(echo \"$xstr / 10\" | bc -l)\
    \ ))\n  done\n  echo \"$res\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=42 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=40 encoding='utf-8'>
  timestamp: 1660054907
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  # $2 contains the argument\n  awk -v n=\"\
    $1\" '\n    # Process the lines only if the number is not 0\n    !($1 ~ /^0/)\
    \ {\n      # Loop through the integer range from the given number\n      for (i\
    \ = 2; i <= n; ++i) {\n        # Check if it remains divisible by 11 or 13\n \
    \       if (i % 11 == 0 || i % 13 == 0) {\n          # Yes it remains, print it\n\
    \          print i\n        }\n      }\n    }\n  ' \"$2\" >/dev/null\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=34 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=19 encoding='utf-8'>
  timestamp: 1660054907
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=$1\n    local count=0\n    local\
    \ i\n    local j\n\n    for i in $(seq $n 1 100000); do\n        if  [[ $i -eq\
    \ 7 ]]; then\n            count=`expr $count + 1`\n        fi\n\n        for j\
    \ in $(seq $i 10 10); do\n            if [[ $j -eq 7 ]]; then\n              \
    \  count=`expr $count + 1`\n            fi\n        done\n    done\n\n    return\
    \ $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n\
    \    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n\
    \    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\"\
    \ ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\"\
    ) = \"8026\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=46 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=44 encoding='utf-8'>
  timestamp: 1660054907
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  n=$1\n  (( $n % 11 == 0 || $n % 13 ==\
    \ 0 )) && echo \"$n\" || echo \"0\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  if [ -n \"$1\" ]; then\n    echo \"$((\
    \ $1 / 3 % 11 ))\"\n  fi\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\"\
    ) = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\"\
    ) = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\"\
    ) = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  echo $(( $(echo $1 | grep -c \"$7\") ))\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    echo $(echo $1 | sed 's/\\./\\^&\\\\\
    &/g' | awk '{for(i=1; i<=NF; i++) if($i%11==0 || $i%13==0) print}' | wc -w)\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local i number=$1 j;\n  number=$((number%11))\n\
    \  i=1;\n  for j in $(seq 1 $number); do\n    if [ $(( $i % 11)) -eq 7 ]; then\n\
    \      echo $i\n    fi\n    i=$((i+1))\n  done\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local num=$1\n  local num1\n  local num2\n\
    \  local num3\n  local num4\n  local num5\n  local num6\n  local num7\n  local\
    \ num8\n  local num9\n  local num10\n  local num11\n  local num12\n  local num13\n\
    \  local num14\n  local num15\n  local num16\n  local num17\n  local num18\n \
    \ local num19\n  local num20\n  local num21\n  local num22\n  local num23\n  local\
    \ num24\n  local num25\n  local num26\n  local num27\n  local num28\n  local num29\n\
    \  local num30\n  local num31\n  local num32\n  local num33\n  local num34\n \
    \ local num35\n  local num36\n  local num37\n  local num38\n  local num39\n  local\
    \ num40\n  local num41\n  local num42\n  local num43\n  local num44\n  local num45\n\
    \  local num46\n  local num47\n  local num48\n  local num49\n  local num50\n \
    \ local num51\n  local num52\n  local num53\n  local num54\n  local num55\n  local\
    \ num56\n  local num57\n  local num58\n  local num59\n  local num60\n  local num61\n\
    \  local num62\n  local num63\n  local num64\n  local num65\n  local num66\n \
    \ local num67\n  local num68\n  local num69\n  local num70\n  local num71\n  local\
    \ num72\n  local num73\n  local num74\n  local num75\n  local num76\n  local num77\n\
    \  local num78\n  local num79\n  local num80\n  local num81\n  local num82\n \
    \ local num83\n  local num84\n  local num85\n  local num86\n  local num87\n  local\
    \ num88\n  local num89\n  local num90\n  local num91\n  local num92\n  local num93\n\
    \  local num94\n  local num95\n  local num96\n  local num97\n  local num98\n \
    \ local num99\n  local num100\n  local num101\n  \n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=$1\n    # echo \"$n\"\n    local\
    \ counter=0\n    # echo \"$counter\"\n    while [ $n -gt 0 ]\n    do\n       \
    \ if (( $(expr $n % 11) == 0 || ( $(expr $n % 13) == 0 )) )\n        then\n  \
    \          ((counter++))\n            # echo \"$counter\"\n        fi\n      \
    \  # echo \"$counter\"\n        (( n/= 11 ))\n        # echo \"$counter\"\n  \
    \  done\n    # echo \"$counter\"\n    echo \"$counter\"\n}\n\ncandidate() {\n\
    \    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") =\
    \ \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\")\
    \ = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpd7wh_bck.sh: line 18: 6: command not found

    /tmp/tmpd7wh_bck.sh: line 18: 11: command not found

    /tmp/tmpd7wh_bck.sh: line 18: 4: command not found

    /tmp/tmpd7wh_bck.sh: line 18: 4: command not found

    /tmp/tmpd7wh_bck.sh: line 18: 1: command not found

    /tmp/tmpd7wh_bck.sh: line 18: 0: command not found

    /tmp/tmpd7wh_bck.sh: line 18: 7: command not found

    /tmp/tmpd7wh_bck.sh: line 18: 7: command not found

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\tlocal n x\n\tIFS=\n\tfor x in $(seq $1\
    \ $2 )\n\tdo\n\t\tn=$(( n % 11 + 13)) || (( n % 11) && n)\n\tdone\n\techo $n\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    echo $(($1 % 11)) $(($1 % 13))\n}\n\n\
    candidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=$1\n    echo \"$(( $(echo \"\
    $n\" | awk '{print ($1 % 11) == 0 && ($1 % 13) == 0 ? $1 : $1 }') % 11 ))\"\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local i n\n    read n\n    IFS=$'\\\
    n' i=1\n    while [ $i -lt $n ]\n    do\n        if [ $((i % 11)) -eq 0 ] && [\
    \ $((i % 13)) -eq 0 ]; then\n            echo $i\n        else\n            echo\
    \ 0\n        fi\n        i=$((i+1))\n    done\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=50 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=29 encoding='utf-8'>
  timestamp: 1660054907
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  # Make sure that $1 is a positive integer\n\
    \  if ! test $1 -eq 1 -a $1 -gt 0 -a $1 -lt 1000000; then\n    echo \"Error: fizz_buzz\
    \ needs a positive integer\" >&2\n    return 1\n  fi\n  local i=0\n  while [ $i\
    \ -lt $1 ]; do\n    ((i++))\n    test $((i % 11)) -eq 0 || test $((i % 13)) -eq\
    \ 0\n  done\n  echo $i\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\"\
    ) = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\"\
    ) = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\"\
    ) = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'Error: fizz_buzz needs a positive integer

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  [[ $# != 1 ]] && {\n    echo \"Usage:\
    \ $(basename \"$0\") <integer>\"\n    echo \"  where <integer> is an integer <=\
    \ 2**64\"\n    exit 1\n  } | {\n    local n=$1\n    local nstr=$(echo \"$n\" |\
    \ sed -e 's/^\\([0-9][0-9]*\\).*$/\\1/')\n    local nint=$(echo \"$nstr\" | tr\
    \ '[:digit:]' '[:digit:]' '[:lower:]' '[:upper:]')\n    (( $nint % 11 == 0 ))\
    \ && {\n      echo \"0\"\n    } || {\n      local nstr=$(echo \"$n\" | sed -e\
    \ 's/^\\([0-9]*\\).*$/\\1/')\n      local nint=$(echo \"$nstr\" | tr '[:digit:]'\
    \ '[:digit:]' '[:lower:]' '[:upper:]')\n      (( $nint % 13 == 0 )) && {\n   \
    \     echo \"2\"\n      } || {\n        echo \"3\"\n      }\n    }\n  }\n}\n\n\
    candidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    [[ $1 =~ ^[13579]$ ]] || return 0\n\
    \    echo $(( ((10#$1 % 11) + 10#$1 % 13) || 0 ))\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local num=$1\n  echo $(grep -c \"$num\"\
    \ <<< \"$num\" | sed -e 's/^\\(.*\\)/\\1/' | cut -d \".\" -f1 | sort -n)\n}\n\n\
    candidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=$1; shift 1\n  while (( $(echo\
    \ \"$n / 11\" | bc -l) )); do\n    if [[ $(echo $n | bc -l) == 7 ]]; then\n  \
    \    echo $(( $n % 11 ))\n    fi\n    n=$(($n % 11))\n  done\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxpt35xak.sh: line 13: ((: 4.54545454545454545454 : syntax error:
    invalid arithmetic operator (error token is ".54545454545454545454 ")

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\tlocal n n1 n2 n3 n4 n5 n6 n7 n8 n9 n10\
    \ n11 n12 n13 i k\n\tif (( n = $1 )) ; then\n\t\t(( k != 7 ))\n\t\tfor i in $(seq\
    \ \"$n\") ; do\n\t\t\t(( n1 = $i % 11 ))\n\t\t\t(( n2 = $i % 13 ))\n\t\t\t(( n3\
    \ = $i % 17 ))\n\t\t\t(( n4 = $i % 19 ))\n\t\t\t(( n5 = $i % 23 ))\n\t\t\t(( n6\
    \ = $i % 29 ))\n\t\t\t(( n7 = $i % 37 ))\n\t\t\t(( n8 = $i % 41 ))\n\t\t\t(( n9\
    \ = $i % 43 ))\n\t\t\t(( n10 = $i % 47 ))\n\t\t\t(( n11 = $i % 51 ))\n\t\t\t((\
    \ n12 = $i % 55 ))\n\t\t\t(( n13 = $i % 59 ))\n\t\t\t(( n14 = $i % 63 ))\n\t\t\
    \t(( n15 = $i % 67 ))\n\t\t\t(( n16 = $i % 71 ))\n\t\t\t(( n17 = $i % 75 ))\n\t\
    \t\t(( n18 = $i % 79 ))\n\t\t\t(( n19 = $i % 83 ))\n\t\t\t(( n20 = $i % 87 ))\n\
    \t\t\t(( n21 = $i % 91 ))\n\t\t\t(( n22 = $i % 95 ))\n\t\t\t(( n23 = $i % 99 ))\n\
    \t\t\t(( n24 = $i % 103 ))\n\t\t\t(( n25 = $i % 107 ))\n\t\t\t(( n26 = $i % 111\
    \ ))\n\t\t\t(( n27 = $i % 115 ))\n\t\t\t(( n28 = $i % 119 ))\n\t\t\t(( n29 = $i\
    \ % 123 ))\n\t\t\t(( n30 = $i % 127 ))\n\t\t\t(( n31 = $i % 131 ))\n\t\t\t(( n32\
    \ = $i % 135 ))\n\t\t\t(( n33 = $i % 139 ))\n\t\t\t(( n34 = $i % 143 ))\n\t\t\t\
    (( n35 = $i % 147 ))\n\t\t\t(( n36 = $i % 151 ))\n\t\t\t(( n37 = $i % 155 ))\n\
    \t\t\t(( n38 = $i % 159 ))\n\t\t\t(( n39 = $i % 163 ))\n\t\t\t(( n40 = $i % 167\
    \ ))\n\t\t\t(( n41 = $i % 171 ))\n\t\t\t(( n42 = $i % \n}\n\ncandidate() {\n \
    \   fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") =\
    \ \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\")\
    \ = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe22mgjnc.sh: line 57: unexpected EOF while looking for matching
    `)''

    /tmp/tmpe22mgjnc.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local integer=\"$1\"\n    local buzzers=0\n\
    \    local digits=${integer//[^0-9]/}\n    while [ \"${digits:0:1}\" != 7 ] &&\
    \ [ \"${digits:0:1}\" != 8 ] && [ \"${digits:0:1}\" != 9 ]; do\n        ((buzzers++))\n\
    \        digits=${integer//[^0-9]/}\n    done\n    printf \"$buzzers\"\n}\n\n\
    candidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=22 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=16 encoding='utf-8'>
  timestamp: 1660054907
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\tlocal n=$1\n\tlocal i\n\tlocal digit7\n\
    \tlocal count\n\tcount=0\n\tfor i in $(seq 1 $n); do\n\t\tdigit7=`expr $i % 17`\n\
    \t\tif [ $digit7 -eq 7 ]; then\n\t\t\t((count++))\n\t\tfi\n\t\ti=$(( $i % 17 ))\n\
    \tdone\n\treturn $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\"\
    ) = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\"\
    ) = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\"\
    ) = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n i=0 output=\"1\"\n  while [ \"\
    $n\" -gt 0 ]; do\n    (( n%11 )) && output=\"${output}11\"\n    (( n%13 )) &&\
    \ output=\"${output}13\"\n    (( i++ ))\n    n=$(( n//10 ))\n  done\n  echo $output\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: '/tmp/tmp2kvzg2dh.sh: line 13: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    (( $# <= 2 )) && return 0\n    (( $1\
    \ > $2 )) && return 0\n    (( ( $1 % 11 ) == 0 )) && return 0\n    (( ( $1 % 13\
    \ ) == 0 )) && return 0\n    echo $( ( $( for (( i=1; $(($1*$2)) ); do [[ \"$((\
    \ $i % 11 ))\" != 7 ]] && [[ \"$(( $i % 13 ))\" != 7 ]]; done) + 1 )\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpks5rfrf3.sh: line 16: unexpected EOF while looking for matching
    `)''

    /tmp/tmpks5rfrf3.sh: line 36: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  n=$1\n  (( n % 11 == 0 )) && \\\n  ((\
    \ n % 13 == 0 )) && \\\n  echo 0\n  (( n % 11 != 0 )) && \\\n  (( n % 13 != 0\
    \ )) && \\\n  echo 1\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\"\
    ) = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\"\
    ) = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\"\
    ) = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\t[[ $1 =~ ^[0-9]+$ ]] || return 0\n\tlet\
    \ \"n = ${#1}\"\n\tlet \"n--\"\n\tfor i in $(seq 1 ${#1}); do\n\t\tif (( ${1:$i:1}\
    \ == 7)) && (( ( ${1:$i:1} == ${1:$n}) && ((n % 11) == 0 || (n % 13) == 0 )) );\
    \ then\n\t\t\tlet \"n--\"\n\t\t\tbreak\n\t\tfi\n\tdone\n\tlet \"n++\"\n\t[[ $n\
    \ -gt $1 ]] || return 0\n\techo \"$n\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6fjfso2y.sh: line 16: syntax error near unexpected token `==''

    /tmp/tmp6fjfso2y.sh: line 16: `( ( ${1:$i:1} == ${1:$n}) && ((n % 11) == 0 ||
    (n % 13) == 0 )) ''

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=$1\n\n    # count the number\
    \ of '7's in the integers less than n\n    local n7=$(( (($((n+1)/3)) % 11) +\
    \ 1 ))\n    # count the number of '7's in the integers less than n\n    local\
    \ n13=$(( (($((n+1)/3)) % 13) + 1 ))\n\n    # return how many times 7 appears\
    \ in integers less than n which are divisible by 11 or 13\n    echo $(($n7 * $n13))\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpdpkae4aa.sh: command substitution: line 15: syntax error near unexpected
    token `/3''

    /tmp/tmpdpkae4aa.sh: command substitution: line 15: `(n+1)/3''

    /tmp/tmpdpkae4aa.sh: line 15: (() % 11) + 1 : syntax error: operand expected (error
    token is ") % 11) + 1 ")

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n i\n  local n_int n_mod n_rem n_rem\
    \ n_rem n_rem n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod\
    \ n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod\
    \ n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod\
    \ n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod\
    \ n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod\
    \ n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod\
    \ n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod\
    \ n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod\
    \ n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod\
    \ n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod\
    \ n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod\
    \ n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod\
    \ n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod\
    \ n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod\
    \ n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod\
    \ n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod\
    \ n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod\
    \ n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod\
    \ n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod n_mod\
    \ n_mod \n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n\
    \    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n\
    \    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\"\
    \ ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\"\
    ) = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local -r n=$1\n  local -r s=0\n  for ((\
    \ z=$n; z>0; z-- )) ; do\n    (( n % z == 0 )); z=$(( z - 1 ))\n    if (( z >\
    \ 0 )) ; then\n      (( s++ ))\n    fi\n  done\n  echo $s\n}\n\ncandidate() {\n\
    \    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") =\
    \ \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\")\
    \ = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmpsa2uqkag.sh: line 17: s: readonly variable

    /tmp/tmp'
  stdout: ''
  timestamp: 1660054902
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local num=$1\n  local result\n  local\
    \ i\n  local numbers=()\n  for ((i = 0; i <= 20; i++)); do\n    if (( (i % 11)\
    \ == 0 ) || ( (i % 13) == 0 )) ; then\n      numbers[${#numbers@}]=\"$i\"\n  \
    \  fi\n  done\n  result=$(echo \"${numbers[*]}\" | sed -E 's/^.*(7).*/\\1/' |\
    \ sort -u)\n  echo \"$result\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1a8n8rp_.sh: line 17: syntax error near unexpected token `==''

    /tmp/tmp1a8n8rp_.sh: line 17: `( (i % 11) == 0 ) ''

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local num=$1\n  (( $num % 11 == 0 && $num\
    \ % 13 == 0 )) && echo \"$num\" || echo \"0\"\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=$1\n    local counter=0\n  \
    \  local i\n    for i in $(seq $n); do\n        if (( i % 11 == 0 )); then\n \
    \           (( counter+=1 ))\n        elif (( i % 13 == 0 )); then\n         \
    \   (( counter+=2 ))\n        fi\n    done\n    echo $counter\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local integer counter number\n    for\
    \ number in $1; do\n        (( counter++ ))\n    done\n    echo \"$counter\"\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  echo $1 | awk --posix 'BEGIN{n=int($1);i=1;\
    \ while (i<=n) if ($1 % 11==0 || $1 % 13==0) { print i };i=i+1};'\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    while [ $1 -gt 0 ]; do\n        (( count++))\n\
    \        (( n=$1 ))\n        if (( $n % 11 == 0 )); then\n            (( count\
    \ += 1 ))\n        fi\n        if (( $n % 13 == 0 )); then\n            (( count\
    \ += 1 ))\n        fi\n        (( n=$(( n-1 )) ))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[\
    \ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n   \
    \ [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n\
    \    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") =\
    \ \"8026\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=56 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=25 encoding='utf-8'>
  timestamp: 1660054907
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n i\n  n=$1\n  for i in $(seq 1\
    \ $n); do\n    case \"$i\" in\n      *[7-9]|[11-13]|[21-23]|[31-39]|[41-49]|[51-59]|[61-69]|[71-79])\
    \ # divisible by 7, 11, 13, 21, 23, 31, 39, 41, 49, 51, 61, 71, 79\n        echo\
    \ 0\n        break\n      ;;\n      *[1-8]) # divisible by 1-8\n        echo 0\n\
    \        break\n      ;;\n      *) echo 0\n        break\n      ;;\n    esac\n\
    \  done\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n\
    \    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n\
    \    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\"\
    \ ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\"\
    ) = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local number=$1\n    local i=0 j=0\n\
    \    local counter=0\n    while [ $number -gt 0 ]; do\n        if [ $number -eq\
    \ 7 ]; then\n            ((counter++))\n            number=$((number%10))\n  \
    \      else\n            if [ $number -eq 13 ]; then\n                ((counter++))\n\
    \                number=$((number/10))\n            else\n                if [\
    \ $number -le 11 ]; then\n                    ((counter++))\n                \
    \    ((i+= number))\n                else\n                    if [ $number -le\
    \ 13 ]; then\n                        ((counter++))\n                        ((j+=\
    \ number))\n                    else\n                        echo \"$counter\"\
    \n                        counter=0\n                    fi\n                fi\n\
    \            fi\n        fi\n    done\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=61 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=37 encoding='utf-8'>
  timestamp: 1660054907
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\tlocal i\n\tlocal n=\"$1\"\n\tlocal cnt=0\n\
    \tfor i in $(seq 1 \"$n\");\n\tdo\n\t\tif [[ $((i % 11)) == 0 ]] && [[ $((i %\
    \ 13)) == 0 ]]; then\n\t\t\t(( cnt++ ))\n\t\tfi\n\tdone\n\techo \"$cnt\"\n}\n\n\
    candidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\t[[ \"$#\" -gt 1 ]] || return 1\n\n\t#\
    \ Avoid bash arithmetic expansion\n\tlocal n=$1\n\n\tlocal i\n\n\tlocal num\n\n\
    \tlocal count=0\n\n\tfor ((i=1; i<=n; i+=11))\n\tdo\n\t\tnum=$i\n\t\t(( num !=\
    \ 7 && (num % 11 != 0 || num % 13 != 0) )) && let ++count\n\tdone\n\techo \"$count\"\
    \n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[\
    \ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n   \
    \ [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n\
    \    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") =\
    \ \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=$1\n  shift\n  # Make sure that\
    \ we're working with an integer.\n  if (( (($# > 0)) && ((! $(n))) )) ; then\n\
    \    echo \"Usage: $(basename \"$0\") integer\"\n    return 1\n  fi\n  # Make\
    \ sure that the first argument is an integer.\n  if (( (($# > 0)) && ((! $(isInt\
    \ $1))) )) ; then\n    echo \"Usage: $(basename \"$0\") integer\"\n    return\
    \ 1\n  fi\n  local i\n  i=1\n  # Do until we get a non-divisible by 11 or 13 number.\n\
    \  while (( ($(% \"$n\" 11) != 0) || ($(% \"$n\" 13) != 0) )) ; do\n    # If the\
    \ remainder is zero, we're done.\n    if (( ($(% \"$n\" 0) == 0) && ($((i % 10))\
    \ == 7)) ) ; then\n      # If this is the first run of 7 we find, return 0.\n\
    \      if (( ($i == 0)) && ($((i % 10)) == 7)) ; then\n        return 0\n    \
    \  fi\n      # Otherwise, increment the counter.\n      ((i++))\n    fi\n    #\
    \ Otherwise, increment the counter.\n    ((i++))\n  done\n  # If we have an odd\
    \ number of runs of 7, increment the counter.\n  if (( $((i % 2)) == 1)) ; then\n\
    \    ((i++))\n  fi\n  # If we have an even number of runs of 7, increment the\
    \ counter.\n  if (( $((i % 2)) == 0)) ; then\n    ((i++))\n  fi\n  # And return\
    \ the value.\n  return $i\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptnkgcyw1.sh: line 15: n: command not found

    /tmp/tmptnkgcyw1.sh: line 15: ((: ((0 > 0)) && ((! )) : syntax error: operand
    expected (error token is ")) ")

    /tmp/tmptnkgcyw1.sh: line 20: isInt: command not found

    /tmp/tmptnkgcyw1.sh: line 20: ((: ((0 > 0)) && ((! )) : syntax error: operand
    expected (error token is ")) ")

    /tmp/tmptnkgcyw1.sh: line 27: fg: no job control

    /tmp/tmptnkgcyw1.sh: line 27: fg: no job control

    /tmp/tmptnkgcyw1.sh: line 27: ((: ( != 0) || ( != 0) : syntax error: operand expected
    (error token is "!= 0) || ( != 0) ")

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n i b count\n  n=$1\n  b=0\n  count=0\n\
    \  while [ \"$n\" -gt 0 ]; do\n    i=$(( $n % 10 ))\n    b=$(( $b + $i ))\n  \
    \  count=$(( $count + $( [ $b -eq 0 ] || [ $b -lt 5 ] || [ $b -lt 8 ] ) ))\n \
    \   n=$(( $n / 10 ))\n  done\n  return $count\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp47atjn37.sh: line 19: 0 +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n count\n  n=${1//[^0-9]/}\n  ((\
    \ count = $(ndiv \"${n}\" \"11\")) == 0)\n  (( count = $(ndiv \"${n}\" \"13\"\
    )) == 0)\n  echo \"${count}\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuejp2uh3.sh: line 14: syntax error near unexpected token `==''

    /tmp/tmpuejp2uh3.sh: line 14: `  (( count = $(ndiv "${n}" "11")) == 0)''

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=$1\n    local i=0\n    local\
    \ z=1\n    local t\n    while ((i<n)) {\n        t=$((($i % 10))*$z)\n       \
    \ if (( $t % 11 == 0 || $t % 13 == 0 )) {\n            if (( $(expr $i + $z) %\
    \ 11 == 0 || $(expr $i + $z) % 13 == 0 )) {\n                (( i++ ))\n     \
    \           (( z++ ))\n            }\n        }\n        (( i++ ))\n    }\n  \
    \  echo $i\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbji2emit.sh: line 16: syntax error near unexpected token `{''

    /tmp/tmpbji2emit.sh: line 16: `    while ((i<n)) {''

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    echo $(($(echo $1 | sed -e 's/\\([0-9][0-9]*\\\
    )[0-9]*\\([0-9][0-9]*\\)[0-9][0-9]*\\([0-9][0-9]*\\)/\\1\\\\2\\3\\4/' | grep -F\
    \ '7') | wc -w))\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'sed: -e expression #1, char 75: invalid reference \4 on `s'' command''s
    RHS

    /tmp/tmpb9xy9gmf.sh: line 12: | wc -w: syntax error: operand expected (error token
    is "| wc -w")

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local a=$1\n    local count=0\n\n  \
    \  while [ $a -gt 0 ]; do\n        if [ $a -eq 7 ]; then\n            count=$(($count\
    \ + 1))\n        else\n            if [ $a -eq 11 ] || [ $a -eq 13 ]; then\n \
    \               count=$(($count + 1))\n            fi\n        fi\n        a=$(($a\
    \ - 1))\n    done\n\n    echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=$1\n    local number=$2\n  \
    \  if [[ $number < 101 ]]; then\n        return 1\n    fi\n    local count=0\n\
    \    if [[ $number == $((101 * 7 + 7)) ]]; then\n        count=$((count+1))\n\
    \    elif [[ $number == $((101 * 7 + 13)) ]]; then\n        count=$((count+1))\n\
    \    fi\n    if [[ $number == $((101 * 11 + 7)) ]]; then\n        count=$((count+1))\n\
    \    elif [[ $number == $((101 * 11 + 13)) ]]; then\n        count=$((count+1))\n\
    \    fi\n    if [[ $number == $((101 * 13 + 7)) ]]; then\n        count=$((count+1))\n\
    \    elif [[ $number == $((101 * 13 + 13)) ]]; then\n        count=$((count+1))\n\
    \    fi\n    echo \"$count\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  number=$1\n  i=0\n  result=\"\"\n\n  while\
    \ [ $i -lt 10 ] && [ $number -eq ${number%10} ]\n  do\n    number=$(($number/10))\n\
    \    i=$(($i+1))\n    result=\"$result $i\"\n  done\n\n  while [ $i -lt 11 ] &&\
    \ [ $number -eq ${number%11} ]\n  do\n    number=$(($number/11))\n    i=$(($i+1))\n\
    \    result=\"$result $i\"\n  done\n\n  while [ $i -lt 13 ] && [ $number -eq ${number%13}\
    \ ]\n  do\n    number=$(($number/13))\n    i=$(($i+1))\n    result=\"$result $i\"\
    \n  done\n\n  echo ${result}\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local i num\n\n    if [ \"$1\" = 0 ];\
    \ then\n        return 0\n    fi\n\n    num=$(printf \"%.0f\" $1)\n    i=$(expr\
    \ ${num} / 11)\n    while [ $i -lt $2 ]; do\n        (( i++ ))\n        i=$(expr\
    \ ${i} + ${num} / 13)\n    done\n\n    return $i\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6u246l2n.sh: line 20: [: 4: unary operator expected

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    ((n=$1))\n    echo $(( $n )) | bc -l\
    \ | sed \"s/^0//\" | awk '{print $n}'\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\tlocal number=$1\n\n\tlocal zeroes=$((\
    \ ${number} % 10 ))\n\tlocal threes=$(( ${number} / 10 % 10 ))\n\tlocal sixes=$((\
    \ ${number} / 100 % 10 ))\n\tlocal sevens=$(( ${number} / 1000 % 10 ))\n\n\t((\
    \ ${number} > 1000 )) && echo ${number/1000}\n\t(( ${number} > 100 )) && echo\
    \ ${number/100}\n\t(( ${number} > 10 )) && echo ${number/10}\n\t(( ${number} >\
    \ 9 )) && echo ${number}\n\t(( ${number} > 7 )) && echo ${number/7}\n\n\t(( ${number}\
    \ > 6 )) && echo ${number/6}\n\t(( ${number} > 5 )) && echo ${number/5}\n\t((\
    \ ${number} > 4 )) && echo ${number/4}\n\t(( ${number} > 3 )) && echo ${number/3}\n\
    \t(( ${number} > 2 )) && echo ${number/2}\n\t(( ${number} > 1 )) && echo ${number/1}\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    # Bash will evaluate \"$(...)\" as its\
    \ contents but will still be in quotes\n    # so we have to put it into double\
    \ quotes\n    # To avoid that we can use a different here-string\n    # Note:\
    \ We are using single quotes to avoid escaping $1 within the here-string.\n  \
    \  # Using double quotes here would have meant escaping $1 within the here-string.\n\
    \    echo \"$(echo \"$1\" | sed -e \"s/${1}//g\" | sed -e \"s/^\\(.*\\)\\$/${1}\\\
    1/g\" | sort | uniq -c | grep -c \"${1}\\7\")\"\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'grep: Invalid back reference

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=$1 count\n    for ((count=0;\
    \ count < ${#n}; count++)); do\n        if [ $((n % 11)) -eq 0 ] && [ $((n % 13))\
    \ -eq 0 ]; then\n            echo $count\n        fi\n    done\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    n=$1\n    case \"$n\" in\n        0)\n\
    \            return 0\n            ;;\n        *)\n            if [[ $((n % 11))\
    \ -eq 0 ]] || [[ $((n % 13)) -eq 0 ]]; then\n                echo \"$(( 11 + 13\
    \ * $(( n % 11 )) ))\"\n            else\n                echo \"$(( 11 + $((\
    \ n % 11 )) ))\"\n            fi\n            ;;\n    esac\n}\n\ncandidate() {\n\
    \    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") =\
    \ \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\")\
    \ = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n result=0\n    for n in \"$1\"\
    ; do\n        if (( $n % 11 == 0 || $n % 13 == 0 )) && [[ $(expr $n % $n) == 7\
    \ ]]; then\n            result=$(( $result + 1 ))\n        fi\n    done\n    echo\
    \ \"$result\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\tlocal n=\"${1}\"\n\tlocal -a nums\n\t\
    local i\n\n\t# FizzBuzz algorithm: print the first integer greater than the\n\t\
    # given integer, i, divisible by 11 or 13, using FizzBuzz\n\t# (http://rosettacode.org/wiki/FizzBuzz).\n\
    \tnums=()\n\tfor (( i=n; i<=n; i++ )); do\n\t\tif (( i % 11 == 0 )) && (( i %\
    \ 13 == 0 )); then\n\t\t\tnums+=( \"${i}\" )\n\t\tfi\n\tdone\n\n\techo \"${#nums[*]}\"\
    \n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[\
    \ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n   \
    \ [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n\
    \    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") =\
    \ \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\tawk -F. '{for(i=NF;i>=NF/3+1;i-=3)print\
    \ int($i%11),int($i%13),$i}'\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=48 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=36 encoding='utf-8'>
  timestamp: 1660054907
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=$1\n  local i=0\n  while [ $n\
    \ -gt 0 ]\n  do\n    if [ $(( n % 11 )) -eq 0 ] && [ $(( n % 13 )) -eq 0 ]\n \
    \   then\n      (( i++ ))\n    fi\n    n=$(( n - 1 ))\n  done\n  echo $i\n}\n\n\
    candidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local i counter=0\n  for (( i=$1; $i -gt\
    \ 1; i=$(( i + 1 ))); ); do\n    if [ $(( i % 11 )) -eq 0 ] && [ $(( i % 13 ))\
    \ -eq 0 ]; then\n      counter=$(( counter + 1 ))\n    fi\n  done\n  echo $counter\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmp4o9ygzjt.sh: line 13: syntax error near `;''

    /tmp/tmp4o9ygzjt.sh: line 13: `  for (( i=$1; $i -gt 1; i=$(( i + 1 ))); ); do''

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n   local n=$1\n   local result=$2\n   local\
    \ i\n   for ((i=1; i<=$n; i++))\n   do\n      (( n % 11 == 0 && n % 13 != 0 ))\
    \ || result=$i\n   done\n   echo $result\n}\n\ncandidate() {\n    fizz_buzz \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[\
    \ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[\
    \ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n  \
    \  [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\"\
    \ ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local number=$1\n  local count=0\n  local\
    \ last=0\n  local tmp=$(echo $number | sed -n 's/\\([0-9]*\\)$/\\1/p')\n  local\
    \ digit=$(echo $number | sed -n 's/\\([0-9]*\\)\\([0-9]*\\)/\\1/p')\n\n  while\
    \ [ $tmp -gt 1 ]; do\n    count=$((count + tmp))\n    tmp=$(echo $number | sed\
    \ -n 's/\\([0-9]*\\)$/\\1/p')\n    digit=$(echo $number | sed -n 's/\\([0-9]*\\\
    )\\([0-9]*\\)/\\1/p')\n  done\n\n  while [ $number -ge 1 ]; do\n    if [ $digit\
    \ -eq 7 ]; then\n      count=$((count + 1))\n    elif [ $digit -eq 13 ]; then\n\
    \      count=$((count + 2))\n    else\n      last=$((count + 1))\n    fi\n   \
    \ number=$((number - 1))\n    digit=$(echo $number | sed -n 's/\\([0-9]*\\)\\\
    ([0-9]*\\)/\\1/p')\n  done\n\n  if [ $last -eq 0 ]; then\n    echo 0\n  else\n\
    \    echo ${last}\n  fi\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\"\
    ) = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\"\
    ) = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\"\
    ) = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=59 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=26 encoding='utf-8'>
  timestamp: 1660054907
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=$1\n  local count=0\n  local factor=1\n\
    \  while [ \"$n\" -gt 0 ]; do\n    (( n % factor ))\n    (( n /= factor ))\n \
    \   (( count++ ))\n    (( factor *= 11 ))\n  done\n  printf \"%d\\n\" $count\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  (( $1 % 11 == 0 )) && return 0\n  (( $1\
    \ % 13 == 0 )) && return 1\n  (( $1 % 11 == 0 )) && return 1\n  (( $1 % 13 ==\
    \ 0 )) && return 0\n  (( $1 % 11 == 0 )) && return 1\n  (( $1 % 13 == 0 )) &&\
    \ return 1\n  (( $1 % 11 == 0 )) && return 0\n  (( $1 % 13 == 0 )) && return 1\n\
    \  (( $1 % 11 == 0 )) && return 1\n  (( $1 % 13 == 0 )) && return 0\n  (( $1 %\
    \ 11 == 0 )) && return 1\n  (( $1 % 13 == 0 )) && return 1\n  (( $1 % 11 == 0\
    \ )) && return 0\n  (( $1 % 13 == 0 )) && return 1\n  (( $1 % 11 == 0 )) && return\
    \ 1\n  (( $1 % 13 == 0 )) && return 0\n  (( $1 % 11 == 0 )) && return 1\n  ((\
    \ $1 % 13 == 0 )) && return 1\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=$1\n  local res\n  local i\n \
    \ for (( i = 0; i < ${#n}; i++ )); do\n    if [ ${n%:${i}:0} -eq 7 ]; then\n \
    \     if [[ ${n%:${i}:1} == 0 ]]; then\n        if [[ ${n%:${i}:2} == 0 ]]; then\n\
    \          if [[ ${n%:${i}:3} == 0 ]]; then\n            res=$(( res+1 ))\n  \
    \        else\n            res=$(( res+1 ))\n          fi\n        else\n    \
    \      res=$(( res+1 ))\n        fi\n      else\n        if [[ ${n%:${i}:1} ==\
    \ 1 ]]; then\n          if [[ ${n%:${i}:2} == 2 ]]; then\n            res=$((\
    \ res+1 ))\n          else\n            res=$(( res+1 ))\n          fi\n     \
    \   else\n          res=$(( res+1 ))\n        fi\n      fi\n    else\n      res=$((\
    \ res+1 ))\n    fi\n  done\n  echo \"${res}\"\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local i\n  local n=$1 \n  local digits=$2\n\
    \  local result\n  local numbuzz=0\n  local buzzword\n  local imax=0\n  local\
    \ numbuzzwords\n  (( numbuzzwords = digits/7 )) || return 1\n  (( digits = digits%7\
    \ )) || return 1\n  (( numbuzzwords <= 10 )) || return 1\n  for (( i = 1; i <=\
    \ numbuzzwords ; i++ )); do\n    buzzword=${buzzwords[$i-1]}\n    if [[ \"$i\"\
    \ -eq \"${numbuzzwords}\" ]]; then\n      result=\"1\"\n    else\n      (( imax\
    \ = $(( i + 1 )) )) || return 1\n      result=\"$i\"\n    fi\n    (( numbuzz =\
    \ numbuzz + ${buzzword} )) || return 1\n  done\n  printf \"%$digits\\n\" \"${result}\"\
    \n  return 0\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  # Convert input to an integer\n  local\
    \ -i int=\"${1:-}\"\n  local digit=7\n  local n=0\n  while (( n < $int )); do\n\
    \    (( n % 11 == 0 )) && digit=11\n    (( n % 13 == 0 )) && digit=13\n    echo\
    \ -n \"${digit}\"\n    (( ++n ))\n  done\n  echo \"\"\n}\n\ncandidate() {\n  \
    \  fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"\
    0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"\
    3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") =\
    \ \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\"\
    ) = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local N=$1\n    local i j\n    echo\
    \ -n \"${N}\"\n    for ((i=0;i<N;i++)) ; do\n        j=0\n        while ((${N}%11))\
    \ ; do\n            ((j++))\n            ((N=N/11))\n        done\n        while\
    \ ((${N}%13)) ; do\n            ((j++))\n            ((N=N/13))\n        done\n\
    \        if ((j)) ; then\n            echo \"${j}\"\n        fi\n    done\n}\n\
    \ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n   local n=$1; shift\n   local count=0\n\
    \   while [ $n -le $(( 2**${#1} | bc ))-2 ]; do\n      (( n % 11 == 1 )) && count=$((\
    \ count+1 ))\n      (( n % 13 == 1 )) && count=$(( count+1 ))\n      (( n % 11\
    \ == 13)) && count=$(( count+1 ))\n      (( n % 13 == 13)) && count=$(( count+1\
    \ ))\n      (( n % 11 != 13)) && count=$(( count+1 ))\n      (( n % 13 != 13))\
    \ && count=$(( count+1 ))\n      (( n % 11 != 11 )) && count=$(( count+1 ))\n\
    \      (( n % 13 != 11 )) && count=$(( count+1 ))\n      (( n % 11 != 13)) &&\
    \ count=$(( count+1 ))\n      (( n % 13 != 13)) && count=$(( count+1 ))\n    \
    \  (( n % 11 == 0)) && count=$(( count+1 ))\n      (( n % 13 == 0)) && count=$((\
    \ count+1 ))\n      (( n % 11 != 0)) && count=$(( count+1 ))\n      (( n % 13\
    \ != 0)) && count=$(( count+1 ))\n      (( n % 11 != 11)) && count=$(( count+1\
    \ ))\n      (( n % 13 != 11)) && count=$(( count+1 ))\n      (( n % 11 == 13))\
    \ && count=$(( count+1 ))\n      (( n % 13 == 13)) && count=$(( count+1 ))\n \
    \     (( n % 11 != 13)) && count=$(( count+1 ))\n      (( n % 13 != 13)) && count=$((\
    \ count+1 ))\n      (( n % 11 != 11)) && count=$(( count+1 ))\n      (( n % 13\
    \ != 11)) && count=$(( count+1 ))\n      (( n % 11 != 0)) && count=$(( count+1\
    \ ))\n      (( n % 13 != 0)) && count=$(( count+1 ))\n      (( n % 11 != 11))\
    \ && count=$(( count+1 ))\n      (( n % 13 != 11)) && count=$(( count+1 ))\n \
    \     (( n % 11 == 0)) && count=$(( count+1 ))\n\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptozmaz5z.sh: line 43: syntax error near unexpected token `}''

    /tmp/tmptozmaz5z.sh: line 43: `}''

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local i\n    for i in {1..$1}; do\n\
    \        if [ $((i % 11)) -eq 0 ] && [ $((i % 13)) -eq 0 ]; then\n           \
    \ echo $i\n            exit\n        fi\n    done\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_ocewbtk.sh: line 14: {1..50}: syntax error: operand expected (error
    token is "{1..50}")

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local NUMBER=\"$1\"\n  local NUMBERS=\"\
    $(seq 1 $NUMBER)\"\n  echo \"$(echo \"$NUMBERS\" | grep -Eo '^([1-9]|11)$')\"\n\
    \  echo \"$(echo \"$NUMBERS\" | grep -Eo '^([1-9]|13)$')\"\n}\n\ncandidate() {\n\
    \    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") =\
    \ \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\")\
    \ = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=$1\n    local count=0;\n\n \
    \   # Loop from 1 to the number\n    for (( i=1; i<=$n; i++ ))\n    do\n     \
    \   # Check if the number is divisible by 11 or 13\n        if (( i % 11 == 0\
    \ || i % 13 == 0 ))\n        then\n            # Count the number of 7s\n    \
    \        if [ \"$i\" = \"$n\" -a \"$i\" -eq \"7\" ]\n            then\n      \
    \          count=$(( count+1 ))\n            # Ignore all other integers\n   \
    \         elif [ \"$i\" -eq \"0\" ]\n            then\n                continue\n\
    \            fi\n        fi\n    done\n\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\twhile [ \"$1\" != \"\" ]; do\n\t\tnum=$(echo\
    \ \"$1\" | sed -e 's/\\(.*\\)//')\n\t\ttest \"$num\" -gt 0 && echo \"$((num /\
    \ 11))\"\n\t\ttest \"$num\" -gt 11 && echo \"$((num / 13))\"\n\t\tshift\n\tdone\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: '/tmp/tmp1qxxxtrm.sh: line 14: test: : integer expression expected

    /tmp/tmp1qxxxtrm.sh: line 15: test: : integer expression expected

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  echo \"$1\" | awk '{for (n=1;n<=NF;n++)\
    \ if ($n%11==7||$n%13==7) print \"$n\"} END {print \"0\"}'\n}\n\ncandidate() {\n\
    \    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") =\
    \ \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\")\
    \ = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    echo \"$1\" | awk '{\n        if ($1\
    \ % 11 == 0)\n            print $1 \" is a multiple of 11\"\n        else if ($1\
    \ % 13 == 0)\n            print $1 \" is a multiple of 13\"\n        else\n  \
    \          if ($1 % 7 == 0)\n                print $1 \" is a multiple of 7\"\n\
    \            else\n                print $1 \" is not a multiple of 11 or 13\"\
    \n            fi\n        }'\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local digit=7\n  local n=$1\n  local numbers=$(seq\
    \ 1 $n)\n  local count=0\n  local fizzbuzz=1\n  while [[ $n -gt 1 ]]; do\n   \
    \ local tmp=$((numbers / 11))\n    local remainder=$((numbers / $tmp))\n    if\
    \ [[ $remainder -eq 1 ]]; then\n      count=$(expr $count + 1)\n    fi\n    ((n--))\n\
    \    ((fizzbuzz++))\n    ((numbers += $tmp))\n  done\n  echo $count\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpca8f1sfb.sh: line 18: 1

    2

    3

    4

    5

    6

    7

    8

    9

    10

    11

    12

    13

    14

    15

    16

    17

    18

    19

    20

    21

    22

    23

    24

    25

    26

    27

    28

    29

    30

    31

    32

    33

    34

    35

    36

    37

    38

    39

    40

    41

    42

    43

    44

    45

    46

    47

    48

    49

    50: syntax error in expression (error token is "2

    3

    4

    5

    6

    7

    8

    9

    10

    11

    12

    13

    14

    15

    16

    17

    18

    19

    20

    21

    22

    23

    24

    25

    26

    27

    28

    29

    30

    31

    32

    33

    34

    35

    36

    37

    38

    39

    40

    41

    42

    43

    44

    45

    46

    47

    48

    49

    50")

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  # We don't need this\n  # local n=$1\n\
    \n  local n=$1\n  local count=0\n  local j=0\n  # Loop through all of the integers\
    \ between 1 and n\n  for i in $(seq 1 $n); do\n    # Get the integer and check\
    \ it for divisibility by 11 or 13\n    num=$(echo $i | cut -c1-3)\n    mod=$(echo\
    \ \"$num\" | bc)\n    if [ $mod -eq 11 ]; then\n      # If so, add 1 to the counter\n\
    \      (( count++ ))\n    elif [ $mod -eq 13 ]; then\n      # If so, add 2 to\
    \ the counter\n      (( count+2 ))\n    elif [ $mod -eq 0 ]; then\n      # If\
    \ so, add 3 to the counter\n      (( count+3 ))\n    elif [ $mod -eq 3 ]; then\n\
    \      # If so, add 4 to the counter\n      (( count+4 ))\n    elif [ $mod -eq\
    \ 6 ]; then\n      # If so, add 5 to the counter\n      (( count+5 ))\n    elif\
    \ [ $mod -eq 9 ]; then\n      # If so, add 6 to the counter\n      (( count+6\
    \ ))\n    elif [ $mod -eq 12 ]; then\n      # If so, add 7 to the counter\n  \
    \    (( count+7 ))\n    elif [ $mod -eq 15 ]; then\n      # If so, add 8 to the\
    \ counter\n      (( count+8 ))\n    elif [ $mod -eq 18 ]; then\n      # If so,\
    \ add 9 to the counter\n      (( count+9 ))\n    else\n      # Else, do nothing\n\
    \      continue\n    fi\n    # Increment the digit that has just been used\n \
    \   (( j+=1 ))\n  done\n  # Return the count\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\tlocal n=\"$1\"\n\tlocal count=0\n\twhile\
    \ [ $n -gt 0 ]; do\n\t\tif [ $((n % 11) == 0) -o $((n % 13) == 0) ]; then count=$((count\
    \ + 1)); fi\n\t\t((n--))\n\tdone\n\techo $count\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpawyt4al2.sh: command substitution: line 15: syntax error near unexpected
    token `==''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: `(n % 11) == 0''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: syntax error near unexpected
    token `==''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: `(n % 13) == 0''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: syntax error near unexpected
    token `==''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: `(n % 11) == 0''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: syntax error near unexpected
    token `==''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: `(n % 13) == 0''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: syntax error near unexpected
    token `==''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: `(n % 11) == 0''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: syntax error near unexpected
    token `==''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: `(n % 13) == 0''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: syntax error near unexpected
    token `==''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: `(n % 11) == 0''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: syntax error near unexpected
    token `==''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: `(n % 13) == 0''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: syntax error near unexpected
    token `==''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: `(n % 11) == 0''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: syntax error near unexpected
    token `==''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: `(n % 13) == 0''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: syntax error near unexpected
    token `==''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: `(n % 11) == 0''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: syntax error near unexpected
    token `==''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: `(n % 13) == 0''

    /tmp/tmpawyt4al2.sh: command substitution: line 15: syntax error near unexpected
    token `==''

    /tmp/tmpawyt4al2.sh: command substit'
  stdout: ''
  timestamp: 1660054902
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local num_digits num\n    IFS=- read\
    \ num_digits num || return\n    local num_times i\n    num_times=0\n    for i\
    \ in $(seq 0 $(( num_digits - 1 ))); do\n        if (( num % 11 == 1 )) && ((\
    \ num % 13 == 1 )); then\n            num_times=$(( $num_times + 1 ))\n      \
    \  fi\n        (( num / 11 ))\n        (( num / 13 ))\n    done\n    echo $num_times\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=49 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660054907
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  number=\"$1\"\n  result=0\n  # Convert\
    \ $number to a string.\n  number_str=\"$(echo \"$number\" | sed -e 's/^0*//' -e\
    \ 's/^\\.//' -e 's/^\\.//' -e 's/^\\.//' -e 's/^\\.//')\"\n  # Remove everything\
    \ but digits.\n  number=\"$(echo \"$number_str\" | tr -d '[:space:]')\"\n  # Remove\
    \ leading zeros.\n  number=\"$(echo \"$number\" | sed -e 's/^0*//')\"\n  # Add\
    \ 0 before the number if it does not have one.\n  if [ \"$number_str\" == \"1\"\
    \ ]; then\n    number=\"0$number\"\n  fi\n  # Count the number of times the digit\
    \ 7 appears.\n  for (( i=1; i<=9; i++ )); do\n    if [ \"$number\" == \"$i\" ];\
    \ then\n      result=$(( $result + 1 ))\n    fi\n  done\n  if [ \"$number\" ==\
    \ \"7\" ]; then\n    result=$(( $result + 1 ))\n  fi\n  if [ \"$number\" == \"\
    8\" ]; then\n    result=$(( $result + 1 ))\n  fi\n  if [ \"$number\" == \"9\"\
    \ ]; then\n    result=$(( $result + 1 ))\n  fi\n  # The number was divisible by\
    \ 11 or 13, return it.\n  if [ \"$result\" -gt 0 ]; then\n    echo \"$result\"\
    \n  else\n    echo \"0\"\n  fi\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    (( $1 )) && {\n        local n=$1\n\
    \        (( $n % 11 == 0 || $n % 13 == 0 )) && {\n            (( $n ))\n     \
    \   }\n        (( $n % 10 == 7 )) && {\n            (( $n ))\n        }\n    }\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  echo $1 | grep -E '^[0-9]+$' | sort -nr\
    \ | grep -E '^[0-9]*7[0-9]*$' | wc -l\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    while [ $1 -lt $2 ]; do\n        if\
    \ [ $(( $1 % 11)) -eq 0 -a $(( $1 % 13)) -eq 0 ]; then\n            echo \"0\"\
    \n        elif [ $(( $1 % 11)) -eq 0 -a $(( $1 % 13)) -eq 1 ]; then\n        \
    \    echo \"1\"\n        elif [ $(( $1 % 11)) -eq 0 -a $(( $1 % 13)) -eq 2 ];\
    \ then\n            echo \"2\"\n        elif [ $(( $1 % 11)) -eq 0 -a $(( $1 %\
    \ 13)) -eq 3 ]; then\n            echo \"3\"\n        elif [ $(( $1 % 11)) -eq\
    \ 0 -a $(( $1 % 13)) -eq 4 ]; then\n            echo \"4\"\n        elif [ $((\
    \ $1 % 11)) -eq 0 -a $(( $1 % 13)) -eq 5 ]; then\n            echo \"5\"\n   \
    \     elif [ $(( $1 % 11)) -eq 0 -a $(( $1 % 13)) -eq 6 ]; then\n            echo\
    \ \"6\"\n        elif [ $(( $1 % 11)) -eq 0 -a $(( $1 % 13)) -eq 7 ]; then\n \
    \           echo \"7\"\n        fi\n        shift\n    done\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnc_p5trb.sh: line 12: [: 50: unary operator expected

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=$1\n  local i=$((n/10))\n  local\
    \ remainder=$((n % 10))\n  local digits=(\n    0 1 2 3 4 5 6 7 8 9\n    0 1 2\
    \ 3 4 5 6 7 8 9\n    0 1 2 3 4 5 6 7 8 9\n    0 1 2 3 4 5 6 7 8 9\n    0 1 2 3\
    \ 4 5 6 7 8 9\n    0 1 2 3 4 5 6 7 8 9\n    0 1 2 3 4 5 6 7 8 9\n    0 1 2 3 4\
    \ 5 6 7 8 9\n  )\n\n  if [[ \"${digits[$i]}\" -eq 7 ]]; then\n    echo \"0\"\n\
    \  else\n    local j=$((i + 1))\n    local k=$((j % 10))\n    if [[ \"${digits[$j]}\"\
    \ -eq 7 ]]; then\n      echo \"$k\"\n    else\n      echo \"$k$((k + 1))\"\n \
    \   fi\n  fi\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=$1\n  local count=0\n\n  while\
    \ [ \"$n\" != 0 ]; do\n    if [[ ${n:0:1} == 7 ]]; then\n      (( count = count\
    \ + 1 ))\n    elif [[ ${n:0:1} == 1 ]]; then\n      (( count = count + 2 ))\n\
    \    elif [[ ${n:0:1} == 2 ]]; then\n      (( count = count + 4 ))\n    elif [[\
    \ ${n:0:1} == 3 ]]; then\n      (( count = count + 8 ))\n    elif [[ ${n:0:1}\
    \ == 4 ]]; then\n      (( count = count + 16 ))\n    elif [[ ${n:0:1} == 5 ]];\
    \ then\n      (( count = count + 32 ))\n    elif [[ ${n:0:1} == 6 ]]; then\n \
    \     (( count = count + 64 ))\n    elif [[ ${n:0:1} == 7 ]]; then\n      (( count\
    \ = count + 128 ))\n    elif [[ ${n:0:1} == 8 ]]; then\n      (( count = count\
    \ + 256 ))\n    elif [[ ${n:0:1} == 9 ]]; then\n      (( count = count + 512 ))\n\
    \    elif [[ ${n:0:1} == 0 ]]; then\n      (( count = count + 1024 ))\n    else\n\
    \      (( count = count + ${n:0:1} ))\n    fi\n    n=${n%??}\n  done\n  echo $count\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=66 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=64 encoding='utf-8'>
  timestamp: 1660054907
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=\"$1\"\n  local n1=$(echo $n |\
    \ cut -c -2)\n  local n2=$(echo $n | cut -c -4)\n  local n3=$(echo $n | cut -c\
    \ -6)\n  local n4=$(echo $n | cut -c -8)\n  local n5=$(echo $n | cut -c -10)\n\
    \  local n6=$(echo $n | cut -c -12)\n  local n7=$(echo $n | cut -c -14)\n  local\
    \ n8=$(echo $n | cut -c -16)\n  local n9=$(echo $n | cut -c -18)\n  local n10=$(echo\
    \ $n | cut -c -20)\n  local n11=$(echo $n | cut -c -22)\n  local n12=$(echo $n\
    \ | cut -c -24)\n  local n13=$(echo $n | cut -c -26)\n  local n14=$(echo $n |\
    \ cut -c -28)\n  local n15=$(echo $n | cut -c -30)\n  local n16=$(echo $n | cut\
    \ -c -32)\n  local n17=$(echo $n | cut -c -34)\n  local n18=$(echo $n | cut -c\
    \ -36)\n  local n19=$(echo $n | cut -c -38)\n  local n20=$(echo $n | cut -c -40)\n\
    \  local n21=$(echo $n | cut -c -42)\n  local n22=$(echo $n | cut -c -44)\n  local\
    \ n23=$(echo $n | cut -c -46)\n  local n24=$(echo $n | cut -c -48)\n  local n25=$(echo\
    \ $n | cut -c -50)\n  local n26=$(echo $n | cut -c -52)\n  local n27=$(echo $n\
    \ | cut -c -54)\n  local n28=$(echo $n | cut -c -56)\n  local n29=$(echo $n |\
    \ cut -c -58)\n  local n30=$(echo $n | cut -c -60)\n  local n31=$(echo $n | cut\
    \ -c -62)\n  local n32=$(echo $n | cut -c -64)\n  local n33=$(echo $n | cut -c\
    \ -66)\n  local n34=$(echo $n | cut -c -68)\n  local n35=$(echo $n | cut -c -70)\n\
    \  local n36=$(echo $n | cut -c -72)\n  local n37=$(echo $n | cut -c -74)\n  local\
    \ n38=$(echo $n | cut -c \n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn451j0a3.sh: line 50: unexpected EOF while looking for matching
    `)''

    /tmp/tmpn451j0a3.sh: line 70: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\tlocal n=$1\n\tlocal n1=$(printf \"%02d\"\
    \ $(( n % 11 ))); local n2=$(printf \"%02d\" $(( n % 13 ))); local n3=$n; local\
    \ n4=$(printf \"%02d\" $(( n % n % 11 ))); local n5=$(printf \"%02d\" $(( n %\
    \ n % 13 ))); local n6=$n; local n7=$(printf \"%02d\" $(( n % n % n % 11 )));\
    \ local n8=$(printf \"%02d\" $(( n % n % n % 13 ))); local n9=$n; local n10=$(printf\
    \ \"%02d\" $(( n % n % n % n % 11 ))); local n11=$(printf \"%02d\" $(( n % n %\
    \ n % n % 13 ))); local n12=$n; local n13=$(printf \"%02d\" $(( n % n % n % n\
    \ % n % 11 ))); local n14=$(printf \"%02d\" $(( n % n % n % n % 13 ))); local\
    \ n15=$(printf \"%02d\" $(( n % n % n % n % n % 11 ))); local n16=$(printf \"\
    %02d\" $(( n % n % n % n % n % 13 ))); local n17=$(printf \"%02d\" $(( n % n %\
    \ n % n % n % n % 11 ))); local n18=$(printf \"%02d\" $(( n % n % n % n % n %\
    \ 13 ))); local n19=$(printf \"%02d\" $(( n % n % n % n % n % n % 11 ))); local\
    \ n20=$(printf \"%02d\" $(( n % n % n % n % n % 13 ))); local n21=$(printf \"\
    %02d\" $(( n % n % n % n % n % n % 11 ))); local n22=$(printf \"%02d\" $(( n %\
    \ n % n % n % n % n % 13 ))); local n23=$(printf \"%02d\" $(( n % n % n % n %\
    \ n % n % n % 11 ))); local n24=$(printf \"%02d\" $(( n % n % n % n % n % n %\
    \ 13 ))); local n25=$(printf \"%02d\" $(( n % n % n % n % n % n % n % 11 )));\
    \ local n26=$(printf \"%02d\" $(( n % n % n % n % n % n % 13 ))); local n27=$(printf\
    \ \"%02d\" $(( n % n % n % n % n % n % n % 11 ))); local n28=$(printf \"%02d\"\
    \ $(( n % n % n % n % n % n % 13 ))); local n29=$(printf \"%02d\" \n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0_3d21qg.sh: line 13: unexpected EOF while looking for matching
    `)''

    /tmp/tmp0_3d21qg.sh: line 33: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=$1\n  local result\n  result=0\n\
    \  for (( i=1; i<n; i++ )); do\n    if (( i % 13 == 0 )); then\n      result=$((result+1))\n\
    \    fi\n    if (( i % 11 == 0 )); then\n      result=$((result+1))\n    fi\n\
    \  done\n  echo $result\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\"\
    ) = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\"\
    ) = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\"\
    ) = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    [[ $1 =~ ^[0-9]+$ ]] || return 0\n \
    \   if [[ \"$1\" -le $2 ]]; then\n        local i\n        local sum\n       \
    \ local count\n        for i in $(seq 1 $1); do\n            ((sum += $((i % 11)))\
    \ == 7) || return $count\n            ((sum += $((i % 13))) == 7) || return $count\n\
    \            ((count++))\n        done\n        return $count\n    fi\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps0j3l4sj.sh: line 18: syntax error near unexpected token `==''

    /tmp/tmps0j3l4sj.sh: line 18: `            ((sum += $((i % 11))) == 7) || return
    $count''

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    echo $(( $(echo $1 | grep -on\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpf13ct40i.sh: line 28: unexpected EOF while looking for matching
    `"''

    /tmp/tmpf13ct40i.sh: line 32: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local i\n  local x=0\n  for (( i=1; i<=$1;\
    \ i++ )); do\n    # Loop until we run out of i\n    while [ \"$i\" -lt \"$2\"\
    \ ]; do\n      # Loop until we run out of j\n      for (( j=0; j<7; j++ )); do\n\
    \        # Loop until we run out of z\n        for (( z=0; z<3; z++ )); do\n \
    \         # Don't show zero at all\n          if [[ $((i%11)) -ne 0 ]]; then\n\
    \            # Don't show multiples of 7\n            if [[ $((i%13)) -ne 0 ]];\
    \ then\n              printf \"$i $j $z\"\n            fi\n          fi\n    \
    \    done\n      done\n      # Loop until we run out of j\n      for (( j=0; j<7;\
    \ j++ )); do\n        # Loop until we run out of z\n        for (( z=0; z<3; z++\
    \ )); do\n          # Don't show zero at all\n          if [[ $((i%11)) -eq 0\
    \ ]]; then\n            # Don't show multiples of 7\n            if [[ $((i%13))\
    \ -eq 0 ]]; then\n              printf \"$i $j $z\"\n            fi\n        \
    \  fi\n        done\n      done\n      x=1\n    done\n  done\n  [[ -n $x ]] &&\
    \ echo \"$x\" || echo \"0\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [: : integer expression expected

    /tmp/tmpjoa8ekce.sh: line 16: [:'
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n   awk '{ if (($1%11==0) && ($1%13==0))\
    \ print $0; else if (($1%11!=0) || ($1%13!=0)) print \"0\"; else print \"1\" }'\
    \ <<< \"$1\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=$1\n  local d=$2\n  local i\n\
    \  local j\n\n  echo \"$n\" | (\n    while read -r i && read -r j ; do\n     \
    \ [ $(( i / d )) -eq 0 ] && echo $(( j % 11 )) || echo $(( j % 13 ))\n    done\n\
    \  )\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n\
    \    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n\
    \    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\"\
    \ ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\"\
    ) = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=${1:-0}\n    local count=0\n\
    \    while [ $n -gt 0 ]\n    do\n        local n1=$(echo \"$n\" | awk '{print\
    \ $1}')\n        if (( $(n1 mod 11) == 0 ))\n        then\n            (( $(n1\
    \ mod 13) == 0 )) && count=$(( count + 1 ))\n        fi\n        (( $(n1 mod 11)\
    \ != 0 )) && count=$(( count + 1 ))\n        (( $(n1 mod 13) != 0 )) && count=$((\
    \ count + 1 ))\n        n=$(( n - 1 ))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb0b4h6_y.sh: line 17: n1: command not found

    /tmp/tmpb0b4h6_y.sh: line 17: ((: == 0 : syntax error: operand expected (error
    token is "== 0 ")

    /tmp/tmpb0b4h6_y.sh: line 21: n1: command not found

    /tmp/tmpb0b4h6_y.sh: line 21: ((: != 0 : syntax error: operand expected (error
    token is "!= 0 ")

    /tmp/tmpb0b4h6_y.sh: line 22: n1: command not found

    /tmp/tmpb0b4h6_y.sh: line 22: ((: != 0 : syntax error: operand expected (error
    token is "!= 0 ")

    /tmp/tmpb0b4h6_y.sh: line 17: n1: command not found

    /tmp/tmpb0b4h6_y.sh: line 17: ((: == 0 : syntax error: operand expected (error
    token is "== 0 ")

    /tmp/tmpb0b4h6_y.sh: line 21: n1: command not found

    /tmp/tmpb0b4h6_y.sh: line 21: ((: != 0 : syntax error: operand expected (error
    token is "!= 0 ")

    /tmp/tmpb0b4h6_y.sh: line 22: n1: command not found

    /tmp/tmpb0b4h6_y.sh: line 22: ((: != 0 : syntax error: operand expected (error
    token is "!= 0 ")

    /tmp/tmpb0b4h6_y.sh: line 17: n1: command not found

    /tmp/tmpb0b4h6_y.sh: line 17: ((: == 0 : syntax error: operand expected (error
    token is "== 0 ")

    /tmp/tmpb0b4h6_y.sh: line 21: n1: command not found

    /tmp/tmpb0b4h6_y.sh: line 21: ((: != 0 : syntax error: operand expected (error
    token is "!= 0 ")

    /tmp/tmpb0b4h6_y.sh: line 22: n1: command not found

    /tmp/tmpb0b4h6_y.sh: line 22: ((: != 0 : syntax error: operand expected (error
    token is "!= 0 ")

    /tmp/tmpb0b4h6_y.sh: line 17: n1: command not found

    /tmp/tmpb0b4h6_y.sh: line 17: ((: == 0 : syntax error: operand expected (error
    token is "== 0 ")

    /tmp/tmpb0b4h6_y.sh: line 21: n1: command not found

    /tmp/tmpb0b4h6_y.sh: line 21: ((: != 0 : syntax error: operand expected (error
    token is "!= 0 ")

    /tmp/tmpb0b4h6_y.sh: line 22: n1: command not found

    /tmp/tmpb0b4h6_y.sh: line 22: ((: != 0 : syntax error: operand expected (error
    token is "!= 0 ")

    /tmp/tmpb0b4h6_y.sh: line 17: n1: command not found

    /tmp/tmpb0b4h6_y.sh: line 17: ((: == 0 : syntax error: operand expected (error
    token is "== 0 ")

    /tmp/tmpb0b4h6_y.sh: line 21: n1: command not found

    /tmp/tmpb0b4h6_y.sh: line 21: ((: != 0 : syntax error: oper'
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local number=$1\n  local fizz_count=0;\n\
    \  local fizz_num;\n  local fizz_sum;\n  local fizz_list=(1 3 5 7 9);\n  local\
    \ fizz_count;\n  local fizz_num;\n  local fizz_sum;\n  local fizz_list=(1 3 5\
    \ 7 9);\n  local fizz_count;\n  local fizz_num;\n  local fizz_sum;\n  local fizz_list=(1\
    \ 3 5 7 9);\n  local fizz_count;\n  local fizz_num;\n  local fizz_sum;\n  local\
    \ fizz_list=(1 3 5 7 9);\n  local fizz_count;\n  local fizz_num;\n  local fizz_sum;\n\
    \  local fizz_list=(1 3 5 7 9);\n  local fizz_count;\n  local fizz_num;\n  local\
    \ fizz_sum;\n  local fizz_list=(1 3 5 7 9);\n  local fizz_count;\n  local fizz_num;\n\
    \  local fizz_sum;\n  local fizz_list=(1 3 5 7 9);\n  local fizz_count;\n  local\
    \ fizz_num;\n  local fizz_sum;\n  local fizz_list=(1 3 5 7 9);\n  local fizz_count;\n\
    \  local fizz_num;\n  local fizz_sum;\n  local fizz_list=(1 3 5 7 9);\n  local\
    \ fizz_count;\n  local fizz_num;\n  local fizz_sum;\n  local fizz_list=(1 3 5\
    \ 7 9);\n  local fizz_count;\n  local fizz_num;\n  local fizz_sum;\n  local fizz_list=(1\
    \ 3 5 7 9);\n  local fizz_count;\n  local fizz_num;\n  local fizz_sum;\n  local\
    \ fizz_list=(1 3 5 7 9);\n  local fizz_count;\n  local fizz_num;\n  local fizz_sum;\n\
    \  local fizz_list=(1 3 5 7 9);\n  local fizz_count;\n  local fizz_num;\n  local\
    \ fizz_sum;\n  local fizz_list=(1 3 5 7 9);\n  local fizz_count;\n  local fizz_num;\n\
    \n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[\
    \ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n   \
    \ [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n\
    \    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") =\
    \ \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n   local n=$1\n   local res\n   while ((n\
    \ > 0)); do\n      res=0\n      while ((n % 11 == 0)); do\n         n=$(expr $n\
    \ \\/ 11)\n         res=$((res + 1))\n      done\n      while ((n % 13 == 0));\
    \ do\n         n=$(expr $n \\/ 13)\n         res=$((res + 1))\n      done\n  \
    \    printf \"$res\\n\"\n   done\n   echo \"$res\"\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=9 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=41 encoding='utf-8'>
  timestamp: 1660054907
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  # Initialize result variable to 0\n  local\
    \ count=0\n  # Iterate over all integers less than $1 which are divisible by 11\
    \ or 13\n  for (( num=$1; num<=$1; num+=($1 % 11); )); do\n    # If the remainder\
    \ after dividing by 11 is equal to 7, increment the count\n    if [ $((num % 11))\
    \ = $7 ]; then\n      count=$(($count+1))\n    fi\n    # If the remainder after\
    \ dividing by 13 is equal to 7, increment the count\n    if [ $((num % 13)) =\
    \ $7 ]; then\n      count=$(($count+1))\n    fi\n  done\n  # Return the number\
    \ of times the digit 7 appears in integers less than $1 which are divisible by\
    \ 11 or 13\n  echo $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp48jeih6g.sh: line 15: syntax error: `;'' unexpected

    /tmp/tmp48jeih6g.sh: line 15: syntax error: `(( num=$1; num<=$1; num+=($1 % 11);
    ))''

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  [ \"$1\" -gt 0 ] && [ \"${1/7}\" -gt 0\
    \ ] && [ \"${1/11}\" -eq 0 ] || [ \"${1/13}\" -eq 0 ]\n}\n\ncandidate() {\n  \
    \  fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"\
    0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"\
    3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") =\
    \ \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\"\
    ) = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=\"$1\"\n    local nDigits=${#n}\n\
    \    local nBuzzers=0\n    while [ \"$n\" -ge 0 ]; do\n        case \"$n\" in\n\
    \            0)\n                # This number ends in 0.\n                nBuzzers=$((nBuzzers+1))\n\
    \                ;;\n            1)\n                # This number ends in 1.\n\
    \                nBuzzers=$((nBuzzers+1))\n                ;;\n            2)\n\
    \                # This number ends in 2.\n                nBuzzers=$((nBuzzers+1))\n\
    \                ;;\n            3)\n                # This number ends in 3.\n\
    \                nBuzzers=$((nBuzzers+1))\n                ;;\n            4)\n\
    \                # This number ends in 4.\n                nBuzzers=$((nBuzzers+1))\n\
    \                ;;\n            5)\n                # This number ends in 5.\n\
    \                nBuzzers=$((nBuzzers+1))\n                ;;\n            6)\n\
    \                # This number ends in 6.\n                nBuzzers=$((nBuzzers+1))\n\
    \                ;;\n            7)\n                # This number ends in 7.\n\
    \                nBuzzers=$((nBuzzers+1))\n                ;;\n            8)\n\
    \                # This number ends in 8.\n                nBuzzers=$((nBuzzers+1))\n\
    \                ;;\n            9)\n                # This number ends in 9.\n\
    \                nBuzzers=$((nBuzzers+1))\n                ;;\n            *)\n\
    \                # We don't know what this number is.  So just output zero and\n\
    \                # continue.\n                # The nDigits variable will be set\
    \ to the length of the input string,\n                # minus the number of digits\
    \ that this number ends in.\n                printf \"0\\n\"\n               \
    \ ;;\n        esac\n        n=\"${n%?}\"\n    done\n    printf \"$nBuzzers\"\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: '/tmp/tmpx1ai1xau.sh: line 15: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=$1\n    local num\n    local\
    \ i\n    for i in {1..n}; do\n        num=$(expr $i % 11)\n        case \"$num\"\
    \ in\n            0 ) echo $i;;\n            7 ) echo $i;;\n            8 ) echo\
    \ $i;;\n            9 ) echo $i;;\n            *) echo $i;;\n        esac\n  \
    \  done\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n\
    \    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n\
    \    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\"\
    \ ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\"\
    ) = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'expr: non-integer argument

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local i fizz_buzz_count digits\n  IFS=$'\\\
    n'\n  digits=$(echo \"$1\" | cut -d '-' -f 1)\n  fizz_buzz_count=0\n  for (( i=1;\
    \ i<=$((${#digits}-1)); i++ )); do\n    if [ ${digits:i:1} = 7 ]; then\n     \
    \ fizz_buzz_count=$((fizz_buzz_count+1))\n    fi\n  done\n  echo $fizz_buzz_count\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n i\n    n=${1:-10}\n    for i\
    \ in $(seq 1 \"$n\"); do\n        [[ $((i % 11 == 0)) ]] && echo \"$i\" || echo\
    \ \"$(( i % 13 + 1 ))\"\n    done\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local i\n  i=\"$1\"\n  echo \"$i\" | sed\
    \ -r 's/^([0-9]+)/\\11/'\n  echo \"$i\" | sed -r 's/^([0-9]+)/\\13/'\n  echo \"\
    $i\" | sed -r 's/^([0-9]+)/\\17/'\n  echo \"$i\" | sed -r 's/^([0-9]+)/\\33/'\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 16: invalid reference \3 on `s'' command''s
    RHS

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=$1\n  local result\n  result=0\n\
    \  for i in $(seq 1 $n); do\n    local digit=${n/$i}\n    if (( $i % 11 == 0 ));\
    \ then\n      if (( $digit % 13 == 0 )); then\n        result=$(( result + 1 ))\n\
    \      else\n        result=$(( result + 1 ))\n      fi\n    else\n      if ((\
    \ $digit % 11 == 0 )); then\n        result=$(( result + 1 ))\n      else\n  \
    \      result=$(( result + 1 ))\n      fi\n    fi\n  done\n  echo $result\n}\n\
    \ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpm6ji39ko.sh: line 24: ((: % 11 == 0 : syntax error: operand expected
    (error token is "% 11 == 0 ")

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local num=$1\n    local num2=1\n   \
    \ local output=$( printf \"%d\\t%s\\n\" \"${num%?}\" \"$output\" )\n\n    while\
    \ [ $num2 -lt $num ]; do\n        if [ \"$num\" -eq \"$num2\" ]; then\n      \
    \      output=$( printf \"%d\\t%s\\n\" \"${num%?}\" \"$output\" )\n          \
    \  (( ++num2 ))\n        else\n            if [ $num2 -eq 11 ]; then\n       \
    \         output=$( printf \"%d\\t%s\\n\" \"${num%?}\" \"$output\" )\n       \
    \     else\n                if [ $num2 -eq 13 ]; then\n                    output=$(\
    \ printf \"%d\\t%s\\n\" \"${num%?}\" \"$output\" )\n                else\n   \
    \                 output=$( printf \"%d\\t%s\\n\" \"${num%?}\" \"$output\" )\n\
    \                fi\n            fi\n        fi\n    done\n    echo $output\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=54 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=32 encoding='utf-8'>
  timestamp: 1660054907
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  IFS=+\n  for x in $* ; do\n    echo $(expr\
    \ $(expr $x % 11))\n  done\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\tif [ $# -lt 1 ]; then\n\t\techo \"Usage:\
    \ $0 <integer>\"\n\t\texit 1\n\tfi\n\tlocal num=$1\n\tlocal counter=0\n\twhile\
    \ [ $num -lt $1 ]; do\n\t\tif [ \"$(echo \"$num % 11\" |bc) -eq 0 -a \"$(echo\
    \ \"$num % 13\" |bc) -eq 0 ]; then\n\t\t\tcounter=$(($counter+1))\n\t\tfi\n\t\t\
    num=$(($num+1))\n\tdone\n\techo $counter\n}\n\ncandidate() {\n    fizz_buzz \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[\
    \ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[\
    \ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n  \
    \  [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\"\
    \ ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=$1\n    local count=0\n    #\
    \ Loop through all integers less than n\n    for (( i=n ; i<=n+10 ; i+=11 )) ;\
    \ do\n        if [ $(( i % 11 % 13 )) -eq 0 ]; then\n            # If n is divisible\
    \ by 11 and 13, add one to count\n            (( count++ ))\n        fi\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\"\
    ) = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\"\
    ) = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\"\
    ) = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=$1\n  local fizz_buzz_count=0\n\
    \  while [ $n -ge 1 ]; do\n    if [[ $((n%11)) -eq 0 ]]; then\n      if [[ $((n%13))\
    \ -eq 0 ]]; then\n        fizz_buzz_count=$((fizz_buzz_count + 1))\n      fi\n\
    \    fi\n    n=$((n-1))\n  done\n  echo $fizz_buzz_count\n}\n\ncandidate() {\n\
    \    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") =\
    \ \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\")\
    \ = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=\"${1:?Variable 'n' must be\
    \ set}\"\n    local count=0\n    while [[ ${n} -gt 0 ]]; do\n        if (( ${n}\
    \ % 11 == 0 || ( ${n} % 13 == 0 )); then\n            ((count++))\n        fi\n\
    \        n=$(( ${n} / 10 ))\n    done\n    printf \"%s\\n\" \"${count}\"\n}\n\n\
    candidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpqo6ncmmy.sh: line 15: syntax error near unexpected token `then''

    /tmp/tmpqo6ncmmy.sh: line 15: `        if (( ${n} % 11 == 0 || ( ${n} % 13 ==
    0 )); then''

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=\"$1\"\n  while [ $n -gt 0 ];\
    \ do\n    local c=$(( (n % 11) == 7 && n / 11 > 13 && n / 13 <= 5 ) ? 1 : 0)\n\
    \    [[ $n -gt 0 ]] && echo \"$c\"\n    local m=$(( (n - $c) * ($c > 0 && n %\
    \ 11 == 1) ? $c + 1 : 0))\n    n=$m\n  done\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp74fjsa0v.sh: command substitution: line 14: syntax error near unexpected
    token `==''

    /tmp/tmp74fjsa0v.sh: command substitution: line 14: `( (n % 11) == 7 && n / 11
    > 13 && n / 13 <= 5 ) ? 1 : 0''

    /tmp/tmp74fjsa0v.sh: line 16: (n - ) * ( > 0 && n % 11 == 1) ?  + 1 : 0: syntax
    error: operand expected (error token is ") * ( > 0 && n % 11 == 1) ?  + 1 : 0")

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    [ $1 -le $2 ] && echo \"$1\" || echo\
    \ \"$2\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n\
    \    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n\
    \    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\"\
    \ ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\"\
    ) = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpc_1b6ldl.sh: line 12: [: 50: unary operator expected

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=$1\n    local count=0\n    if\
    \ [ \"$n\" -eq \"0\" ]; then\n        return 0\n    elif [ \"$n\" -ge \"0\" ]\
    \ && [ \"$n\" -le \"1000\" ]; then\n        count=$((count+1))\n    fi\n    if\
    \ [ \"$n\" -eq \"1000\" ]; then\n        count=$((count+1))\n    fi\n    if [\
    \ \"$n\" -ge \"1001\" ] && [ \"$n\" -le \"9999\" ]; then\n        count=$((count+1))\n\
    \    fi\n    if [ \"$n\" -ge \"10000\" ] && [ \"$n\" -le \"99999\" ]; then\n \
    \       count=$((count+1))\n    fi\n    if [ \"$n\" -ge \"100000\" ] && [ \"$n\"\
    \ -le \"999999\" ]; then\n        count=$((count+1))\n    fi\n    if [ \"$n\"\
    \ -ge \"1000000\" ] && [ \"$n\" -le \"9999999\" ]; then\n        count=$((count+1))\n\
    \    fi\n    if [ \"$n\" -ge \"10000000\" ] && [ \"$n\" -le \"999999999\" ]; then\n\
    \        count=$((count+1))\n    fi\n    if [ \"$n\" -ge \"100000000\" ] && [\
    \ \"$n\" -le \"99999999999\" ]; then\n        count=$((count+1))\n    fi\n   \
    \ if [ \"$n\" -ge \"1000000000\" ] && [ \"$n\" -le \"999999999999\" ]; then\n\
    \        count=$((count+1))\n    fi\n    if [ \"$n\" -ge \"100000000000\" ] &&\
    \ [ \"$n\" -le \"999999999999999\" ]; then\n        count=$((count+1))\n    fi\n\
    \    if [ \"$n\" -ge \"100000000000000\" ] && [ \"$n\" -le \"999999999999999999\"\
    \ ]; then\n        count=$((count+1))\n    fi\n    if [ \"$n\" -ge \"1000000000000000000\"\
    \ ] && [ \"$n\" -le \"999999999999999999999\" ]; then\n        count=$((count+1))\n\
    \    fi\n    if [ \"$n\" -ge \"100000000000000000000\" ] && [ \"$n\" -le \"99999999999999999999988\"\
    \ ]; then\n        count=$((count+1))\n    fi\n    if [ \"$n\" -ge \"1000000000000000000000\"\
    \ ] && [ \"$n\" -le \"99999999999999999999987\" ]; then\n        count=$((count+1))\n\
    \    fi\n    if [ \"$n\" -ge \"10000000000000000000000\" ] && [ \"$n\" -le \"\
    99999999999999999999986\" ]; then\n        count=$((count+1))\n    fi\n    if\
    \ [ \"$n\" -ge \"100000000000000000000000\" ] && [ \"$n\" -le \"99999999999999999999985\"\
    \ ]; then\n        count=$((count+1))\n    fi\n    if [ \"$n\" -\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1_6s7qb9.sh: line 65: syntax error near unexpected token `}''

    /tmp/tmp1_6s7qb9.sh: line 65: `}''

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  if [ \"$1\" -ge \"0\" ] && [ \"$1\" -le\
    \ \"100\" ]\n    then n=$1; n=\"$((n-1))\"\n        y=$((n%11))\n        if [\
    \ \"$y\" = \"0\" ]\n          then x=$((n%13))\n              if [ \"$x\" = \"\
    0\" ]\n                then echo \"$n\"\n                else echo \"$((n%11))$((n%13))\"\
    \n                fi\n              elif [ \"$x\" = \"1\" ]\n                then\
    \ echo \"$((n%11))$n\"\n              fi\n          elif [ \"$y\" = \"1\" ]\n\
    \            then echo \"$n$((n%11))\"\n          fi\n    fi\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg_8y22oz.sh: line 27: syntax error near unexpected token `fi''

    /tmp/tmpg_8y22oz.sh: line 27: `    fi''

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  if [ $1 -lt 50 ]\n  then\n    if [ $1\
    \ -eq 7 ]\n    then\n      echo \"0\"\n    elif [ $1 -eq 13 ]\n    then\n    \
    \  echo \"2\"\n    elif [ $1 -eq 17 ]\n    then\n      echo \"3\"\n    elif [\
    \ $1 -eq 19 ]\n    then\n      echo \"5\"\n    elif [ $1 -eq 23 ]\n    then\n\
    \      echo \"7\"\n    elif [ $1 -eq 29 ]\n    then\n      echo \"9\"\n    fi\n\
    \  fi\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n\
    \    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n\
    \    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\"\
    \ ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\"\
    ) = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local N=$1\n  echo $((N % 11))\n  echo\
    \ $((N % 13))\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    # A hacky way to get around problems\
    \ with the shebang\n    # in the way the script is run\n    sed -e 's/^#!/#/'\
    \ -e 's/^#//' ${BASH_SOURCE[0]} \"$@\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: can''t read 50: No such file or directory

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local number=\"$1\"\n  local i=0\n  while\
    \ (( i < 10 )); do\n    if (( number % 11 == 0 )); then\n      echo \"$i\"\n \
    \     return\n    elif (( number % 13 == 0 )); then\n      echo \"$i\"\n     \
    \ return\n    fi\n    (( i++ ))\n  done\n  echo \"$i\"\n}\n\ncandidate() {\n \
    \   fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") =\
    \ \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\")\
    \ = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n digit\n  n=\"$1\"\n  if [ $((\
    \ n % 11 )) -eq 0 -o $(( n % 13 )) -eq 0 ]; then\n    echo 0\n  elif [ $(( n %\
    \ 11 )) -eq 0 ]; then\n    echo 0\n  elif [ $(( n % 13 )) -eq 0 ]; then\n    echo\
    \ 1\n  else\n    echo 2\n  fi\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\t(( n )=\"${1:?Number of arguments must\
    \ be an integer greater than zero}\")\n\t(( divisible_by_11_or_13 )=\"${n:?Number\
    \ must be divisible by 11 or 13}\")\n\t(( digit_7_count)=\"$(echo \"$n\" | tr\
    \ -d '\\0' | wc -w)\"\n\t(( fizz_count)=\"$(echo \"$n\" | awk 'BEGIN{a=1;for(i=1;i<100;i++)if(a%i==0){print\
    \ i;a++}}END{print a}')\")\n\t(( fizzz_count)=\"$(echo \"$n\" | awk 'BEGIN{a=1;for(i=1;i<1000;i++)if(a%i==0){print\
    \ i;a++}}END{print a}')\")\n\t(( buzz_count)=\"$(echo \"$n\" | awk 'BEGIN{a=1;for(i=1;i<100000;i++)if(a%i==0){print\
    \ i;a++}}END{print a}')\")\n\t(( fizzbuzz_count)=\"$(echo \"$n\" | awk 'BEGIN{a=1;for(i=1;i<10000000;i++)if(a%i==0){print\
    \ i;a++}}END{print a}')\")\n\n\t(( fizzbuzz_count ))=\"${fizzbuzz_count:-$(( $fizzbuzz_count\
    \ % 11 ))}\"\n\n\techo \"${digit_7_count:-$(( $digit_7_count % 11 ))}\"\n}\n\n\
    candidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: "/tmp/tmpu2tgfdus.sh: line 12: syntax error near unexpected token `=\"${1:?Number\
    \ of arguments must be an integer greater than zero}\"'\n/tmp/tmpu2tgfdus.sh:\
    \ line 12: `\t(( n )=\"${1:?Number of arguments must be an integer greater than\
    \ zero}\")'\n"
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=$1; shift;\n    local f\n  \
    \  while [ $n -lt 10 ]; do\n        if (( n % 11 )); then f=\"$f${n}0\"; fi\n\
    \        if (( n % 13 )); then f=\"$f${n}2\"; fi\n        n=$(( n / 11 ))\n  \
    \  done\n    echo \"$f\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\"\
    ) = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\"\
    ) = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\"\
    ) = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\tlocal num_digits\n\tnum_digits=$2\n\t\
    if [ $1 -lt 10 ]\n\tthen\n\t\tprintf \"%02d\" $1 | awk '{for(i=1;i<=NF;i++)if($i==\"\
    7\") count++}END{print count}'\n\telse\n\t\techo \"$1\" | awk '{for(i=1;i<=NF;i++)if($i==\"\
    7\") count++}END{print count}'\n\tfi\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local number=$1\n    local sum=0\n \
    \   local digits=$(( ${number//} % 10 ))\n    local remainder=$(( ${number%//}\
    \ % 10 ))\n    local remainders=$(( ${number//} % 10 ))\n    while (( ${digits//}\
    \ != 7 )); do\n        (( sum = sum + 1 ))\n        remainder=$(( ${remainder}\
    \ + 1 ))\n        remainders=$(( ${remainders} + 1 ))\n        (( number= ${number///\
    \ } ))\n        (( digits= ${numbers//} % 10 ))\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=53 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=27 encoding='utf-8'>
  timestamp: 1660054907
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=$1\n  local i\n  for i in $(seq\
    \ 1 $n); do\n    if [[ $((i % 11 == 0)) && ($((i % 13 == 0)) ]]; then\n      echo\
    \ $i\n    fi\n  done\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\"\
    ) = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\"\
    ) = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\"\
    ) = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfzzah8yl.sh: line 15: unexpected token `]]'', expected `)''

    /tmp/tmpfzzah8yl.sh: line 15: syntax error near `;''

    /tmp/tmpfzzah8yl.sh: line 15: `    if [[ $((i % 11 == 0)) && ($((i % 13 == 0))
    ]]; then''

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=$1\n    local n2=$(expr $n \\\
    % 11)\n    local n3=$(expr $n \\% 13)\n    if [ ${n2} -eq 0 ] || [ ${n3} -eq 0\
    \ ]; then\n        echo \"$n\"\n        return 0\n    else\n        echo \"$n\"\
    \n        return 1\n    fi\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    echo \"$1\" | sed 's/\\([0-9]*\\)7/\\\
    11/'\n    echo \"$1\" | sed 's/\\([0-9]*\\)7/\\13/'\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=$1\n  local num1=$(( $n / 11 ))\n\
    \  local num2=$(( $n / 13 ))\n  local num3=$(( $n - $num1 - $num2 ))\n  echo $((\
    \ $num3 ))\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  x=$1\n  y=$((x/11))\n  if (( x%11 ));\
    \ then\n    y=$((y/11))\n  fi\n  if (( x%13 )); then\n    y=$((y/13))\n  fi\n\
    \  echo $((y))\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    # Make sure arguments are integers\n\
    \    local n=$1; shift\n    if [ \"${n%%?}\" != \"0\" ]; then\n        # Only\
    \ take the first argument\n        n=$1; shift\n    fi\n\n    # Initialize output\
    \ variable\n    local output=0\n\n    # Check for divisible by 11 or 13\n    local\
    \ num=$(( (n*3-1) / 3 ))\n    if (( ${num%11} || ${num%13} )) ; then\n       \
    \ # Check if number is a multiple of 3\n        if (( ${num} == 3 )); then\n \
    \           # Fizz\n            output=$(( ${output} * 3 ))\n        fi\n    \
    \    # Check if number is a multiple of 7\n        if (( ${num} == 7 )); then\n\
    \            # Buzz\n            output=$(( ${output} * 7 ))\n        fi\n   \
    \     # Check if number is a multiple of 11\n        if (( ${num} == 11 )); then\n\
    \            # FizzBuzz\n            output=$(( ${output} * 11 ))\n        fi\n\
    \        # Check if number is a multiple of 13\n        if (( ${num} == 13 ));\
    \ then\n            # FizzBuzz\n            output=$(( ${output} * 13 ))\n   \
    \     fi\n    fi\n    echo \"${output}\"\n}\n\ncandidate() {\n    fizz_buzz \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[\
    \ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[\
    \ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n  \
    \  [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\"\
    \ ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    echo $((($1 % ($1 % 11) == 0 )) | $((($1\
    \ % ($1 % 13) == 0 )) | $((($1 % 7) == 0 )) ))\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmfkstayh.sh: line 12: 0: command not found

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    echo $(grep -o '7' <<< $1 |wc -l)\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    [[ \"$1\" =~ ^[0-9]+$ ]] || return 1\n\
    \    # Sleep to allow the number to be fully processed, because we don't want\
    \ it processing the first value\n    sleep 0.0001\n    # Get the number of times\
    \ the digit 7 appears in the input\n    count=$(echo \"$1\" | sed -n 's/\\<7\\\
    >//gp' | wc -l)\n    [[ $count -eq 0 ]] || return $count\n    # Loop through all\
    \ values up to and including the first value less than or equal to the given argument\n\
    \    for(( i=0; i<$1; i++ )); do\n        # We get the number as a string so we\
    \ can compare it with the divisible numbers\n        number=\"${1:$i:1}\"\n  \
    \      # Do the divisibility check\n        if [[ $number == $(echo \"$number/11\"\
    \ | bc -l | tr -d \"\\n\") ]]; then\n            echo \"$count 0\"\n         \
    \   return $count\n        elif [[ $number == $(echo \"$number/13\" | bc -l |\
    \ tr -d \"\\n\") ]]; then\n            echo \"$count 1\"\n            return $count\n\
    \        fi\n    done\n    # Not found\n    return 0\n}\n\ncandidate() {\n   \
    \ fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"\
    0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"\
    3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") =\
    \ \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\"\
    ) = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local -r number=\"$1\"\n  [[ \"$number\"\
    \ =~ ^[0-9]+$ ]] || return 1\n  local -a digits=(${number//[!0-9]/})\n  local\
    \ count=0\n  for (( i = 0; i < ${#digits[@]} - 1; i++ )); do\n    if (( ${digits[i]}\
    \ % 11 == 0 )); then\n      count=$(( count+1 ))\n    elif (( ${digits[i]} % 13\
    \ == 0 )); then\n      count=$(( count+1 ))\n    else\n      count=$(( count+0\
    \ ))\n    fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    fizz_buzz \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[\
    \ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[\
    \ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n  \
    \  [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\"\
    \ ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\tIFS=\n\tlocal n=$1\n\tlocal i=0\n\twhile\
    \ [[ ${n} != 0 ]]; do\n\t\tlocal a=$((${n} % 11))\n\t\tif [[ $a == 7 ]]; then\n\
    \t\t\techo \"${i}\"\n\t\tfi\n\t\tn=$(echo \"${n}\" | awk -F. '{print $1}')\n\t\
    \ti=$(( ${i} + 1 ))\n\tdone\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=65 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=47 encoding='utf-8'>
  timestamp: 1660054907
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\tlocal n i\n\tn=$1\n\ti=\"8\"\n\twhile\
    \ [ \"$i\" -le \"$n\" ];do\n\t\tif [ \"$i\" -ge \"11\" ] && [ \"$i\" -le \"13\"\
    \ ]; then\n\t\t\ti=$(expr $i \\* $i)\n\t\telse\n\t\t\techo \"$i\"\n\t\tfi\n\t\
    done\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n\
    \    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n\
    \    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\"\
    \ ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\"\
    ) = \"8026\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=58 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=52 encoding='utf-8'>
  timestamp: 1660054908
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\tlocal digit=$1\n\tlocal digit2\n\tlocal\
    \ digit3\n\tlocal digit4\n\tlocal digit5\n\tlocal digit6\n\tlocal digit7\n\tlocal\
    \ digit8\n\tlocal digit9\n\tlocal number\n\tlocal count\n\n\tdigit2=$(( 10#$digit\
    \ ))\n\tdigit3=$(( 10#$digit2 ))\n\tdigit4=$(( 10#$digit3 ))\n\tdigit5=$(( 10#$digit4\
    \ ))\n\tdigit6=$(( 10#$digit5 ))\n\tdigit7=$(( 10#$digit6 ))\n\tdigit8=$(( 10#$digit7\
    \ ))\n\tdigit9=$(( 10#$digit8 ))\n\tnumber=$digit9\n\tcount=0\n\twhile (( number\
    \ >= 10 )); do\n\t\t(( number %= 10 ))\n\t\t(( ++count ))\n\tdone\n\tprintf '%d'\
    \ $count\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n\
    \    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n\
    \    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\"\
    \ ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\"\
    ) = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local -n result=$1\n    local digits=$2\n\
    \    local digit7=7\n    local times=0\n    local i\n    local j\n    for ((i=0;\
    \ i<${#digits}; i++)); do\n        (( times *= (10#$digits % 3)) )\n        ((\
    \ times %= 11 ))\n        (( times += 1+$digit7 == ${digits#$i} ))\n    done\n\
    \    (( result = $times ))\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp40as_nnr.sh: line 19: syntax error near unexpected token `(''

    /tmp/tmp40as_nnr.sh: line 19: `( times *= (10#$digits % 3)) ''

    '
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=\"$1\"\n  local count=0\n  for\
    \ (( c=0; c<$((n%11==0 && n%13==0)); c++ )); do\n    if [[ \"$n\" =~ ^[0-9]+$\
    \ ]]; then\n      ((count++))\n    fi\n    n=\"$((n*11+13))\"\n  done\n  echo\
    \ \"$count\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054902
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n   n=$1\n   if ((n<10)); then\n      if\
    \ ((n%%11)); then\n         echo \"0\"\n      else\n         echo \"1\"\n    \
    \  fi\n   elif ((n<100)); then\n      if ((n%%13)); then\n         echo \"2\"\n\
    \      else\n         echo \"3\"\n      fi\n   elif ((n<1000)); then\n      if\
    \ ((n%%11)); then\n         echo \"4\"\n      else\n         echo \"5\"\n    \
    \  fi\n   elif ((n<10000)); then\n      if ((n%%13)); then\n         echo \"6\"\
    \n      else\n         echo \"7\"\n      fi\n   elif ((n<100000)); then\n    \
    \  if ((n%%11)); then\n         echo \"8\"\n      else\n         echo \"9\"\n\
    \      fi\n   else\n      echo \"$((n%11))\"\n   fi\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg0zhmr2w.sh: line 20: ((: n%%13: syntax error: operand expected
    (error token is "%13")

    '
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local -i n=$1\n    echo $(( ( (n / 11)\
    \ * 13 + (n % 11) > 0 ) ))\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=$1\n  local f=0\n  for i in `seq\
    \ $n`; do\n    case $(($i % 11)) in\n      0) echo \"$i\" ;;\n      1) echo \"\
    $i\" ;;\n      2) echo \"$i\" ;;\n      3) echo \"$i\" ;;\n      4) echo \"$i\"\
    \ ;;\n      5) echo \"$i\" ;;\n      6) echo \"$i\" ;;\n      7) echo \"$f\"\n\
    \    esac\n    f=$((f+1))\n  done\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=$1\n    local i\n    local c=0\n\
    \    IFS=$'\\n' read -a array <<< $n\n    for i in \"${array[@]:1}\"; do\n   \
    \     [[ $((i % 11)) == 0 && $((i % 13)) == 0 ]] && c++\n    done\n    echo \"\
    $c\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n\
    \    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n\
    \    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\"\
    \ ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\"\
    ) = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local i=\"$1\"\n    local cnt=0\n  \
    \  # Only consider the integer divisible by 11 or 13\n    [ $((i % 11)) -ne 0\
    \ ] && [ \"$((i % 13))\" -eq 0 ] && [ $((i % 11)) -eq 0 ] && cnt=$((cnt+1))\n\
    \    # Only consider the integer divisible by 11 or 13\n    [ $((i % 11)) -eq\
    \ 0 ] && [ \"$((i % 13))\" -ne 0 ] && [ $((i % 13)) -eq 0 ] && cnt=$((cnt+1))\n\
    \    # Only consider the integer divisible by 11 or 13\n    [ $((i % 13)) -ne\
    \ 0 ] && [ \"$((i % 11))\" -eq 0 ] && [ $((i % 11)) -eq 0 ] && cnt=$((cnt+1))\n\
    \    echo $((cnt))\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054903
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    [ \"$1\" = \"--help\" ] && printf \"\
    %b\" \"Usage: fizz_buzz n\" >/dev/null 2>&1 || return 1\n    [[ \"$1\" = \"--help\"\
    \ ] || [[ ! \"$1\" = *[![:digit:]] ]] || return 1\n    local n=\"$1\"\n    local\
    \ s=0\n    while [ \"$n\" -gt 0 ]; do\n        [[ \"$n\" -le 100 ]] && { echo\
    \ \"ERROR: n must be between 0 and 100\" && return 1; }\n        if (( n % 11\
    \ == 0 )); then\n            if (( n % 13 == 0 )); then\n                (( s\
    \ += 1))\n            else\n                (( s += 1 ))\n            fi\n   \
    \     else\n            if (( n % 13 == 0 )); then\n                (( s += 1))\n\
    \            else\n                (( s += 1 ))\n            fi\n        fi\n\
    \        n=\"$(( n - 11 ))\"\n    done\n    echo \"$s\"\n}\n\ncandidate() {\n\
    \    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") =\
    \ \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\")\
    \ = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeo9edbbl.sh: line 13: syntax error in conditional expression

    /tmp/tmpeo9edbbl.sh: line 13: syntax error near `]''

    /tmp/tmpeo9edbbl.sh: line 13: `    [[ "$1" = "--help" ] || [[ ! "$1" = *[![:digit:]]
    ]] || return 1''

    '
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\techo \"$(echo \"$1\" | sed \"s/\\//\\\\\
    \\\\\\//g\" | sed \"s/ /\\\\\\\\ /g\" | sed \"s/|/\\\\\\\\|/g\" | sed \"s/\\([0-9]\\\
    )/\\\\\\1/g\" | sed \"s/\\([^0-9]\\)/\\\\\\1/g\" | sort | uniq -c | sed \"s/^/${1}/\
    \ /g\" | sed \"s/$/\\\\\\\\/\" | tr -d ' \\n' | grep \"^[[:digit:]]\\+\" | sort\
    \ -n)\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n\
    \    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n\
    \    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\"\
    \ ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\"\
    ) = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 9: unknown option to `s''

    '
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local i\n  local n\n  local count=0\n\n\
    \  if (( $# < 1 )); then\n    return 0\n  fi\n\n  n=$(echo \"$1\" | tr -d ' ')\n\
    \  if (( $# == 1 )); then\n    echo \"$n\"\n  elif (( $n % 11 == 0 )); then\n\
    \    count=$(echo \"$n\" | sed -n 's/^\\([1-9][0-9]*\\)$/&,/p' | wc -c)\n    echo\
    \ \"$count\"\n  elif (( $n % 13 == 0 )); then\n    count=$(echo \"$n\" | sed -n\
    \ 's/^\\([1-9][0-9]*\\)$/&,/p' | wc -c)\n    echo \"$count\"\n  fi\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n i\n    local count\n    shift\n\
    \    while ((n = $1) > 0)\n    do\n        for (( i = 0; i < n; i++ ))\n     \
    \   do\n            if (( n % 11 == 0 || n % 13 == 0 ))\n            then\n  \
    \              (( count++ ))\n            fi\n        done\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphqn0sypa.sh: line 15: n: command not found

    '
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n a\n  a=$1\n  for ((n=0; n<$a;\
    \ n++)); do\n    case \"$n\" in\n      *7*)\n        ((n++))\n        ;;\n   \
    \   *)\n        echo $n\n        ;;\n    esac\n  done\n}\n\ncandidate() {\n  \
    \  fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"\
    0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"\
    3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") =\
    \ \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\"\
    ) = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\tlocal a=$1\n\tlocal counter=0\n\twhile\
    \ [[ $a -gt 0 ]]; do\n\t\tlocal remainder=$((a % 11))\n\t\tlocal n=$((a / 11))\n\
    \t\tif [[ $remainder -eq 0 ]]; then\n\t\t\tcounter=$((counter+1))\n\t\tfi\n\t\t\
    if [[ $remainder -eq 3 ]]; then\n\t\t\tcounter=$((counter+1))\n\t\tfi\n\t\tif\
    \ [[ $remainder -eq 6 ]]; then\n\t\t\tcounter=$((counter+1))\n\t\tfi\n\t\tif [[\
    \ $remainder -eq 9 ]]; then\n\t\t\tcounter=$((counter+1))\n\t\tfi\n\t\ta=$((n\
    \ / 13))\n\tdone\n\techo $counter\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=$1\n  local num\n  ((num=($n%11)))\n\
    \  if [ $num -eq 0 ]; then\n    return 0\n  elif [ $num -eq 1 ]; then\n    return\
    \ 1\n  elif [ $num -eq 3 ]; then\n    return 2\n  elif [ $num -eq 5 ]; then\n\
    \    return 3\n  elif [ $num -eq 7 ]; then\n    return 4\n  elif [ $num -eq 9\
    \ ]; then\n    return 5\n  elif [ $num -eq 11 ]; then\n    return 6\n  elif [\
    \ $num -eq 13 ]; then\n    return 7\n  fi\n}\n\ncandidate() {\n    fizz_buzz \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[\
    \ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[\
    \ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n  \
    \  [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\"\
    \ ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local NUMBER=\"$1\"\n  local i\n  local\
    \ count=0\n  local DIVISIONS=11\n  local DIVISIONS_BY_DIV=3\n  local DIVISIONS_BY_DIV_BY_DIV=2\n\
    \  local DIVISIONS_BY_DIV_BY_DIV_BY_DIV=1\n  local DIVISIONS_BY_DIV_BY_DIV_BY_DIV_BY_DIV=0\n\
    \  local DIVISIONS_BY_DIV_BY_DIV_BY_DIV_BY_DIV_BY_DIV=0\n\n  echo \"$NUMBER\"\
    \ | while read i; do\n    if [[ \"$i\" -eq 7 ]]; then\n      ((count++))\n   \
    \ fi\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n res\n    for n in $1 2 3 4 5\
    \ 6 7 8 9 10; do\n        if [ $((n % 11)) -eq 0 -o $((n % 13)) -eq 0 ]; then\n\
    \            echo \"$((n//7))\"\n        fi\n    done\n}\n\ncandidate() {\n  \
    \  fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"\
    0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"\
    3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") =\
    \ \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\"\
    ) = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local i\n    local count=0\n    for\
    \ i in $(seq \"$1\"); do\n        if (( (i | bc) -eq 7 )); then\n            ((\
    \ count++ ))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") =\
    \ \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\")\
    \ = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0e8c0uf3.sh: line 15: ((: (i | bc) -eq 7 : syntax error in expression
    (error token is "7 ")

    /tmp/tmp0e8c0uf3.sh: line 15: ((: (i | bc) -eq 7 : syntax error in expression
    (error token is "7 ")

    /tmp/tmp0e8c0uf3.sh: line 15: ((: (i | bc) -eq 7 : syntax error in expression
    (error token is "7 ")

    /tmp/tmp0e8c0uf3.sh: line 15: ((: (i | bc) -eq 7 : syntax error in expression
    (error token is "7 ")

    /tmp/tmp0e8c0uf3.sh: line 15: ((: (i | bc) -eq 7 : syntax error in expression
    (error token is "7 ")

    /tmp/tmp0e8c0uf3.sh: line 15: ((: (i | bc) -eq 7 : syntax error in expression
    (error token is "7 ")

    /tmp/tmp0e8c0uf3.sh: line 15: ((: (i | bc) -eq 7 : syntax error in expression
    (error token is "7 ")

    /tmp/tmp0e8c0uf3.sh: line 15: ((: (i | bc) -eq 7 : syntax error in expression
    (error token is "7 ")

    /tmp/tmp0e8c0uf3.sh: line 15: ((: (i | bc) -eq 7 : syntax error in expression
    (error token is "7 ")

    /tmp/tmp0e8c0uf3.sh: line 15: ((: (i | bc) -eq 7 : syntax error in expression
    (error token is "7 ")

    /tmp/tmp0e8c0uf3.sh: line 15: ((: (i | bc) -eq 7 : syntax error in expression
    (error token is "7 ")

    /tmp/tmp0e8c0uf3.sh: line 15: ((: (i | bc) -eq 7 : syntax error in expression
    (error token is "7 ")

    /tmp/tmp0e8c0uf3.sh: line 15: ((: (i | bc) -eq 7 : syntax error in expression
    (error token is "7 ")

    /tmp/tmp0e8c0uf3.sh: line 15: ((: (i | bc) -eq 7 : syntax error in expression
    (error token is "7 ")

    /tmp/tmp0e8c0uf3.sh: line 15: ((: (i | bc) -eq 7 : syntax error in expression
    (error token is "7 ")

    /tmp/tmp0e8c0uf3.sh: line 15: ((: (i | bc) -eq 7 : syntax error in expression
    (error token is "7 ")

    /tmp/tmp0e8c0uf3.sh: line 15: ((: (i | bc) -eq 7 : syntax error in expression
    (error token is "7 ")

    /tmp/tmp0e8c0uf3.sh: line 15: ((: (i | bc) -eq 7 : syntax error in expression
    (error token is "7 ")

    /tmp/tmp0e8c0uf3.sh: line 15: ((: (i | bc) -eq 7 : syntax error in expression
    (error token is "7 ")

    /tmp/tmp0e8c0uf3.sh: line 15: ((: (i | bc) -eq 7 : syntax error in expression
    (error token is "7 ")

    /tmp/tmp0e8c0uf3.sh: line 15: ((: (i | bc) -eq 7'
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\techo $(($1 / 11))\n}\n\ncandidate() {\n\
    \    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") =\
    \ \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\")\
    \ = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=$1\n    local i\n    local j\n\
    \n    for ((i=0; i<10; i++)); do\n        if [ ${n:$i:1} -eq 7 ]; then\n     \
    \       j=$((i+1))\n            echo \"$j\"\n            break\n        fi\n \
    \   done\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n\
    \    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n\
    \    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\"\
    \ ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\"\
    ) = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphp6yjfi_.sh: line 17: [: -eq: unary operator expected

    /tmp/tmphp6yjfi_.sh: line 17: [: -eq: unary operator expected

    /tmp/tmphp6yjfi_.sh: line 17: [: -eq: unary operator expected

    /tmp/tmphp6yjfi_.sh: line 17: [: -eq: unary operator expected

    /tmp/tmphp6yjfi_.sh: line 17: [: -eq: unary operator expected

    /tmp/tmphp6yjfi_.sh: line 17: [: -eq: unary operator expected

    /tmp/tmphp6yjfi_.sh: line 17: [: -eq: unary operator expected

    /tmp/tmphp6yjfi_.sh: line 17: [: -eq: unary operator expected

    '
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local NUMBER=\"$1\"\n    local NUM=`echo\
    \ \"$NUMBER\" | awk '{ print $0 }'`\n    if [[ \"$NUM\" =~ ^[0-9]+$ ]]; then #\
    \ if it is a number\n        echo \"${#NUM}\"\n    else\n        echo \"0\"\n\
    \    fi\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n\
    \    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n\
    \    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\"\
    \ ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\"\
    ) = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054903
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n=$1\n    local n_in=$2\n    local\
    \ n_in_mod=$((n_in%11))\n    local n_in_mod_2=$((n_in_mod%11))\n    local n_in_mod_3=$((n_in_mod_2%11))\n\
    \    local n_in_mod_5=$((n_in_mod_3%11))\n    local n_in_mod_7=$((n_in_mod_5%11))\n\
    \    local n_in_mod_11=$((n_in_mod_7%11))\n    local n_in_mod_13=$((n_in_mod_11%11))\n\
    \    local n_in_mod_17=$((n_in_mod_13%11))\n    local n_in_mod_19=$((n_in_mod_17%11))\n\
    \    local n_in_mod_23=$((n_in_mod_19%11))\n    local n_in_mod_29=$((n_in_mod_23%11))\n\
    \    local n_in_mod_37=$((n_in_mod_29%11))\n    local n_in_mod_41=$((n_in_mod_37%11))\n\
    \    local n_in_mod_43=$((n_in_mod_41%11))\n    local n_in_mod_47=$((n_in_mod_43%11))\n\
    \    local n_in_mod_51=$((n_in_mod_47%11))\n    local n_in_mod_59=$((n_in_mod_51%11))\n\
    \    local n_in_mod_61=$((n_in_mod_59%11))\n    local n_in_mod_67=$((n_in_mod_61%11))\n\
    \    local n_in_mod_71=$((n_in_mod_67%11))\n    local n_in_mod_73=$((n_in_mod_71%11))\n\
    \    local n_in_mod_79=$((n_in_mod_73%11))\n    local n_in_mod_89=$((n_in_mod_79%11))\n\
    \    local n_in_mod_101=$((n_in_mod_89%11))\n    local n_in_mod_111=$((n_in_mod_101%11))\n\
    \    local n_in_mod_131=$((n_in_mod_111%11))\n    local n_in_mod_151=$((n_in_mod_131%11))\n\
    \    local n_in_mod_171=$((n_in_mod_151%11))\n    local n_in_mod_191=$((n_in_mod_171%11))\n\
    \    local n_in_mod_211=$((n_in_mod_191%11))\n    local n_in_mod_221=$((n_in_mod_211%11\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpm49zu12h.sh: line 44: unexpected EOF while looking for matching
    `)''

    /tmp/tmpm49zu12h.sh: line 64: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    IFS=$'\\n' read -r -d '' -a array <<<\
    \ \"$1\"\n\n    array+=(0)\n    array+=(1)\n    array+=(2)\n    array+=(3)\n \
    \   array+=(4)\n    array+=(5)\n    array+=(6)\n    array+=(7)\n    array+=(8)\n\
    \    array+=(9)\n\n    count=$(\n    i=0\n    while [ \"$i\" -lt \"${#array[@]}\"\
    \ ]; do\n        if (( \"${array[i]}\" % 11 == 0 )) && (( \"${array[i]}\" % 13\
    \ == 0 )) {\n            (( count++ ))\n        fi\n        (( i++ ))\n    done\n\
    \    )\n    echo \"$count\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkgeq023o.sh: command substitution: line 37: syntax error near unexpected
    token `{''

    /tmp/tmpkgeq023o.sh: command substitution: line 37: `        if (( "${array[i]}"
    % 11 == 0 )) && (( "${array[i]}" % 13 == 0 )) {''

    '
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local number=$1\n  local i\n  local found\n\
    \  for i in $(seq $number 1 13); do\n    if [ $((i % 11)) -eq 0 ] && [ $((i %\
    \ 13)) -eq 0 ]; then\n      found=$((found + 1))\n    fi\n  done\n  echo $found\n\
    }\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate\
    \ \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate\
    \ \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate\
    \ \"10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  n=$1\n  c=1\n  while [ $n -gt 0 ]; do\n\
    \    i=$(( $n % 11 ))\n    j=$(( $n % 13 ))\n    if [ $i -eq 0 ] && [ $j -eq 0\
    \ ]; then\n      c=$(expr $c + 1)\n    elif [ $i -eq 0 ]; then\n      c=$(( $c\
    \ + 1 ))\n    elif [ $j -eq 0 ]; then\n      c=$(( $c + 1 ))\n    fi\n    n=$((\
    \ $n / 10 ))\n  done\n  echo $c\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=$1\n  # Test for valid args\n\
    \  [[ -z \"$n\" ]] && return 1\n  [[ $n -lt 0 ]] && return 1\n\n  local num=\n\
    \  local x=\n  local y=\n  local z=$(( (n+1) % 10 ))\n  local count=\n  while\
    \ true; do\n    num=$(printf \"%02d\" $(( (num+n) % 10 )) )\n    num=${num:0:1}\n\
    \    num=${num:1}\n    if [[ $num -eq 7 ]]; then\n      count=$(( count+1 ))\n\
    \    else\n      x=$(( x * 11 ))\n      y=$(( y * 13 ))\n      if [[ $z -eq 0\
    \ ]]; then\n        break\n      else\n        z=$(( z - 1 ))\n      fi\n    fi\n\
    \  done\n  echo \"$count\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054903
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local NUMBER=$1\n    local RETVAL=0\n\
    \    while [ \"$NUMBER\" -gt 0 ] ; do\n        local DIGIT=${NUMBER}\n       \
    \ local DIVISION=${NUMBER}\n        if [ ${DIGIT} -eq 7 ] && [ ${DIVISION} -eq\
    \ 11 ] || [ ${DIGIT} -eq 7 ] && [ ${DIVISION} -eq 13 ] ; then\n            RETVAL=$((\
    \ ${RETVAL} + 1 ))\n        fi\n        DIVISION=$(( $DIVISION / 10 ))\n    done\n\
    \    echo $RETVAL\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=67 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=57 encoding='utf-8'>
  timestamp: 1660054908
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    local n x\n    if [ -z \"$1\" ]\n  \
    \  then\n        echo 0\n        return\n    fi\n    n=$1; x=\"$(echo \"$n\" |\
    \ sed 's/\\./\\\\\\./g' | awk '{printf \"%010d\\n\", $1}')\"\n    if [ \"${x%%3}\"\
    \ = \"7\" ]\n    then\n        echo 0\n        return\n    fi\n    if [ \"${x%%5}\"\
    \ = \"7\" ]\n    then\n        echo 2\n        return\n    fi\n    if [ \"${x%%7}\"\
    \ = \"7\" ]\n    then\n        echo 3\n        return\n    fi\n    if [ \"${x%%11}\"\
    \ = \"7\" ]\n    then\n        echo 4\n        return\n    fi\n    if [ \"${x%%13}\"\
    \ = \"7\" ]\n    then\n        echo 5\n        return\n    fi\n    if [ \"${x%%17}\"\
    \ = \"7\" ]\n    then\n        echo 6\n        return\n    fi\n    if [ \"${x%%19}\"\
    \ = \"7\" ]\n    then\n        echo 7\n        return\n    fi\n    if [ \"${x%%21}\"\
    \ = \"7\" ]\n    then\n        echo 8\n        return\n    fi\n    if [ \"${x%%23}\"\
    \ = \"7\" ]\n    then\n        echo 9\n        return\n    fi\n    if [ \"${x%%25}\"\
    \ = \"7\" ]\n    then\n        echo 10\n        return\n    fi\n    if [ \"${x%%27}\"\
    \ = \"7\" ]\n    then\n        echo 11\n        return\n    fi\n    if [ \"${x%%29}\"\
    \ = \"7\" ]\n    then\n        echo 12\n        return\n    fi\n    if [ \"${x%%31}\"\
    \ = \"7\" ]\n    then\n        echo 13\n        return\n    fi\n    if [ \"${x%%33}\"\
    \ = \"7\" ]\n    then\n        echo 14\n        return\n    fi\n    if [ \"${x%%35}\"\
    \ = \"7\" ]\n    then\n        echo 15\n        return\n    fi\n    if [ \"${x%%37}\"\
    \ = \"7\" ]\n    then\n        echo 16\n        return\n    fi\n    if [ \"${x%%39}\"\
    \ = \"7\" ]\n    then\n        echo 17\n        return\n    fi\n    if [ \"${x%%41}\"\
    \ = \"7\" ]\n    then\n        echo 18\n        return\n    fi\n    if [ \"${x%%43}\"\
    \ = \"7\" ]\n    then\n        echo 19\n        return\n    fi\n    if [ \"${x%%45}\"\
    \ = \"7\" ]\n    then\n        echo 20\n        return\n    fi\n    if [ \"${x%%47}\"\
    \ = \"7\" ]\n    then\n        \n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqleq0loj.sh: line 122: syntax error near unexpected token `}''

    /tmp/tmpqleq0loj.sh: line 122: `}''

    '
  stdout: ''
  timestamp: 1660054903
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\t# Escape to prevent problems with double\
    \ quotes\n\tinteger=\"${1//\\\"/\\\\\\\"}\"\n\tinteger =\"${integer//\\\"/\\\\\
    \\\"}\"\n\tinteger =\"${integer//\\//\\\\/}\"\n\tinteger =\"${integer//\\//\\\\\
    /}\"\n\tinteger =\"${integer//\\\\/\\\\/}\"\n\tinteger =\"${integer//\\\\//\\\\\
    /}\"\n\tinteger =\"${integer//\\//\\\\/}\"\n\tinteger =\"${integer//\\//\\\\/}\"\
    \n\tinteger =\"${integer//\\\\/\\\\/}\"\n\tinteger =\"${integer//\\\\//\\\\/}\"\
    \n\tinteger =\"${integer//\\//\\\\/}\"\n\tinteger =\"${integer//\\//\\\\/}\"\n\
    \tinteger =\"${integer//\\\\/\\\\/}\"\n\tinteger =\"${integer//\\\\/\\\\/}\"\n\
    \tinteger =\"${integer//\\//\\\\/}\"\n\tinteger =\"${integer//\\//\\\\/}\"\n\t\
    integer =\"${integer//\\\\/\\\\/}\"\n\tinteger =\"${integer//\\\\/\\\\/}\"\n\t\
    integer =\"${integer//\\//\\\\/}\"\n\tinteger =\"${integer//\\//\\\\/}\"\n\tinteger\
    \ =\"${integer//\\\\/\\\\/}\"\n\tinteger =\"${integer//\\\\/\\\\/}\"\n\tinteger\
    \ =\"${integer//\\//\\\\/}\"\n\tinteger =\"${integer//\\//\\\\/}\"\n\tinteger\
    \ =\"${integer//\\\\/\\\\/}\"\n\tinteger =\"${integer//\\\\/\\\\/}\"\n\tinteger\
    \ =\"${integer//\\//\\\\/}\"\n\tinteger =\"${integer//\\//\\\\/}\"\n\tinteger\
    \ =\"${integer//\\\\/\\\\/}\"\n\tinteger =\"${integer//\\\\/\\\\/}\"\n\tinteger\
    \ =\"${integer//\\//\\\\/}\"\n\tinteger =\"${integer//\\//\\\\/}\"\n\tinteger\
    \ =\"${integer//\\\\/\\\\/}\"\n\tinteger =\"${integer//\\\\/\\\\/}\"\n\tinteger\
    \ =\"${integer//\\//\\\\/}\"\n\tinteger =\"${integer//\\//\\\\/}\"\n\tinteger\
    \ =\"${integer//\\\\/\\\\/}\"\n\tinteger =\"${integer//\\//\\\\/}\"\n\tinteger\
    \ =\"${integer//\\//\\\\/}\"\n\tinteger =\"${integer//\\\\/\\\\/}\"\n\tinteger\
    \ =\"${integer//\\\\/\\\\/}\"\n\tinteger =\"${integer//\\//\\\\/}\"\n\tinteger\
    \ =\"${integer//\\//\\\\/}\"\n\tinteger =\"${integer//\\\\/\\\\/}\"\n\tinteger\
    \ =\"${integer//\\\\/\\\\/}\"\n\tinteger =\"${integer//\\\n}\n\ncandidate() {\n\
    \    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") =\
    \ \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\")\
    \ = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpatogo5cg.sh: line 74: unexpected EOF while looking for matching
    `"''

    /tmp/tmpatogo5cg.sh: line 78: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\t[[ -z \"$1\" ]] && echo \"No number given\"\
    \ && return 1\n\t[[ \"$1\" -gt 0 && \"$1\" -lt 100000 ]] && echo \"$1\" | awk\
    \ '{print $1}' | sed 's/^0*//' | sort | uniq -c | wc -l\n}\n\ncandidate() {\n\
    \    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") =\
    \ \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\")\
    \ = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\tlocal -i a=$1\n\tlocal -i b=0\n\tlocal\
    \ -r s=$(sed \"s/^/${a}\\\\n/\" <<<$(seq 1 $a))\n\tlocal -r r=$(sed \"s/^/${a}\\\
    \\n/\" <<<$(seq 1 $a))\n\tlocal -r c=0\n\twhile test $a -ge 0; do\n\t\ttest $((b++))\
    \ -eq 0 ||\n\t\t\ttest $((c++)) -eq 0 ||\n\t\t\t[[ $s =~ ([[:digit:]]*7[[:digit:]]|$((c)))\
    \ ]]\n\t\ta=$(($((a<<1)|1)))\n\tdone\n\techo ${#r}\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8hrahhfv.sh: line 21: warning: here-document at line 21 delimited
    by end-of-file (wanted `1'')

    /tmp/tmp8hrahhfv.sh: line 21: 1: command not found

    /tmp/tmp8hrahhfv.sh: line 21: a: command not found

    /tmp/tmp8hrahhfv.sh: line 19: c: readonly variable

    '
  stdout: ''
  timestamp: 1660054903
- exit_code: 2
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  # This one is a bit tricky\n  local num=$1\n\
    \  local num2=$((num / 10))\n  local num3=$((num % 10))\n  local num4=$((num2\
    \ / 10))\n  local num5=$((num2 % 10))\n  local num6=$((num3 / 10))\n  local num7=$((num3\
    \ % 10))\n  local num8=$((num4 / 10))\n  local num9=$((num4 % 10))\n  local num10=$((num6\
    \ / 10))\n  local num11=$((num6 % 10))\n  local num12=$((num7 / 10))\n  local\
    \ num13=$((num7 % 10))\n  local num14=$((num8 / 10))\n  local num15=$((num8 %\
    \ 10))\n  local num16=$((num9 / 10))\n  local num17=$((num9 % 10))\n  local num18=$((num10\
    \ / 10))\n  local num19=$((num10 % 10))\n  local num20=$((num11 / 10))\n  local\
    \ num21=$((num11 % 10))\n  local num22=$((num12 / 10))\n  local num23=$((num12\
    \ % 10))\n  local num24=$((num13 / 10))\n  local num25=$((num13 % 10))\n  local\
    \ num26=$((num14 / 10))\n  local num27=$((num14 % 10))\n  local num28=$((num15\
    \ / 10))\n  local num29=$((num15 % 10))\n  local num30=$((num16 / 10))\n  local\
    \ num31=$((num16 % 10))\n  local num32=$((num17 / 10))\n  local num33=$((num17\
    \ % 10))\n  local num34=$((num18 / 10))\n  local num35=$((num18 % 10))\n  local\
    \ num36=$((num19 / 10))\n  local num37=$((num19 % 10))\n  local num38=$((num20\
    \ / 10))\n  local num39=$((num20 % 10))\n  local num40=$((num21 / 10))\n  local\
    \ num41=$((num21 % 10))\n  local num42=$((num22 / 10))\n  local num43=$((num22\
    \ % 10))\n  local num44=$((num23 / 10))\n  local num45=$((num23 % 10))\n  local\
    \ num46=$((num24 / 10))\n  local num47=$((\n}\n\ncandidate() {\n    fizz_buzz\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n \
    \   [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n\
    \    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n\
    \    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"\
    639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvazm28zs.sh: line 59: unexpected EOF while looking for matching
    `)''

    /tmp/tmpvazm28zs.sh: line 79: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n    echo $(($1 / 10)) | bc\n}\n\ncandidate()\
    \ {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\"\
    ) = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\" ]]\n    [[ $(candidate \"79\"\
    ) = \"3\" ]]\n    [[ $(candidate \"100\") = \"3\" ]]\n    [[ $(candidate \"200\"\
    ) = \"6\" ]]\n    [[ $(candidate \"4000\") = \"192\" ]]\n    [[ $(candidate \"\
    10000\") = \"639\" ]]\n    [[ $(candidate \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  if [ -z \"$1\" ]; then echo \"0\";\n \
    \ else let \"n=$1\" ; let \"cnt=0;\"\n    while [ \"$n\" -le 100 ]; do\n     \
    \ let \"cnt=$cnt+1\" ; let \"n=$(expr \"$n\" + \"$n\")\"\n    done\n    echo \"\
    $cnt\"\n  fi\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\") = \"2\"\
    \ ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\") = \"\
    3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\") =\
    \ \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate \"\
    100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpukr6zon7.sh: line 13: let: cnt=0;: syntax error: invalid arithmetic
    operator (error token is ";")

    '
  stdout: ''
  timestamp: 1660054903
- exit_code: -1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=$1\n  local sum=0\n  while [ \"\
    $n\" -gt 0 ]; do\n    ((n%11==0)) && sum=$((sum+1))\n    ((n%13==0)) && sum=$((sum+1))\n\
    \    ((n%17==0)) && sum=$((sum+1))\n    ((n%23==0)) && sum=$((sum+1))\n    ((n%33==0))\
    \ && sum=$((sum+1))\n    ((n%39==0)) && sum=$((sum+1))\n    ((n%47==0)) && sum=$((sum+1))\n\
    \    ((n%53==0)) && sum=$((sum+1))\n    ((n%59==0)) && sum=$((sum+1))\n    ((n%67==0))\
    \ && sum=$((sum+1))\n    ((n%83==0)) && sum=$((sum+1))\n    ((n%91>0)) && sum=$((sum+1))\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\"\
    ) = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\"\
    ) = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\"\
    ) = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=45 encoding='utf-8'>
  timestamp: 1660054908
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n\tlocal n=$1; shift;\n\tlocal i=1;\n\techo\
    \ \"$1\"\n\tfor ((j=1;j<=10;j++))\n\tdo\n\t\tif [ \"$n\" -gt \"$j\" ] && [ \"\
    $(echo \"$n\" | bc|awk '{print $1}')\" -eq \"$j\" ] && [ \"$(echo \"$n\" | bc|awk\
    \ '{print $1}')\" -ge \"11\" ] && [ \"$(echo \"$n\" | bc|awk '{print $1}')\" -le\
    \ \"13\" ];\n\t\tthen\n\t\t\techo -n \"7\"\n\t\t\t((i++))\n\t\t\tbreak;\n\t\t\
    fi\n\tdone\n\techo $i\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate \"78\"\
    ) = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate \"100\"\
    ) = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate \"4000\"\
    ) = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660054903
- exit_code: 1
  program: "#!/bin/bash\n# Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n# >>> $(fizz_buzz \"50\")\n# \"\
    0\"\n# >>> $(fizz_buzz \"78\")\n# \"2\"\n# >>> $(fizz_buzz \"79\")\n# \"3\"\n\
    #\n# $1 is an integer\nfizz_buzz() {\n  local n=$1\n  local i=0\n  while [ $n\
    \ -gt 0 ] ; do\n    [ $((n % 11) == 0) -a $((n % 13) == 0) ] && return\n    n=$((n-1))\n\
    \    i=$((i+1))\n  done\n  echo $i\n}\n\ncandidate() {\n    fizz_buzz \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"50\") = \"0\" ]]\n    [[ $(candidate\
    \ \"78\") = \"2\" ]]\n    [[ $(candidate \"79\") = \"3\" ]]\n    [[ $(candidate\
    \ \"100\") = \"3\" ]]\n    [[ $(candidate \"200\") = \"6\" ]]\n    [[ $(candidate\
    \ \"4000\") = \"192\" ]]\n    [[ $(candidate \"10000\") = \"639\" ]]\n    [[ $(candidate\
    \ \"100000\") = \"8026\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdqpmdwbo.sh: command substitution: line 15: syntax error near unexpected
    token `==''

    /tmp/tmpdqpmdwbo.sh: command substitution: line 15: `(n % 11) == 0''

    /tmp/tmpdqpmdwbo.sh: command substitution: line 15: syntax error near unexpected
    token `==''

    /tmp/tmpdqpmdwbo.sh: command substitution: line 15: `(n % 13) == 0''

    '
  stdout: ''
  timestamp: 1660054903

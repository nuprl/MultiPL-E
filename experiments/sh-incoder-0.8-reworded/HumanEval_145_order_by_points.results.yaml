language: sh
name: HumanEval_145_order_by_points
results:
- exit_code: 1
  program: "#!/bin/bash\n# Write a function which sorts the given list of integers\n\
    # in ascending order according to the sum of their digits.\n# Note: if there are\
    \ several items with similar sum of their digits,\n# order them based on their\
    \ index in original list.\n# For example:\n# >>> $(order_by_points \"1 11 -1 -11\
    \ -12\")\n# ['\"-1\"', '\"-11\"', '\"1\"', '\"-12\"', '\"11\"']\n# >>> $(order_by_points\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\norder_by_points() {\n  local\
    \ list=\"$1\"\n  local tmp sum i digits result\n  IFS=' ' read -r -a tmp <<<\"\
    $list\"\n  IFS=+ sum=0\n  for ((i=0;i<${#tmp[@]};i++)) do\n    digits=${tmp[i]}\n\
    \    ((sum+=digits))\n  done\n  IFS=- read -r -a result <<<\"@(${tmp[@]}|sort|sort\
    \ -nr -k ${sum})\" #-n for numeric sort\n  echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    order_by_points \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 11 -1 -11 -12\") = \"-1 -11 1 -12 11\" ]]\n    [[ $(candidate \"1234 423\
    \ 463 145 2 423 423 53 6 37 3457 3 56 0 46\") = \"0 2 3 6 53 423 423 423 1234\
    \ 145 37 46 56 463 3457\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 -11 -32 43 54 -98 2 -3\") = \"-3 -32 -98 -11 1 2 43 54\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8 9 10 11\") = \"1 10 2 11 3 4 5 6 7 8 9\" ]]\n    [[ $(candidate\
    \ \"0 6 6 -76 -21 23 4\") = \"-76 -21 0 4 23 6 6\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058481
- exit_code: 1
  program: "#!/bin/bash\n# Write a function which sorts the given list of integers\n\
    # in ascending order according to the sum of their digits.\n# Note: if there are\
    \ several items with similar sum of their digits,\n# order them based on their\
    \ index in original list.\n# For example:\n# >>> $(order_by_points \"1 11 -1 -11\
    \ -12\")\n# ['\"-1\"', '\"-11\"', '\"1\"', '\"-12\"', '\"11\"']\n# >>> $(order_by_points\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\norder_by_points() {\n    local\
    \ -n arr=$1\n    local -a res\n    local sum\n    local -a tmp\n    for idx in\
    \ \"${!arr[@]}\"; do\n        sum=0\n        for i in \"${!arr[@]}\"; do\n   \
    \         (( sum += ${arr[i]}))\n        done\n        echo \"${idx:+${idx}: \\\
    \"${sum}\\\"}\"\n    done\n}\n\ncandidate() {\n    order_by_points \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 11 -1 -11 -12\") = \"-1 -11 1 -12\
    \ 11\" ]]\n    [[ $(candidate \"1234 423 463 145 2 423 423 53 6 37 3457 3 56 0\
    \ 46\") = \"0 2 3 6 53 423 423 423 1234 145 37 46 56 463 3457\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 -11 -32 43 54 -98 2 -3\") = \"-3 -32\
    \ -98 -11 1 2 43 54\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11\") = \"\
    1 10 2 11 3 4 5 6 7 8 9\" ]]\n    [[ $(candidate \"0 6 6 -76 -21 23 4\") = \"\
    -76 -21 0 4 23 6 6\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwg3m2q13.sh: line 14: local: `1 11 -1 -11 -12'': invalid variable
    name for name reference

    '
  stdout: ''
  timestamp: 1660058481
- exit_code: 1
  program: "#!/bin/bash\n# Write a function which sorts the given list of integers\n\
    # in ascending order according to the sum of their digits.\n# Note: if there are\
    \ several items with similar sum of their digits,\n# order them based on their\
    \ index in original list.\n# For example:\n# >>> $(order_by_points \"1 11 -1 -11\
    \ -12\")\n# ['\"-1\"', '\"-11\"', '\"1\"', '\"-12\"', '\"11\"']\n# >>> $(order_by_points\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\norder_by_points() {\n    local\
    \ i i2 i3 i4\n    local list_str=$1\n    local list_arr=(${list_str// *})\n  \
    \  local order_arr=()\n    local total_digits=0\n    local j=1\n    for ((i =\
    \ 0; i < ${#list_arr[@]}; i++)); do\n        i2=$(echo \"${list_arr[i]}\" | tr\
    \ ' ' '.' | awk '{print $2}')\n        i3=$(echo \"${list_arr[i]}\" | tr ' ' '.'\
    \ | awk '{print $3}')\n        i4=$(echo \"${list_arr[i]}\" | tr ' ' '.' | awk\
    \ '{print $4}')\n        (( total_digits += i3 + i4 + i2 ))\n        order_arr[$j]=${list_arr[i]}\n\
    \        j=$(( $j + 1 ))\n    done\n    local tmp_arr=()\n    local k=1\n    while\
    \ [[ $k -lt ${#order_arr[@]} ]]; do\n        tmp_arr[$k]=${order_arr[$k]}\n  \
    \      k=$(( $k + 1 ))\n    done\n    local count_idx=0\n    while [[ $count_idx\
    \ -lt ${#tmp_arr[@]} ]]; do\n        local tmp_str=\n        local tmp_sum=$(echo\
    \ \"${tmp_arr[$count_idx]}\" | tr ' ' '.' | awk '{print $3}')\n        if [[ $total_digits\
    \ -gt 0 ]]; then\n            if [[ ${tmp_sum} > ${total_digits} ]]; then\n  \
    \              for (( i = 0; i < ${#order_arr[@]}; i++ )); do\n              \
    \      if [[ ${order_arr[$i]} = ${tmp_arr[$count_idx]} ]]; then\n            \
    \            tmp_str=${order_arr[$i]}\n                        break;\n      \
    \              fi\n                done\n            fi\n        fi\n        count_idx=$((\
    \ $count_idx + 1 ))\n        order_arr[$count_idx]=${tmp_str}\n    done\n    echo\
    \ \"${order_arr[@]}\"\n}\n\ncandidate() {\n    order_by_points \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 11 -1 -11 -12\") = \"-1 -11 1 -12 11\"\
    \ ]]\n    [[ $(candidate \"1234 423 463 145 2 423 423 53 6 37 3457 3 56 0 46\"\
    ) = \"0 2 3 6 53 423 423 423 1234 145 37 46 56 463 3457\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 -11 -32 43 54 -98 2 -3\") = \"-3 -32\
    \ -98 -11 1 2 43 54\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11\") = \"\
    1 10 2 11 3 4 5 6 7 8 9\" ]]\n    [[ $(candidate \"0 6 6 -76 -21 23 4\") = \"\
    -76 -21 0 4 23 6 6\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058481
- exit_code: 2
  program: "#!/bin/bash\n# Write a function which sorts the given list of integers\n\
    # in ascending order according to the sum of their digits.\n# Note: if there are\
    \ several items with similar sum of their digits,\n# order them based on their\
    \ index in original list.\n# For example:\n# >>> $(order_by_points \"1 11 -1 -11\
    \ -12\")\n# ['\"-1\"', '\"-11\"', '\"1\"', '\"-12\"', '\"11\"']\n# >>> $(order_by_points\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\norder_by_points() {\n  local\
    \ L=(${1//[^ ]/})\n  local A=( ${L[@]/#/} )\n  local B=(${L[@]/-/} )\n  local\
    \ C=(${L[@]/./} )\n  local E=${#B[@]}\n  local D\n  local I\n  local I1\n  local\
    \ J\n  local J1\n  local M\n  local S\n  local T\n  local O\n  local R\n  local\
    \ U\n  local W\n  local X\n  local Y\n  local Z\n  local SZ\n  local OIFS\n\n\
    \  OIFS=$IFS\n  IFS=\"-\"\n  R=$(printf \"%s\\n\" \"${A[@]}\" | sort -n)\n  IFS=$OIFS\n\
    \n  S=$(printf \"%s\\n\" \"${A[@]}\" | sort -n | uniq -c | sort -n -r | head -n\
    \ 1)\n  M=$(echo \"${S}\" | sed \"s/^[[:space:]]*\\([0-9][0-9]*\\)[^[:space:]]*$/\\\
    1/\")\n  IFS=$OIFS\n\n  if [[ \"${M}\" =~ ^[0-9]+$ ]]; then\n    A=($(echo \"\
    ${S}\" | sed \"s/^[[:space:]]*\\([0-9][0-9]*\\)[^[:space:]]*$/\\1/\"))\n    D=$(echo\
    \ \"${A[@]}\" | sort -n | uniq -c | sort -n -r)\n    if [[ ${D[0]} -gt 1 ]]; then\n\
    \      W=\"$(echo \"${A[@]}\" | sort -n | uniq -c | sort -n -r | head -n 1)\"\n\
    \      X=\"$(echo \"${D}\" | sed \"s/^[[:space:]]*\\([0-9][0-9]*\\)[^[:space:]]*$/\\\
    1/\")\"\n      SZ=$(printf \"%s\" \"${A[@]}\" | sort -n | uniq -c | sort -n -r\
    \ | head -n 1)\n      for I in $(seq 0 \"${E}\"); do\n        I1=$(expr \"$I\"\
    \ '<=' \"${E}\")\n        J1=$(expr \"$I1\" '+' '1')\n        for J in $(seq 0\
    \ \"${E}\"); do\n          J1=$(expr \"$J1\" '+' '1')\n          M=$(printf \"\
    %s\\n\" \"${B[@]}\" | sort -n | uniq -c | sort -n -r | head -n \n}\n\ncandidate()\
    \ {\n    order_by_points \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 11 -1 -11 -12\") = \"-1 -11 1 -12 11\" ]]\n    [[ $(candidate \"1234 423\
    \ 463 145 2 423 423 53 6 37 3457 3 56 0 46\") = \"0 2 3 6 53 423 423 423 1234\
    \ 145 37 46 56 463 3457\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 -11 -32 43 54 -98 2 -3\") = \"-3 -32 -98 -11 1 2 43 54\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8 9 10 11\") = \"1 10 2 11 3 4 5 6 7 8 9\" ]]\n    [[ $(candidate\
    \ \"0 6 6 -76 -21 23 4\") = \"-76 -21 0 4 23 6 6\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz7erjm8s.sh: line 58: unexpected EOF while looking for matching
    `)''

    /tmp/tmpz7erjm8s.sh: line 76: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660058481
- exit_code: 1
  program: "#!/bin/bash\n# Write a function which sorts the given list of integers\n\
    # in ascending order according to the sum of their digits.\n# Note: if there are\
    \ several items with similar sum of their digits,\n# order them based on their\
    \ index in original list.\n# For example:\n# >>> $(order_by_points \"1 11 -1 -11\
    \ -12\")\n# ['\"-1\"', '\"-11\"', '\"1\"', '\"-12\"', '\"11\"']\n# >>> $(order_by_points\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\norder_by_points() {\n    local\
    \ _points _sum $1 i len\n    _points=$( echo \"$1\" | tr ' ' ',' ) # Split by\
    \ space\n    _sum=$( echo \"${_points}\" | tr ',' '+' )\n    # Remove leading\
    \ +, since this will be summed later\n    local _sum=${_sum#+}\n    local _sort\n\
    \    local -i j k\n    _sort=\"\"\n    for (( i=${#_points[@]}-1 ; i>=0 ; i--\
    \ )); do\n        local _point=${_points[$i]}\n        local _sum=${_sum%?}\n\
    \        if (( _sum == 0 )); then\n            if (( ${_point} > 0 )); then\n\
    \                _sort=\"${_sort},\\\"${_point}\\\"\"\n            else\n    \
    \            _sort=\"${_sort},\\\"${_point}\\\"\"\n            fi\n        else\n\
    \            if (( _sum > 0 )); then\n                _sort=\"${_sort},\\\"${_point}\\\
    \"\"\n            else\n                j=$i\n                for (( k=${#_points[$j]}\
    \ ; k>0 ; k-- )); do\n                    local _point1=\"${_points[$j]}${_points[$k]:0:1}\"\
    \n                    if (( ${_sum} == ${_point1} )); then\n                 \
    \       j=$k\n                        break\n                    fi\n        \
    \        done\n                if (( j < i )); then\n                    local\
    \ _point2=\"${_points[$i]}${_points[$j]:0:1}\"\n                    if (( ${_sum}\
    \ < ${_point2} )); then\n                        _sort=\"${_sort},\\\"${_point2}\\\
    \"\"\n                    fi\n                else\n                    _sort=\"\
    ${_sort},\\\"${_point}\\\"\"\n                fi\n            fi\n        fi\n\
    \    done\n    echo \"${_sort}\"\n}\n\ncandidate() {\n    order_by_points \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 11 -1 -11 -12\") = \"-1 -11\
    \ 1 -12 11\" ]]\n    [[ $(candidate \"1234 423 463 145 2 423 423 53 6 37 3457\
    \ 3 56 0 46\") = \"0 2 3 6 53 423 423 423 1234 145 37 46 56 463 3457\" ]]\n  \
    \  [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 -11 -32 43 54 -98 2\
    \ -3\") = \"-3 -32 -98 -11 1 2 43 54\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7\
    \ 8 9 10 11\") = \"1 10 2 11 3 4 5 6 7 8 9\" ]]\n    [[ $(candidate \"0 6 6 -76\
    \ -21 23 4\") = \"-76 -21 0 4 23 6 6\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp5067ope_.sh: line 14: local: `1'': not a valid identifier

    /tmp/tmp5067ope_.sh: line 14: local: `11'': not a valid identifier

    /tmp/tmp5067ope_.sh: line 14: local: `-1'': not a valid identifier

    /tmp/tmp5067ope_.sh: line 14: local: `-11'': not a valid identifier

    /tmp/tmp5067ope_.sh: line 14: local: `-12'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660058481
- exit_code: 2
  program: "#!/bin/bash\n# Write a function which sorts the given list of integers\n\
    # in ascending order according to the sum of their digits.\n# Note: if there are\
    \ several items with similar sum of their digits,\n# order them based on their\
    \ index in original list.\n# For example:\n# >>> $(order_by_points \"1 11 -1 -11\
    \ -12\")\n# ['\"-1\"', '\"-11\"', '\"1\"', '\"-12\"', '\"11\"']\n# >>> $(order_by_points\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\norder_by_points() {\n    if\
    \ [ -z \"$1\" ] ; then\n        echo \"[ -z \"$1 ]\" > /dev/stderr\n        echo\
    \ \"[empty list]\" > /dev/stderr\n        exit 1\n    fi\n    IFS=' ' read -ra\
    \ array <<< \"$1\"\n\n    # sort elements by sum of digits\n    local sorted=()\n\
    \    local -n sums=$BASH_REMATCH\n    local digits=$(( ${#sums[@]} ))\n    local\
    \ index=0\n\n    # sort elements\n    for element in \"${array[@]}\"; do\n   \
    \     sum=${element:$digits:1}\n        sums[$index]=$sum\n        ((index++))\n\
    \    done\n    sorted=( \"${sorted[@]}\" )\n\n    # sort elements by their index\
    \ in original list\n    for index in \"${!sums[@]}\"; do\n        sorted[$index]=\"\
    $index\"\n    done\n\n    # sort elements by their sum\n    for index in \"${!sums[@]}\"\
    ; do\n        sorted[$index]=\"\\\"${sums[$index]}\\\"\"\n    done\n\n    local\
    \ last=${sorted[${#sorted[@]} - 1]}\n    local first=${sorted[0]}\n\n    # output\
    \ sorted elements\n    local result=()\n    for element in \"${sorted[@]:0:$((\
    \ $last - $first + 1 ))}\"; do\n        result+=(\"$element\")\n    done\n   \
    \ echo \"${result[@]}\" > /dev/stderr\n}\n\ncandidate() {\n    order_by_points\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 11 -1 -11 -12\") =\
    \ \"-1 -11 1 -12 11\" ]]\n    [[ $(candidate \"1234 423 463 145 2 423 423 53 6\
    \ 37 3457 3 56 0 46\") = \"0 2 3 6 53 423 423 423 1234 145 37 46 56 463 3457\"\
    \ ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 -11 -32 43 54\
    \ -98 2 -3\") = \"-3 -32 -98 -11 1 2 43 54\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8 9 10 11\") = \"1 10 2 11 3 4 5 6 7 8 9\" ]]\n    [[ $(candidate \"0\
    \ 6 6 -76 -21 23 4\") = \"-76 -21 0 4 23 6 6\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzny05h9v.sh: line 67: unexpected EOF while looking for matching
    `"''

    /tmp/tmpzny05h9v.sh: line 71: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660058481
- exit_code: 2
  program: "#!/bin/bash\n# Write a function which sorts the given list of integers\n\
    # in ascending order according to the sum of their digits.\n# Note: if there are\
    \ several items with similar sum of their digits,\n# order them based on their\
    \ index in original list.\n# For example:\n# >>> $(order_by_points \"1 11 -1 -11\
    \ -12\")\n# ['\"-1\"', '\"-11\"', '\"1\"', '\"-12\"', '\"11\"']\n# >>> $(order_by_points\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\norder_by_points() {\n    local\
    \ number=$1\n    # split numbers into array based on space\n    IFS=' ' read -r\
    \ -a numbers_array <<< \"$number\"\n    # initialize sum array\n    local sums_array=()\n\
    \    # initialize point sum array\n    local point_sums_array=()\n    # initialize\
    \ indexes array\n    local indexes_array=()\n    # initialize output array\n \
    \   local output_array=()\n    # loop through the numbers\n    for (( i=1; i <=\
    \ ${#numbers_array[@]}; i++ )); do\n        sums_array+=(0)\n        point_sums_array+=(0)\n\
    \        indexes_array+=(0)\n        local number=$numbers_array[i]\n        #\
    \ split number into digits and put into array using bash regex split\n       \
    \ IFS=- read -r -a number_digits <<< \"$number\"\n        # loop through the digits\n\
    \        for (( j=0; j < ${#number_digits[@]}; j++ )); do\n            # get current\
    \ digit in current loop\n            local digit=${number_digits[j]}\n       \
    \     # calculate sum of current digit\n            local point_sum=${point_sums_array[j]}+$digit\n\
    \            # put current sum into array and add it to the point sum\n      \
    \      sums_array+=($point_sum)\n            point_sums_array+=($point_sum)\n\
    \            indexes_array+=($j)\n        done\n        # get the max point sum\
    \ from the point sums array\n        local max_point_sum=${point_sums_array[0]}\n\
    \        # loop through the point sums array\n        for (( j=1; j < ${#point_sums_array[@]};\
    \ j++ )); do\n            # get current point sum in current loop\n          \
    \  local point_sum=${point_sums_array[j]}\n            # if the point sum is the\
    \ max point sum, sort it first\n            if [[ $point_sum == $max_point_sum\
    \ ]]; then\n                indexes_array+=(${indexes_array[j]})\n           \
    \ # if the point sum isn't, find out which index is the max point sum\n      \
    \      elif [[ $point_sum != $max_point_sum ]]; then\n                # get the\
    \ index of maximum point sum\n                local max_index=${indexes_array[j]}\n\
    \                # get the current max point sum\n                local max_point_sum=${point_sums_array[$max_index]}\n\
    \                # find the index where current max point sum exceeds the max\
    \ point sum\n                while [[ $max_point_sum > $point_sum ]]; do\n   \
    \                 indexes_array+=(${indexes_array[$max_index]}-1)\n          \
    \          point_sums_array+\n}\n\ncandidate() {\n    order_by_points \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 11 -1 -11 -12\") = \"-1 -11\
    \ 1 -12 11\" ]]\n    [[ $(candidate \"1234 423 463 145 2 423 423 53 6 37 3457\
    \ 3 56 0 46\") = \"0 2 3 6 53 423 423 423 1234 145 37 46 56 463 3457\" ]]\n  \
    \  [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 -11 -32 43 54 -98 2\
    \ -3\") = \"-3 -32 -98 -11 1 2 43 54\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7\
    \ 8 9 10 11\") = \"1 10 2 11 3 4 5 6 7 8 9\" ]]\n    [[ $(candidate \"0 6 6 -76\
    \ -21 23 4\") = \"-76 -21 0 4 23 6 6\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkrbl91tw.sh: line 63: syntax error near unexpected token `}''

    /tmp/tmpkrbl91tw.sh: line 63: `}''

    '
  stdout: ''
  timestamp: 1660058481
- exit_code: 1
  program: "#!/bin/bash\n# Write a function which sorts the given list of integers\n\
    # in ascending order according to the sum of their digits.\n# Note: if there are\
    \ several items with similar sum of their digits,\n# order them based on their\
    \ index in original list.\n# For example:\n# >>> $(order_by_points \"1 11 -1 -11\
    \ -12\")\n# ['\"-1\"', '\"-11\"', '\"1\"', '\"-12\"', '\"11\"']\n# >>> $(order_by_points\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\norder_by_points() {\n  local\
    \ LIST=\"$1\"\n  [[ -z \"$LIST\" ]] || return\n  local SORT_FUNC=\"-n\"\n  local\
    \ ORDERED=()\n  local INDEX=\n  local N=0\n  local INDEXS=()\n  local VAL\n  local\
    \ CHARACTERS=()\n\n  while read -ra CHARACTERS; do\n    ((N++))\n    INDEX=\"\
    $N\"\n    while (( \"$N\" < \"${#CHARACTERS[@]}\" )); do\n      VAL=\"$(echo \"\
    ${CHARACTERS[$N]}\" | cut -c1-2)\"\n      if [[ ! -z \"$INDEX\" ]]; then INDEXS+=(\
    \ \"$INDEX\" ); fi\n      (( N++ ))\n    done\n    (( INDEXS[ ${#INDEXS[@]} ]\
    \ += 1 ))\n    INDEXS[ ${#INDEXS[@]} ]=\"${INDEXS[ ${#INDEXS[@]} ]}\"\n    ORDERED+=(\
    \ \"${INDEXS[*]}\" )\n  done <<< \"$LIST\"\n  echo \"${ORDERED[@]}\"\n}\n\ncandidate()\
    \ {\n    order_by_points \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 11 -1 -11 -12\") = \"-1 -11 1 -12 11\" ]]\n    [[ $(candidate \"1234 423\
    \ 463 145 2 423 423 53 6 37 3457 3 56 0 46\") = \"0 2 3 6 53 423 423 423 1234\
    \ 145 37 46 56 463 3457\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 -11 -32 43 54 -98 2 -3\") = \"-3 -32 -98 -11 1 2 43 54\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8 9 10 11\") = \"1 10 2 11 3 4 5 6 7 8 9\" ]]\n    [[ $(candidate\
    \ \"0 6 6 -76 -21 23 4\") = \"-76 -21 0 4 23 6 6\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058481
- exit_code: 2
  program: "#!/bin/bash\n# Write a function which sorts the given list of integers\n\
    # in ascending order according to the sum of their digits.\n# Note: if there are\
    \ several items with similar sum of their digits,\n# order them based on their\
    \ index in original list.\n# For example:\n# >>> $(order_by_points \"1 11 -1 -11\
    \ -12\")\n# ['\"-1\"', '\"-11\"', '\"1\"', '\"-12\"', '\"11\"']\n# >>> $(order_by_points\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\norder_by_points() {\n    # Sort\
    \ by points (for now) but use original order for tie\n    sort -g $1 | while read\
    \ p; do\n        local n=0\n        local x=0\n        local y=0\n        local\
    \ i=0\n        local s=0\n        local d=${p}\n\n        while [[ $d =~ ^[0-9]+\
    \ ]]; do\n            d=$(expr $(expr <<<\"$d\"*\"$p\")*$(expr <<<\"$s\"*\"$p\"\
    )/$(expr <<<\"$n\"*\"$p\"))\n            i=$(( ${#d} - 1 ))\n            (( n\
    \ += ${#d}))\n            (( x -= ${#d} * $i ))\n            (( s += ${#d} * $((\
    \ ${#d} * ( $i + 1 ))))\n        done\n        echo \"$s\"\n    done\n}\n\ncandidate()\
    \ {\n    order_by_points \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 11 -1 -11 -12\") = \"-1 -11 1 -12 11\" ]]\n    [[ $(candidate \"1234 423\
    \ 463 145 2 423 423 53 6 37 3457 3 56 0 46\") = \"0 2 3 6 53 423 423 423 1234\
    \ 145 37 46 56 463 3457\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 -11 -32 43 54 -98 2 -3\") = \"-3 -32 -98 -11 1 2 43 54\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8 9 10 11\") = \"1 10 2 11 3 4 5 6 7 8 9\" ]]\n    [[ $(candidate\
    \ \"0 6 6 -76 -21 23 4\") = \"-76 -21 0 4 23 6 6\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2prtdxg5.sh: line 31: syntax error near unexpected token `done''

    /tmp/tmp2prtdxg5.sh: line 31: `    done''

    '
  stdout: ''
  timestamp: 1660058481
- exit_code: 1
  program: "#!/bin/bash\n# Write a function which sorts the given list of integers\n\
    # in ascending order according to the sum of their digits.\n# Note: if there are\
    \ several items with similar sum of their digits,\n# order them based on their\
    \ index in original list.\n# For example:\n# >>> $(order_by_points \"1 11 -1 -11\
    \ -12\")\n# ['\"-1\"', '\"-11\"', '\"1\"', '\"-12\"', '\"11\"']\n# >>> $(order_by_points\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\norder_by_points() {\n  local\
    \ ii sum\n  local str=\"$1\"\n\n  ii=${str//-/ }\n  for ii in $ii; do\n    sum=\"\
    $( echo \"$ii*$i\" | bc | tr -d '.' )\" \n    [ $sum != $ii ] && echo \"$sum -\
    \ $ii\" || echo \"$ii\"\n  done\n}\n\ncandidate() {\n    order_by_points \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 11 -1 -11 -12\") = \"-1 -11\
    \ 1 -12 11\" ]]\n    [[ $(candidate \"1234 423 463 145 2 423 423 53 6 37 3457\
    \ 3 56 0 46\") = \"0 2 3 6 53 423 423 423 1234 145 37 46 56 463 3457\" ]]\n  \
    \  [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 -11 -32 43 54 -98 2\
    \ -3\") = \"-3 -32 -98 -11 1 2 43 54\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7\
    \ 8 9 10 11\") = \"1 10 2 11 3 4 5 6 7 8 9\" ]]\n    [[ $(candidate \"0 6 6 -76\
    \ -21 23 4\") = \"-76 -21 0 4 23 6 6\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 2: syntax error

    /tmp/tmpn1s3olei.sh: line 20: [: !=: unary operator expected

    (standard_in) 2: syntax error

    /tmp/tmpn1s3olei.sh: line 20: [: !=: unary operator expected

    (standard_in) 2: syntax error

    /tmp/tmpn1s3olei.sh: line 20: [: !=: unary operator expected

    (standard_in) 2: syntax error

    /tmp/tmpn1s3olei.sh: line 20: [: !=: unary operator expected

    (standard_in) 2: syntax error

    /tmp/tmpn1s3olei.sh: line 20: [: !=: unary operator expected

    '
  stdout: ''
  timestamp: 1660058481
- exit_code: 1
  program: "#!/bin/bash\n# Write a function which sorts the given list of integers\n\
    # in ascending order according to the sum of their digits.\n# Note: if there are\
    \ several items with similar sum of their digits,\n# order them based on their\
    \ index in original list.\n# For example:\n# >>> $(order_by_points \"1 11 -1 -11\
    \ -12\")\n# ['\"-1\"', '\"-11\"', '\"1\"', '\"-12\"', '\"11\"']\n# >>> $(order_by_points\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\norder_by_points() {\n  local\
    \ -n arr=(\"$@\")\n  arr=( \"${arr[@]}\" )\n  local sum\n  local index\n  local\
    \ elements\n  local sorted\n  local key\n  local i\n  local j\n\n  elements=(${(@:)arr[@]})\n\
    \  sum=$(echo \"${elements[*]}\" | xargs printf '%d')\n  sorted=()\n\n  for key\
    \ in \"${!arr[@]}\"; do\n    index=\"${key}\"\n    sorted+=(\"${arr[index]}\"\
    )\n  done\n\n  local i1\n  local i2\n\n  for (( i1=0; i1<${#sorted[*]}; i1++ ));\
    \ do\n    local sum1=\"${sorted[$i1]}\"\n    local i1i1\n    local i1i2\n    local\
    \ j\n\n    for (( j=0; j<${#sorted[*]}; j++ )); do\n      local sum2=\"${sorted[j]}\"\
    \n      local i1i1=\"${i1}\"\n      local i1i2=\"${i1}\"\n\n      # The key must\
    \ be less, equal to or greater than the first sum.\n      [[ \"$sum1\" -le \"\
    $sum2\" ]] \\\n        || [[ \"$sum2\" -ge \"$sum1\" ]] \\\n        || [[ \"$i1i1\"\
    \ -ge \"$i1i2\" ]]\n\n      if [[ \"$sum1\" -le \"$sum2\" ]]; then\n        sorted=(\"\
    ${sorted[@]/$i1i1/$i1i2}\" \"${sorted[@]/$i1i2/$i1i1}\")\n        break\n    \
    \  fi\n\n      if [[ \"$sum2\" -ge \"$sum1\" ]]; then\n        sorted=(\"${sorted[@]/$i1i2/$i1i1}\"\
    )\n        break\n      fi\n\n      if [[ \"$i1i1\" -ge \"$i1i2\" ]]; then\n \
    \       sorted=(\"${sorted[@]/$i1i1/$i1i2}\")\n        break\n      fi\n    done\n\
    \  done\n\n  echo \"${sorted[@]}\"\n}\n\ncandidate() {\n    order_by_points \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 11 -1 -11 -12\") = \"\
    -1 -11 1 -12 11\" ]]\n    [[ $(candidate \"1234 423 463 145 2 423 423 53 6 37\
    \ 3457 3 56 0 46\") = \"0 2 3 6 53 423 423 423 1234 145 37 46 56 463 3457\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 -11 -32 43 54 -98\
    \ 2 -3\") = \"-3 -32 -98 -11 1 2 43 54\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\
    \ 7 8 9 10 11\") = \"1 10 2 11 3 4 5 6 7 8 9\" ]]\n    [[ $(candidate \"0 6 6\
    \ -76 -21 23 4\") = \"-76 -21 0 4 23 6 6\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_v7ya4dq.sh: line 14: local: arr: reference variable cannot be
    an array

    /tmp/tmp_v7ya4dq.sh: line 24: ${(@:)arr[@]}: bad substitution

    '
  stdout: ''
  timestamp: 1660058481
- exit_code: 1
  program: "#!/bin/bash\n# Write a function which sorts the given list of integers\n\
    # in ascending order according to the sum of their digits.\n# Note: if there are\
    \ several items with similar sum of their digits,\n# order them based on their\
    \ index in original list.\n# For example:\n# >>> $(order_by_points \"1 11 -1 -11\
    \ -12\")\n# ['\"-1\"', '\"-11\"', '\"1\"', '\"-12\"', '\"11\"']\n# >>> $(order_by_points\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\norder_by_points() {\n  local\
    \ -n array=\"$1\"\n  # The array is empty.\n  echo \"$array\"\n\n  # Set variable\
    \ for number of array elements (the length of the list).\n  local length=\"${#array[@]}\"\
    \n\n  # The array to hold the result.\n  local -n result=\"$2\"\n\n  # Start at\
    \ index 1, not 0, to allow looping upwards.\n  local index=1\n\n  # Add up each\
    \ digit, starting from the one on the left. At each index\n  # where there is\
    \ a tie, increment the index by 1, and move on to the next digit.\n  while [ \"\
    $index\" -le \"$length\" ]; do\n    local sum=\"$(cut -d \" \" -f1 <<< \"${array[$index]}\"\
    \ | xargs)\"\n    local index=\"${index} + 1\"\n\n    # If this digit already\
    \ exists in the result already, increment it's\n    # value and keep going.\n\
    \    if [[ \" ${result[@]} \" =~ \" ${sum} \" ]]; then\n      ((index+=1))\n \
    \     continue\n    fi\n\n    array[$index]=\"${sum}\"\n    result+=(${sum})\n\
    \  done\n  unset sum\n\n  # Sort the result array in ascending order, using the\
    \ sort command.\n  # The sort command will compare strings lexicographically,\
    \ so the\n  # strings that should be equal in the array will match exactly\n \
    \ # when the string in the array is compared to itself.\n  # This is accomplished\
    \ using \"=~\", which is a regular expression matching\n  # operator. Basically,\
    \ this tells the sort command to only use characters\n  # that match the regex\
    \ \"^[a-zA-Z0-9]+$\" from the beginning of the\n  # string, and the strings are\
    \ exactly the same.\n  local -n strings=$result\n  echo \"${result[@]}\" | sort\
    \ -n | sed 's/ /\\\\ /g' | \\\n    sort -nr | sed 's/ /\\\\ /g' | sort -n | sed\
    \ 's/^/\"/' | \\\n    sed 's/$/\"/g' | sed 's/\"\\\\\"/\"/g'\n}\n\ncandidate()\
    \ {\n    order_by_points \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 11 -1 -11 -12\") = \"-1 -11 1 -12 11\" ]]\n    [[ $(candidate \"1234 423\
    \ 463 145 2 423 423 53 6 37 3457 3 56 0 46\") = \"0 2 3 6 53 423 423 423 1234\
    \ 145 37 46 56 463 3457\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 -11 -32 43 54 -98 2 -3\") = \"-3 -32 -98 -11 1 2 43 54\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8 9 10 11\") = \"1 10 2 11 3 4 5 6 7 8 9\" ]]\n    [[ $(candidate\
    \ \"0 6 6 -76 -21 23 4\") = \"-76 -21 0 4 23 6 6\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpi63nzlsy.sh: line 14: local: `1 11 -1 -11 -12'': invalid variable
    name for name reference

    /tmp/tmpi63nzlsy.sh: line 22: local: `'': not a valid identifier

    /tmp/tmpi63nzlsy.sh: line 53: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660058481
- exit_code: 1
  program: "#!/bin/bash\n# Write a function which sorts the given list of integers\n\
    # in ascending order according to the sum of their digits.\n# Note: if there are\
    \ several items with similar sum of their digits,\n# order them based on their\
    \ index in original list.\n# For example:\n# >>> $(order_by_points \"1 11 -1 -11\
    \ -12\")\n# ['\"-1\"', '\"-11\"', '\"1\"', '\"-12\"', '\"11\"']\n# >>> $(order_by_points\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\norder_by_points() {\n    local\
    \ sorted_list\n\n    sorted_list=$(bc <<< \"$1\" | \\\n    sed -e 's/\\([0-9][0-9]*\\\
    )/\"\\1\"/g' -e 's/ \\(\\-[0-9][0-9]*\\)/\"-\"\\1/g' | \\\n    grep -Eo \"([0-9]+)\"\
    )\n\n    sort -n \"${sorted_list}\"\n}\n\ncandidate() {\n    order_by_points \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 11 -1 -11 -12\") = \"\
    -1 -11 1 -12 11\" ]]\n    [[ $(candidate \"1234 423 463 145 2 423 423 53 6 37\
    \ 3457 3 56 0 46\") = \"0 2 3 6 53 423 423 423 1234 145 37 46 56 463 3457\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 -11 -32 43 54 -98\
    \ 2 -3\") = \"-3 -32 -98 -11 1 2 43 54\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\
    \ 7 8 9 10 11\") = \"1 10 2 11 3 4 5 6 7 8 9\" ]]\n    [[ $(candidate \"0 6 6\
    \ -76 -21 23 4\") = \"-76 -21 0 4 23 6 6\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    sort: cannot read: '''': No such file or directory

    '
  stdout: ''
  timestamp: 1660058481
- exit_code: 1
  program: "#!/bin/bash\n# Write a function which sorts the given list of integers\n\
    # in ascending order according to the sum of their digits.\n# Note: if there are\
    \ several items with similar sum of their digits,\n# order them based on their\
    \ index in original list.\n# For example:\n# >>> $(order_by_points \"1 11 -1 -11\
    \ -12\")\n# ['\"-1\"', '\"-11\"', '\"1\"', '\"-12\"', '\"11\"']\n# >>> $(order_by_points\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\norder_by_points() {\n  # We\
    \ assume $1 is a space-separated list which contains\n  # one or more integers\n\
    \  local -a input=(\"$@\")\n  local -A sums\n  local -a output\n\n  for i in \"\
    ${!input[@]}\"; do\n    local -a digits=($i)\n    local sum\n    for ((i=0; i<${#digits[@]};\
    \ ++i)); do\n      sum=\"${digits[$i]}+$sum\"\n    done\n    ((sums[sum]++))\n\
    \  done\n\n  output=($(sort -n -k 2 <<<\"${!sums[@]}\"))\n\n  for idx in \"${!output[@]}\"\
    ; do\n    printf \"%s\\t%s\\n\" \"${input[$idx]}\" \"$idx\"\n  done\n\n  echo\
    \ \"\"\n}\n\ncandidate() {\n    order_by_points \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 11 -1 -11 -12\") = \"-1 -11 1 -12 11\" ]]\n    [[\
    \ $(candidate \"1234 423 463 145 2 423 423 53 6 37 3457 3 56 0 46\") = \"0 2 3\
    \ 6 53 423 423 423 1234 145 37 46 56 463 3457\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 -11 -32 43 54 -98 2 -3\") = \"-3 -32 -98 -11\
    \ 1 2 43 54\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11\") = \"1 10 2 11\
    \ 3 4 5 6 7 8 9\" ]]\n    [[ $(candidate \"0 6 6 -76 -21 23 4\") = \"-76 -21 0\
    \ 4 23 6 6\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660058481
- exit_code: 2
  program: "#!/bin/bash\n# Write a function which sorts the given list of integers\n\
    # in ascending order according to the sum of their digits.\n# Note: if there are\
    \ several items with similar sum of their digits,\n# order them based on their\
    \ index in original list.\n# For example:\n# >>> $(order_by_points \"1 11 -1 -11\
    \ -12\")\n# ['\"-1\"', '\"-11\"', '\"1\"', '\"-12\"', '\"11\"']\n# >>> $(order_by_points\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\norder_by_points() {\n  local\
    \ IFS=\\\n    '([0-9]' '([0-9-]' '([0-9.]' '([0-9.e-]' '([0-9.e+]' '[0-9.-]' '[0-9.]'\
    \ '[0-9.-]' '[0-9.e-]' '[0-9.e+]' '[0-9.-]' '[0-9.]' '[0-9.-]' '[0-9.e-]' '[0-9.e+]'\
    \ '[0-9.-]' '[0-9.]' '[0-9.-]' '[0-9.e-]' '[0-9.e+]' '[0-9.-]' '[0-9.]' '[0-9.-]'\
    \ '[0-9.e-]' '[0-9.e+]' '[0-9.-]' '[0-9.]' '[0-9.-]' '[0-9.e-]' '[0-9.e+]' '[0-9.-]'\
    \ '[0-9.]' '[0-9.-]' '[0-9.e-]' '[0-9.e+]' '[0-9.-]' '[0-9.]' '[0-9.-]' '[0-9.e-]'\
    \ '[0-9.e+]' '[0-9.-]' '[0-9.]' '[0-9.-]' '[0-9.e-]' '[0-9.e+]' '[0-9.-]' '[0-9.]'\
    \ '[0-9.-]' '[0-9.e-]' '[0-9.e+]' '[0-9.-]' '[0-9.]' '[0-9.-]' '[0-9.e-]' '[0-9.e+]'\
    \ '[0-9.-]' '[0-9.]' '[0-9.-]' '[0-9.e-]' '[0-9.e+]' '[0-9.-]' '[0-9.]' '[0-9.-]'\
    \ '[0-9.e-]' '[0-9.e+]' '[0-9.-]' '[0-9.]' '[0-9.-]' '[0-9.e-]' '[0-9.e+]' '[0-9.-]'\
    \ '[0-9.]' '[0-9.-]' '[0-9.e-]' '[0-9.e+]' '[0-9.-]' '[0-9.]' '[0-9.-]' '[0-9.e-]'\
    \ '[0-9.e+]' '[0-9.-]' '[0-9.]' '[0-9.-]' '[0-9.e-]' '[0-9.e+]' '[0-9.-]' '[0-9.]'\
    \ '[0-9.-]' '[0-9.e-]' '[0-9.e+]' '[0-9.-]' '[0-9.]' '[0-9.-]' '[0-9.e-]' '[0-9.e+]'\
    \ '[0-9.-]' '[0-9.]' '[0-9.-]' '[0-9.e-]' '[0-9.e+]' '[0-9.-]' '[0-9.]' '[0-9.-]'\
    \ '[0-9.e-]' '[0-9.e+]' '[0-9.-\n}\n\ncandidate() {\n    order_by_points \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 11 -1 -11 -12\") = \"-1 -11\
    \ 1 -12 11\" ]]\n    [[ $(candidate \"1234 423 463 145 2 423 423 53 6 37 3457\
    \ 3 56 0 46\") = \"0 2 3 6 53 423 423 423 1234 145 37 46 56 463 3457\" ]]\n  \
    \  [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 -11 -32 43 54 -98 2\
    \ -3\") = \"-3 -32 -98 -11 1 2 43 54\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7\
    \ 8 9 10 11\") = \"1 10 2 11 3 4 5 6 7 8 9\" ]]\n    [[ $(candidate \"0 6 6 -76\
    \ -21 23 4\") = \"-76 -21 0 4 23 6 6\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw3bzql3f.sh: line 15: unexpected EOF while looking for matching
    `''''

    /tmp/tmpw3bzql3f.sh: line 33: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660058481
- exit_code: 1
  program: "#!/bin/bash\n# Write a function which sorts the given list of integers\n\
    # in ascending order according to the sum of their digits.\n# Note: if there are\
    \ several items with similar sum of their digits,\n# order them based on their\
    \ index in original list.\n# For example:\n# >>> $(order_by_points \"1 11 -1 -11\
    \ -12\")\n# ['\"-1\"', '\"-11\"', '\"1\"', '\"-12\"', '\"11\"']\n# >>> $(order_by_points\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\norder_by_points() {\n    local\
    \ input=\"${1:-}\"\n    local output_list\n    local point=\"\"\n    local num_list\n\
    \    local index=\"\"\n    local num_sum=\"\"\n    local i=0\n\n    if [[ \"${input}\"\
    \ == \"\" ]]; then\n        return\n    fi\n\n    output_list=$(sed 's/,$//' <<<\
    \ \"${input}\")\n    for num_string in $output_list; do\n        num_list=($num_string)\n\
    \        num=${num_list[0]}\n        if [[ ${num} =~ ^-?[0-9]+$ ]]; then\n   \
    \         num_sum=$(echo \"${num}\" | awk '{print $1+$2}')\n            if [[\
    \ ${num_sum} -gt 0 ]]; then\n                point=\"${num_list[1]}\"\n      \
    \          index=\"${num_list[0]}\"\n            fi\n        else\n          \
    \  continue\n        fi\n    done\n    i=$(($i + 1))\n    if [[ ${i} -gt ${#output_list}\
    \ ]]; then\n        return\n    fi\n    sort_list \"${i}\" \"${output_list}\"\
    \ \"${point}\" \"${index}\"\n}\n\ncandidate() {\n    order_by_points \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 11 -1 -11 -12\") = \"-1 -11\
    \ 1 -12 11\" ]]\n    [[ $(candidate \"1234 423 463 145 2 423 423 53 6 37 3457\
    \ 3 56 0 46\") = \"0 2 3 6 53 423 423 423 1234 145 37 46 56 463 3457\" ]]\n  \
    \  [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 -11 -32 43 54 -98 2\
    \ -3\") = \"-3 -32 -98 -11 1 2 43 54\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7\
    \ 8 9 10 11\") = \"1 10 2 11 3 4 5 6 7 8 9\" ]]\n    [[ $(candidate \"0 6 6 -76\
    \ -21 23 4\") = \"-76 -21 0 4 23 6 6\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpcko5sdmb.sh: line 44: sort_list: command not found

    '
  stdout: ''
  timestamp: 1660058481

language: sh
name: HumanEval_16_count_distinct_characters
results:
- exit_code: -1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local -n count=\"${1}\"; shift\n  local tmp\n\
    \  count=\"${count//[^A-Za-z]}\"\n  while read -r tmp; do\n    [[ \"${tmp}\" ==\
    \ \"${count}\" ]] && { echo \"0\"; break; }\n    count=\"${count}${count:+1}\"\
    \n  done\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660056931
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local STR=\"$1\"\n    local LENGTH=\"${#STR}\"\
    \n    local CHARCOUNT\n    CHARCOUNT=$(echo \"${STR}\" | sed -E 's/(.)\\1/\\1/'\
    \ | sed -E 's/(.)\\1//' | sort | uniq | wc -c)\n    echo \"$CHARCOUNT\"\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n\tlet count=0\n\twhile read -n 1 -d \"\"; do\n\t\
    \t((count++))\n\tdone <<< \"$1\"\n\techo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local STR=$1\n  \n  local STR_UPPER=\"${STR,,}\"\
    \  # Make upper case\n  local STR_LOWER=\"${STR,,}\"  # Make lower case\n  local\
    \ NUM_DISTINCT_CHARACTERS=\n  \n  local STR_UPPER_LENGTH=0\n  local STR_LOWER_LENGTH=0\n\
    \  \n  for STR_UPPER_INDEX in $(seq 0 ${#STR_UPPER}); do\n    local STR_UPPER_CHAR=$(echo\
    \ \"${STR_UPPER_INDEX}\" | cut -d \\- -f 1)\n    \n    # If the char is different,\
    \ increment the counter\n    if [[ \"${STR_UPPER_CHAR}\" != \"${STR_UPPER[STR_UPPER_INDEX]}\"\
    \ ]]; then\n      NUM_DISTINCT_CHARACTERS=$(( NUM_DISTINCT_CHARACTERS + 1 ))\n\
    \    fi\n    \n    (( STR_UPPER_LENGTH=STR_UPPER_LENGTH + 1 ))\n  done\n  \n \
    \ for STR_LOWER_INDEX in $(seq 0 ${#STR_LOWER}); do\n    local STR_LOWER_CHAR=$(echo\
    \ \"${STR_LOWER_INDEX}\" | cut -d \\- -f 1)\n    \n    # If the char is different,\
    \ increment the counter\n    if [[ \"${STR_LOWER_CHAR}\" != \"${STR_LOWER[STR_LOWER_INDEX]}\"\
    \ ]]; then\n      NUM_DISTINCT_CHARACTERS=$(( NUM_DISTINCT_CHARACTERS + 1 ))\n\
    \    fi\n    \n    (( STR_LOWER_LENGTH=STR_LOWER_LENGTH + 1 ))\n  done\n  \n \
    \ # Return the result\n  echo \"$NUM_DISTINCT_CHARACTERS\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local line\n    local count\n    local c\n\
    \    local len\n\n    len=${#1}\n    count=0\n    for ((i=0; i<$len; i++)); do\n\
    \        c=${1:$i:1}\n        if [[ \"$c\" == \"$c\" ]]; then\n            ((\
    \ count+=1 ))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local STR=\"$1\"\n    local NUM_CHARS\n\n \
    \   NUM_CHARS=0\n    local CHARS\n    local I\n    local CHAR\n\n    for I in\
    \ ${STR}\n    do\n        CHARS=\"${CHARS},$(echo \"$I\" | tr '[:upper:]' '[:lower:]')\"\
    \n        NUM_CHARS=$((NUM_CHARS+1))\n    done\n\n    echo \"$NUM_CHARS\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: -1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string chars=\"${1}\"\n\n  local count=0\n\
    \  while read -r char; do\n    count=$(( $count + ${#chars#$char} ))\n  done\n\
    \n  echo $count\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=15 encoding='utf-8'>
  timestamp: 1660056931
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local STRING=$1\n  local STRING_LENGTH=$((${#STRING}\
    \ + 1))\n  local STRING_LOWER=$(echo ${STRING} | tr [a-z] [[:lower:]])\n  local\
    \ STRING_UPPER=$(echo ${STRING} | tr [A-Z] [[:upper:]])\n  local STRING_LOWER_AND_UPPER=$(echo\
    \ ${STRING} | tr [a-z] [[:lower:]] | tr [A-Z] [[:upper:]])\n  local STRING_TITLE=$(echo\
    \ ${STRING} | tr [A-Z] [[:upper:]] | tr '[:upper:]' '[:lower:]')\n  local STRING_LETTER=$(echo\
    \ ${STRING} | tr [a-z] [[:lower:]])\n\n  echo $STRING_LENGTH\n  echo $STRING_LOWER\n\
    \  echo $STRING_UPPER\n  echo $STRING_LOWER_AND_UPPER\n  echo $STRING_TITLE\n\
    \  echo $STRING_LETTER\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "tr: extra operand \u2018k\u2019\nTry 'tr --help' for more information.\n\
    tr: misaligned [:upper:] and/or [:lower:] construct\ntr: extra operand \u2018\
    k\u2019\nTry 'tr --help' for more information.\ntr: misaligned [:upper:] and/or\
    \ [:lower:] construct\ntr: misaligned [:upper:] and/or [:lower:] construct\ntr:\
    \ extra operand \u2018k\u2019\nTry 'tr --help' for more information.\n"
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string_=\"$1\"\n    local length=\"${#string_}\"\
    \n\n    local distinct_character_count=0\n    local string_with_distinct_characters=\"\
    \"\n\n    while [[ \"$string_\" ]]; do\n        string_with_distinct_characters=\"\
    ${string_with_distinct_characters}${string_:0:1}\"\n        string_=\"${string_:1}\"\
    \n        distinct_character_count=\"$((distinct_character_count+1))\"\n    done\n\
    \n    echo \"$distinct_character_count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    # Convert string to\
    \ lowercase\n    local lowercase=$(echo \"$string\" | tr [a-z] [A-Z])\n    # Count\
    \ characters\n    local count_characters=$(echo \"$lowercase\" | tr [a-z] [A-Z]\
    \ | wc -l)\n    # Return count\n    echo \"$count_characters\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "tr: extra operand \u2018[A-Z]\u2019\nTry 'tr --help' for more information.\n\
    tr: extra operand \u2018[A-Z]\u2019\nTry 'tr --help' for more information.\ntr:\
    \ extra operand \u2018[A-Z]\u2019\nTry 'tr --help' for more information.\ntr:\
    \ extra operand \u2018[A-Z]\u2019\nTry 'tr --help' for more information.\n"
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local c=0\n    for i in $(echo $1 | sed 's/[[:upper:]]/\\\
    n/g' | sed 's/[[:lower:]]/\\n/g' | sed 's/[^[:alpha:][:space:]]/\\n/g' | sort\
    \ | uniq); do\n        c=$((c+1))\n    done\n    echo \"$c\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local str=$1\n  [[ -z $str ]] && echo \"0\" &&\
    \ return 0\n  local count=0\n  local char\n  \n  while read -r char; do\n    ((\
    \ count++ ))\n  done <<< \"$str\"\n  \n  echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local char_count=0\n\
    \n    while [ $string ]; do\n        char_count=`echo $char_count | expr $char_count\
    \ + 1`\n        string=${string#?}\n    done\n\n    echo $char_count\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n\techo $1 | tr '[:upper:]' '[:lower:]' | tr ' '\
    \ '\\n' | sort -u | wc -c\n}\n\ncandidate() {\n    count_distinct_characters \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  perl -ne 'BEGIN { %h=(); } ($h{$_}++ for split//);\
    \ print \"$h{$_}\\n\"'  $1\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'syntax error at -e line 1, near "++ for "

    Execution of -e aborted due to compilation errors.

    '
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    chars=()\n    local i=0\n    while ((${#1}>i));\
    \ do\n        chars[${#chars[*]}]=${1:i:1}\n        ((i+=1))\n    done\n    echo\
    \ ${#chars[*]}\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  echo \"$1\" | tr \"[A-Z]\" \" \" | sed \"s/\\\
    (.\\)/\\1 /g\" | wc -c\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local chars=$1\n\n  local char_count=0\n  local\
    \ cur_char\n  local cur_char2\n  local cur_char3\n  local cur_char4\n\n  local\
    \ i\n\n  for ((i=1; i<${#chars}; i++)); do\n    cur_char=${chars:$i:1}\n    cur_char2=${chars:$i:2}\n\
    \    cur_char3=${chars:$i:3}\n    cur_char4=${chars:$i:4}\n\n    if ((${#cur_char}\
    \ == 1)); then\n      ((char_count += 1))\n    elif [[ ${#cur_char2} -gt 1 ]];\
    \ then\n      ((char_count += 1))\n    elif [[ ${#cur_char3} -gt 1 ]]; then\n\
    \      ((char_count += 1))\n    elif [[ ${#cur_char4} -gt 1 ]]; then\n      ((char_count\
    \ += 1))\n    fi\n  done\n\n  echo \"$char_count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  # Remove trailing newlines, otherwise the while\
    \ loop below stops at \"e\"\n  local string=\"$1\" # Don't change this!\n  local\
    \ count=0\n  while [ \"${#string}\" -gt 0 ]\n  do\n    case \"${string^}\" in\n\
    \      *[a-zA-Z]* | [A-Z]*[a-z] | [A-Z]*[A-Z]* )\n        (( count+=1 ))\n   \
    \     ;;\n      *)\n        (( count+=2 ))\n        ;;\n    esac\n    string=\"\
    ${string%?}\"\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local str=\"$1\"\n    local len=0\n    local\
    \ chars=\"\"\n    local uniquechars=0\n    local nonuniquechars=0\n    local firstchar\n\
    \n    if [ -z \"$str\" ]; then\n        return 0\n    fi\n\n    for ((i=1; i<\"\
    ${#str}\"; i++)); do\n        firstchar=\"${str:i:1}\"\n        if [[ \"$firstchar\"\
    \ == \"$str\" ]]; then\n            firstchar=\"\"\n        fi\n        if [[\
    \ \"$firstchar\" == \"\" ]]; then\n            firstchar=\"A\"\n        fi\n\n\
    \        if [[ \"$chars\" == *\"$firstchar\"* ]]; then\n            nonuniquechars+=1\n\
    \        else\n            uniquechars+=1\n            chars=\"${chars}$firstchar\"\
    \n        fi\n    done\n\n    len=$(( ${#chars} / 2 ))\n\n    return $len\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: -1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local count=0\n  local character\n\
    \  local previous=${string#?}\n  while [ -n \"${previous}\" ]; do\n    character=${previous#?}\n\
    \    if [ \"${character}\" != \"${previous}\" ]; then\n      ((count++))\n   \
    \ fi\n    previous=${previous%${character}}\n  done\n  echo \"${count}\"\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=34 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=27 encoding='utf-8'>
  timestamp: 1660056931
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  echo \"${1//[^a-zA-Z]}\" | sort -u | wc -c\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  [[ -z \"$1\" ]] && return 1\n  [[ \"$1\" =~ [a-z]\
    \ ]] && return 0\n  [[ \"$1\" =~ [A-Z] ]] && return 0\n  [[ \"$1\" =~ [0-9] ]]\
    \ && return 0\n  [[ \"$1\" =~ \\. ]] && return 0\n  [[ \"$1\" =~ \\# ]] && return\
    \ 0\n  [[ \"$1\" =~ \\$ ]] && return 0\n  [[ \"$1\" =~ \\% ]] && return 0\n  [[\
    \ \"$1\" =~ \\@ ]] && return 0\n  [[ \"$1\" =~ \\[ ]] && return 0\n  [[ \"$1\"\
    \ =~ \\] ]] && return 0\n  [[ \"$1\" =~ \\( ]] && return 0\n  [[ \"$1\" =~ \\\
    ) ]] && return 0\n  [[ \"$1\" =~ \\? ]] && return 0\n  [[ \"$1\" =~ \\~ ]] &&\
    \ return 0\n  [[ \"$1\" =~ \\^ ]] && return 0\n  [[ \"$1\" =~ \\_ ]] && return\
    \ 0\n  [[ \"$1\" =~ \\` ]] && return 0\n  [[ \"$1\" =~ \\/ ]] && return 0\n  [[\
    \ \"$1\" =~ \\[ ]] && return 0\n  [[ \"$1\" =~ \\] ]] && return 0\n  [[ \"$1\"\
    \ =~ \\( ]] && return 0\n  [[ \"$1\" =~ \\) ]] && return 0\n  [[ \"$1\" =~ \\\
    ? ]] && return 0\n  [[ \"$1\" =~ \\~ ]] && return 0\n  [[ \"$1\" =~ \\^ ]] &&\
    \ return 0\n  [[ \"$1\" =~ \\_ ]] && return 0\n  [[ \"$1\" =~ \\` ]] && return\
    \ 0\n  [[ \"$1\" =~ \\/ ]] && return 0\n  [[ \"$1\" =~ \\[ ]] && return 0\n  [[\
    \ \"$1\" =~ \\] ]] && return 0\n  [[ \"$1\" =~ \\( ]] && return 0\n  [[ \"$1\"\
    \ =~ \\) ]] && return 0\n  [[ \"$1\" =~ \\? ]] && return 0\n  [[ \"$1\" =~ \\\
    ~ ]] && return 0\n  [[ \"$1\" =~ \\^ ]] && return 0\n  [[ \"$1\" =~ \\_ ]] &&\
    \ return 0\n  [[ \"$1\" =~ \\` ]] && return 0\n  [[ \"$1\" =~ \\/ ]] && return\
    \ 0\n  [[ \"$1\" =~ \\\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpba9mqx3s.sh: line 49: syntax error in conditional expression

    /tmp/tmpba9mqx3s.sh: line 52: syntax error near `candidate(''

    /tmp/tmpba9mqx3s.sh: line 52: `candidate() {''

    '
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local count=${#string}\n \
    \ local alphabet=${2:-abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ}\n\n\
    \  # Count the number of unique characters in the string\n  local unique_characters=0\n\
    \  for ((i=0; i<count; i++)); do\n    local c=$(expr $i \\* ${#alphabet})\n  \
    \  local character=${alphabet:$c:1}\n    \n    # Make sure we don't count the\
    \ character itself\n    (( unique_characters *= ${#alphabet} )) && [[ $unique_characters\
    \ -gt 1 ]] || break\n    \n    unique_characters+=${#character}\n  done\n  \n\
    \  echo $unique_characters\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string count=0\n  string=\"$1\"\n\n  while\
    \ IFS= read -r char\n  do\n    ((count++))\n  done < <(tr -dc A-Z \"$string\"\
    \ | sort -u)\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "tr: extra operand \u2018\u2019\nOnly one string may be given when deleting\
    \ without squeezing repeats.\nTry 'tr --help' for more information.\ntr: extra\
    \ operand \u2018abcde\u2019\nOnly one string may be given when deleting without\
    \ squeezing repeats.\nTry 'tr --help' for more information.\n"
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  echo $1 | grep -o [a-z] | sort | uniq | wc -l\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local characters=()\n    for character in ${string//?}; do\n        characters+=(\"\
    $character\")\n    done\n    count=\"${#characters[@]}\"\n    [[ \"${count}\"\
    \ -gt 0 ]] && echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n\tlocal _line=\"$1\"\n\t# echo \"${_line}\" | sed\
    \ 's/^[ ]*//g;s/[ ]*$//g'\n\tlocal -a _distinct\n\tlocal _c\n\tlocal -i _total=0\n\
    \tlocal -i _first=1\n\tlocal -i _last=0\n\tlocal -i _len=0\n\twhile read -r _c;\
    \ do\n\t\t_len=$((_len + 1))\n\t\t[ -z \"${_distinct[$_c]}\" ] &&\n\t\t\t( _distinct[$_c]=0\
    \ && _total=$((_total + 1)) )\n\tdone <<< \"${_line}\" # Ignore leading and trailing\
    \ whitespaces\n\tunset _c\n\tfor _char; do\n\t\t[[ -z \"${_distinct[$_char]}\"\
    \ ]] &&\n\t\t\t( _distinct[$_char]=0 && _total=$((_total + 1)) )\n\tdone\n\techo\
    \ \"${_total}\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local STR=$1\n  local RESULT\n\n  RESULT=0\n\
    \  for CHAR in ${STR}; do\n    case $CHAR in\n      [a-z])\n        ((RESULT+=1))\n\
    \        ;;\n      [A-Z])\n        ((RESULT+=1))\n        ;;\n      *)\n     \
    \   ((RESULT+=1))\n        ;;\n    esac\n  done\n\n  echo $RESULT\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    if [ ! -z \"$1\" ];\n    then\n        echo\
    \ \"${#1}\" | sort | uniq | wc -l\n    fi\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    echo $(echo $string |\
    \ tr [A-Z] [A-Z][a-z])\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local _ret=0\n    local _args=()\n\n    # Save\
    \ the arguments\n    _args=(\"${@}\")\n\n    local string\n\n    for string in\
    \ \"${_args[@]}\"; do\n        local _ret=0\n        local _counter=0\n      \
    \  local _character\n        local _character_count\n\n        for _character\
    \ in \"${string}\"; do\n            # Count character\n            _counter=$((\
    \ ${_counter} + 1 ))\n        done\n\n        # Save the result\n        if [\
    \ $_counter -gt $(( ${#string} - 1 )) ]; then\n            _ret =$(( ${_ret} +\
    \ 1 ))\n        fi\n    done\n\n    # Return\n    echo $_ret\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_n16jdu0.sh: line 31: _ret: command not found

    '
  stdout: ''
  timestamp: 1660056926
- exit_code: -1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  awk '{ for (i = 1; i <= NF; ++i) unique[$i]++\
    \ }\n     END { for (i in unique) print i }'\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=16 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=6 encoding='utf-8'>
  timestamp: 1660056931
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local char_count=\"$(count_distinct\
    \ \"$string\")\"\n  echo \"$char_count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxhkwh7wo.sh: line 11: count_distinct: command not found

    '
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  [[ -z \"$string\" ]] &&\
    \ return 1\n  local count=${#string}\n  local chars=\"\"\n\n  for ((i=0; i<$count;\
    \ i++)); do\n    local curr=${string:$i:1}\n    [[ -z \"$curr\" ]] && return 0\n\
    \    local prev=${string:$i-1:1}\n    [[ -z \"$prev\" ]] && prev=\"\"\n    chars=$chars$curr$prev\n\
    \  done\n  echo \"${#chars}\" # print number of distinct characters\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n\n    # count number of\
    \ distinct characters in the given string\n    local number_of_characters=`echo\
    \ ${string} | wc -c`\n    echo $number_of_characters\n}\n\ncandidate() {\n   \
    \ count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    echo \"${1//[^[:lower:]]}\" | sort | uniq -c\
    \ | sed -E 's/^ *([0-9]*) *$/1/'\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n\n  # Escape special characters,\
    \ including newlines\n  string=\"${string//\\'/\\'\\\\\\'\\'}\"\n  string=\"${string//\\\
    \"/\\\"\\\\\\\"\\\"}\"\n  string=\"${string//&/\\\\&}\"\n  string=\"${string////\\\
    \\//}\"\n\n  # Escape any \\ followed by a single quote\n  string=\"${string//\\\
    \\\\'/\\\\\\'\\\\\\\\\\'}\"\n\n  # Escape any \\ followed by a single quote\n\
    \  string=\"${string//\\\\\\\"/\\\\\\\"\\\\\\\\\\\"}\"\n\n  # Escape any \\ followed\
    \ by a single quote\n  string=\"${string//\\\\&/\\\\&\\\\\\\\&}\"\n\n  # Escape\
    \ any \\ followed by a newline, followed by an 'n'\n  string=\"${string//\\\\\\\
    \\n/'\\\\\\\\\\\\n'\\\\\\\\n\\\\\\\\n'}\"\n\n  # Count all distinct characters\
    \ (regardless of case)\n  # Note: This would return an error in Bash 4 if set\
    \ -u (-u in Bash 3).\n  local characters=$(echo -n \"$string\" | sort -u -k2)\n\
    \  echo $characters\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmmzlvyb8.sh: line 28: unexpected EOF while looking for matching
    `''''

    /tmp/tmpmmzlvyb8.sh: line 50: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n\tset -- $1 &&\n\tlet n=${#1} - 1 &&\n\tfor i in\
    \ $(seq 0 $n); do\n\t\t[ \"${#1[$i]}\" != 0 ] &&\n\t\t[ \"${#1[$i]}\" != 1 ] &&\n\
    \t\tlet \"n--\"\n\tdone\n\techo $n\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmp0mg5uy.sh: line 11: let: -: syntax error: operand expected (error
    token is "-")

    /tmp/tmpmp0mg5uy.sh: line 11: let: -: syntax error: operand expected (error token
    is "-")

    /tmp/tmpmp0mg5uy.sh: line 11: let: -: syntax error: operand expected (error token
    is "-")

    '
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    # $1 is a string\n    local str=\"${1}\"\n\
    \    local length=\"${#str}\"\n    local unique_chars=\"\"\n    local unique_chars_count=0\n\
    \    for ((i=0; i<${length}; i++)); do\n        # Append each character in the\
    \ string\n        unique_chars=\"${unique_chars}${str[i]:0:1}\"\n        unique_chars_count=$((${unique_chars_count}+1))\n\
    \    done\n    echo ${unique_chars_count}\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"${1}\"\n    local count=0\n\
    \    # Iterate over the string and count the distinct characters\n    for c in\
    \ \"${string}\"; do\n        if [[ \"${string: -1: 1}\" == \"${c:0:1}\" ]]; then\n\
    \            (( ++count ))\n        fi\n    done\n    echo \"${count}\"\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  echo $1 | awk '{ for(i = 1; i <= NF; i++) { a[$i]++;\
    \ } }; END { for(i = 1; i <= length(a); i++) { print a[$i]; } }'\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local number_of_distinct_characters=$(echo\
    \ \"$string\" | tr \"[A-Z]\" \"[a-z]\" | sort | uniq | wc -l | cut -d ' ' -f 1)\n\
    \  echo \"$number_of_distinct_characters\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local characters=\"\
    ${string}\"\n    local n=1\n    local output\n\n    echo -n \"${characters}\"\n\
    \    while [ \"$n\" -le \"${#characters}\" ]; do\n        local character=\"${characters:$n:1}\"\
    \n        case \"${character}\" in\n            [a-z]*)\n                if [[\
    \ \"${string}\" =~ \"${character}\" ]]; then\n                    output=\"$((output+1))\"\
    \n                fi\n                ;;\n            [A-Z]*)\n              \
    \  if [[ \"${string}\" =~ \"${character}\" ]]; then\n                    output=\"\
    $((output+1))\"\n                fi\n                ;;\n            *)\n    \
    \            echo \"Not a letter -> ${character}\"\n                ;;\n     \
    \   esac\n        n=$((n+1))\n    done\n    echo \"${output}\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local input=\"$1\"\n  local number_of_characters=\"\
    ${input:0:1}\"\n  local number_of_non_matching_characters=\"${input:2:1}\"\n \
    \ local number_of_matching_characters=\"${input:1:1}\"\n  # echo $number_of_matching_characters,\
    \ $number_of_non_matching_characters\n  while [ \"$number_of_matching_characters\"\
    \ != \"$number_of_characters\" ]\n  do\n    number_of_characters=\"$number_of_non_matching_characters\"\
    \n    number_of_non_matching_characters=\"${input:2:1}\"\n    number_of_matching_characters=\"\
    ${input:1:1}\"\n  done\n  echo $number_of_characters\n}\n\ncandidate() {\n   \
    \ count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local str=\"$1\"\n\n    # Turn it into lower\
    \ case to ease the comparison\n    str=$(tr [a-z] [A-Z] <<< \"$str\")\n\n    #\
    \ Count how many times each character appears\n    local count=0\n    for c in\
    \ $(tr [A-Z] [a-z] <<< \"$str\"); do\n        ((count+=\"1\"))\n    done\n   \
    \ echo $((${count/${#str}}))\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "tr: extra operand \u2018[A-Z]\u2019\nTry 'tr --help' for more information.\n\
    tr: extra operand \u2018x\u2019\nTry 'tr --help' for more information.\ntr: extra\
    \ operand \u2018[A-Z]\u2019\nTry 'tr --help' for more information.\ntr: extra\
    \ operand \u2018x\u2019\nTry 'tr --help' for more information.\n"
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n\tlocal str=\"$1\"\n\t# Count how many distinct\
    \ characters there are in the string\n\techo \"${str^^}\" | sort | uniq | wc -l\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local IFS=$'\\n'\n    local input=\"$1\"\n\
    \    local length\n    local count\n    length=\"${#input}\"\n    count=0\n  \
    \  for (( i=0; i<\"${#input}\"; i++ )); do\n        local c=\"${input:$i:1}\"\n\
    \        case \"${c}\" in\n            [[:upper:]]) count=$((count+1)); continue;;\n\
    \            [[:lower:]]) count=$((count+1));continue;;\n            [[:digit:]])\
    \ count=$((count+1));continue;;\n            [[:space:]]) count=$((count+1));continue;;\n\
    \        esac\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n   if [ -z \"$1\" ]\n   then\n      echo \"Usage:\
    \ $(basename $0) <string>\"\n      return 1\n   fi\n   # We could improve this\
    \ to just use tr to count the distinct characters, but it's very slow\n   echo\
    \ $1 | tr [A-Z] [A-Z] | tr [a-z] [a-z] | tr [0-9] [0-9] | wc -c\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=\"1\"\n  local\
    \ i\n  for i in \"${string}\"; do\n    [[ $i != $i ]] && let \"count++\"\n  done\n\
    \  echo $count\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: -1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  # Convert to lower case\n  local string=\"${1^^}\"\
    \n\n  # Count the number of characters\n  local count=0\n  while [ \"${string}\"\
    \ != \"\" ]; do\n    count=$(( $count + 1 ))\n    string=${string/[^A-Za-z0-9]/}\n\
    \  done\n\n  echo $count\n}\n\ncandidate() {\n    count_distinct_characters \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=52 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=38 encoding='utf-8'>
  timestamp: 1660056931
- exit_code: -1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local count=0\n    local current_character\n\
    \n    IFS=$'\\n' read -r -d '' -n 1 current_character\n    for ((i=0;i<${#1}-1;i++))\n\
    \    do\n        if [[ ${current_character} == \"${1:i:1}\" ]]; then\n       \
    \     ((count++))\n            ((i=i-1))\n        else\n            ((count=count+1))\n\
    \            ((i=i-1))\n            ((current_character=${1:i:1}))\n        fi\n\
    \    done\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[\
    \ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\"\
    ) = \"5\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=18 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=35 encoding='utf-8'>
  timestamp: 1660056931
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    echo \"$(echo \"${1}\" | tr [A-Z] [A-Z]\\\\\
    n | sort -u | wc -c) distinct characters in '${1}'\"\n}\n\ncandidate() {\n   \
    \ count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    echo \"$1\" | sort | uniq -c | sed -e 's/^\
    \ *//' -e 's/ *$//'\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local number_of_distinct_characters=0\n\
    \    for character in $string; do\n        case $character in\n            'A'|'a'|'B'|'b'|'C'|'c'|'D'|'d'|'E'|'e'|'F'|'f'|'G'|'g'|'H'|'h'|'I'|'i'|'J'|'j'|'K'|'k'|'L'|'l'|'M'|'m'|'N'|'n'|'O'|'o'|'P'|'p'|'Q'|'q'|'R'|''|''|'S'|'s'|'T'|'t'|'U'|'u'|'V'|'v'|'W'|'w'|'X'|'x'|'Y'|'y'|'Z'|'z')\n\
    \                number_of_distinct_characters=$((number_of_distinct_characters\
    \ + 1))\n                ;;\n            *)\n                number_of_distinct_characters=$((number_of_distinct_characters\
    \ + 1))\n                ;;\n        esac\n    done\n    echo \"$number_of_distinct_characters\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local n=0\n    local s=$1\n    local c\n  \
    \  for (( i=1; i<${#s}; i++ )); do\n\tc=$(echo $s | cut -c1- | sed 's/^.//' |\
    \ sed 's/^..//' | sed 's/^...//')\n\tif [[ ${c} == ${s:0:i} ]]; then\n\t    n=$((n+1))\n\
    \tfi\n    done\n    echo \"$n\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    awk '{\n       gsub( /./,\"\",$1 )\n      \
    \ print length( $1 )\n    }' < \"$1\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpc7rpp15o.sh: line 13: : No such file or directory

    '
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local str=\"$1\"\n  if [[ $str == *\"a\"* ]]\
    \ ; then\n    echo 0\n  else\n    local count=0\n    local i\n    for (( i=0 ;\
    \ i<${#str} ; i++ )) ; do\n      local j\n      for (( j=0 ; j<i ; j++ )) ; do\n\
    \        if [[ \"${str:$i:1}\" != \"${str:$j:1}\" ]] ; then\n          let count=$count\
    \ + 1\n          break\n        fi\n      done\n    done\n    echo \"$count\"\n\
    \  fi\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local characters=$(echo \"\
    $string\" | sed -e 's/\\(.*\\)\\(.\\)\\(.*\\)/\\1\\2\\3/g' | sed -e 's/[^a-zA-Z]//g'\
    \ | sort -u)\n\n  if [ ! \"$characters\" ]; then\n    return 0\n  fi\n\n  echo\
    \ \"${#characters}\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local STR=\"$1\"\n    local LENGTH\n\n    LENGTH=${#STR}\n\
    \n    echo \"$LENGTH\" | bc -l\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: -1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ character\n  character=$(echo \"$string\" | tr [A-Z] [a-z])\n  count=$(( ${#string}\
    \ - 1 ))\n  while [[ \"$character\" != \"z\" ]]; do\n    character=$(echo \"$string\"\
    \ | tr [a-z] [A-Z])\n    ((count--))\n  done\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=29 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=5 encoding='utf-8'>
  timestamp: 1660056931
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n\tlocal str=$1\n\t# Make sure that the string contains\
    \ at least one character, otherwise we can't calculate its length properly\n\t\
    if [[ -n $str ]]; then\n\t\tlocal count=0\n\t\tlocal lower\n\t\tlocal upper\n\t\
    \tlocal lower2\n\t\tlocal upper2\n\t\t# Convert the string to lower case\n\t\t\
    lower=${str:0:1}\n\t\tupper=${str:0:1}\n\t\tlower2=$(echo $lower | sed \"s/[a-z]/\\\
    u&/g\")\n\t\tupper2=$(echo $upper | sed \"s/[A-Z]/\\u&/g\")\n\t\t# Loop over all\
    \ characters in the string\n\t\twhile [[ -n $str ]]; do\n\t\t\t# Check if the\
    \ current character is a lowercase or uppercase letter\n\t\t\tif [[ \"$str\" ==\
    \ $lower || $str == $lower2 || $str == $upper || $str == $upper2 ]]; then\n\t\t\
    \t\tlet count+=1\n\t\t\telse\n\t\t\t\tlet count-=1\n\t\t\tfi\n\t\t\t# Get the\
    \ next character\n\t\t\tstr=\"${str:1}\"\n\t\tdone\n\t\techo \"$count\"\n\telse\n\
    \t\techo \"0\"\n\tfi\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n\n  # Count how many different\
    \ characters there are in the string\n  local count=1\n  while [ \"$string\" !=\
    \ \"\" ]; do\n    (( count++ ))\n    string=\"${string//[^A-Za-z0-9]}\"\n  done\n\
    \n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n\tlocal -r string=\"$1\"\n\techo $(\"$string\"\
    \ | tr A-Z a-z | sort | uniq -c)\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpc2zvldot.sh: line 11: : command not found

    '
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    echo $1 | tr [:upper:] [:lower:] | wc -c\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local STRING=\"$1\"\n  # shellcheck disable=SC2154\n\
    \  echo \"${#STRING}\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local count=0\n    local characters=${1}\n\
    \    for (( i=0 ; i < ${#characters} ; i++ )); do\n        [[ \"${characters:$i:1}\"\
    \ == \"${characters:$i:1}\" ]]\n        (( count++ ))\n    done\n    echo ${count}\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local x=\"$1\";\n    local num_distinct=0;\n\
    \    for ((i=0;i<${#x};i++)); do\n        [[ \"${x[i]}\" = \"${x[i+1]}\" ]] &&\
    \ num_distinct=num_distinct+1;\n    done\n    echo \"${num_distinct}\";\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  echo \"$1\" |\n    sed -e 's/[[:upper:]]//g'\
    \ -e 's/[[:lower:]]//g' | # remove all uppercase letters\n    sed -e 's/[[:digit:]]//g'\
    \ | # remove all numbers\n    sort -u | # remove duplicates\n    wc -c\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    IFS='' read -r -d '' \"$1\" <<< \"$1\"\n  \
    \  local count=0\n    local char\n    for char; do\n        [[ \"$char\" == [A-Za-z]\
    \ ]] && let count+=1 && continue\n        [[ \"$char\" == [a-z] ]] && let count+=1\
    \ && continue\n        [[ \"$char\" == [A-Z] ]] && let count+=1 && continue\n\
    \        [[ \"$char\" == [0-9] ]] && let count+=1 && continue\n        [[ \"$char\"\
    \ == \"'\" ]] && let count+=1 && continue\n        [[ \"$char\" == \"-\" ]] &&\
    \ let count+=1 && continue\n        [[ \"$char\" == \".\" ]] && let count+=1 &&\
    \ continue\n        [[ \"$char\" == \"_\" ]] && let count+=1 && continue\n   \
    \     [[ \"$char\" == \"-\" ]] || let count+=1\n    done\n    echo \"$count\"\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmwa4yo87.sh: line 10: read: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local output\n    output=$(echo\
    \ $string | tr A-Z a-z | sort | uniq)\n    echo $(echo $output | wc -c)\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: -1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local -n characters=$1\n  local -n chars=${characters[*]}\
    \ # We don't want to modify the characters in place\n  local count character\n\
    \  while read -r character; do\n    ((count++))\n  done\n  echo \"$count\"\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=50 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=20 encoding='utf-8'>
  timestamp: 1660056931
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local chars=\"\"\n    local words=\"\"\n  \
    \  local chars_array=()\n    local words_array=()\n    # Go through each character\
    \ and save it into an array\n    while read -r char; do\n        chars+=\"$char\"\
    \n        chars_array+=(\"$char\")\n    done < \"$1\"\n    # Go through each word\
    \ and save it into an array\n    while read -r word; do\n        words=\"$words\
    \ $word\"\n        words_array+=(\"$word\")\n    done < \"$1\"\n\n    # If there\
    \ are no characters left in $1 then return 0\n    if [ \"${#chars_array[@]}\"\
    \ -gt 0 ]; then\n        # Go through each char and count how many times the char\
    \ appears in the array\n        for char1 in \"${chars_array[@]}\"; do\n     \
    \       for char2 in \"${chars_array[@]}\"; do\n                count=0\n    \
    \            if [ \"${char1}\" != \"$char2\" ]; then\n                    for\
    \ char3 in \"${chars_array[@]}\"; do\n                        if [ \"$char1\"\
    \ != \"$char3\" ]; then\n                            let \"count+=1\"\n      \
    \                  fi\n                    done\n                fi\n        \
    \        let \"distinct+=$count\"\n            done\n        done\n    fi\n\n\
    \    # If there are no words left in $1 then return 0\n    if [ \"${#words_array[@]}\"\
    \ -gt 0 ]; then\n        # Go through each word and count how many times the word\
    \ appears in the array\n        for word in \"${words_array[@]}\"; do\n      \
    \      for char1 in \"${chars_array[@]}\"; do\n                count=0\n     \
    \           if [ \"$word\" != \"$char1\" ]; then\n                    for char2\
    \ in \"${chars_array[@]}\"; do\n                        if [ \"$word\" != \"$char2\"\
    \ ]; then\n                            let \"count+=1\"\n                    \
    \    fi\n                    done\n                fi\n                let \"\
    distinct+=$count\"\n            done\n        done\n    fi\n    echo \"$distinct\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzsmcrwef.sh: line 9: : No such file or directory

    /tmp/tmpzsmcrwef.sh: line 9: : No such file or directory

    '
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local characters=$(echo\
    \ \"$string\" | tr [A-Z] [A-Z])\n  local count=$(echo \"$string\" | tr [A-Z] \\\
    0) | wc -c\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local i charCount\n    for ((i=0; i < ${#1};\
    \ i++)); do\n        charCount=0\n        case \"${1:$i:1}\" in\n            A..Z)\
    \ charCount=$((${charCount} + 26)) ;;\n            a[bc]) charCount=$((${charCount}\
    \ + 26)) ;;\n            a[[:lower:]])\n            case ${1:$i:1} in \n     \
    \           a*) charCount=$((${charCount} + 26)) ;;\n            esac ;;\n   \
    \         A[[:upper:]])\n            case ${1:$i:1} in \n                A*) charCount=$((${charCount}\
    \ + 26)) ;;\n            esac ;;\n            *)\n            case ${1:$i:1} in\
    \ \n                [[:digit:]]*) charCount=$((${charCount} + 10)) ;;\n      \
    \          [[:alpha:]]*) charCount=$((${charCount} + 26)) ;;\n               \
    \ [[:alpha:]][[:digit:]]*) charCount=$((${charCount} + 10)) ;;\n            *)\
    \ charCount=$((${charCount} + ${1:$i:1}))\n            esac ;;\n        esac\n\
    \    done\n    echo \"${charCount}\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local characters=\"$1\"\n    local result=\n\
    \    for ((i=0; i<${#characters}; i++)); do\n        local first_char=\"${characters:i:1}\"\
    \n        local next_char=\"${characters:i+1:1}\"\n        if [[ \"$first_char\"\
    \ == \"$next_char\" ]]; then\n            result+=\"1\"\n        else\n      \
    \      result+=\"0\"\n        fi\n    done\n    echo $result\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local arg\n    local count\n    local i\n \
    \   local n\n    \n    for arg in \"$@\"; do\n        count=0\n        n=0\n \
    \       \n        for ((i=1; i<${#arg}; i++)); do\n            if [[ \"${arg:i:1}\"\
    \ == \"$arg:i:1\" ]]; then\n                n=$((n+1))\n                count=$((count+1))\n\
    \            else\n                break\n            fi\n        done\n     \
    \   \n        echo \"${count}\"\n    done\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local char_count=0\n\
    \    local char\n    for char in \"${string//[$'[:upper:]\\''[:lower:]]/-}\";\
    \ do\n        ((char_count++))\n    done\n    echo \"$char_count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local STR=$1\n    local STRING=$(echo \"$STR\"\
    \ | sed -e 's/[^A-Za-z0-9]//g')\n    local LENGTH=$((${#STRING}-1))\n    echo\
    \ $LENGTH\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[\
    \ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\"\
    ) = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local str=\"$1\"\n    echo \"${#str}\"\n  \
    \  local len=${#str}\n    local count\n    local char\n    local chars\n    local\
    \ count\n    local i\n    local j\n    # initialize count to 0\n    count=0\n\
    \    # initialize chars\n    chars=$(echo $str | tr '[:upper:]' '[:lower:]')\n\
    \    # loop through all chars\n    for ((i=0; i<${#chars};)); do\n        # loop\
    \ through all chars in lower case and increment count for each char in upper case\n\
    \        for j in $(echo $chars | tr [a-z] [A-Z]); do\n            ((count+=$j))\n\
    \        done\n        chars=$(echo $chars | sed \"s/${j}/${chars[${i}]}/g\")\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local count=0\n  for i in\
    \ $(echo $string | sed -e 's/.*/\\L&/g');\n  do\n    count=$(echo $count + $i)\n\
    \  done\n  echo $count\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local length=\"${#string}\"\
    \n  local chars count\n  chars=$(echo \"$string\" | tr A-Z a-z)\n  for (( i=0;\
    \ i <= \"$length\"; i++ )); do\n    (( count[$chars[$i]]++ ))\n  done\n  echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpa1nj0ey2.sh: line 15: [0]: syntax error: operand expected (error
    token is "[0]")

    '
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    [[ \"$string\" =~\
    \ ^(.)\\1{2,}$ ]]\n    echo \"${#BASH_REMATCH[1]}\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local str=$1\n\n    # Convert to lower case\n\
    \    local str_lower=$(echo \"${str}\" | tr '[:upper:]' '[:lower:]')\n\n    #\
    \ Remove duplicate characters\n    local str_distinct=$(echo \"${str_lower}\"\
    \ | tr ' ' '\\n' | sort -u | wc -c)\n\n    echo \"$str_distinct\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n\tlocal string=\"$1\"\n\n\t# convert all upper\
    \ case letters into lower case letters\n\tstring=$(echo \"${string} \" | tr [A-Z]\
    \ [a-z])\n\n\tlocal count\n\tcount=\"$(echo \"${string} \" | tr [a-z] [A-Z])\"\
    \n\t# convert all lower case letters into upper case letters\n\tcount=\"$(echo\
    \ \"${count} \" | tr [A-Z] [a-z])\"\n\n\t# get the length of the string and return\
    \ the number of distinct characters in it\n\tprintf \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "tr: extra operand \u2018x\u2019\nTry 'tr --help' for more information.\n\
    tr: extra operand \u2018[A-Z]\u2019\nTry 'tr --help' for more information.\ntr:\
    \ extra operand \u2018x\u2019\nTry 'tr --help' for more information.\n"
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local x=''\n    local n=''\n    local y=''\n\
    \n    local -i len=\"${#1}\"\n\n    while [ \"$len\" -gt 0 ]; do\n        x=\"\
    ${1}\"\n        n=\"${x%%[a-z]*}\"\n        n=\"${n##*[!a-z]}\"\n        n=\"\
    ${n%?}\"\n        n=\"${n%%[^a-zA-Z0-9]}\" || { echo \"$x: $n\"; return 0; }\n\
    \        y=\"${n}\"\n        len=\"${#y}\"\n\n        echo \"$y: $n\"\n    done\n\
    \n    echo \"$x: $n\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    IFS=$'\\n' read -d '' -r -a chars < <(tr A-Z\
    \ a-z < <(sort <<< \"$1\")) || return 0\n    IFS=$'\\n' read -d '' -r -a chars\
    \ < <(tr a-z A-Z < <(sort <<< \"$1\")) || return 0\n    IFS=$'\\n' read -d ''\
    \ -r -a chars < <(tr A-Z a-z < <(sort <<< \"$1\")) || return 0\n    echo \"${#chars[@]}\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local count=0\n  local str=$1\n\n  # first we\
    \ need to convert the string to lowercase to ignore case distinction\n  local\
    \ str_lower=$(echo \"$str\" | tr [:upper:] [:lower:])\n\n  # now we can scan for\
    \ unique characters in lowercase\n  for i in $(seq 0 $((${#str_lower}-1)));\n\
    \  do\n    local curr=$((${str_lower:$i:1}))\n    count=$((${count}+1))\n  done\n\
    \  echo $count\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local input=\"$1\"\n\n  # Replace all characters\
    \ with spaces, and count the characters\n  local output=$(echo \"$input\" | sed\
    \ 's/./& /g' | sort -u | wc -c)\n\n  echo \"$output\"\n}\n\ncandidate() {\n  \
    \  count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local str=$1\n    local count=0\n    for ((i=0;\
    \ i<${#str}; i++)); do\n        local c=${str:$i:1}\n        [[ \"$c\" =~ [A-Za-z]\
    \ ]] && let count+=1 && continue\n        [[ \"$c\" =~ [a-z] ]] && let count+=2\
    \ && continue\n        [[ \"$c\" =~ [0-9] ]] && let count+=3 && continue\n   \
    \     [[ \"$c\" =~ [!-~] ]] && let count+=4 && continue\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  # This takes care of non-string arguments\n \
    \ if [[ \"${#}\" -eq 0 ]]; then\n    echo \"Must supply a string argument\"\n\
    \    exit 1\n  fi\n  # Convert to lower case for case-insensitivity\n  tr '[:upper:]'\
    \ '[:lower:]' <<< \"${1}\"\n  # Count distinct characters\n  tr '[:upper:]' '[:lower:]'\
    \ <<< \"${1}\" | sort | uniq -c\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n\tstring=$1\n\t\n\tlength=${#string}\n\tcount=0\n\
    \t\n\twhile [ \"$length\" -gt \"0\" ]\n\tdo\n\t\tcase ${string:0:1} in\n\t\t\t\
    a)\n\t\t\t\tlet count+=1\n\t\t\t\tstring=${string:1}\n\t\t\t;;\n\t\t\tb)\n\t\t\
    \t\tlet count+=1\n\t\t\t\tstring=${string:1}\n\t\t\t;;\n\t\t\tc)\n\t\t\t\tlet\
    \ count+=1\n\t\t\t\tstring=${string:1}\n\t\t\t;;\n\t\t\td)\n\t\t\t\tlet count+=1\n\
    \t\t\t\tstring=${string:1}\n\t\t\t;;\n\t\t\te)\n\t\t\t\tlet count+=1\n\t\t\t\t\
    string=${string:1}\n\t\t\t;;\n\t\t\tf)\n\t\t\t\tlet count+=1\n\t\t\t\tstring=${string:1}\n\
    \t\t\t;;\n\t\t\tg)\n\t\t\t\tlet count+=1\n\t\t\t\tstring=${string:1}\n\t\t\t;;\n\
    \t\t\th)\n\t\t\t\tlet count+=1\n\t\t\t\tstring=${string:1}\n\t\t\t;;\n\t\t\ti)\n\
    \t\t\t\tlet count+=1\n\t\t\t\tstring=${string:1}\n\t\t\t;;\n\t\t\tj)\n\t\t\t\t\
    let count+=1\n\t\t\t\tstring=${string:1}\n\t\t\t;;\n\t\t\tk)\n\t\t\t\tlet count+=1\n\
    \t\t\t\tstring=${string:1}\n\t\t\t;;\n\t\t\tl)\n\t\t\t\tlet count+=1\n\t\t\t\t\
    string=${string:1}\n\t\t\t;;\n\t\t\tm)\n\t\t\t\tlet count+=1\n\t\t\t\tstring=${string:1}\n\
    \t\t\t;;\n\t\t\tn)\n\t\t\t\tlet count+=1\n\t\t\t\tstring=${string:1}\n\t\t\t;;\n\
    \t\t\to)\n\t\t\t\tlet count+=1\n\t\t\t\tstring=${string:1}\n\t\t\t;;\n\t\t\tp)\n\
    \t\t\t\tlet count+=1\n\t\t\t\tstring=${string:1}\n\t\t\t;;\n\t\t\tq)\n\t\t\t\t\
    let count+=1\n\t\t\t\tstring=${string:1}\n\t\t\t;;\n\t\t\tr)\n\t\t\t\tlet count+=1\n\
    \t\t\t\tstring=${string:1}\n\t\t\t;;\n\t\t\ts)\n\t\t\t\tlet count+=1\n\t\t\t\t\
    string=${string:1}\n\t\t\t;;\n\t\t\tt)\n\t\t\t\tlet count+=1\n\t\t\t\tstring=${string:1}\n\
    \t\t\t;;\n\t\t\tu)\n\t\t\t\tlet count+=1\n\t\t\t\tstring=${string:1}\n\t\t\t;;\n\
    \t\t\tv)\n\t\t\t\tlet count+=1\n\t\t\t\tstring=${string:1}\n\t\t\t;;\n\t\t\tw)\n\
    \t\t\t\tlet count+=1\n\t\t\t\tstring=${string:1}\n\t\t\t;;\n\t\t\tx)\n\t\t\t\t\
    let count+=1\n\t\t\t\tstring=${string:1}\n\t\t\t;;\n\t\t\ty)\n\t\t\t\tlet count+=1\n\
    \t\t\t\tstring=${string:1}\n\t\t\t;;\n\t\t\tz)\n\t\t\t\tlet count+=1\n\t\t\t\t\
    string=${string:1}\n\t\t\t;;\n\t\t\t*)\n\t\t\t\tlet count+=1\n\t\t\t\tstring=${string:1}\n\
    \t\t\t;;\n\t\tesac\n\t\tlength=${length-1}\n\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpaoc_1upv.sh: line 129: syntax error near unexpected token `}''

    /tmp/tmpaoc_1upv.sh: line 129: `}''

    '
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    echo \"$1\" | tr -cd '[:alpha:]' | wc -c\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  [[ \"$string\" =~ ^$(( $RANDOM\
    \ % 256 )) ]]\n  [[ \"$string\" =~ ^$(( $RANDOM % 256 )) ]]\n  [[ \"$string\"\
    \ =~ ^$(( $RANDOM % 256 )) ]]\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=1\n  for i\
    \ in ${string//}; do\n    count=$(expr $count + 1)\n  done\n  echo $count\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local str=\"$1\"\n    echo \"${#str}\"\n  \
    \  echo \"${#str}\" | tr [:upper:] [:lower:]\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local characters=$(echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:digit:]' '[:alnum:]' | wc -c)\n  echo -n \"$characters\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'tr: when translating, the only character classes that may appear in

    string2 are ''upper'' and ''lower''

    tr: when translating, the only character classes that may appear in

    string2 are ''upper'' and ''lower''

    '
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local s=\"${1}\"\n    local count=0\n    local\
    \ countChar=\"\"\n    local first=1\n    local lastChar=\"\"\n\n    for ((i=0;i<${#s};i++));\
    \ do\n        if [[ ${first} -eq 1 ]]; then\n            first=0\n           \
    \ lastChar=\"${s:$i:1}\"\n            countChar=\"${s:$i:1}\"\n            continue\n\
    \        fi\n        [[ ${lastChar} != ${s:$i:1} ]] && [[ ${countChar} != ${s:$i:1}\
    \ ]] && count=$(( ${count} + 1 ))\n        lastChar=\"${s:$i:1}\"\n        countChar=\"\
    ${s:$i:1}\"\n    done\n    [[ -z ${lastChar} ]] && echo \"0\"\n    echo \"${count}\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local STR=$1\n    local DISTR=()\n    local\
    \ CHARS=0\n\n    # loop through each character in STR\n    for CHAR in ${STR};\
    \ do\n        # if the current character is not in DISTR, add it to DISTR\n  \
    \      if [[ ! \" ${DISTR[@]} \" =~ \" ${CHAR} \" ]]; then\n            DISTR+=(\"\
    ${CHAR}\")\n        fi\n        # increment the counter\n        CHARS=$((CHARS\
    \ + 1))\n    done\n\n    echo \"${#DISTR[@]}\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n\tlocal input_string=\"${1}\"\n\tlocal output_string=\"\
    \"\n\tlocal c=0\n\tlocal w=0\n\tlocal l=0\n\tfor ((i=0; i<${#input_string}; i++));\
    \ do\n\t\tlocal c=${input_string:i:1}\n\t\tif [[ $c != $input_string:i:1 ]]; then\n\
    \t\t\tc=$c\n\t\tfi\n\t\tif [[ \"$output_string\" != \"\" ]]; then\n\t\t\tif [[\
    \ \"$output_string\" != $output_string:c ]]; then\n\t\t\t\tl=$((l + 1))\n\t\t\t\
    fi\n\t\tfi\n\t\tif [[ \"$output_string\" == \"\" ]]; then\n\t\t\tw=$((w + 1))\n\
    \t\tfi\n\t\tif [[ \"$output_string\" == $output_string:c ]]; then\n\t\t\tc=$((c\
    \ + 1))\n\t\tfi\n\t\toutput_string=\"$output_string$c\"\n\tdone\n\techo \"$l\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: -1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  cat $1 | tr \"[A-Z]\" \"[a-z]\" | wc -c\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=62 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=60 encoding='utf-8'>
  timestamp: 1660056931
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    if [ -z \"$1\" ]; then return 1; fi\n    echo\
    \ \"${1}\" | uniq -c | sort -n | tail -n 1\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local STR=$1\n    local COUNT\n    local LOWERCASE\n\
    \    local UPPERCASE\n    COUNT=0\n    LOWERCASE=0\n    UPPERCASE=0\n\n    # Count\
    \ distinct characters\n    for (( i=0; i<${#STR}; i++ )); do\n        [[ \"$STR\"\
    \ = \"${STR:$i:1}\" ]] || continue\n\n        if [[ \"${STR:$i:1}\" == [a-z]*\
    \ ]]; then\n            LOWERCASE=$((LOWERCASE+1))\n        else\n           \
    \ UPPERCASE=$((UPPERCASE+1))\n        fi\n\n        COUNT=$((COUNT+1))\n    done\n\
    \n    echo \"$COUNT\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  echo \"${1}\" | tr A-Z a-z | sort | uniq -u\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local chars=$1\n\n    local distinct=0\n  \
    \  for i in $(seq 0 $((${#chars}-1))); do\n        if [ \"${chars:$i:1}\" == \"\
    ${chars:$i:1}\" ] || [ \"${chars:$i:1}\" == \"${chars:$i:1}\" ] 2>/dev/null; then\n\
    \            ((distinct += 1))\n        else\n            break\n        fi\n\
    \    done\n    echo \"${distinct}\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: -1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local str=$1\n  local count letter\n\n  count=0;\n\
    \  letter=$(cat /dev/null | tr -d '\\000')\n\n  while [[ \"$letter\" != \"\\000\"\
    \ ]]; do\n    if [[ $(echo \"$letter\" | grep -c \"$letter\" | wc -l) == 1 ]];\
    \ then\n      count=$(echo \"$count+1\")\n    fi\n    letter=$(echo \"$letter\"\
    \ | tr -d '\\000')\n  done\n\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=33 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=28 encoding='utf-8'>
  timestamp: 1660056931
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local str=\"$1\"\n\n    [[ ${#str} -eq 0 ]]\
    \ && return 1\n    [[ ${str} =~ [a-z] ]] || [[ ${str} =~ [A-Z] ]] || return 0\n\
    \n    echo \"$(seq ${#str} | sort | uniq -c) ${str}\"\n}\n\ncandidate() {\n  \
    \  count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local characters=\"\"\n  local c=0\n  for c in\
    \ \"${1:0:1}\"; do\n    local c=${c^^}\n    if [[ $c != \"\" ]] ; then\n     \
    \ characters+=\"$c\"\n    fi\n  done\n  echo \"$characters\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local str=\"$1\"\n\n    # echo \"$str\" | tr\
    \ [A-Z] [a-z] | wc -c\n    # echo \"$str\" | tr [a-z] [A-Z] | wc -c\n    # echo\
    \ \"$str\" | tr [A-Z] [a-z] | tr '[[:upper:]]' '[[:lower:]]' | wc -c\n    # echo\
    \ \"$str\" | tr [a-z] [A-Z] | tr '[[:lower:]]' '[[:upper:]]' | wc -c\n    echo\
    \ \"$str\" | tr '[[:upper:]]' '[[:lower:]]' | wc -c\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    set -- $1;\n\n    local -a str=(\"$@\");\n\
    \    local -a count=($@);\n    local -a chars=();\n    local -i num_chars=0;\n\
    \n    while [ $# -gt 0 ]; do\n        local -i idx=$1;\n        local -i ch=\"\
    ${str[idx]}\"\n\n        # Check for case insensitivity\n        if [[ ${ch^^}\
    \ = ${ch//[A-Z]} ]]; then\n            count[${ch^^}]=$((count[${ch^^}]+1));\n\
    \        else\n            count[$ch]=$((count[$ch]+1));\n        fi\n       \
    \ shift;\n    done\n\n    local -a char_list=(\"$@\");\n    local -i num_chars=${#chars[@]};\n\
    \    local -i i;\n    for ((i=0; i < $num_chars; i++));\n    do\n        chars[${char_list[i]}]=1;\n\
    \    done\n\n    while (( \"$#\" )); do\n        local -i idx=$1;\n        local\
    \ -i ch=\"${str[idx]}\"\n\n        if [[ -z \"${chars[$ch]}\" ]]; then\n     \
    \       (( count[$ch]--));\n            if [[ -z \"${count[$ch]}\" ]]; then\n\
    \                chars[$ch]=1\n            else\n                chars[$ch]=$((chars[$ch]+1))\n\
    \            fi\n        else\n            (( count[$ch]--));\n            if\
    \ [[ -z \"${count[$ch]}\" ]]; then\n                chars[$ch]=1\n           \
    \ else\n                chars[$ch]=$((chars[$ch]+1))\n            fi\n       \
    \ fi\n        shift;\n    done\n\n    local counts=(\"${!count[@]}\" );\n    local\
    \ num_distinct_chars=${#counts[@]};\n\n    echo \"$num_distinct_chars\"\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  echo $1 |tr a-z A-Z | wc -c\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    echo ${#string#*}\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxzao_sov.sh: line 11: ${#string#*}: bad substitution

    '
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local __string=\"${1}\"\n  local __characters=${#__string}\n\
    \  local __distincts=0\n  local __i\n  for i in $(seq 0 $(( __characters )));\
    \ do\n    case \"${__string:$i:1}\" in\n      [A-Z] | [a-z] | [0-9] | [!-~] |\
    \ \\\n      [!a-z] | [!A-Z] | [!0-9] | [!-~] | !\\ ) ;;\n      * ) __distincts+=1\
    \ ;;\n    esac\n  done\n  echo \"$__distincts\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local characters=\"\"\n\
    \    for character in ${string//[!A-Za-z]/ }\n    do\n        characters=\"${characters},${character}\"\
    \n    done\n    echo ${#characters}\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local input=\"$1\"\n\n    local output=0\n\
    \    \n    for (( i=1; i<=${#input}; i++ )); do\n        local char=${input:$i:1}\n\
    \n        if [[ -z \"$char\" ]]; then\n            ((output++))\n        elif\
    \ [[ \"$char\" =~ [a-z] ]]; then\n            ((output++))\n        elif [[ \"\
    $char\" =~ [A-Z] ]]; then\n            ((output++))\n        fi\n    done\n  \
    \  \n    echo \"$output\"\n}\n\ncandidate() {\n    count_distinct_characters \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local length=\"${#string}\"\
    \n    local result\n    local i\n    local count\n    \n    result=0\n    count=0\n\
    \    \n    for ((i = 1; i <= length; i++)); do\n        [[ \"${string:$i:1}\"\
    \ != *[A-Z] ]] && result=$((result + 1)) || result=$((result + 1))\n        count=$((count\
    \ + 1))\n    done\n    \n    echo \"$result\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local lower\n    local upper\n\n    for i in {a..z}; do\n        lower=\"$(echo\
    \ \"$string\" | sed -E 's/'$i'//g')\"\n        upper=\"$(echo \"$string\" | sed\
    \ -E 's/'$i'\\?//g')\"\n        count=$((count+1))\n        count=$((count+$(echo\
    \ \"$lower\" | wc -c)))\n        count=$((count+$(echo \"$upper\" | wc -c)))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    echo \"${#string}\"\
    \ | tr A-Z a-z | sort | uniq | wc -c\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    echo $1 | tr [:lower:] [:upper:] | uniq | wc\
    \ -w | awk '{print $1}'\n}\n\ncandidate() {\n    count_distinct_characters \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n\n    # Count how many\
    \ different characters are in the string\n    # Count the distinct characters\
    \ in the string\n    local count=0\n    local c\n    for c in \"${string}\"; do\n\
    \        [[ $c =~ ^[A-Za-z] ]] || continue\n        ((count++))\n    done\n\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local char_count=\n  local\
    \ string_lowercase=$( echo $string | tr '[:upper:]' '[:lower:]' )\n  local string_uppercase=$(\
    \ echo $string | tr '[:lower:]' '[:upper:]' )\n  local string_non_uppercase=$(\
    \ echo $string_lowercase | tr '[:upper:]' '[:[:space:]]' )\n  local string_non_lowercase=$(\
    \ echo $string_uppercase | tr '[:lower:]' '[:[:space:]]' )\n  local string_with_separator=$(\
    \ echo \"$string_lowercase $string_uppercase $string_non_uppercase $string_non_lowercase\"\
    \ | sed -e 's/\\ /-/g' )\n\n  local i=0\n  while [ $i -lt ${#string_with_separator[@]}\
    \ ]; do\n    case \"${string_with_separator[$i]}\" in\n      \"-\" )\n       \
    \ (( i++ ))\n        continue\n      ;;\n      \"a\" )\n        (( i++ ))\n  \
    \    ;;\n      \"A\" )\n        (( i++ ))\n      ;;\n      \"b\" )\n        ((\
    \ i++ ))\n      ;;\n      \"B\" )\n        (( i++ ))\n      ;;\n      \"c\" )\n\
    \        (( i++ ))\n      ;;\n      \"C\" )\n        (( i++ ))\n      ;;\n   \
    \   \"d\" )\n        (( i++ ))\n      ;;\n      \"D\" )\n        (( i++ ))\n \
    \     ;;\n      \"e\" )\n        (( i++ ))\n      ;;\n      \"E\" )\n        ((\
    \ i++ ))\n      ;;\n      \"f\" )\n        (( i++ ))\n      ;;\n      \"F\" )\n\
    \        (( i++ ))\n      ;;\n      \"g\" )\n        (( i++ ))\n      ;;\n   \
    \   \"G\" )\n        (( i++ ))\n      ;;\n      \"h\" )\n        (( i++ ))\n \
    \     ;;\n      \"H\" )\n        (( i++ ))\n      ;;\n      \"i\" )\n        ((\
    \ i++ ))\n      ;;\n      \"I\" )\n        (( i++ ))\n      ;;\n      \"j\" )\n\
    \        (( i++ ))\n      ;;\n      \"J\" )\n        (( i++ ))\n      ;;\n   \
    \   \"k\" )\n        (( i++ ))\n      ;;\n      \"K\" )\n        (( i++ ))\n \
    \     ;;\n      \"l\" )\n        (( i++ ))\n      ;;\n      \"L\" )\n        ((\
    \ i++ ))\n      ;;\n      \"m\" )\n        (( i++ ))\n      ;;\n      \"\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfieb6z7j.sh: line 113: unexpected EOF while looking for matching
    `"''

    /tmp/tmpfieb6z7j.sh: line 117: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local s=$1\n  # Echo the string before counting\n\
    \  echo $s\n  # Count characters\n  local count=0\n  while [[ ${#s} -gt 0 ]];\
    \ do\n    count=$(( ${count} + ${#s//[[:upper:]]/} ))\n    s=${s#*([[:upper:]]/)}\n\
    \  done\n  # Echo the final count\n  echo $count\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local num_distinct=1\n  while\
    \ [[ ${#string} -gt 0 ]]; do\n    [[ ${string#?} != \"${string}\" ]] && string=${string#?}\n\
    \    num_distinct=$((${num_distinct}+1))\n  done\n  echo ${num_distinct}\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n\techo \"${@,,}\" | sort | uniq -c | sort -nr\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count=0\n  \
    \  local temp\n    for temp in $(echo $string | sed \"s/[^A-Za-z0-9]/\\n/g\" |\
    \ sed \"s/\\n//g\" | sort -u | sed \"s/^/${count}/\") ; do\n        count=$((count+1))\n\
    \    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n\tlocal string=\"$1\"\n\n\tcount=0\n\tfor char\
    \ in \"${string}\" ; do\n\t\t(( count++ ))\n\tdone\n\techo -n \"$count\"\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n\tlocal string=\"$1\"\n\tlocal length count\n\n\
    \tlength=$((${#string} + 1))\n\tcount=0\n\tfor i in $(seq 0 $((${#string} - 1)));\
    \ do\n\t\tlocal lowercase uppercase\n\t\tlowercase=$(echo \"${string:$i:1}\" |\
    \ tr '[:upper:]' '[:lower:]')\n\t\tuppercase=$(echo \"${string:$i:1}\" | tr '[:upper:]'\
    \ '[:upper:]')\n\t\tif [[ \"${lowercase}\" == \"${uppercase}\" ]]; then\n\t\t\t\
    count=$((${count} + 1))\n\t\tfi\n\tdone\n\techo $((${#string} + 1 - ${count}))\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    tr '[:upper:]' '[:lower:]' <<< \"$1\" | sort\
    \ | uniq | wc -l\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local s=$1\n  local count=1\n  for char in $(echo\
    \ ${s} | sed -e 's/./& /g'); do\n    ((count++))\n  done\n  echo $count\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local input_string=\"$1\"\n  local distinct_characters_count=$(echo\
    \ $input_string | sed -e \"s/[^A-Za-z]//g\" -e \"s/^[[:alpha:]]*//g\" -e \"s/[[:alpha:]]*$//g\"\
    \ -e \"s/^[^A-Za-z]*//g\" -e \"s/[^A-Za-z]$//g\" | sort | uniq -c | wc -c)\n \
    \ echo $distinct_characters_count\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n\tlocal string=$1\n\tlocal count=0\n\tlocal currChar\n\
    \tfor currChar in \"${string}\"; do\n\t\t((count++))\n\tdone\n\techo $count\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  # If given an empty string, return an empty string\n\
    \  test -z \"$1\" || return 0\n  local count=0\n  local character\n  while read\
    \ -r character; do\n    count=$((count+1))\n  done < <(echo \"$1\" | tr A-Z a-z)\n\
    \  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local num_chars=0\n  \
    \  # iterate over each character in the string\n    local char\n    for char in\
    \ ${string//,}; do\n        ((num_chars++))\n    done\n    echo \"$num_chars\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n\tlocal string=$1\n\tlocal characters=\"\"\n\t\
    for i in $(echo $string | tr A-Z a-z); do\n\t\tcharacters=\"${characters}\"'$'$i'\
    \ '\n\tdone\n\techo $characters | wc -c\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local -r string=$1\n    local count=0\n   \
    \ local firstLetter=$2\n    \n    shift 2\n    \n    local stringPart\n    \n\
    \    for stringPart in \"${string//[^a-zA-Z0-9_]/}\"; do\n        (( count++ ))\n\
    \        if [[ \"$firstLetter\" == \"$stringPart\" ]]; then\n            firstLetter=\n\
    \        fi\n    done\n    \n    printf \"%s\\n\" \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: -1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    IFS='' read -n 1 -rd '' retval\n    echo \"\
    $retval\" | tr [A-Z] [A-Za-z] | uniq -u\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=56 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=48 encoding='utf-8'>
  timestamp: 1660056931
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local str=$1\n    local num=0\n    local char\n\
    \    for char in ${str:0:1}; do\n        ((num++))\n    done\n    for (( i=1;\
    \ i <= ${#str}; i++ )); do\n        char=${str:$i:1}\n        if [[ ${str:$i:1}\
    \ != ${char}* ]]; then\n            ((num++))\n        fi\n    done\n    echo\
    \ ${num}\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local STRING=\"$1\"\n  local CHAR_LIST=()\n \
    \ local COUNT=1\n  for CHAR in $(echo \"$STRING\" | tr [A-Z] [a-z]); do\n    if\
    \ ! [[ \" ${CHAR_LIST[*]} \" =~ \" $CHAR \" ]]; then\n      CHAR_LIST+=(\"$CHAR\"\
    )\n      (( COUNT++ ))\n    fi\n  done\n  echo \"$COUNT\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "tr: extra operand \u2018x\u2019\nTry 'tr --help' for more information.\n"
  stdout: ''
  timestamp: 1660056926
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local str=$1\n    local num_chars=0\n    if\
    \ [ -z \"$str\" ] ; then\n        echo \"Empty string for counting distinct characters\"\
    \n        return 0\n    fi\n    for (( i=0 ; i < ${#str} ; i++ )) ; do\n     \
    \   local c=${str:$i:1}\n        if [ \"$c\" == \"$c\" ] || [ \"$c\" == \"$c\"\
    i ] || [ \"$c\" == \"$c\"r ] || [ \"$c\" == \"$c\"e ] || [ \"$c\" == \"$c\"g ]\
    \ || [ \"$c\" == \"$c\"h ] || [ \"$c\" == \"$c\"e ] || [ \"$c\" == \"$c\"y ] ||\
    \ [ \"$c\" == \"$c\"s ] || [ \"$c\" == \"$c\"a ] || [ \"$c\" == \"$c\"l ] || [\
    \ \"$c\" == \"$c\"g ] || [ \"$c\" == \"$c\"e ] || [ \"$c\" == \"$c\"y ] || [ \"\
    $c\" == \"$c\"s ] || [ \"$c\" == \"$c\"a ] || [ \"$c\" == \"$c\"l ] || [ \"$c\"\
    \ == \"$c\"g ] || [ \"$c\" == \"$c\"e ] || [ \"$c\" == \"$c\"y ] || [ \"$c\" ==\
    \ \"$c\"s ] || [ \"$c\" == \"$c\"a ] || [ \"$c\" == \"$c\"l ] || [ \"$c\" == \"\
    $c\"g ] || [ \"$c\" == \"$c\"e ] || [ \"$c\" == \"$c\"y ] || [ \"$c\" == \"$c\"\
    s ] || [ \"$c\" == \"$c\"a ] || [ \"$c\" == \"$c\"l ] || [ \"$c\" == \"$c\"g ]\
    \ || [ \"$c\" == \"$c\"e ] || [ \"$c\" == \"$c\"y ] || [ \"$c\" == \"$c\"s ] ||\
    \ [ \"$c\" == \"$c\"a ] || [ \"$c\" == \"$c\"l ] || [ \"$c\" == \"$c\"g ] || [\
    \ \"$c\" == \"$c\"e ] || [ \"$c\" == \"$c\"y ] || [ \"$c\" == \"$c\"s ] || [ \"\
    $c\" == \"$c\"a ] || [ \"$c\" == \"$c\"l ] || [ \"$c\" == \"$c\"g ] || [ \"$c\"\
    \ == \"$c\"e ] || [ \"$c\" == \"$c\"y ] || [ \"$c\" == \"$c\"s ] || [ \"$c\" ==\
    \ \"$c\"a ] || [ \"$c\" == \"$c\"l ] || [ \"$c\" == \"$c\"g ] || [ \"$c\" == \"\
    $c\"e ] || [ \"$c\" == \"$c\"y ] || \n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2gnqy3c5.sh: line 19: syntax error near unexpected token `}''

    /tmp/tmp2gnqy3c5.sh: line 19: `}''

    '
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local n=0\n  for (( i = 0;\
    \ i<${#string}; i++ )); do\n    (( ${string:$i:1} == ${string:$i:1} )) && let\
    \ n++\n  done\n  echo \"$n\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=1\n  local\
    \ char\n  while [[ \"${string}\" ]]; do\n    char=\"${string//[^A-Za-z0-9]}\"\n\
    \    [[ \"$char\" != \"$string\" ]] || { echo \"$count $char\"; break; }\n   \
    \ (( ++count ))\n    string=\"${string//$char/}\"\n  done\n  echo \"$count\"\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  echo $1 | perl -pe 's/(\\w)(\\1)+/\\1/'\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local chars=\"${1}\"\n  local unique_chars=\"\
    \"\n  # Convert the string to lower case for easier string comparison\n  chars=\"\
    ${chars,,}\" | tr '[:upper:]' '[:lower:]'\n  # Loop over the characters in the\
    \ string and add them to the unique_chars variable\n  for i in ${!chars}; do\n\
    \    local char=\"${chars:$i,1}\"\n    [[ -z \"$unique_chars\" ]] && unique_chars=\"\
    $char\" || unique_chars=\"$unique_chars,$char\"\n  done\n  echo \"$unique_chars\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_ot4bqb6.sh: line 15: : invalid variable name

    '
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n\t[ \"${1:-}\" ] || return 1\n\techo \"${#1}\"\
    \ | uniq -c\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[\
    \ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\"\
    ) = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: -1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local char=\"${1:-}\"\n  local num_distinct=0\n\
    \  local lower=\"abcdefghijklmnopqrstuvwxyz\"\n  local upper=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n\n  while [ \"$char\" != \"\" ]; do\n    lower=${lower:0:1}\n    upper=${upper:0:1}\n\
    \n    case \"$char\" in\n      $lower)\n        char=\"${lower:1}\"\n        num_distinct=$((num_distinct\
    \ + 1))\n        ;;\n\n      $upper)\n        char=\"${upper:1}\"\n        num_distinct=$((num_distinct\
    \ + 1))\n        ;;\n    esac\n  done\n\n  echo $num_distinct\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=63 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=49 encoding='utf-8'>
  timestamp: 1660056932
- exit_code: -1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=0\n  local\
    \ prev_char=\"\"\n  local curr_char=\"\"\n  local string_to_test=\"$string\"\n\
    \n  while [ ! -z \"$string_to_test\" ]; do\n    curr_char=$(echo \"$string_to_test\"\
    \ | head -n1)\n    count=$(expr $count + 1)\n    string_to_test=$(echo \"$string_to_test\"\
    \ | tail -n1)\n  done\n\n  echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=44 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=23 encoding='utf-8'>
  timestamp: 1660056932
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  echo \"$1\" | awk '\n  {\n    count = 1;\n  \
    \  counts[tolower($1)] = 0;\n    for(char=tolower($1); char != \"\"; char = substr(char,1,1))\
    \ {\n      counts[char]+=1;\n    }\n    for(char=tolower($1); char != \"\"; char\
    \ = substr(char,1,1)) {\n      printf(\"%d\\t%s\\n\", counts[char], char);\n \
    \   }\n  }'\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[\
    \ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\"\
    ) = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  count=$(awk '{ for(i=1;i<=NF;i++) {gsub(/[[:upper:]]/,\
    \ \"\", $i); gsub(/[[:lower:]]/, \"\", $i); count+=(length($i)); } END { print\
    \ count }' \\\n    \"$1\")\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'awk: cmd. line:1: { for(i=1;i<=NF;i++) {gsub(/[[:upper:]]/, "", $i); gsub(/[[:lower:]]/,
    "", $i); count+=(length($i)); } END { print count }

    awk: cmd. line:1:                                                                                                        ^
    syntax error

    awk: cmd. line:1: { for(i=1;i<=NF;i++) {gsub(/[[:upper:]]/, "", $i); gsub(/[[:lower:]]/,
    "", $i); count+=(length($i)); } END { print count }

    awk: cmd. line:1:                                                                                                                           ^
    unexpected newline or end of string

    '
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n\techo \"$1\" | tr A-Z a-z | tr -cd a-z\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  echo \"${1//[^[:alnum:]]/}\" | wc -c\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056926
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local STR=$1\n    local LENGTH=${#STR}\n  \
    \  if [ $LENGTH -eq 0 ]; then\n        echo \"0\"\n        return 0\n    fi\n\
    \    local COUNT=0\n    local STR2=\"\"\n    # First pass, count how many times\
    \ each letter occurs in string\n    while [ $LENGTH -gt 0 ]; do\n        local\
    \ FIRST_CHAR=${STR:0:1}\n        STR=${STR:1}\n        COUNT=$((COUNT+1))\n  \
    \      STR2+=\"$FIRST_CHAR\"\n        LENGTH=$((LENGTH-1))\n    done\n    # Now\
    \ count how many times each case of each letter occurs\n    local FIRST_CASE=a\n\
    \    local SECOND_CASE=A\n    local THIRD_CASE=b\n    local FOURTH_CASE=B\n  \
    \  local FOURTH_CASE_SECOND=B\n    local FIFTH_CASE=c\n    local SIXTH_CASE=C\n\
    \    local SEVENTH_CASE=d\n    local EIGHTH_CASE=D\n    local NINTH_CASE=e\n \
    \   local TENTH_CASE=E\n    local ELEVENTH_CASE=f\n    local TWELFTH_CASE=F\n\
    \    local THIRTYNINETH_CASE=g\n    local FOURTYNINTH_CASE=G\n    # Loop through\
    \ every case and add them to count\n    while [ $LENGTH -gt 0 ]; do\n        FIRST_CASE=${STR2:0:1}\n\
    \        SECOND_CASE=${STR2:1:1}\n        THIRD_CASE=${STR2:2:1}\n        FOURTH_CASE=${STR2:3:1}\n\
    \        FOURTH_CASE_SECOND=${STR2:4:1}\n        FIFTH_CASE=${STR2:5:1}\n    \
    \    SIXTH_CASE=${STR2:6:1}\n        SEVENTH_CASE=${STR2:7:1}\n        EIGHTH_CASE=${STR2:8:1}\n\
    \        NINTH_CASE=${STR2:9:1}\n        TENTH_CASE=${STR2:10:1}\n        ELEVENTH_CASE=${STR2:11:1}\n\
    \        TWELFTH_CASE=${STR2:12:1}\n        THIRTYNINETH_CASE=${STR2:13:1}\n \
    \       FOURTYNINTH_CASE=${STR2:14:1}\n        IFS=\"\n        \" read -ra STR2\
    \ <<< \"${STR}\"\n        COUNT=$((COUNT+1))\n        STR2=${STR2[0]}\n      \
    \  \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprian6xiw.sh: line 64: syntax error near unexpected token `}''

    /tmp/tmprian6xiw.sh: line 64: `}''

    '
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local unique_char_count=$(echo\
    \ \"$string\" | tr [:upper:] [:lower:] | uniq | wc -l)\n    echo $unique_char_count\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local -n STR=\"$1\"\n  local LENGTH=$(wc -c <<<\"\
    ${STR}\")\n  local CHAR_COUNT=0\n  local FIRST_CASE=0\n  local LAST_CASE=0\n \
    \ local COUNT=0\n  local CHAR=\"\"\n\n  while read -r CHAR; do\n    CHAR_COUNT=$((CHAR_COUNT+1))\n\
    \    case \"${CHAR}\" in\n      ${FIRST_CASE} | *\"${LAST_CASE}\"*) ;;\n     \
    \ *)\n        CHAR=\"${CHAR}${CHAR}\"\n        LAST_CASE=\"${CHAR}\"\n      ;;\n\
    \    esac\n  done <<< \"${STR}${LAST_CASE}\"\n  echo \"${CHAR_COUNT}\"\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmplb0ppbyb.sh: line 10: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    string=\"$1\"\n    echo \"$string\" | tr [A-Z]\
    \ [a-z] | sort | uniq -c | sort -nr | head -1\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "tr: extra operand \u2018x\u2019\nTry 'tr --help' for more information.\n"
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    COUNTER=1;\n    echo -n $1 | while read char\n\
    \    do\n        echo \"$char\"\n        COUNTER=$((COUNTER + 1))\n    done\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local length count\n  local\
    \ letters=()\n\n  if [[ -z \"$string\" ]]; then\n    return 0\n  fi\n\n  length=${#string}\n\
    \  for (( i=1; i<=$length; i++ )); do\n    local current=${string:$i:1}\n    local\
    \ lower=${current:0:1}\n    local upper=${current:1:1}\n\n    local current2\n\
    \    current2=${string:$i:1}\n    local lower2\n    lower2=${current2:0:1}\n \
    \   local upper2\n    upper2=${current2:1:1}\n\n    if (( lower != upper )) &&\
    \ [[ -z \"${letters[*]}\" ]]; then\n      letters=(\"${letters[@]}\" \"$current\"\
    )\n    elif (( lower == upper )) && [[ -n \"${letters[*]}\" ]]; then\n      letters=(\"\
    ${letters[@]}\" \"$current2\")\n    elif (( lower != upper )) && (( lower == lower2\
    \ )) && (( upper == upper2 )) && [[ -n \"${letters[*]}\" ]]; then\n      letters=(\"\
    ${letters[@]}\" \"$current\")\n    fi\n  done\n  count=${#letters[*]}\n\n  echo\
    \ $count\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  declare -a letters=(${string^^})\n\
    \  declare -i length=0\n  declare -i count_of_distinct_characters=0\n  for letter\
    \ in \"${letters[@]}\"; do\n    case \"$letter\" in\n      [a-z]\n        [A-Z]*)\
    \ length=$((length + 1));;\n      [[:lower:]]*)\n        [[:upper:]]*) length=$((length\
    \ + 1));;\n      *) length=$((length + 1))\n    esac\n  done\n  for ((i=0; i <\
    \ length; i++)); do\n    count_of_distinct_characters=$((count_of_distinct_characters\
    \ + 1))\n  done\n  echo \"$count_of_distinct_characters\"\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpod3krhhq.sh: line 16: syntax error near unexpected token `newline''

    /tmp/tmpod3krhhq.sh: line 16: `      [a-z]''

    '
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count\n    count=0\n\
    \    for c in \"${string}\" ; do\n        let count+=1\n    done\n    echo \"\
    $count\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n\n  local count letter\n\
    \  count=0\n  for letter in \"${string}\"; do\n    [[ $letter != $letter ]] ||\
    \ { continue; }\n    count=$((count+1))\n  done\n  echo ${count}\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local distinct_characters=$(echo\
    \ \"${string}\" | tr [A-Z] [a-z] | sort | uniq | wc -c)\n    echo \"${distinct_characters}\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: "tr: extra operand \u2018x\u2019\nTry 'tr --help' for more information.\n\
    tr: extra operand \u2018x\u2019\nTry 'tr --help' for more information.\n"
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local -r string=$1\n    # Special case for\
    \ empty string\n    if [[ -z \"$string\" ]]; then\n        return 0\n    fi\n\
    \    # Remove everything but alphabets\n    string=${string//[^A-Za-z]/}\n   \
    \ # Add one for space since that's the character that gets counted as distinct\
    \ character\n    string=${string// /${SPACE}}\n    # Remove duplications and count\
    \ the length\n    string=${string//${SPACE}${SPACE}/}\n    local distinct_characters_length=0\n\
    \    while [[ -n \"$string\" ]]; do\n        distinct_characters_length=$(expr\
    \ $distinct_characters_length + 1)\n        string=${string//${SPACE}${SPACE}}\n\
    \    done\n    echo \"$distinct_characters_length\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local count char\n\
    \    count=0\n    local i=0\n\n    for char in \"${string}\"; do\n        [ \"\
    $char\" = \"$((i++))\" ] && count=$((count+1))\n    done\n\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    local n=0\n    for\
    \ c in \"${string//[^A-Za-z0-9]/}\"; do\n        n=$((n + 1))\n    done\n    echo\
    \ \"$n\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local chars=$1\n\n    # shellcheck disable=SC2034\n\
    \    local count=0\n    local firstChar=\"\"\n    local lastChar=\"\"\n\n    for\
    \ char in \"${chars[@]}\"; do\n        (( count++ ))\n        if [[ ${firstChar:0:1}\
    \ = \"${char}\" ]]; then\n            firstChar=\"${char}\"\n        fi\n    \
    \    if [[ ${lastChar:0:1} = \"${char}\" ]]; then\n            lastChar=\"${char}\"\
    \n        fi\n    done\n\n    echo \"${#chars}\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    # Initialize variables\n    count=0\n    string_chars=$1;\n\
    \n    # Iterate over the characters\n    for i in $(seq 0 ${#string_chars}); do\n\
    \        # Check if the character is lowercase\n        if [ ${string_chars:$i:1}\
    \ = $(echo \"${string_chars:$i:1}\" | sed -e 's/\\(.\\)/\\1\\n/g') ];then\n  \
    \          count=$((count+1));\n        fi;\n    done;\n\n    # Return the result\n\
    \    echo $count\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local input=$1\n  local count=0\n  local temp=\n\
    \  for x in ${input:1}; do\n    temp=$temp${x:1}\n    count=$((count+1))\n  done\n\
    \  echo $count\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local str=$1\n  local count line\n  count=0\n\
    \  for line in $str; do\n    count=`echo $line | wc -c | tr -d ' '`\n    [ $count\
    \ -gt 1 ] && break\n  done\n  echo $count\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local str=$1\n    echo \"$(echo \"${str}\"\
    \ | tr [a-z] [A-Z] | tr [A-Z] [a-z] | tr -d [:alpha:] | wc -c)\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "tr: extra operand \u2018[A-Z]\u2019\nTry 'tr --help' for more information.\n\
    tr: extra operand \u2018x\u2019\nTry 'tr --help' for more information.\ntr: extra\
    \ operand \u2018x\u2019\nTry 'tr --help' for more information.\ntr: extra operand\
    \ \u2018[A-Z]\u2019\nTry 'tr --help' for more information.\n"
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local count=0\n    for\
    \ chars in $(echo \"$string\" | sed 's/ /\\n/g'); do\n        count=$(echo \"\
    $count\" | awk -v chars=$chars '{ if ($1 != chars) {print $0} }' | wc -l | tr\
    \ -d ' ')\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    echo \"$1\" | sort | uniq -c | sort -nr\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    # Easy case: empty string\n    if [[ \"$1\"\
    \ =~ (^|.) ]]\n    then\n        return 0\n    fi\n\n    # Easy case: one character\
    \ string\n    if [[ \"$1\" =~ (^|[[:alpha:]])$ ]]\n    then\n        return 1\n\
    \    fi\n\n    # Easy case: two character string\n    if [[ \"$1\" =~ (^|[[:alpha:]])\\\
    ([[:alpha:]]\\)$ ]]\n    then\n        if [[ \"$2\" =~ ^([[:alpha:]])$ ]]\n  \
    \      then\n            return 2\n        elif [[ \"$2\" =~ ^([[:alpha:]])\\\
    ([[:alpha:]]\\)$ ]]\n        then\n            echo $(( ${BASH_REMATCH[1]} * ${BASH_REMATCH[2]}\
    \ ))\n        fi\n    fi\n\n    # Slower case: two or more character strings\n\
    \    if [[ \"$1\" =~ (^|[[:alpha:]])\\([[:alpha:]]\\)([[:alpha:]]*)$ ]]\n    then\n\
    \        echo $(( ${BASH_REMATCH[1]} * ${BASH_REMATCH[2]} * ${BASH_REMATCH[3]}\
    \ ))\n    fi\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n\techo $1 | grep -o -E \"[A-Z]+\" | sort | uniq\
    \ -c | sort -r\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n\techo $(echo $1 | tr A-Z a-z | uniq | wc -l)\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    # Convert to all lower\
    \ case\n    string=$(echo $string | sed -e 's/[^a-z]//g' -e 's/^[a-z]/L/' -e 's/$/\\\
    L/')\n    echo \"${#string}\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  # Get all unique characters\n  all_characters=\"\
    ${1}\"\n  # Count number of distinct characters\n  echo \"${#all_characters}\"\
    \ | sort -u | wc -l\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local result\n  result=0\n\
    \n  for i in \"${string}\"\n  do\n    local c=\"${i:0:1}\"\n    [[ \"$c\" != \"\
    X\" ]] && result=$((result+1))\n  done\n\n  echo \"$result\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  echo \"${1}\" | \\\n      tr '[:upper:]' '[:lower:]'\
    \ | \\\n      wc -c\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local total=0\n  local\
    \ i\n  for  ((i = 1; i <= ${#string[@]}; ++i)); do\n    local character=${string[$i\
    \ - 1]}\n    local lowercase=${character^^}\n    local uppercase=${character^^}\n\
    \    if [[ \"$lowercase\" == \"$character\" ]]; then\n      (( lowercase++ ))\n\
    \    elif [[ \"$uppercase\" == \"$character\" ]]; then\n      (( uppercase++ ))\n\
    \    else\n      (( total++ ))\n    fi\n  done\n  echo \"$total\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n\n  local characters=\"${string,,}\"\
    \n  local num_distinct_characters=$(echo \"${characters//[^[:ascii:]]}\" | wc\
    \ -c)\n\n  echo \"$num_distinct_characters\"\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local tmp\n    tmp=$(echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]')\n    tr -cd \"$tmp\" < /dev/null | wc -c\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  echo -n $(echo $1 | grep -E -o \"[a-z]*\" | sort\
    \ | uniq -c | sort -n | head -1)\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    echo \"${1}\" | tr A-Z a-z | sort -u | wc -c\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: -1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n\tlocal -n COUNTER=$1\n\tlocal -a CHARACTERS\n\t\
    local COUNT\n\n\tCHARACTERS=( ${1//} )  # Convert string to array, trimming off\
    \ any trailing null\n\tCOUNT=0\n\n\twhile [[ ${#CHARACTERS[@]} -gt 0 ]]; do\n\t\
    \t((COUNT++))\n\t\tCOUNTER=${COUNTER}${COUNTER}${COUNTER}\n\t\tshift\n\tdone\n\
    \n\techo $COUNT\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=58 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=41 encoding='utf-8'>
  timestamp: 1660056932
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  cat <<EOF\n$(sed 's/.*/\"&\"/;s/.//g;s/.//;s/$//'\
    \ <<<\"$1\")\nEOF\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: -1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  local length=0\n  local count=0\n\
    \  local character=''\n\n  while [[ $string ]]; do\n    ((count++))\n    character=$(echo\
    \ $string | tr 'A-Z' 'a-z')\n    length=${#character}\n  done\n  echo ${length}\n\
    }\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=45 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=14 encoding='utf-8'>
  timestamp: 1660056932
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    string=\"$1\"\n    length=\"${#string}\"\n\
    \    count=1\n    for char in ${string//[a-z][A-Z]/}; do\n        [[ $char !=\
    \ $char ]] && { ((count++)); continue; }\n    done\n    echo \"$length\"\n}\n\n\
    candidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n\
    \    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\"\
    ) = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n\n    local count=0\n    local\
    \ i=0\n    while [ $i -lt ${#string} ]\n    do\n        local c=${string:$i:1}\n\
    \        if [ $c != ${string:$((i+1)):1} ]; then\n            count=$(expr $count\
    \ + 1)\n        fi\n        i=$((i+1))\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfg0kaph1.sh: line 17: [: e: unary operator expected

    '
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=\"$1\"\n    count=0\n    for c\
    \ in ${string//?/ }; do\n        count=$((count+1))\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 2
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  local count=1\n  for c\
    \ in \"${string}\"; do\n    [[ \"$c\" != [a-z] ]] && [[ \"$c\" != [A-Z] ]] &&\
    \ [[ \"$c\" != [0-9] ]] && [[ \"$c\" != \\* ]] && [[ \"$c\" != \\\" ]] && [[ \"\
    $c\" != \\| ]] && [[ \"$c\" != \\( ]] && [[ \"$c\" != \\) ]] && [[ \"$c\" != \\\
    ? ]] && [[ \"$c\" != \\` ]] && [[ \"$c\" != \\` ]] && [[ \"$c\" != \\' ]] && [[\
    \ \"$c\" != \\'\\\\ ]] && [[ \"$c\" != \\'\\\\ ]] && [[ \"$c\" != \\'\\\\ ]] &&\
    \ [[ \"$c\" != \\'\\\\ ]] && [[ \"$c\" != \\' ]] && [[ \"$c\" != \\'\\\\ ]] &&\
    \ [[ \"$c\" != \\'\\\\ ]] && [[ \"$c\" != \\'\\\\ ]] && [[ \"$c\" != \\'\\\\ ]]\
    \ && [[ \"$c\" != \\' ]] && [[ \"$c\" != \\'\\\\ ]] && [[ \"$c\" != \\'\\\\ ]]\
    \ && [[ \"$c\" != \\' ]] && [[ \"$c\" != \\'\\\\ ]] && [[ \"$c\" != \\'\\\\ ]]\
    \ && [[ \"$c\" != \\' ]] && [[ \"$c\" != \\'\\\\ ]] && [[ \"$c\" != \\' ]] &&\
    \ [[ \"$c\" != \\'\\\\ ]] && [[ \"$c\" != \\'\\\\ ]] && [[ \"$c\" != \\' ]] &&\
    \ [[ \"$c\" != \\'\\\\ ]] && [[ \"$c\" != \\'\\\\ ]] && [[ \"$c\" != \\'\\\\ ]]\
    \ && [[ \"$c\" != \\'\\\\ ]] && [[ \"$c\" != \\'\\\\ ]] && [[ \"$c\" != \\'\\\\\
    \ ]] && [[ \"$c\" != \\'\\\\ ]] && [[ \"$c\" != \\'\\\\ ]] && [[ \"$c\" != \\\
    '\\\\ ]] && [[ \"$c\" != \\'\\\\ ]] && [[ \"$c\" != \\'\\\\ ]] && [[ \"$c\" !=\
    \ \\'\\\\ ]] && [[ \"$c\" != \\'\\\\ ]] && [[ \"$c\" != \\'\\\\ ]] && [[ \"$c\"\
    \ != \\'\\\\ ]] && [[ \"$c\" != \\'\\\\ ]] && [[ \"$c\" != \\'\\\\ ]] && [[ \"\
    $c\" != \\'\\\\ ]] && [[ \"$c\" != \\'\\\\ \n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3qd3cjn2.sh: line 13: syntax error in conditional expression

    /tmp/tmp3qd3cjn2.sh: line 14: syntax error near `}''

    /tmp/tmp3qd3cjn2.sh: line 14: `}''

    '
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  echo $(echo $string | sed\
    \ \"s/\\(.\\)\\(.\\)\\(.\\)/\\1 \\2 \\3/\")\n}\n\ncandidate() {\n    count_distinct_characters\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\")\
    \ = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate\
    \ \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: -1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local line\n  local i\n\n  line=$1\n  while IFS=\
    \ read -r -n 1 c;\n  do\n    i=$((i + 1))\n    if [ \"$i\" -eq \"1\" ]; then\n\
    \      echo \"$line\"\n      line=\"\"\n      i=$((i + 1))\n    fi\n    line=$line$c\n\
    \  done\n  echo \"$i\"\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=46 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=30 encoding='utf-8'>
  timestamp: 1660056932
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local chars=$1\n  local unique=\n  local numChars=\n\
    \  for ((i=0;i<${#chars};i++)); do\n    [[ \"${unique+=($chars[$i])}\" == \"\"\
    \ ]] || numChars=$((numChars+1))\n  done\n  echo $numChars\n}\n\ncandidate() {\n\
    \    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    local string=$1\n    local unique_characters=\"\
    \"\n\n    # Remove all whitespace\n    string=${string//[[:space:]]/}\n\n    local\
    \ string_length #Length of the string before removing all white space\n    string_length=${#string}\n\
    \    for (( i=0; i<${string_length}; i++ )); do\n        local letter=${string[$i]}\n\
    \        if [[ ${unique_characters} == \"\" ]]; then\n            unique_characters=${unique_characters}\
    \ ${letter}\n        else\n            unique_characters=${unique_characters},${letter}\n\
    \        fi\n    done\n    # Remove all trailing \",\"\n    unique_characters=${unique_characters/,*}\n\
    \    unique_characters=${unique_characters%,*}\n    unique_characters=${unique_characters//,/}\n\
    \n    echo \"${#unique_characters}\" #Number of distinct characters\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpza1m49uu.sh: line 21: abcde: command not found

    '
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  echo \"$1\" | awk -F '[^a-zA-Z]' '{\n      gsub(/[[:lower:]]/,\
    \ \"\", $0);\n      gsub(/[[:upper:]]/, \"\", $0);\n      length($0)\n  }'\n}\n\
    \ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\"\
    \ ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"\
    aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n   local string=\"$1\"\n   string=${string//[^A-Za-z0-9]/}\n\
    \   echo ${#string}\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n    # remove leading space or tab\n    string=\"\
    ${1#\"${1%%[![:space:]]*}\"}\"\n    # remove trailing space or tab\n    string=\"\
    ${string%\"${string##*[![:space:]]}\"}\"\n    string=\"${string//[[:lower:]]/}\"\
    \n    string=\"${string//[[:upper:]]/}\"\n    len=${#string}\n    length=$((${#string}+1))\n\
    \    # remove duplicates, lower case is ok first\n    string=\"${string//[![:lower:]]/}\"\
    \n    string=\"${string//[![:upper:]]/}\"\n    count=0\n    while [[ ${len} -gt\
    \ ${length} ]]; do\n        count=$((${count}+1))\n        string=\"${string:0:1}\"\
    \n        length=$((${length}-1))\n    done\n    echo \"${count}\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local s=\"${1}\"\n  [[ \"$s\" == \"\" ]] && return\
    \ 1\n  local len=0\n  local maxlen=0\n  local res\n  local i=0\n  while (( i <\
    \ ${#s} )) ; do\n    (( ++i ))\n    local c=${s:$i:1}\n    local lower=${c#?}\n\
    \    local upper=${c#?}\n    (( len += 1 ))\n    (( maxlen += 2 ))\n    [[ $lower\
    \ != $c ]] || [[ $upper != $c ]] || maxlen=$(( maxlen + 1 ))\n  done\n  res=\"\
    ${len}\"\n  if (( maxlen < len )) ; then\n    (( maxlen = len + 1 ))\n    res=\"\
    ${res}+\"\n  fi\n  (( res = ${res:0:${#res}}))\n  (( res = ${res%?} ))\n  echo\
    \ $res\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\"\
    ) = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate\
    \ \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"\
    5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=\"$1\"\n  echo $(echo $string |\
    \ tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]' | \\\n  tr ' ' '\\n'\
    \ | sort | uniq -c)\n}\n\ncandidate() {\n    count_distinct_characters \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n\twhile read -r; do\n\t\t[[ \"${REPLY}\" =~ [a-z]\
    \ ]] || break\n\t\t[[ \"${REPLY}\" =~ [A-Z] ]] || break\n\t\t((count++))\n\tdone\
    \ < <(printf '%s' \"$1\" | tr -dc A-Za-z)\n\techo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_distinct_characters \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"abcde\") = \"5\" ]]\n    [[ $(candidate\
    \ \"abcdecadeCADE\") = \"5\" ]]\n    [[ $(candidate \"aaaaAAAAaaaa\") = \"1\"\
    \ ]]\n    [[ $(candidate \"Jerry jERRY JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927
- exit_code: 1
  program: "#!/bin/bash\n# Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n# >>> $(count_distinct_characters \"xyzXYZ\")\n\
    # \"3\"\n# >>> $(count_distinct_characters \"Jerry\")\n# \"4\"\n#\n# $1 is a string\n\
    count_distinct_characters() {\n  local string=$1\n  echo $string | sort | uniq\
    \ -c | awk '{print $1}'\n}\n\ncandidate() {\n    count_distinct_characters \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"abcde\") = \"5\" ]]\n    [[ $(candidate \"abcdecadeCADE\") = \"5\" ]]\n  \
    \  [[ $(candidate \"aaaaAAAAaaaa\") = \"1\" ]]\n    [[ $(candidate \"Jerry jERRY\
    \ JeRRRY\") = \"5\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056927

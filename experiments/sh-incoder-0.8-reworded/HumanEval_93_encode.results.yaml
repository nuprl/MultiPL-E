language: sh
name: HumanEval_93_encode
results:
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=\"$1\"\n    local result=\"\"\
    \n    local i\n\n    for i in $(seq 1 $msg | wc -w); do\n        local l=$(echo\
    \ \"$msg\" | cut -d \" \" -f $i)\n        local m=$l\n        for j in $(seq 2\
    \ $i); do\n            m=\"$(echo $m | tr \"[A-Z]\" \"[a-z]\")\"\n           \
    \ m=\"$(echo $m | tr \"[aeiouAEIOU]\" \"[aeiouAEIOU]\")\"\n        done\n    \
    \    result=$result$l$m\n    done\n\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "seq: invalid floating point argument: \u2018TEST\u2019\nTry 'seq --help'\
    \ for more information.\ncut: fields are numbered from 1\nTry 'cut --help' for\
    \ more information.\n"
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n\n    for (( i=1; i<${#message};\
    \ i++ )); do\n        local letter=${message:$i:1}\n\n        if [[ \"$letter\"\
    \ == [a-zA-Z] ]]; then\n            letter=${#letter}\n        fi\n        if\
    \ [[ \"$letter\" == [aeiou] ]]; then\n            letter=${#letter}\n        fi\n\
    \n        local replacement=${#letter}\n\n        if (( replacement-$i <= 0 ))\
    \ ; then\n            replacement=1\n        fi\n\n        local replace=${letter:0:$replacement}\n\
    \n        replace=\"${A[$replace]}\"\n\n        (( ${#message}-i ))\n        ((\
    \ ${#replace} ))\n\n        local ending=${message:$i:1}\n\n        if [[ \"$ending\"\
    \ == [a-zA-Z] ]]; then\n            ending=\"${ending}${#ending}\"\n        fi\n\
    \n        local endingReplace=${end:0:$replacement}\n\n        endingReplace=\"\
    ${A[$endingReplace]}\"\n\n        local newMessage=${message/${letter}/${replace}}\n\
    \        newMessage=${newMessage/${ending}/${endingReplace}}\n\n        echo \"\
    ${newMessage}\"\n    done\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local str=$1\n    local outstr=\"\"\n \
    \   # use these lists for case insensitive (all lower and all upper)\n    local\
    \ lower=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n    local upper=\"\
    A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\"\n    \n    # use these lists\
    \ for case sensitive (all lower and all upper)\n    local lower2=\"A b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\"\n    local upper2=\"a B c D e f G\
    \ H I j k L m N o p Q R S t u V W X Y Z\"\n    \n    # use these lists for case\
    \ insensitive (all upper and all lower)\n    local lower3=\"A B C D E F G H I\
    \ J K L M N O P Q R S T U V W X Y z\"\n    local upper3=\"a b c D e f G H I j\
    \ K L M N O P Q R S t u V W X Y Z\"\n    \n    for ((i=0; i<${#str}; i++)); do\n\
    \        # use these lists for case sensitive (all upper and all lower)\n    \
    \    local lower4=\"a B C d e f g h i J k l m n O P Q R S T U v w x Y z\"\n  \
    \      local upper4=\"a b C D E f g h i J k L m n O P Q R S t u V W X Y Z\"\n\
    \        \n        local letter=${str:$i:1}\n        if [[ ${lower:$i:1} =~ [[:upper:]]${letter}\
    \ ]] || [[ ${upper:$i:1} =~ [[:lower:]]${letter} ]]; then\n            echo \"\
    ${letter}\"\n        elif [[ ${lower2:$i:1} =~ [[:upper:]]${letter} ]] || [[ ${upper2:$i:1}\
    \ =~ [[:lower:]]${letter} ]]; then\n            echo \"${letter}\"\n        elif\
    \ [[ ${lower3:$i:1} =~ [[:upper:]]${letter} ]] || [[ ${upper3:$i:1} =~ [[:lower:]]${letter}\
    \ ]]; then\n            echo \"${letter}\"\n        elif [\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpocdips4a.sh: line 42: syntax error near unexpected token `}''

    /tmp/tmpocdips4a.sh: line 42: `}''

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  local vowels=\"aAiIuUeEoO\"\
    \n  local len=${#msg}\n  local idx=0\n  local out=\"\"\n  \n  while ((idx < len))\
    \ do\n    local c=${msg:$idx:1}\n    local v=${vowels:$c:1}\n    ((idx+=2))\n\
    \    \n    local new_c=\"${v#a}\"\n    new_c=\"${v#A}\"\n    new_c=\"${new_c^^}\"\
    \n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\
    \n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\
    \n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\
    \n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\
    \n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\
    \n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\
    \n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\
    \n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\
    \n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\
    \n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\
    \n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\
    \n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\
    \n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\
    \n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\
    \n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\
    \n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpznengo8h.sh: line 21: syntax error near unexpected token `do''

    /tmp/tmpznengo8h.sh: line 21: `  while ((idx < len)) do''

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    echo $1 | \n    sed -e 's/\\([AEIOUaeiou]\\\
    )/\\1/g' -e 's/\\([aeiou]\\)/\\1/g' \\\n        -e 's/\\([AEIOU]\\)/\\L&/g' -e\
    \ 's/\\([aeiou]\\)/\\L&/g' \\\n        -e 's/\\([aeiouAEIOU]\\)/\\U&/g'\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    # TODO\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqji1kd60.sh: line 16: syntax error near unexpected token `}''

    /tmp/tmpqji1kd60.sh: line 16: `}''

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local lowerMessage=\"\
    ${message,,}\"\n  local upperMessage=\"${lowerMessage,,}\"\n  local upperToLower=\"\
    ${lowerMessage,,}\"\n  local lowerToUpper=\"${upperMessage,,}\"\n  local upperVowels=\"\
    ${upperToLower,,}\"\n  local lowerVowels=\"${lowerToUpper,,}\"\n  local newMessage=\"\
    \"\n  local i\n  local j\n  local k\n  local l\n  local n\n  local m\n  local\
    \ vowelCount\n\n  # convert message to upper case\n  for (( i= 0; $i<${#lowerMessage};\
    \ i++ ))\n  do\n    lowerMessage[i]=${lowerMessage[i],,}\n  done\n\n  # create\
    \ mapping of lowercase to uppercase\n  for (( i=0; i<${#lowerMessage}; i++ ))\n\
    \  do\n    lowerMessage[i]=${lowerMessage[i]^^}\n  done\n\n  # change all letters\
    \ to upper case\n  for (( i=0; i<${#lowerMessage}; i++ ))\n  do\n    lowerToUpper[i]=${lowerToUpper[i],,}\n\
    \  done\n\n  # count all vowels in message\n  for (( i=0; i<${#lowerMessage};\
    \ i++ ))\n  do\n    lowerVowels[i]=${lowerVowels[i],,}\n  done\n\n  # map every\
    \ letter back to it's original case\n  for (( i=0; i<${#lowerToUpper}; i++ ))\n\
    \  do\n    upperToLower[i]=${upperToLower[i],,}\n  done\n\n  # count all vowels\
    \ in upper case\n  for (( i=0; i<${#upperToLower}; i++ ))\n  do\n    upperVowels[i]=${upperVowels[i],,}\n\
    \  done\n\n  for (( i=0; i<${#message}; i++ ))\n  do\n    message[i]=${message[i],,}\n\
    \  done\n\n  for (( i=0; i<${#lowerMessage}; i++ ))\n  do\n    lowerMessage[i]=${lowerMessage[i],,}\n\
    \  done\n  \n  message=${message,,}\n\n  # convert message to lower case\n  for\
    \ (( i= 0; $i<${#lowerMessage}; i++ ))\n  do\n    lowerMessage[i]=${lowerMessage[i],,}\n\
    \  done\n\n  # create mapping of lowercase to uppercase\n  for (( i=0; i<${#lowerMessage};\
    \ i++ ))\n  do\n    lowerMessage[i]=${lowerMessage[i]^^}\n  done\n\n  # change\
    \ all letters to upper case\n  for (( i=0; i<${#lower\n}\n\ncandidate() {\n  \
    \  encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphbfb6gqs.sh: line 92: unexpected EOF while looking for matching
    `)''

    /tmp/tmphbfb6gqs.sh: line 109: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local letter\n  local word\n  local c\n \
    \ local vowels\n  local swapped\n  local count\n  local last\n  local first\n\
    \  local last2\n  local first2\n  local last3\n  local first3\n  local middle\n\
    \  local last4\n  local first4\n  local firstLetter\n  local firstFour\n  local\
    \ firstFive\n  local firstSix\n  local firstSeven\n  local firstEight\n  local\
    \ firstNine\n  local firstTen\n\n  c=$2\n  first=${1:0:1}\n  last=${1:1:1}\n \
    \ firstLetter=${first:0:1}\n  firstFour=${first:1:1}\n  firstFive=${first:2:1}\n\
    \  firstSix=${first:3:1}\n  firstSeven=${first:4:1}\n  firstEight=${first:5:1}\n\
    \  firstNine=${first:6:1}\n  firstTen=${first:7:1}\n\n  last2=${last:0:1}\n  first2=${first:1:1}\n\
    \  last3=${last:1:1}\n  first3=${first:2:1}\n  middle=${first:2:1}\n  first4=${first:3:1}\n\
    \  firstLetter=${first:4:1}\n  firstFour=${first:5:1}\n  firstFive=${first:6:1}\n\
    \  firstSix=${first:7:1}\n  firstSeven=${first:8:1}\n  firstEight=${first:9:1}\n\
    \  firstNine=${first:10:1}\n  firstTen=${first:11:1}\n\n  vowels=$(echo $1 | tr\
    \ -cd '[:alnum:]' |\n    sed 's/[aeiouyAEIOUY].*[aeiouyAEIOUY]/e/g' |\n    sed\
    \ 's/^[aeiouyAEIOUY]*//g')\n  swapped=$(echo $1 | tr -cd '[:alnum:]' |\n    sed\
    \ 's/[AEIOUY].*[AEIOUY]/e/g' |\n    sed 's/^[AEIOUY]*//g')\n\n  letter=$(echo\
    \ $vowels | cut -d'e' -f 1)\n  count=$(echo $vowels | cut -d'e' -f 2)\n  last=$(echo\
    \ $vowels | cut -d'e' -f 3)\n  first=$(echo $vowels | cut -d'e' -f 4)\n  last2=$(echo\
    \ $vowel\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpopm7wp8n.sh: line 77: unexpected EOF while looking for matching
    `)''

    /tmp/tmpopm7wp8n.sh: line 94: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local out=$msg\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local vowels2=\"AEIOU\"\n    for v in ${vowels};\
    \ do\n        local newV=${v#${v%%[!${v}]*}}\n        newV=${v#${newV}}\n    \
    \    out=${out//$v/$newV}\n    done\n    local vowels3=\"AEIOUaeiou\"\n    for\
    \ v in ${vowels3}; do\n        local newV=${v#${v%%[!${v}]*}}\n        newV=${v#${newV}}\n\
    \        out=${out//$v/$newV}\n    done\n    for v in ${vowels2}; do\n       \
    \ out=${out//$v/$v}\n    done\n    echo \"$out\"\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local string=$1\n    local vowels=\"a e\
    \ i o u y\"\n    local newString=\"\"\n    for i in $string; do\n        if [[\
    \ $i =~ $vowels ]]; then\n            vowelIndex=${i%?}\n            shift\n \
    \           wordIndex=${i#$vowelIndex}\n            newString+=\"${letters[$wordIndex]}\"\
    \n            newString+=\"${letters[$wordIndex+1]}\"\n        fi\n    done\n\
    \    echo \"$newString\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    msg=$1\n    echo $(echo $msg | sed \"s/\\\
    (.*\\)\\(.\\)\\(.\\)\\(.*\\)/\\1\\2\\3\\4/g\" | sed \"s/aeiou/a/g\" | sed \"s/AEIOU/A/g\"\
    \ | sed \"s/eE/E/g\" | sed \"s/iI/I/g\" | sed \"s/oO/O/g\" | sed \"s/uU/U/g\"\
    \ | sed \"s/yY/Y/g\" | sed \"s/[^a-zA-Z]/N/g\")\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local STRING=$1\n    local TEMP=\"\"\n\
    \    local CHARACTERS=`echo $STRING | tr a-z A-Z | tr A A B | tr e E`\n    for\
    \ ((i=0; i<${#CHARACTERS}; i++)); do\n        local CHARACTER=${CHARACTERS[i]}\n\
    \        local POS=$(echo $CHARACTER | tr 'a' ' ' | tr 'e' 'e' | tr 'i' 'i' |\
    \ tr 'o' 'o' | tr 'u' 'u' | tr 'y' 'y' | tr 'A' 'A' | tr 'E' 'E' | tr 'I' 'I'\
    \ | tr 'O' 'O' | tr 'U' 'U' | tr 'Y' 'Y')\n        local NEGATIVE=$(cat /dev/null\
    \ | tr -d 'a' | tr -d 'e' | tr -d 'i' | tr -d 'o' | tr -d 'u' | tr -d 'y' | tr\
    \ -d 'A' | tr -d 'E' | tr -d 'I' | tr -d 'O' | tr -d 'U' | tr -d 'Y')\n      \
    \  local POS2=$(echo $CHARACTER | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr '\
    \ ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr\
    \ ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr\
    \ ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr\
    \ ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr\
    \ ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr\
    \ ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr\
    \ ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr\
    \ ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr\
    \ ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' '\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjszo9kg9.sh: line 22: unexpected EOF while looking for matching
    `''''

    /tmp/tmpjszo9kg9.sh: line 39: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local newMessage=\"\
    \"\n    local position=1\n    local previousLetter=\n    local firstLetter=\n\
    \    local lastLetter=\n    local letterCount=0\n    local letterArray=()\n  \
    \  local vowelArray=(\"a\",\"e\",\"i\",\"o\",\"u\")\n    # First we go through\
    \ the message and build an array\n    # of what letters we have and how many times\
    \ they appear.\n    for letter in $message; do\n        letterArray[$letter]=$((letterArray[$letter]+1))\n\
    \    done\n    # Now we go through the letters and replace all vowels with \n\
    \    # the letter that is 2 places ahead of the vowel in their position\n    for\
    \ letter in $message; do\n        if [[ $letter =~ ^[aeiouAEIOU] ]]; then\n  \
    \          newLetter=${letter%?}\n            if [[ $newLetter =~ ^[aeiouAEIOU]\
    \ ]]; then\n                previousLetter=${letter:0:1}\n                if [[\
    \ $firstLetter != $previousLetter ]]; then\n                    if [[ $position\
    \ -gt 0 ]]; then\n                        lastLetter=${letter:1}\n           \
    \             newMessage+=$lastLetter\n                        position=$((position-1))\n\
    \                    fi\n                    firstLetter=$previousLetter\n   \
    \                 lastLetter=${letter:1}\n                    newMessage+=$lastLetter\n\
    \                fi\n                newMessage+=$firstLetter\n              \
    \  position=$((position+1))\n            fi\n        else\n            newMessage+=$letter\n\
    \        fi\n        letterCount=$((letterCount+1))\n    done\n    # Now we go\
    \ through the letter array again, \n    # replacing all vowels with their position\
    \ in alphabet.\n    # This is where we add the final letters back in.\n    # Make\
    \ sure to start at position=1 to \n    # account for first letter.\n    for letter\
    \ in $newMessage; do\n        letterArray[$letter]=$((letterArray[$letter]+1))\n\
    \        if [[ $letterArray[$letter] -gt 2 ]]; then\n            letterCount=$((letterCount-1))\n\
    \            newMessage+=$letter\n            if [[ $letterCount -gt 1 ]]; then\n\
    \                position=$((position+1))\n            fi\n        fi\n    done\n\
    \    # Now we go through the vowel array again, \n    # replacing vowels with\
    \ their position in alphabet.\n    # This is where we add the final vowels back\
    \ in.\n    # Make sure to start at position=1 to \n    # account for first letter.\n\
    \    for vowel in $vowelArray; do\n        vowelArray[$vowel]=$((vowelArray[$\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoz9oi69y.sh: line 75: unexpected EOF while looking for matching
    `)''

    /tmp/tmpoz9oi69y.sh: line 92: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n\tlocal message=$1\n\tlocal alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n\tlocal vowels=\"aeiouAEIOU\"\n\n\tfor letter in ${message}; do \n\t\tcount=0\n\
    \t\tfor i in ${alphabet}; do \n\t\t\tif [[ ${i} =~ ${letter} ]]; then\n\t\t\t\t\
    let count+=1\n\t\t\tfi\n\t\tdone\n\t\tif [[ ${count} -ne 2 ]]; then\n\t\t\tletter=$(echo\
    \ ${letter} | tr [a-z] [A-Z])\n\t\tfi\n\t\techo ${letter}\n\tdone\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "tr: extra operand \u2018[A-Z]\u2019\nTry 'tr --help' for more information.\n"
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local string=$1\n  \n  echo $(echo $string\
    \ | awk '{for(i=1;i<=NF;i++) printf toupper(substr($i,i,1)); printf \"%s\",substr($i,1,1)}')\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=\"$1\"\n    local vowel=\"\
    aeiou\"\n    local out\n\n    for (( i=0; i<${#message}; i++ ))\n    do\n    \
    \    local letter=\"${message:$i:1}\"\n        if [[ ${#vowel} -eq 0 ]]\n    \
    \    then\n            local out\n            out=\"${letter}\"\n        else\n\
    \            local out\n            ((i+=2))\n            for (( j=0; j<${#vowel};\
    \ j++ ))\n            do\n                if [[ \"${message:$i:1}\" = \"${vowel:$j:1}\"\
    \ ]]\n                then\n                    out=\"${letter:$j:1}\"\n     \
    \               break\n                fi\n            done\n        fi\n    \
    \    message=\"${message:0:i}${out}${message:$i:1}\"\n    done\n\n    echo $message\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=\"$1\"\n  message=${message//[a-z]/}\n\
    \  message=${message//[aeiou]/}\n  message=${message//[!@#\\$%\\^&\\*\\(\\)_+\\\
    [\\]\\{\\}\\|;:\"<>?]/}\n  message=${message//[a-z][a-z]/}\n  message=${message//[aeiou][aeiou]/}\n\
    \  message=${message//[!@#\\$%\\^&\\*\\(\\)_+\\[\\]\\{\\}\\|;:\"<>?]/}\n  message=${message//[a-z][a-z]/}\n\
    \  message=${message//[aeiou][aeiou]/}\n  message=${message//[!@#\\$%\\^&\\*\\\
    (\\)_+\\[\\]\\{\\}\\|;:\"<>?]/}\n  message=${message//[a-z][a-z]/}\n  message=${message//[aeiou][aeiou]/}\n\
    \  message=${message//[!@#\\$%\\^&\\*\\(\\)_+\\[\\]\\{\\}\\|;:\"<>?]/}\n  message=${message//[a-z][a-z]/}\n\
    \  message=${message//[aeiou][aeiou]/}\n  message=${message//[!@#\\$%\\^&\\*\\\
    (\\)_+\\[\\]\\{\\}\\|;:\"<>?]/}\n  message=${message//[a-z][a-z]/}\n  message=${message//[aeiou][aeiou]/}\n\
    \  message=${message//[!@#\\$%\\^&\\*\\(\\)_+\\[\\]\\{\\}\\|;:\"<>?]/}\n  message=${message//[a-z][a-z]/}\n\
    \  message=${message//[aeiou][aeiou]/}\n  message=${message//[!@#\\$%\\^&\\*\\\
    (\\)_+\\[\\]\\{\\}\\|;:\"<>?]/}\n  message=${message//[a-z][a-z]/}\n  message=${message//[aeiou][aeiou]/}\n\
    \  message=${message//[!@#\\$%\\^&\\*\\(\\)_+\\[\\]\\{\\}\\|;:\"<>?]/}\n  message=${message//[a-z][a-z]/}\n\
    \  message=${message//[aeiou][aeiou]/}\n  message=${message//[!@#\\$%\\^&\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcovftux0.sh: line 55: unexpected EOF while looking for matching
    `"''

    /tmp/tmpcovftux0.sh: line 59: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    \n    local replace='abcdefghijklmnopqrstuvwxyz'\n\
    \    local vowels='aeiou'\n    local letter='ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n   \
    \ local new_letter=''\n    \n    local i=0\n    while [ $i -lt ${#message} ];\
    \ do\n        new_letter=\"${letter:0:1}${replace:${#vowels} + $((i+1)):1}\"\n\
    \        \n        local j=0\n        while [ $j -lt ${#replace} ]; do\n     \
    \       \n            if [[ \"${message:$i:1}\" == \"${replace:$j:1}\" ]]; then\n\
    \                message=$(echo \"${message}\" | sed -e \"s/$replace/$new_letter/g\"\
    )\n            \n                i=$((i+1))\n                j=$((j+1))\n    \
    \        else\n                j=$((j+1))\n            fi\n        done\n    \
    \    i=$((i+1))\n    done\n    \n    echo \"$message\"\n}\n\ncandidate() {\n \
    \   encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    message=$1\n\n    i=0\n    lastVowel=0\n\
    \    swappedVowel=0\n    countVowels=0\n\n    while [ $i -lt ${#message} ]; do\n\
    \        currentChar=${message:$i:1}\n        ((i++))\n\n        if [ $currentChar\
    \ != $lastVowel ]; then\n            swappedVowel=0\n            lastVowel=$currentChar\n\
    \n            ((countVowels++))\n        else\n            if [ $swappedVowel\
    \ -eq 0 ]; then\n                swappedVowel=$currentChar\n                ((countVowels++))\n\
    \            else\n                ((countVowels++))\n                swappedVowel=$currentChar\n\
    \            fi\n        fi\n    done\n\n    result=\"\"\n    i=0\n    while [\
    \ $i -lt ${#message} ]; do\n        ((i++))\n        if [ $((i%2)) == 0 ]; then\n\
    \            result+=$swappedVowel\n        fi\n        result+=$((${message:$i:1}))\n\
    \    done\n\n    echo \"$result\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  # The dictionary we'll use to determine whether\
    \ each letter is a\n  # vowel\n  declare -A vowel_map\n  \n  # Initialize a variable\
    \ that contains the count of the number of \n  # vowel instances in the message\n\
    \  declare -a counts\n  \n  # Initialize a variable that contains the character\
    \ that appears 2\n  # places ahead of the vowel\n  declare -a position\n  \n \
    \ # Initialize a variable that contains the message encoded in the \n  # required\
    \ format\n  declare -a output\n  \n  # Initialize a variable that holds the letter\
    \ that the vowel \n  # immediately follows\n  declare -a next_letter\n  \n  #\
    \ Initialize a variable that holds 1 if the vowel should be replaced\n  # with\
    \ itself and 0 if it should be preserved.\n  declare -a vowel\n  \n  vowel_map[\"\
    a\"]=0 vowel_map[\"e\"]=0 vowel_map[\"i\"]=0 vowel_map[\"o\"]=0 vowel_map[\"u\"\
    ]=0\n  vowel_map[\"A\"]=0 vowel_map[\"E\"]=0 vowel_map[\"I\"]=0 vowel_map[\"O\"\
    ]=0 vowel_map[\"U\"]=0\n  \n  for i in $1;do\n    # If the letter does not appear\
    \ in the dictionary add the letter \n    # to the dictionary and set the corresponding\
    \ count to 1 \n    if [ ! -z \"$(i+${i:2:1})\" ]; then \n      ((${vowel_map[$(i+${i:2:1})]}+=1))\
    \ \n      output+=$i\n    fi\n  done\n  \n  for i in \"${!vowel_map[@]}\"; do\n\
    \    # if the count of the letter is greater than 1, then we should\n    # check\
    \ the letter immediately after it\n    if [ ${counts[$i]} -gt 1 ]; then\n    \
    \  position[$i]=${!position[$i]}\n      if [ ${position[$i]} -gt 2 ]; then\n \
    \       next_letter[$i]=${!next_letter[$i]}\n        vowel[$i]=1\n      fi\n \
    \   fi\n  done\n  \n  for i in \"${!counts[@]}\"; do\n    # if the letter is a\
    \ vowel then we replace the vowel with the letter\n    # that appears 2 places\
    \ ahead of it\n    if [ ${vowel[$i]} -eq 1 ]; then\n      output+=${output#$(i)}\n\
    \      output+=${output#$(i+${i:2:1})}\n      output+=$next_letter[$i]\n     \
    \ output+=${output#$next_letter[$i]}\n    fi\n  done\n\n}\n\ncandidate() {\n \
    \   encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_6zrqz7y.sh: line 45: i+S: command not found

    /tmp/tmp_6zrqz7y.sh: line 54: [: -gt: unary operator expected

    /tmp/tmp_6zrqz7y.sh: line 54: [: -gt: unary operator expected

    /tmp/tmp_6zrqz7y.sh: line 54: [: -gt: unary operator expected

    /tmp/tmp_6zrqz7y.sh: line 54: [: -gt: unary operator expected

    /tmp/tmp_6zrqz7y.sh: line 54: [: -gt: unary operator expected

    /tmp/tmp_6zrqz7y.sh: line 54: [: -gt: unary operator expected

    /tmp/tmp_6zrqz7y.sh: line 54: [: -gt: unary operator expected

    /tmp/tmp_6zrqz7y.sh: line 54: i: expression recursion level exceeded (error token
    is "i")

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    \n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9dwt7jvi.sh: line 16: syntax error near unexpected token `}''

    /tmp/tmp9dwt7jvi.sh: line 16: `}''

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=\"$1\"\n    local vowels=\"\
    AEIOUYaeiouy\"\n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\
    \n    local n=0\n    local vowel_letter=\"\"\n    local new_letter=\"\"\n\n  \
    \  for character in $message; do\n        if [[ \"$letters\" == *\"$character\"\
    * ]]; then\n            new_letter=\"${letters:$n:1}\"\n        fi\n\n       \
    \ if [[ \"$vowels\" == *\"$character\"* ]]; then\n            vowel_letter=\"\
    ${vowels:$n:1}\"\n        fi\n\n        n=$((n+1))\n    done\n\n    echo \"$new_letter\
    \ $vowel_letter\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local string=\"$1\"\n    local result=\"\
    a\" \n    local vowels=\"AEIOUaeiou\"\n\n    local index=1\n    while [ \"$index\"\
    \ -lt \"${#string}\" ]\n    do\n        local letter=\"${string:$index:1}\"\n\n\
    \        # Skip letters that are not in the english alphabet.\n        if [ \"\
    $letter\" != \"a\" -a \"$letter\" != \"e\" -a \"$letter\" != \"i\" -a \"$letter\"\
    \ != \"o\" -a \"$letter\" != \"u\" ] ; then\n            result+=$letter\n   \
    \     else\n            # Swap the case of letters \n            case \"$letter\"\
    \ in\n                A)\n                    letter=\"b\"\n                 \
    \   ;;\n                E)\n                    letter=\"f\"\n               \
    \     ;;\n                I)\n                    letter=\"g\"\n             \
    \       ;;\n                O)\n                    letter=\"h\"\n           \
    \         ;;\n                U)\n                    letter=\"j\"\n         \
    \           ;;\n            esac\n            # Replace all vowels in message\
    \ with that letter 2 places \n            # ahead.\n            for vowel in $vowels\n\
    \            do\n                if [ \"$letter\" == \"$vowel\" ] ; then\n   \
    \                 letter=$((letter % 26 + 21))\n                fi\n         \
    \   done\n            result+=$letter\n        fi\n        index=$((index + 1))\n\
    \    done\n    echo \"$result\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local string=$(echo $message\
    \ | sed 's/\\(.*\\)/\\L\\1/g' | \n                   sed 's/[aeiou]/e/g' | \n\
    \                   sed 's/[AEIOU]/E/g' | \n                   sed 's/^[aeiou]/G/g'\
    \ | \n                   sed 's/^[AEIOU]/G/g' | \n                   sed 's/^[aeiou]/G/g'\
    \ | \n                   sed 's/e\\([aeiou]\\)/\\1E/g' | \n                  \
    \ sed 's/E\\([AEIOU]\\)/\\1E/g' | \n                   sed 's/\\([aeiou]\\)e/\\\
    1G/g' | \n                   sed 's/\\([AEIOU]\\)E/\\1G/g' | \n              \
    \     sed 's/\\([aeiou]\\)e/\\1G/g' | \n                   sed 's/\\([AEIOU]\\\
    )E/\\2G/g' | \n                   sed 's/e\\([AEIOU]\\)/\\1G/g' | \n         \
    \          sed 's/E\\([aeiou]\\)/\\1G/g' | \n                   sed 's/\\([aeiou]\\\
    )e/\\1G/g' | \n                   sed 's/\\([AEIOU]\\)E/\\2G/g' | \n         \
    \          sed 's/e\\([AEIOU]\\)/\\1G/g' | \n                   sed 's/E\\([aeiou]\\\
    )/\\1G/g' | \n                   sed 's/\\([aeiou]\\)e/\\1G/g' | \n          \
    \         sed 's/\\([AEIOU]\\)E/\\2G/g' | \n                   sed 's/e\\([AEIOU]\\\
    )/\\1G/g' | \n                   sed 's/E\\([aeiou]\\)/\\1G/g' | \n          \
    \         sed 's/\\([aeiou]\\)e/\\1G/g' | \n                   sed 's/\\([AEIOU]\\\
    )E/\\2G/g' | \n                   sed 's/e\\([AEIOU]\\)/\\1G/g' | \n         \
    \          sed 's/E\\([aeiou]\\)/\\1G/g' | \n                   sed 's/\\([aeiou]\\\
    )e/\\1G/g' | \n                   sed 's/\\([AEIOU]\\)E/\\2G/g' | \n         \
    \          sed 's/e\\([AEIOU]\\)/\\1\n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7i_sld4_.sh: line 44: unexpected EOF while looking for matching
    `''''

    /tmp/tmp7i_sld4_.sh: line 61: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  # Set variables to empty strings. \n  local\
    \ message=$1\n  local encodedMessage\n  encodedMessage=\"\"\n  # Iterate over\
    \ each letter in the string.\n  for i in \"${message[@]}\" \n  do\n    # Append\
    \ letter to encodedMessage variable if \n    # it doesn't already have one, otherwise\
    \ \n    # replace the vowel with the letter that appears 2 \n    # places ahead\
    \ of the vowel. \n    if [[ $encodedMessage != \"\" ]]; then\n      encodedMessage+=\"\
    \ $i\"\n    elif [[ $in\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphhb1e4v1.sh: line 28: unexpected EOF while looking for matching
    `)''

    /tmp/tmphhb1e4v1.sh: line 45: unexpected argument to conditional binary operator

    /tmp/tmphhb1e4v1.sh: line 45: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  echo $1 | sed 's/\\([a-zA-Z]\\)/\\L\\1/g'\
    \ | sed 's/[aeiouyAEIOUY]/[GASDFGHJKL]/g' | sed 's/^/[GASDFGHJKL]/g' | sed 's/$/[GASDFGHJKL]/g'\
    \ | sed 's/^/[GASDFGHJKL]/g' | sed 's/$/[GASDFGHJKL]/g' | sed 's/^/[GASDFGHJKL]/g'\
    \ | sed 's/$/[GASDFGHJKL]/g' | sed 's/^/[GASDFGHJKL]/g' | sed 's/$/[GASDFGHJKL]/g'\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowel=\"a\"\
    \n    local count=0\n    local char\n    local count2\n    local new_message\n\
    \    local replace=\"a\"\n\n    count=$((${#message} - 2))\n\n    for ((i=2; i\
    \ <= ${#message}; i++ )); do\n        char=${message:$i:1}\n        count2=$((${#char}\
    \ - 2))\n        for ((j=2 ; j <= ${#char}; j++)); do\n            if [ ${char:$j:1}\
    \ == \"e\" ]; then char=${char:$j:1}\n            elif [ ${char:$j:1} == \"i\"\
    \ ]; then char=${char:$j:1}\n            elif [ ${char:$j:1} == \"o\" ]; then\
    \ char=${char:$j:1}\n            elif [ ${char:$j:1} == \"u\" ]; then char=${char:$j:1}\n\
    \            elif [ ${char:$j:1} == \"a\" ]; then char=${char:$j:1}\n        \
    \    elif [ ${char:$j:1} == \"u\" ]; then char=${char:$j:1}\n            elif\
    \ [ ${char:$j:1} == \"e\" ]; then char=${char:$j:1}\n            elif [ ${char:$j:1}\
    \ == \"a\" ]; then char=${char:$j:1}\n            elif [ ${char:$j:1} == \"a\"\
    \ ]; then char=${char:$j:1}\n            elif [ ${char:$j:1} == \"o\" ]; then\
    \ char=${char:$j:1}\n            elif [ ${char:$j:1} == \"u\" ]; then char=${char:$j:1}\n\
    \            elif [ ${char:$j:1} == \"o\" ]; then char=${char:$j:1}\n        \
    \    elif [ ${char:$j:1} == \"u\" ]; then char=${char:$j:1}\n            fi\n\
    \        done\n        new_message+=\"${char:$count:1}${replace:$count2:1}\"\n\
    \        count+=2\n        count2+=2\n        replace+=\"a\"\n    done\n    echo\
    \ $new_message\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=$(echo\
    \ \"$message\" | sed 's/\\(.\\)\\(.*\\)\\(..\\)/\\2/g')\n    local result=\"\"\
    \n    for letter in $message; do\n        local vowel=\"$(echo \"$letter\" | sed\
    \ 's/\\(.\\)\\(.*\\)\\(..\\)/\\2/g')\"\n        local resultLetter=\"${letter^^}\"\
    \n        local resultVowel=\"${vowel^^}\"\n        resultLetter=\"$(echo \"$resultLetter\"\
    \ | sed 's/\\(.\\)\\(.*\\)\\(..\\)/\\2/g')\"\n        resultVowel=\"$(echo \"\
    $resultVowel\" | sed 's/\\(.\\)\\(.*\\)\\(..\\)/\\2/g')\"\n        if [ \"$vowel\"\
    \ = \"$resultVowel\" ]; then\n            resultLetter=\"$(echo \"$resultLetter\"\
    \ | sed 's/\\(.\\)\\(.*\\)\\(..\\)/\\1/g')\"\n            result=\"${resultLetter}${result}\"\
    \n        fi\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local string=\"$1\"\n    local alphabet=\"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local len=${#alphabet}\n    local numVowels=0\n\
    \    local numConsonants=0\n    local result=\"\"\n    local i\n    for (( i =\
    \ 0; i < ${#string}; i++ )); do\n        local letter=\"${string: i 1}\"\n   \
    \     if [ \"$letter\" == \"A\" ]; then\n            letter=\"Z\"\n        elif\
    \ [ \"$letter\" == \"E\" ]; then\n            letter=\"J\"\n        elif [ \"\
    $letter\" == \"I\" ]; then\n            letter=\"K\"\n        elif [ \"$letter\"\
    \ == \"O\" ]; then\n            letter=\"P\"\n        elif [ \"$letter\" == \"\
    U\" ]; then\n            letter=\"T\"\n        elif [ \"$letter\" == \"Y\" ];\
    \ then\n            letter=\"B\"\n        fi\n        if [ \"$letter\" == \"a\"\
    \ ] || [ \"$letter\" == \"e\" ] || [ \"$letter\" == \"i\" ] || [ \"$letter\" ==\
    \ \"o\" ] || [ \"$letter\" == \"u\" ] || [ \"$letter\" == \"y\" ]; then\n    \
    \        numVowels+=1\n        fi\n        local nextLetter=\"${string: (i + 1)\
    \ 1}\"\n        if [ \"$nextLetter\" == \"a\" ] || [ \"$nextLetter\" == \"e\"\
    \ ] || [ \"$nextLetter\" == \"i\" ] || [ \"$nextLetter\" == \"o\" ] || [ \"$nextLetter\"\
    \ == \"u\" ] || [ \"$nextLetter\" == \"y\" ]; then\n            numVowels+=1\n\
    \        fi\n        local nextTwoLetters=\"${string: (i + 2) 2}\"\n        if\
    \ [ \"$nextTwoLetters\" == \"A\" ] || [ \"$nextTwoLetters\" == \"E\" ] || [ \"\
    $nextTwoLetters\" == \"I\" ] || [ \"$nextTwoLetters\" == \"O\" ] || [ \"$nextTwoLetters\"\
    \ == \"U\" ] || [ \"$nextTwoLetters\" == \"Y\" ]; then\n            numVowels+=1\n\
    \        fi\n        local nextThreeLetters=\"${string: (i + 3) 3}\"\n       \
    \ if [ \"$nextThreeLetters\" == \"A\" ] || [ \"$nextThreeLetters\" == \"E\" ]\
    \ || [ \"$nextThreeLetters\" == \"I\" ] || [ \"$nextThreeLetters\" == \"O\" ]\
    \ || [ \"$nextThreeLetters\" == \"U\" ] || [ \"$nextThreeLetters\" == \"Y\" ];\
    \ then\n            numVowels+=1\n        fi\n        local nextFourLetters=\"\
    ${string: (i + 4) 4}\"\n        if [ \"$nextFourLetters\" == \"A\" ] || [ \"$nextFourLetters\"\
    \ == \"E\" ] || [ \"$nextFourLetters\" == \"I\" ] || [ \"$nextFourLetters\" ==\
    \ \"O\" ] || [ \"$nextFourLetter\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7xc5x36x.sh: line 66: unexpected EOF while looking for matching
    `"''

    /tmp/tmp7xc5x36x.sh: line 70: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  echo -n \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr ':' '__' | tr ' ' '__' | tr ',' '__' | sed -e \"s/.*/&:/g\" | sed -e \"\
    s/\\([AEIOUaeiou]\\)\\(.\\)/\\1\\L\\2/g\" | sed -e \"s/\\([AEIOUaeiou]\\)/\\U\\\
    1/g\" | sed -e \"s/\\([AEIOUaeiou]\\)\\(.\\)/\\1\\L\\2/g\" | sed -e \"s/\\([AEIOUaeiou]\\\
    )/\\U\\1/g\" | sed -e \"s/\\([AEIOUaeiou]\\)\\(.\\)/\\1\\L\\2/g\" | sed -e \"\
    s/\\([AEIOUaeiou]\\)/\\U\\1/g\" | sed -e \"s/\\([AEIOUaeiou]\\)\\(.\\)/\\1\\L\\\
    2/g\" | sed -e \"s/\\([AEIOUaeiou]\\)/\\U\\1/g\" | sed -e \"s/\\([AEIOUaeiou]\\\
    )\\(.\\)/\\1\\L\\2/g\" | sed -e \"s/\\([AEIOUaeiou]\\)/\\U\\1/g\" | sed -e \"\
    s/\\([AEIOUaeiou]\\)\\(.\\)/\\1\\L\\2/g\" | sed -e \"s/\\([AEIOUaeiou]\\)/\\U\\\
    1/g\" | sed -e \"s/\\([AEIOUaeiou]\\)\\(.\\)/\\1\\L\\2/g\" | sed -e \"s/\\([AEIOUaeiou]\\\
    )/\\U\\1/g\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=$(echo\
    \ $message|tr [a-z] [A-Z])\n    local count=0\n    local letter=0\n    local newMessage=''\n\
    \n    # Iterate through each character in message\n    for (( i=1; i<${#message};\
    \ i++ )) ; do\n        (( count++ ))\n        # If this letter exists in the alphabet\n\
    \        if [[ ${alphabet:i} == ${message:i} ]] ; then \n            (( letter\
    \ = $(( letter + 1 )) ))\n            (( ${alphabet:i:i} ))\n            # Set\
    \ the newMessage to the newMessage concatenated with the \n            # character\
    \ that appears ${letter} places ahead\n            newMessage=\"${newMessage}${message:i:i:letter}\"\
    \n            # Replace the character in the alphabet with an empty string\n \
    \           alphabet=${alphabet:i:i:1}\n        fi\n    done\n    echo \"$newMessage\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "tr: extra operand \u2018[A-Z]\u2019\nTry 'tr --help' for more information.\n"
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=\"$1\"\n  local i\n  local swapped\n\
    \  local swap\n  local last\n  local length\n  local vowels\n  local vowel\n \
    \ \n  # first find the length of message\n  length=${#msg} \n  \n  # initialise\
    \ array for vowels\n  vowels=(\"a\" \"e\" \"i\" \"o\" \"u\")\n\n  # initialise\
    \ empty string\n  swapped=\"\"\n  \n  # loop through message replacing vowels\n\
    \  for ((i = 0; i <= length; i++)) {\n    vowel=${msg:$i:1}\n    swap=${vowels:$vowel:2}\n\
    \    swapped+=\"${swap}\"\n  }\n\n  # return string\n  echo \"${swapped}\"\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local output=\"\"\
    \n    for ((i=1; i<=${#message}; i++)); do\n        local letter=${message:$i:1}\n\
    \        local vowels=\"aeiouAEIOU\"\n        if (( ${#vowels} > 0 )); then\n\
    \            for ((j=0; j<${#vowels}; j++)); do\n                if [[ $letter\
    \ == ${vowels:$j:1} ]]; then\n                    output+=\"$(echo \"$letter\"\
    \ |  sed 's/'\"${letter}\"'/\"'\"${LETTERS[${j}+1]}\"'/g')\"\n               \
    \     break\n                fi\n            done\n        else\n            output+=\"\
    $letter\"\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \ #lowercase english letters\n  local i\n  local newmessage=\"\"\n  local letter\n\
    \  local vowel\n  local vowel_letter\n\n  for i=(${#message}); do\n    letter=${message:$i:1}\n\
    \    vowel=${message:$i:2}\n    vowel_letter=${alphabet:$(( ${#alphabet}+1 )):$((\
    \ ${#alphabet}-(${#vowel}-1) ))]\n    # Replace all vowels with vowel_letter 2\
    \ places ahead\n    newmessage+=$letter$vowel_letter\n  done\n\n  echo \"$newmessage\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphkq134tn.sh: line 23: syntax error near unexpected token `(''

    /tmp/tmphkq134tn.sh: line 23: `  for i=(${#message}); do''

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n\n    echo \"$(echo $message\
    \ | sed -e 's/a/A/g' -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/o/O/g'\
    \ -e 's/u/U/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g'\
    \ -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g'\
    \ -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g'\
    \ -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g'\
    \ -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g'\
    \ -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g'\
    \ -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g'\
    \ -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g'\
    \ -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g'\
    \ -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g'\
    \ -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkcg925qu.sh: line 17: unexpected EOF while looking for matching
    `''''

    /tmp/tmpkcg925qu.sh: line 34: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  local alpha=(a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z)\n  local vowel=(a e i o u)\n  local\
    \ swap=()\n  for i in ${msg}; do\n    if [[ ${alpha[i]} == ${msg} ]]; then\n \
    \     swap+=(${msg} ${alpha[i]})\n    fi\n  done\n  for i in ${swap[@]}; do\n\
    \    msg=${msg//${vowel[i]}/${alpha[${i}+1]}}\n  done\n  echo \"${msg}\"\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u\"\n  local alphabet=\"a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z\"\n  local decodedMessage\n  decodedMessage=\"\"\n  for word in $message;\
    \ do\n    i=0\n    for char in $word; do\n      if [[ \"$char\" == $vowels ]];\
    \ then\n        char=\"${alphabet[$(( $i+1 ))]}\"\n        (( i++ ))\n      fi\n\
    \      decodedMessage+=\"$char\"\n    done\n  done\n  echo \"$decodedMessage\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  echo $(echo $message\
    \ | tr a-z A-Z) | tr aeiouAEIOUA AOU\n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  # This encodes your message in the way that\
    \ it swaps case of \n  # all letters, replaces all vowels in the message with\
    \ the letter \n  # that appears 2 places ahead of that vowel in the english alphabet.\
    \ \n  # Assume only letters. \n  # Examples:\n  # >>> $(encode \"test\")\n  #\
    \ \"TGST\"\n  # >>> $(encode \"This is a message\")\n  # \"tHKS KS C MGSSCGG\"\
    \n  # \n  message=$1\n  # Loop through all characters in the message\n  for i\
    \ in {1..${#message}}\n  # Replace all vowels with corresponding vowel 2 places\
    \ ahead of that vowel\n  do\n    letter=${message:i:1}\n    if [ \"$letter\" =\
    \ \"a\" ] || [ \"$letter\" = \"e\" ] || [ \"$letter\" = \"i\" ] || [ \"$letter\"\
    \ = \"o\" ] || [ \"$letter\" = \"u\" ]; then\n      letter=${letter:1}\n    else\n\
    \      letter=${letter:0:1}\n    fi\n    message=${message:0:1}${letter}${message:1:1}\n\
    \  done\n  echo ${message}\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1y05t_lc.sh: line 30: message: {1..4}: syntax error: operand expected
    (error token is "{1..4}")

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    message=$1\n    \n    local message_bytes=$(echo\
    \ \"$message\" | xxd -r -p | tr '[a-z]' '[A-Z]' | tr '[A-Z]' '[a-z]' | tr '[A-Z]'\
    \ '[0-9]')\n    \n    local encoded_message=\"\"\n    local i\n    \n    for ((\
    \ i=0; i<${#message_bytes}; i++ )) \n    do \n        encoded_message+=\"${message_bytes:$i:1}${message_bytes:$i+1:2}${message_bytes:$i+2:1}\"\
    \n    done\n    \n    echo \"$encoded_message\"\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    echo \"${message//[[:upper:]]/}\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local enc=\"\"\n    for\
    \ i in $msg; do\n        # Use a hash to map the alphabet letters to integers\
    \ \n        # that represent their location in the alphabet. \n        # For example,\
    \ if I use the letter \"T\" as the key \n        # for the hash, I would get a\
    \ return of 8 (the integer \n        # value associated with \"T\"). \n      \
    \  local hash=$(echo $i | tr -d [:alpha:] | sed -e 's/\\(.\\)/\\=\\1/g')\n   \
    \     local k=${hash}\n        enc=\"${enc},${k}\"\n    done\n    enc=${enc:1}\n\
    \    enc=${enc^^}\n    enc=${enc//$msg/}\n    enc=${enc//$enc/}\n    enc=${enc//,/$msg/}\n\
    \    enc=${enc//,/$msg/}\n    enc=${enc//,/-}\n    enc=${enc//,/-}\n    enc=${enc//-,-}\n\
    \    enc=${enc//-,-}\n    enc=${enc//-,}\n    enc=${enc//-,}\n    enc=${enc//,/}\n\
    \    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n\
    \    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n\
    \    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n\
    \    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n\
    \    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n\
    \    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n\
    \    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n\
    \    enc=${enc//,/}\n    enc=${enc//,/}\n\n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    echo $1 | \n        sed \"s/^\\([A-Z]\\\
    )/\\U\\1/g\" | \n        sed \"s/\\([aeiou]\\)\\([A-Z]\\)/\\1\\3/g\" | \n    \
    \    sed \"s/\\([aeiou]\\)\\([A-Z]\\)/\\1\\U\\2/g\" | \n        sed \"s/\\([aeiou]\\\
    )\\([A-Z]\\)/\\1\\E\\2/g\" \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 29: invalid reference \3 on `s'' command''s
    RHS

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local enc\n    enc=\"\
    \"\n    for ((i = 1; i <= ${#message}; i++)); do\n        local letter=$( echo\
    \ $message | sed -n \"${i}p\" )\n        letter=${letter,,}\n        enc=${enc}${letter^^}\n\
    \    done\n    echo $enc\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local output=\"\"\
    \n    local vowels=\"a e i o u y\"\n    local alphabet=\"a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z\"\n    local a\n    local b\n    local c\n   \
    \ local d\n    local e\n    local f\n    local g\n    local h\n    local i\n \
    \   local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local llen\n\
    \    local len\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    \n    for ((i=0; i < ${#message}; i++)); do\n        a=${message:i:1}\n\
    \        b=${message:i:2}\n        c=${message:i:3}\n        d=${message:i:4}\n\
    \        e=${message:i:5}\n        f=${message:i:6}\n        g=${message:i:7}\n\
    \        h=${message:i:8}\n        i=${message:i:9}\n        j=${message:i:10}\n\
    \        k=${message:i:11}\n        l=${message:i:12}\n        m=${message:i:13}\n\
    \        n=${message:i:14}\n        o=${message:i:15}\n        p=${message:i:16}\n\
    \        q=${message:i:17}\n        r=${message:i:18}\n        s=${message:i:19}\n\
    \        t=${message:i:20}\n        u=${message:i:21}\n        v=${message:i:22}\n\
    \        w=${message:i:23}\n        x=${message:i:24}\n        y=${message:i:25}\n\
    \        z=${message:i:26}\n        llen=${#a}\n        len=${#message}\n    \
    \    i=$((i+2))\n        j=$((j+2))\n        k=$((k+2))\n        l=$((l+2))\n\
    \        m=$((m+2))\n        n=$((n+2))\n        o=$((o+2))\n        p=$((p+2))\n\
    \        q=$((q+2))\n        r\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph285eg_u.sh: line 105: syntax error near unexpected token `}''

    /tmp/tmph285eg_u.sh: line 105: `}''

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  # encode message\n  echo -n \"$1\" | tr \"\
    A-Z\" \"a-z\" | tr \"aeiou\" \"bcdfghjklmnpqrstvwxyz\"\n}\n\ncandidate() {\n \
    \   encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message\n  local new_message\n\n  message=$1\n\
    \  new_message=$(echo $message | tr [a-z] [A-Z])\n  new_message=$(echo $new_message\
    \ | tr [aeiou] [A-Z])\n  new_message=$(echo $new_message | tr [A-Z] [a-z])\n \
    \ echo $new_message\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "tr: extra operand \u2018[A-Z]\u2019\nTry 'tr --help' for more information.\n\
    tr: extra operand \u2018x\u2019\nTry 'tr --help' for more information.\n"
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local original=\"$1\"\n    local encoded=\"\
    \"\n    local vowel=\"AEIOU\"\n    local position\n    for position in $(seq 0\
    \ $original); do\n        local current=\"${original:$position:1}\"\n        local\
    \ next=\"${original:$((position+1)):1}\"\n        local alphabet=\"AEIOU\"\n \
    \       if [[ \"$current\" == \"$next\" ]]; then\n            encoded=\"$encoded\"\
    $current\n        elif [[ \"$current\" == \"$vowel\" ]]; then\n            encoded=\"\
    $encoded\"$next\n        elif [[ \"$next\" == \"$vowel\" ]]; then\n          \
    \  encoded=\"$encoded\"$current\n        else\n            encoded=\"$encoded\"\
    $(echo \"$next\" | tr [a-z] [A-Z])\n        fi\n    done\n    echo \"$encoded\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "seq: invalid floating point argument: \u2018TEST\u2019\nTry 'seq --help'\
    \ for more information.\n"
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local message2=\"\"\n\
    \n  local alphabet=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n \
    \ local vowels=\"a e i o u\"\n\n  local x\n  for ((i = 0; i < ${#message}; i++));\
    \ do\n    x=\"${message:$i:1}\"\n    # replace first vowel in message\n    x=\"\
    ${x:0:1}${x:2:1}${x:1:1}${x:3:1}\"\n\n    # replace all vowels in message\n  \
    \  x=\"${x//[${vowels}]/.}\"\n    # replace all vowels in message 2\n    x=\"\
    ${x//[${vowels}]/.}\"\n\n    # replace all vowels in message 2\n    x=\"${x//[${alphabet}${vowels}]/.}\"\
    \n\n    message2=\"${message2}${x}\"\n  done\n\n  printf \"%s\\n\" \"$message2\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  # Set a variable to keep\
    \ track of the first vowel. \n  local vowel=\"${message:0:1}\"\n  # Set a variable\
    \ that keeps track of each character in the \n  # string while we loop through.\
    \ \n  local encode=\"${message:1}\"\n  while [[ ${encode:0:1} != $vowel ]]; do\n\
    \    encode=${encode:1:1}\n  done\n  while [[ ${encode:1:1} == $vowel ]]; do\n\
    \    encode=${encode:2:1}\n  done\n  echo $encode\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=36 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=3 encoding='utf-8'>
  timestamp: 1660059341
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    echo $1 | sed \"s/[^a-zA-Z]/./g\" | sed\
    \ \"s/a/.b./g\" | sed \"s/e/.e/g\" | sed \"s/i/.i/g\" | sed \"s/o/o.o/g\" | sed\
    \ \"s/u/u.g/g\" | sed \"s/y/y./g\" | sed \"s/g/g.g/g\" | sed \"s/s/s.s./g\" |\
    \ sed \"s/t/t.t./g\" | sed \"s/y/y.y./g\"\n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowel=\"a\"\
    \n    local output=\"\"\n\n    # Sum up how many times each letter appears in\
    \ the message.\n    local count=0\n    for (( i=0; i < ${#message}; i++ )); do\n\
    \        [[ -z ${message[i]} ]] && continue\n        (( count++ ))\n    done\n\
    \n    # Write the letters in order, with the vowels swapped out \n    # with the\
    \ letters 2 letters ahead of the vowels.\n    for (( i=0; i < ${#message}; i++\
    \ )); do\n        [[ -z ${message[i]} ]] && continue\n        if [[ \"${message[i]}\"\
    \ = a ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = e ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = i ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = o ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = u ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = y ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = o ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = e ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = i ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = u ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = y ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = o ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = e ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = i ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = u ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = y ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = o ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = e ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = i ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = u ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = y ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = o ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = e ]]; then\n            output += ${vowel}\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfagsb3jz.sh: line 76: syntax error near unexpected token `}''

    /tmp/tmpfagsb3jz.sh: line 76: `}''

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local alpha=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n \
    \   local count=0\n    local newMessage=\"\"\n    local newLetter=\"\"\n\n   \
    \ for i in $(echo $message | sed -e 's/[][]//g' ); do\n      count=$(( $count\
    \ + 1 ))\n      for j in $vowels; do\n         if [[ $i =~ $j ]]; then\n     \
    \       echo $j\n            newLetter=$( echo $j | sed -e 's/a/A/g' -e 's/e/E/g'\
    \ -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/o/O/g'\
    \ -e 's/A/a/g' -e 's/E/e/g' -e 's/I/i/g' -e 's/O/o/g' -e 's/U/u/g' -e 's/O/o/g'\
    \ -e 's/U/u/g' )\n            newLetter=$(echo $newLetter | sed -e 's/A/a/g' -e\
    \ 's/E/e/g' -e 's/I/i/g' -e 's/O/o/g' -e 's/U/u/g' -e 's/o/O/g' -e 's/u/U/g' )\n\
    \         fi\n      done\n      newMessage=$newMessage$newLetter\n    done\n \
    \   echo $newMessage\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local output=\"\"\
    \n    local c=0\n    for (( i=0; i<${#message}; i++ )); do\n        c=$((c+1))\n\
    \        if (( c == 2 )); then \n            local letter=\"${message:i:1}\"\n\
    \            letter=${letter^^}\n            letter=${letter:0:1}\n          \
    \  output+=\"${letter}${letter}\"\n            ((i--))\n            ((c=0))\n\
    \        fi\n        output+=\"${message:i:1}\"\n    done\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local string=$1\n  local alphabet=\"aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ\"\
    \n  local output\n  for letter in \"${string}\"; do\n    # First replace all vowels\
    \ with 'a'.\n    # Then replace 'a' with the letter that is 2 places ahead of\
    \ 'a'.\n    local letter_with_2places\n    letter_with_2places=\"${alphabet:$letter+2:1}\"\
    \n    output=\"$output$letter\"\n    output=\"$output$letter_with_2places\"\n\
    \  done\n  echo \"$output\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n\n    local messageString=$(echo\
    \ $message | sed -e 's/\\(.\\)/\\L\\1/')\n    local messageArray=($messageString)\n\
    \    local messageCount=${#messageArray[@]}\n\n    echo \"$message\" | sed -e\
    \ 's/.*/&\\n/g' | sed -e 's/[^A-Za-z]*//g' | sed -e 's/^/ /' -e 's/ $//'\n\n \
    \   for (( i = 1; i < ( messageCount ); i++ )); do\n        local currChar=${messageArray[$i]}\n\
    \        local previousChar=${messageArray[$((i - 1))]}\n\n        if [[ \"$currChar\"\
    \ == *[aeiou]* ]]; then\n            local currCount=$(echo \"$message\" | sed\
    \ -e 's/[^A-Za-z]*//g' | sed -e 's/^/ /' -e 's/ $//' | wc -c)\n            local\
    \ previousCount=$(echo \"$message\" | sed -e 's/[^A-Za-z]*//g' | sed -e 's/^/\
    \ /' -e 's/ $//' | wc -c)\n            local newChar=$((previousChar + currCount))\n\
    \n            if (( $newChar < 65 )); then\n                newChar=$((65 + $newChar))\n\
    \            fi\n\n            if (( $newChar > 90 )); then\n                newChar=$((90\
    \ - $newChar))\n            fi\n\n            local newCharString=$((newChar +\
    \ ${previousChar}))\n\n            local newString=${messageArray[$i]}\n     \
    \       local newStringArray=($newString)\n            local newStringCount=${#newStringArray[@]}\n\
    \            \n            for (( j = 1; j < ( newStringCount ); j++ )); do\n\
    \                local newChar=${newStringArray[$j]}\n\n                if [[\
    \ \"$newChar\" == *[aeiou]* ]]; then\n                    local newCount=$(echo\
    \ \"$newString\" | sed -e 's/[^A-Za-z]*//g' | sed -e 's/^/ /' -e 's/ $//' | wc\
    \ -c)\n                    local newCharIndex=$((j - 1))\n\n                 \
    \   if (( $newCount == 1 )); then\n                        newChar=$((newChar\
    \ + 1))\n                    fi\n\n                    local newCharString=$((newChar\
    \ + ${newCharIndex}))\n                    \n                    newString=${newStringArray[$j]}\n\
    \                    newStringArray=($newString)\n                    newStringCount=${#newStringArray[@]}\n\
    \                fi\n            done\n\n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpit4up21n.sh: line 65: syntax error near unexpected token `}''

    /tmp/tmpit4up21n.sh: line 65: `}''

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \ \n    local i=0\n    local encoded=\"\"\n    while [ $i -lt ${#msg} ]; do\n\
    \        if [[ \"$msg\" =~ [a-z] ]]; then\n            encoded+=\"${alphabet[$((${msg:$i:1}-${msg:$i:1}%(${#alphabet[@]}-1)+1))]}\"\
    \n        else\n            encoded+=\"$((${msg:$i:1}))\"\n        fi\n      \
    \  i=$((i+1))\n    done\n    echo $encoded\n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    awk -v m=\"$1\" '{\n        for (i=1;i<=NF;i++)\
    \ {\n            $(NF-2)=$(NF-1)$(NF-2)\n            if ($(i+1)~/^[aeiou]$/) $(NF-1)=$(i+1)\n\
    \            $(NF-1)=$(NF-1)$(NF-1)\n        }\n        print\n    }'\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=19 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=16 encoding='utf-8'>
  timestamp: 1660059341
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    msg=$1\n    msg=${msg//[aeiouAEIOU]/<$((26+$((\
    \ $(echo $msg | sed -e 's/[aeiou]//g' -e 's/[AEIOU]//g' -e 's/e/E/g' -e 's/i/I/g'\
    \ -e 's/o/O/g' -e 's/u/U/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/0/O/g' -e 's/a/A/g'\
    \ -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/0/O/g' -e 's/a/A/g'\
    \ -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/0/O/g' -e 's/a/A/g'\
    \ -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/0/O/g' -e 's/a/A/g'\
    \ -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/0/O/g' -e 's/a/A/g'\
    \ -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/0/O/g' -e 's/a/A/g'\
    \ -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/0/O/g' -e 's/a/A/g'\
    \ -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/0/O/g' -e 's/a/A/g'\
    \ -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/0/O/g' -e 's/a/A/g'\
    \ -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/0/O/g' -e 's/a/A/g'\
    \ -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g\n}\n\ncandidate() {\n   \
    \ encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpivgiin6h.sh: line 16: unexpected EOF while looking for matching
    `''''

    /tmp/tmpivgiin6h.sh: line 33: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  \n  declare -a vowels # array of all vowels\n\
    \  declare -a words # array of all words\n\n  # declare an array that will hold\
    \ the letters swapped\n  # by letter. \n  declare -a swapped_letters=()\n  \n\
    \  # declare an array that will hold the letters swapped\n  # by vowel. \n  declare\
    \ -a swapped_vowels=()\n\n  # loop through every letter in the message\n  for\
    \ i in $@; do\n    \n    # if the letter is a vowel, add it to the swapped_vowels\
    \ array\n    if [[ \"$i\" == \"a\"* ]] || [[ \"$i\" == \"A\"* ]] || [[ \"$i\"\
    \ == \"e\"* ]] || [[ \"$i\" == \"E\"* ]] || [[ \"$i\" == \"i\"* ]] || [[ \"$i\"\
    \ == \"I\"* ]] || [[ \"$i\" == \"o\"* ]] || [[ \"$i\" == \"O\"* ]]; then\n   \
    \   swapped_vowels+=($i)\n      \n    # otherwise add it to the swapped_letters\
    \ array\n    else\n      swapped_letters+=( $(echo \"$i\" | awk '{print toupper($0)}')\
    \ )\n    fi\n  done\n  \n  # declare a counter to keep track of how long the longest\
    \ word is.\n  declare -i longest_word=0\n  \n  # loop through all the words in\
    \ the dictionary\n  # (could be a lot of words...)\n  for word in $(cat /usr/share/dict/words);\
    \ do\n    \n    # if the current word is longer than the previous longest\n  \
    \  # word and if each vowel in the word is in the swapped_vowels array\n    #\
    \ then add the current word to the swapped_letters array \n    # and increment\
    \ the longest word counter\n    if [ \"$longest_word\" -lt \"${#word}\" ] && \\\
    \n       $(echo \"${swapped_vowels[@]}\" | grep -q \"${word//[AEIOUaeiou]/}\"\
    ); then\n      swapped_letters+=(\"${word//[AEIOUaeiou]/}\")\n      longest_word=$((\
    \ $longest_word + 1 ))\n    fi\n  done\n  \n  # declare an array that will hold\
    \ the letters of the message\n  # that have just been swapped \n  declare -a swapped_letters_2=()\n\
    \  \n  # loop through every letter in the message\n  for i in $@; do\n    \n \
    \   # if the letter is a vowel, add it to the swapped_letters_2 array\n    if\
    \ [[ \"$i\" == \"a\"* ]\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc7ygswt8.sh: line 66: syntax error in conditional expression

    /tmp/tmpc7ygswt8.sh: line 66: syntax error near `]''

    /tmp/tmpc7ygswt8.sh: line 66: `    if [[ "$i" == "a"* ]''

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local var=\"$1\"\n    local i=0\n\n   \
    \ local out\n    local char\n    while [[ ${#var} -gt $i ]]; do\n        char=${var:$i:1}\n\
    \        case $char in\n            A|a|E|e|I|i|O|o|U|u)\n                char=\"\
    ${char:0:1}${char:1:1}${char:2:1}${char:3:1}${char:4:1}${char:5:1}\"\n       \
    \         ;;\n            L|l|A|a|I|i|O|o|U|u)\n                char=\"${char:0:1}${char:1:1}${char:2:1}${char:2:1}${char:2:1}${char:3:1}\"\
    \n                ;;\n            O|o|I|i|A|a|U|u)\n                char=\"${char:0:1}${char:1:1}${char:1:1}${char:1:1}${char:1:1}${char:2:1}\"\
    \n                ;;\n            N|n|T|t|S|s|R|r)\n                char=\"${char:0:1}${char:1:1}${char:1:1}${char:1:1}${char:1:1}${char:2:1}\"\
    \n                ;;\n            D|d|F|f)\n                char=\"${char:0:1}${char:1:1}${char:1:1}${char:1:1}${char:1:1}${char:2:1}\"\
    \n                ;;\n            G|g)\n                char=\"${char:0:1}${char:1:1}${char:1:1}${char:1:1}${char:1:1}${char:2:1}\"\
    \n                ;;\n            H|h)\n                char=\"${char:0:1}${char:1:1}${char:1:1}${char:1:1}${char:1:1}${char:2:1}\"\
    \n                ;;\n            L|l)\n                char=\"${char:0:1}${char:1:1}${char:1:1}${char:1:1}${char:1:1}${char:2:1}\"\
    \n                ;;\n            V|v)\n                char=\"${char:0:1}${char:1:1}${char:1:1}${char:1:1}${char:1:1}${char:2:1}\"\
    \n                ;;\n            Z|z)\n                char=\"${char:0:1}${char:1:1}${char:1:1}${char:1:1}${char:1:\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptkbc8p1x.sh: line 64: unexpected EOF while looking for matching
    `"''

    /tmp/tmptkbc8p1x.sh: line 68: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    # first find all vowels\
    \ and put them in a list\n    local vowels=\"a e i o u\"\n    local vowelsarr=(\
    \ $(echo $vowels | sed \"s/ /\\n/g\") )\n    # now replace each vowel with the\
    \ letter that appears 2 places ahead of it\n    for i in ${vowelsarr[@]}; do\n\
    \        local re=\"$(echo $i | sed -e \"s/$i\\(.*\\)\\(.*\\)\\(.*\\)\\(.*\\)/\\\
    1\\4\\3\\2\\1/\")\"\n        msg=$(echo $msg | sed -e \"s/$i/$re\")\n    done\n\
    \    # now swap case\n    local msg1\n    msg1=$(echo $msg | tr '[:upper:]' '[:lower:]')\n\
    \    msg1=$(echo $msg1 | tr '[AEIOUaeiou]' '[AEIOUAEIOU]' )\n    msg1=$(echo $msg1\
    \ | tr '[AEIOUaeiou]' '[AEIOUAEIOU]' )\n    # now decode the new string\n    msg1=$(echo\
    \ $msg1 | tr '[AEIOUaeiou]' '[AEIOUAEIOU]' )\n    msg1=$(echo $msg1 | tr '[:upper:]'\
    \ '[:lower:]')\n    msg1=$(echo $msg1 | tr '[AEIOUaeiou]' '[AEIOUAEIOU]' )\n \
    \   msg1=$(echo $msg1 | tr '[AEIOUaeiou]' '[AEIOUAEIOU]' )\n    # encode the new\
    \ string\n    msg1=$(echo $msg1 | tr '[AEIOUAEIOU]' '[AEIOUaeiou]' )\n    msg1=$(echo\
    \ $msg1 | tr '[aeiouAEIOU]' '[AEIOUaeiou]' )\n    msg1=$(echo $msg1 | tr '[aeiouAEIOU]'\
    \ '[AEIOUaeiou]' )\n    msg1=$(echo $msg1 | tr '[AEIOUaeiou]' '[AEIOUaeiou]' )\n\
    \    msg1=$(echo $msg1 | tr '[AEIOUaeiou]' '[AEIOUaeiou]' )\n    msg1=$(echo $msg1\
    \ | tr '[AEIOUaeiou]' '[AEIOUaeiou]' )\n    msg1=$(echo $msg1 | tr '[AEIOUaeiou]'\
    \ '[AEIOUaeiou]' )\n\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 4: unterminated `s'' command

    sed: -e expression #1, char 4: unterminated `s'' command

    sed: -e expression #1, char 4: unterminated `s'' command

    sed: -e expression #1, char 4: unterminated `s'' command

    sed: -e expression #1, char 4: unterminated `s'' command

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=\"$1\"\n    local vowels=\"aeiouyAEIOUY\"\
    \n    echo \"${msg//[aeiouyAEIOUY]/$(echo ${vowels} | sed 's/\\(..\\)/\\L\\1/')}\"\
    \ | tr -cd 'a-zA-Z'\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n   local str=\"$1\"\n   local res=\"\"\n  \
    \ local i=0 \n   local v='aeiouAEIOU'\n\n   for ((i=0; i<${#str}; i++ )); do \n\
    \     local c=\"${str[i]}\"\n     local j=0\n     local k=0\n     local ks=0\n\
    \     for ((j=0; j<${#v}; j++)); do \n       k=$(( $k + ${#v} - $j ))\n      \
    \ if [[ $c == $v ]]; then\n         ks=$(( ks + 1 ))\n       fi\n     done\n \
    \    if [[ $ks -gt 0 ]]; then\n       while [[ $ks -gt 0 ]]; do \n         res=\"\
    ${res}$c${v[$(( $k + $ks ))]}\"\n         ks=$(( ks - 1 ))\n       done\n    \
    \   res=\"${res}${v[$(( $k + ${#v} - $i ))]}\"\n     else\n       res=\"${res}$c\"\
    \n     fi\n   done\n   echo ${res}\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n\tlocal vowels=\"aeiouAEIOU\"\n\tlocal first=\"\
    aA\"\n\tlocal last=\"zZ\"\n\tlocal message=\"$1\"\n\n\tlocal count\n\tlocal i\n\
    \tlocal messageEncoded=\"\"\n\tfor i in $(seq 1 $#); do\n\t\tif [[ \"$message\"\
    \ == *\"$vowels\" ]]; then\n\t\t\tcount=\"$(echo \"$message\" | grep -E \"[${vowels}]\"\
    \ | wc -l)\"\n\t\t\tmessage=\"$message\" | tr \"${vowels}\" \"${first}${last}\"\
    \n\t\t\tmessageEncoded=\"$messageEncoded${first}${count}${last}\"\n\t\telse\n\t\
    \t\tcount=\"$(echo \"$message\" | grep -E \"[${vowels}]\" | wc -l)\"\n\t\t\tmessage=\"\
    $message\" | tr \"${vowels}\" \"${first}${last}\"\n\t\t\tmessageEncoded=\"$messageEncoded${first}${last}${count}\"\
    \n\t\tfi\n\tdone\n\n\techo \"$messageEncoded\"\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message \n    message=$(echo $1 |\
    \ tr '[:upper:]' '[:lower:]' | sed 's/[aeiouAEIOU]/./g' | sed 's/./ & /g' | tr\
    \ 'A-Z' 'a-z')\n    message=$(echo $message | sed 's/\\(.\\)/\\l&/g')\n    echo\
    \ $message\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=\"$1\"\n    local vowels=$(echo\
    \ $message | sed -e 's/[aeiouAEIOU]/&/g')\n    local result=$(echo $message |\
    \ sed -e 's/\\([bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]\\)\\([aeiouAEIOU]\\\
    )/\\1\\2/g')\n    echo $result\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local messageArray=($message)\n\
    \  local length=${#messageArray[@]}\n  local messageLength=${#message}\n  local\
    \ vowel=\"AEIOUY\"\n  local result=''\n  local temp=''\n  local vowelCount=2\n\
    \  local letter\n  local letterCount\n  local lengthOfLetter\n  \n  while [ $letterCount\
    \ -lt $length ]; do\n    letter=${messageArray[$letterCount]}\n    letterCount=$((letterCount+1))\n\
    \    lengthOfLetter=${#letter}\n    \n    if [ $lengthOfLetter -eq 1 ]; then\n\
    \      temp=$(echo $letter | tr '[:upper:]' '[:lower:]')\n      temp=${temp:2}\n\
    \      result=\"${result}$temp\"\n    fi\n  done\n  \n  \n  local counter\n  for\
    \ (( counter=1; counter <= $vowelCount; counter++ )) do\n    if [[ $((counter-2))\
    \ -eq 0 ]]; then\n      temp=$(echo $vowel | tr '[:upper:]' '[:lower:]')\n   \
    \   temp=${temp:2}\n      result=\"${result}$temp\"\n    fi\n  done\n  \n  echo\
    \ $result\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6mry4_rd.sh: line 27: [: -lt: unary operator expected

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local c=${message:0:1}\n\
    \  local message=${message:1}\n  local vowels=\"aeiouyAEIOUY\"\n  local vowel_array=($vowels)\n\
    \  local i=0 j=0\n  while [ $j -lt ${#message} ]; do\n    local l=${message:$j:1}\n\
    \    local m=$(echo $l | tr [A-Z] [a-z])\n    if [[ ${vowel_array[$i]} = ${l}\
    \ ]]; then\n      local h=${message:$j:2}\n      if [[ ${h:0:2} = \"ae\" || ${h:0:2}\
    \ = \"Ae\" ]]; then\n        h=${h:1}\n      elif [[ ${h:0:2} = \"o\" || ${h:0:2}\
    \ = \"O\" ]]; then\n        h=${h:1}\n      elif [[ ${h:0:2} = \"i\" || ${h:0:2}\
    \ = \"I\" ]]; then\n        h=${h:1}\n      else\n        h=${h:2}\n      fi\n\
    \      message=$message${l:0:1}${h:1}\n      i=$(($i+1))\n      j=$(($j+1))\n\
    \      continue\n    else\n      message=$message${l:0:1}${m:1}\n      i=$(($i+1))\n\
    \      j=$(($j+1))\n    fi\n  done\n  echo $message\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=34 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=13 encoding='utf-8'>
  timestamp: 1660059341
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local string=$1\n    local out=''\n   \
    \ local i\n    for (( i=0; i<${#string}; i++ )); do\n        case ${string:i:1}\
    \ in \n            'a'|'e'|'i'|'o'|'u') \n                let \"i++\"\n      \
    \          out+=${string:i:1}\n                out+=${string:i+1:2}\n        \
    \    ;;\n            'A'|'E'|'I'|'O'|'U') \n                let \"i+=1\"\n   \
    \             out+=${string:i:1}\n                out+=${string:i+1:2}\n     \
    \       ;;\n            *) \n                let \"i++\"\n                out+=${string:i:1}\n\
    \            ;;\n        esac\n    done\n    echo \"$out\"\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  # Set up the result string\n\
    \  local rmsg=\"\"\n  \n  # Swap case\n  local caps=false\n  local cap=0\n  local\
    \ capchar=\"a\"\n  for char in ${msg[@]}; do\n    local upper=${char:0:1}\n  \
    \  local lower=${char:1:1}\n    if [ \"$caps\" != true ]; then\n      if [ \"\
    $upper\" == \"A\" ] || [ \"$upper\" == \"E\" ] || [ \"$upper\" == \"I\" ] || [\
    \ \"$upper\" == \"O\" ] || [ \"$upper\" == \"U\" ]; then\n        caps=\"true\"\
    \n        cap=$((cap+1))\n        if [ \"$cap\" -eq 2 ]; then\n          capchar=$lower\n\
    \        else\n          capchar=\"${capchar}${upper}\"\n        fi\n      fi\n\
    \    else\n      if [ \"$upper\" == \"A\" ] || [ \"$upper\" == \"E\" ] || [ \"\
    $upper\" == \"I\" ] || [ \"$upper\" == \"O\" ] || [ \"$upper\" == \"U\" ]; then\n\
    \        caps=\"false\"\n      fi\n    fi\n  done\n  \n  # Replace vowels\n  for\
    \ char in ${msg[@]}; do\n    local vowels=\"aeiouAEIOU\"\n    local vowel=\"${vowels:$((${#vowels}*2-1))}\"\
    \n    if [ \"${caps:-}\" == \"true\" ]; then\n      vowel=\"${upper:0:1}${vowel}\"\
    \n    fi\n    if [ \"${msg:0:1}\" == \"$vowel\" ]; then\n      rmsg+=\"${capchar}\"\
    \n    else\n      rmsg+=\"${char}\"\n    fi\n  done\n  \n  echo $rmsg\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local encodedMessage\n\
    \  local vowels=\"a e i o u\"\n  local others=\"b c d f g h j k l m n p q r s\
    \ t v w x y z\"\n  local othersIndex=0\n  for ((i=0; i < ${#message}; i++)); do\n\
    \    if [[ \"${message:i:1}\" == \"z\" ]]; then\n      encodedMessage+=\"${others}\"\
    \n      othersIndex=0\n      break\n    else\n      if [[ \"${message:i:1}\" ==\
    \ \"a\" && ${vowels:r:1} == \"e\" ]]; then\n        encodedMessage+=\"${others}\"\
    \n        othersIndex=0\n        break\n      fi\n      if [[ \"${message:i:1}\"\
    \ == \"i\" && ${vowels:r:1} == \"o\" ]]; then\n        encodedMessage+=\"${others}\"\
    \n        othersIndex=0\n        break\n      fi\n      if [[ \"${message:i:1}\"\
    \ == \"e\" && ${vowels:r:1} == \"i\" ]]; then\n        encodedMessage+=\"${others}\"\
    \n        othersIndex=0\n        break\n      fi\n      if [[ \"${message:i:1}\"\
    \ == \"o\" && ${vowels:r:1} == \"i\" ]]; then\n        encodedMessage+=\"${others}\"\
    \n        othersIndex=0\n        break\n      fi\n      if [[ \"${message:i:1}\"\
    \ == \"u\" && ${vowels:r:1} == \"a\" ]]; then\n        encodedMessage+=\"${others}\"\
    \n        othersIndex=0\n        break\n      fi\n      if [[ \"${message:i:1}\"\
    \ == \"y\" && ${vowels:r:1} == \"u\" ]]; then\n        encodedMessage+=\"${others}\"\
    \n        othersIndex=0\n        break\n      fi\n      if [[ \"${message:i:1}\"\
    \ == \"b\" && ${vowels:r:1} == \"u\" ]]; then\n        encodedMessage+=\"${others}\"\
    \n        othersIndex=0\n        break\n      fi\n      if [[ \"${message:i:1}\"\
    \ == \"c\" && ${vowels:r:1} == \"u\" ]]; then\n        encodedMessage+=\"${others}\"\
    \n        othersIndex=0\n        break\n      fi\n      if [[ \"${message:i:1}\"\
    \ == \"d\" && ${vowels:r:1} == \"u\" ]]; then\n        encodedMessage+=\"${others}\"\
    \n        othersIndex=0\n        break\n      fi\n      if [[ \"${message:i:1}\"\
    \ == \"f\" && ${vowels:r:1} == \"u\" ]]; then\n        encodedMessage+=\"${others}\"\
    \n        othersIndex=0\n        break\n      fi\n      if [[ \"${message:i:1}\"\
    \ == \"g\" && ${vowels:\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpm2yt1yt7.sh: line 77: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpm2yt1yt7.sh: line 77: syntax error near `}''

    /tmp/tmpm2yt1yt7.sh: line 77: `}''

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  msg=$1\n  len=${#msg}\n  case ${len} in\n\
    \    0)\n      echo \"$msg\"\n      ;;\n    1)\n      echo \"$msg\"\n      ;;\n\
    \    *)\n      # encode each character in turn\n      for (( c=0; c<${#msg}; c++))\n\
    \      do\n        ch=${msg:$c:1}\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\
    \n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n   \
    \     ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n       \
    \ ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"\
    ${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\
    \n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n   \
    \     ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n       \
    \ ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"\
    ${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\
    \n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n   \
    \     ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n       \
    \ ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"\
    ${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\
    \n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n   \
    \     ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n       \
    \ ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"\
    ${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\
    \n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n   \
    \     ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n       \
    \ ch=\"${ch^^}\"\n        ch=\"${\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbj_7asa8.sh: line 103: unexpected EOF while looking for matching
    `"''

    /tmp/tmpbj_7asa8.sh: line 107: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local -i idx=0\n    local -i len=${#1}\n\
    \    local -i start\n    local -i len2\n    local -i letter\n    local -i replacement\n\
    \n    len2=${#2}\n    replacement=\"${2:2:1}\"\n    for (( idx=0; idx<len; idx++\
    \ )); do\n        letter=${1:idx:1}\n        if [ \"$letter\" == $letter ]; then\n\
    \            local -i tmp\n            local -i count\n            tmp=${letter}\n\
    \            count=0\n            while [[ $tmp != ${letter:2:1} ]]; do\n    \
    \            tmp=${tmp:2:1}\n                count=$((count+1))\n            done\n\
    \            tmp=${tmp:1:1}\n            while [[ $tmp != $letter && $count -gt\
    \ 0 ]]; do\n                tmp=${tmp:2:1}\n                count=$((count-1))\n\
    \            done\n            if [ \"$count\" -eq 0 ]; then\n               \
    \ letter=${letter:1}\n            fi\n            \n        fi\n        echo -n\
    \ \"$letter\"\n    done\n    echo -n \"$replacement\"\n}\n\ncandidate() {\n  \
    \  encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=32 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=30 encoding='utf-8'>
  timestamp: 1660059341
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  message=$1\n  shift\n  output=\"\"\n  for\
    \ i in $message\n  do\n    case \"$i\" in\n       a|e|i|o|u)\n         output+=$i\n\
    \         output+=$i\n         output+=$i\n         output+=$i\n         ;;\n\
    \       e|i|o|u)\n         output+=$i\n         output+=$i\n         output+=$i\n\
    \         output+=$i\n         ;;\n       a|o)\n         output+=$i\n        \
    \ output+=$i\n         output+=$i\n         output+=$i\n         ;;\n       u)\n\
    \         output+=$i\n         output+=$i\n         output+=$i\n         output+=$i\n\
    \         ;;\n    esac\n  done\n  echo $output\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local a=\"abcdefghijklmnopqrstuvwxyz\"\n\
    \  local b=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  local vowels=\"aeiouyAEIOUY\"\n \
    \ local message=\"$2\"\n  local msg=\"\"\n  local i\n  local j\n  local k\n  for\
    \ ((i=0;i<${#message};i++));\n  do\n    msg=\"${msg}${message:$i:1}\"\n  done\n\
    \  for ((i=0;i<${#message};i++));\n  do\n    j=0\n    while ((${#msg}<${#message}+${#a}));\n\
    \    do\n      if [[ ${msg:$j:1} == ${a:$i:1} ]]; then\n        msg=\"${msg:$j:1}\"\
    \n      else\n        j=$((j+1))\n      fi\n    done\n    for ((k=0;k<${#a};k++));\n\
    \    do\n      if [[ ${vowels:$i:1} == ${b:$k:1} ]]; then\n        i=$((i+1))\n\
    \      fi\n    done\n    msg=\"${msg:0:$i}\"\n  done\n  echo \"$msg\"\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local char\n  local prevchar\n  local encoded\n\
    \  local i\n\n  prevchar=$1\n  encoded=\"\"\n\n  for char in $1 \n  do \n    i=\"\
    ${#char}\"\n    if [ $i -eq 1 ]; then\n      char=`echo ${char} | tr \"[:upper:]\"\
    \ \"[:lower:]\"`\n    else\n      char=`echo ${char} | tr \"[:upper:]\" \"[:lower:]\"\
    \ | sed -e \"s/[aeiouAEIOU]/\\L$char/g\"`\n    fi\n    encoded=\"$encoded$char\"\
    \n    prevchar=\"$char\"\n  done\n\n  echo \"$encoded\"\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\" \"\n\n    for (( i=0; i < ${#message}; i++ ))\n    do\n\
    \        local current=${message:$i:1}\n        local vowel=\"${vowels:$i:1}\"\
    \n        local next=${message:$((i+1)):1}\n        if [[ \"$current\" == \"$next\"\
    \ ]]\n        then\n            echo \"$current\"\n        else\n            if\
    \ [[ \"$current\" =~ \"$vowel\" ]]\n            then\n                local next=\"\
    ${message:$i:2}\"\n                if [[ \"$next\" =~ \"$vowel\" ]]\n        \
    \        then\n                    output+=\"${message:0:$i}\"\n             \
    \       output+=\"$next\"\n                    output+=\"${message:$((i+1)):2}\"\
    \n                    echo \"$output\"\n                else\n               \
    \     output+=\"$current\"\n                    output+=\"${message:$i:2}\"\n\
    \                    echo \"$output\"\n                fi\n            else\n\
    \                output+=\"$current\"\n                output+=\"${message:$i:2}\"\
    \n                echo \"$output\"\n            fi\n        fi\n    done\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  msg=$1\n  msg2=$(encode $msg)\n  echo $msg2\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=37 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=14 encoding='utf-8'>
  timestamp: 1660059341
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=${1}\n\n    # replace all vowels\
    \ in msg with an alternate vowel\n    local alt=\"M\"\n    msg=${msg//[aeiouAEIOU]/$alt}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ two places ahead of that vowel\n    local alt2=\"Z\"\n    msg=${msg//$alt/$alt2}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ three places ahead of that vowel\n    local alt3=\"Y\"\n    msg=${msg//$alt2/$alt3}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ four places ahead of that vowel\n    local alt4=\"X\"\n    msg=${msg//$alt3/$alt4}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ five places ahead of that vowel\n    local alt5=\"W\"\n    msg=${msg//$alt4/$alt5}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ six places ahead of that vowel\n    local alt6=\"V\"\n    msg=${msg//$alt5/$alt6}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ seven places ahead of that vowel\n    local alt7=\"U\"\n    msg=${msg//$alt6/$alt7}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ eight places ahead of that vowel\n    local alt8=\"T\"\n    msg=${msg//$alt7/$alt8}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ nine places ahead of that vowel\n    local alt9=\"S\"\n    msg=${msg//$alt8/$alt9}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ ten places ahead of that vowel\n    local alt10=\"R\"\n    msg=${msg//$alt9/$alt10}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ eleven places ahead of that vowel\n    local alt11=\"Q\"\n    msg=${msg//$alt10/$alt11}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ twelve places ahead of that vowel\n    local alt12\n}\n\ncandidate() {\n   \
    \ encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiou\"\
    \n    local output\n    output=$(printf \"%s\\n\" \"${message//[aeiou]/$((awk\
    \ 'BEGIN{a=1} { print substr(a,1,1) }' <<< ${message}))\")\n    local output2\n\
    \    output2=$(printf \"%s\\n\" \"${message//[aeiou]/$((awk 'BEGIN{a=1} { print\
    \ substr(a,1,1) }' <<< ${output}))\")\n    local output3\n    output3=$(printf\
    \ \"%s\\n\" \"${message//[aeiou]/$((awk 'BEGIN{a=1} { print substr(a,1,1) }' <<<\
    \ ${output2}))\")\n    local output4\n    output4=$(printf \"%s\\n\" \"${message//[aeiou]/$((awk\
    \ 'BEGIN{a=1} { print substr(a,1,1) }' <<< ${output3}))\")\n    local output5\n\
    \    output5=$(printf \"%s\\n\" \"${message//[aeiou]/$((awk 'BEGIN{a=1} { print\
    \ substr(a,1,1) }' <<< ${output4}))\")\n    echo \"${output5}\"\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjeihwu00.sh: line 40: unexpected EOF while looking for matching
    `"''

    /tmp/tmpjeihwu00.sh: line 44: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    message=$1\n    first=$2\n    second=$3\n\
    \    shift 3\n    echo ${message//$first/$second}\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local encoded=\"\"\
    \n    local index\n\n    encoded=\"$(echo ${message} | tr A-Z a-z)\"\n    \n \
    \   echo $encoded\n    \n    local previous\n    local previousLetter\n    \n\
    \    index=1\n    \n    while [ $index -lt ${#encoded} ]; do\n        previous=$(echo\
    \ ${encoded})\n        previousLetter=$(echo ${previous} | cut -d- -f1)\n    \
    \    \n        if [ $(echo ${previous} | grep \"[a-z]\") ]; then\n           \
    \ if [[ $previousLetter = \"z\" ]]; then\n                if [[ $(echo ${previous}\
    \ | grep \"o\") == \"z\" ]]; then\n                    previous=$(echo ${previous}\
    \ | sed \"s/o/A/g\")\n                elif [[ $(echo ${previous} | grep \"e\"\
    ) == \"z\" ]]; then\n                    previous=$(echo ${previous} | sed \"\
    s/e/a/g\")\n                elif [[ $(echo ${previous} | grep \"u\") == \"z\"\
    \ ]]; then\n                    previous=$(echo ${previous} | sed \"s/u/O/g\"\
    )\n                elif [[ $(echo ${previous} | grep \"a\") == \"z\" ]]; then\n\
    \                    previous=$(echo ${previous} | sed \"s/a/A/g\")\n        \
    \        elif [[ $(echo ${previous} | grep \"i\") == \"z\" ]]; then\n        \
    \            previous=$(echo ${previous} | sed \"s/i/I/g\")\n                elif\
    \ [[ $(echo ${previous} | grep \"h\") == \"z\" ]]; then\n                    previous=$(echo\
    \ ${previous} | sed \"s/h/H/g\")\n                elif [[ $(echo ${previous} |\
    \ grep \"p\") == \"z\" ]]; then\n                    previous=$(echo ${previous}\
    \ | sed \"s/p/P/g\")\n                elif [[ $(echo ${previous} | grep \"y\"\
    ) == \"z\" ]]; then\n                    previous=$(echo ${previous} | sed \"\
    s/y/Y/g\")\n                elif [[ $(echo ${previous} | grep \"r\") == \"z\"\
    \ ]]; then\n                    previous=$(echo ${previous} | sed \"s/r/R/g\"\
    )\n                elif [[ $(echo ${previous} | grep \"g\") == \"z\" ]]; then\n\
    \                    previous=$(echo ${previous} | sed \"s/g/G/g\")\n        \
    \        elif [[ $(echo ${previous} | grep \"f\") == \"z\" ]]; then\n        \
    \            previous=$(echo ${previous} | sed \"s/f/F/g\")\n                elif\
    \ [[ $(echo ${previous} | grep \"m\") == \"z\" ]]; then\n                    previous=$(echo\
    \ ${previous} | sed \"s/m/M/g\")\n                elif [[ $(echo ${previous} |\
    \ \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpsc8tffir.sh: line 58: unexpected EOF while looking for matching
    `)''\n/tmp/tmpsc8tffir.sh: line 75: unexpected token `\xff'' in conditional command\n/tmp/tmpsc8tffir.sh:
    line 75: syntax error: unexpected end of file\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local MESSAGE=$1\n    echo \"$MESSAGE\"\
    \ | sed 's/[aeiouAEIOU]/&\\L\\1/g' | sed 's/[aeiou]/&\\L\\1/g' | sed 's/./&\\\
    L\\1/g'\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"\
    mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"\
    This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw\
    \ WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"sed: -e expression #1, char 22: invalid reference \\1 on `s'' command''s
    RHS\nsed: -e expression #1, char 17: invalid reference \\1 on `s'' command''s
    RHS\nsed: -e expression #1, char 11: invalid reference \\1 on `s'' command''s
    RHS\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local input=\"$1\"\n\n  local output=\"\"\
    \n\n  local i\n\n  for i in $(seq 0 $((${#input} - 1))); do\n    local char=\"\
    ${input:$i:1}\"\n    local outputChar=\"${#char}\"\n\n    for j in $(seq 0 $((${#char}\
    \ - 1))); do\n      local letter=\"${char:$j:1}\"\n      local vowels=\"aAiIoUeEoO\"\
    \n      if [[ \"${vowels}\" = \"${letter}\" ]]; then\n        outputChar=\"$((outputChar\
    \ + 2))\"\n      fi\n    done\n\n    output=\"${output}${outputChar}\"\n  done\n\
    \n  echo \"$output\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local word=$1\n    local vowels=\"AEIOUaeiou\"\
    \n    local lowercase_vowels=\"AEIOUaeiouAEIOUaeiouAEIOUaeiou\"\n    local vowel_counter=`echo\
    \ $word | grep -o '$vowels' | wc -l`\n    local lowercase_vowel_counter=`echo\
    \ $word | grep -o '$lowercase_vowels' | wc -l`\n    local letters=`echo $word\
    \ | grep -o '[A-Za-z]' | wc -l`\n\n    local output=''\n\n    if [[ $letters -eq\
    \ 0 ]]; then\n       echo \"$word: No letters found\"\n       return\n    fi\n\
    \n    for (( i=0; i<$letters; i++ )); do\n        local letter_pos=$(echo $word\
    \ | grep -o '[$i][A-Za-z]' | wc -l)\n        local lower_letter_pos=$(echo $word\
    \ | grep -o '[$i][A-Za-z]' | awk '{print $3}')\n        if [[ $vowel_counter -ge\
    \ 2 ]] || [[ $lowercase_vowel_counter -ge 2 ]]; then\n            if [[ $letter_pos\
    \ -ge 2 ]]; then\n                local letter=\"${word:$i:1}\"\n            \
    \    let \"letter+=$lower_letter_pos\"\n                let \"letter+=$vowel_counter\"\
    \n                let \"letter+=$letter_pos\"\n                if [[ $letter !=\
    \ \"A\" ]] && [[ $letter != \"a\" ]] && [[ $letter != \"E\" ]] && [[ $letter !=\
    \ \"e\" ]] && [[ $letter != \"I\" ]] && [[ $letter != \"i\" ]] && [[ $letter !=\
    \ \"O\" ]] && [[ $letter != \"o\" ]] && [[ $letter != \"U\" ]] && [[ $letter !=\
    \ \"u\" ]]; then\n                    output=\"${output}${letter:1}\"\n      \
    \          elif [[ $letter != \"A\" ]] && [[ $letter != \"a\" ]] && [[ $letter\
    \ != \"E\" ]] && [[ $letter != \"e\" ]] && [[ $letter != \"I\" ]] && [[ $letter\
    \ != \"i\" ]] && [[ $letter != \"O\" ]] && [[ $letter != \"o\" ]] && [[ $letter\
    \ != \"U\" ]] && [[ $letter != \"u\" ]]; then\n                    output=\"${output}${letter:0:1}\"\
    \n                elif [[ $letter != \"A\" ]] && [[ $letter != \"a\" ]] && [[\
    \ $letter != \"E\" ]] && [[ $letter != \"e\" ]] && [[ $letter != \"I\" ]] && [[\
    \ $letter != \"i\" ]] && [[ $letter != \"O\" ]] && [[ $letter != \"o\" ]] && [[\
    \ $letter != \"U\" ]] && [[ $letter != \"u\" ]]; then\n                    output\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp9dw55jj9.sh: line 44: syntax error near unexpected token `}''\n/tmp/tmp9dw55jj9.sh:
    line 44: `}''\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=\"$1\"\n    local vowels=\"aAeEiIoOuU\"\
    \n    echo \"$msg\" | \n    while read -r c; do \n        echo \"${msg/[aeiou]/${c}\"\
    ; \n    done | \n    tr 'AEIOU' 'aAeEiIoOuU' |\n    sed -E 's/(.)(.)\\1/\\1\\\
    3/g' |\n    sed -E 's/(.)(.)\\1\\1/\\1/g' \n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0mos_v2i.sh: line 36: unexpected EOF while looking for matching
    `"\''\n/tmp/tmp0mos_v2i.sh: line 40: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local temp\n    local\
    \ i\n    local j\n    local k\n    local l\n    msg=${msg//[aeiouAEIOU]/\\L}\n\
    \    msg=${msg//[AEIOUaeiou]/\\L}\n    msg=${msg//[AEIOUaeiouAEIOU]/\\L}\n   \
    \ for ((i=0; i<${#msg}; i++))\n    do\n        char=\"${msg:i:1}\"\n        j=$((i-1))\n\
    \        k=$((i+1))\n        l=$((k+1))\n        temp=${msg:j:1}\n        temp=${temp//[aeiouAEIOU]/${msg:i:1}}\
    \ \n        temp=${temp//[AEIOUaeiou]/${msg:j:1}} \n        temp=${temp//[AEIOUaeiouAEIOU]/${msg:k:1}}\n\
    \        k=${temp}\n        temp=${msg:i:1}\n        temp=${temp//[aeiouAEIOU]/${msg:j:1}}\
    \ \n        temp=${temp//[AEIOUaeiou]/${msg:k:1}}\n        l=${temp}\n       \
    \ temp=${msg:i:1}\n        temp=${temp//[aeiouAEIOU]/${msg:j:1}} \n        temp=${temp//[AEIOUaeiou]/${msg:k:1}}\n\
    \        msg=${msg:i-1:1}\n        msg=${msg:i:i:1}\n        msg=${msg:j-1:1}\n\
    \        msg=${msg:j:j:1}\n        msg=${msg:k-1:1}\n        msg=${msg:k:k:1}\n\
    \        msg=${msg:l-1:1}\n        msg=${msg:l:l:1}\n    done\n    echo \"$msg\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbd_27vuq.sh: line 43: msg: i:1: syntax error in expression (error
    token is ":1")\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local str=\"$1\"\n    local str2=$(echo\
    \ $str | sed 's/\\(.\\)/\\1\\L\\2/g' | sed 's/[AEIOUYaeiouy]/[ACIGuyACIGuy/g'\
    \ | sed 's/\\(.\\)\\(.\\)/\\1\\3\\2/g')\n    echo \"$str2\"\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"sed: -e expression #1, char 16: invalid reference \\2 on `s'' command''s
    RHS\nsed: -e expression #1, char 21: invalid reference \\3 on `s'' command''s
    RHS\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local result=\"\"\
    \n    local index\n    local i\n    for ((i=0; i<${#message}; i++)); do\n    \
    \    index=\"${message:i:1}\"\n        if [[ \"$index\" == [A-Za-z] ]]; then\n\
    \            index=$(echo $index | sed -r 's/(.)/\\U\\1/')\n            index=$(echo\
    \ $index | sed -r 's/(.)\\(.)/\\1\\2/')\n            result+=\"${index:0:1}\"\n\
    \        else\n            result+=\"${index:0:1}\"\n        fi\n    done\n  \
    \  echo \"$result\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''sed: -e expression #1, char 15: Unmatched ) or \\)\nsed: -e expression
    #1, char 15: Unmatched ) or \\)\nsed: -e expression #1, char 15: Unmatched ) or
    \\)\nsed: -e expression #1, char 15: Unmatched ) or \\)\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  local vowels=$(echo $msg\
    \ | awk '{print $1}')\n  local letters\n  msg=${msg// /}\n  letters=$(echo $msg\
    \ | awk '{print tolower($0)}')\n  letters=${letters//[aeiouy]}\n  letters=${letters//[AEIOUY]}\n\
    \  letters=${letters//[AEIOU]}\n  letters=${letters//[AEIO]}\n  letters=${letters//[AEIO]}\n\
    \  letters=${letters//[AEI]}\n  letters=${letters//[AE]}\n  letters=${letters//[A]}\n\
    \  letters=${letters// /}\n  letters=${letters//[T]}\n  letters=${letters//[G]}\n\
    \  letters=${letters//[S]}\n  letters=${letters//[H]}\n  letters=${letters//[K]}\n\
    \  letters=${letters//[C]}\n  letters=${letters//[M]}\n  letters=${letters//[G]}\n\
    \  letters=${letters//[C]}\n  letters=${letters//[G]}\n  letters=${letters//[G]}\n\
    \  letters=${letters//[G]}\n  letters=${letters//[G]}\n  letters=${letters//[G]}\n\
    \  letters=${letters//[G]}\n  letters=${letters//[G]}\n  letters=${letters//[G]}\n\
    \  letters=${letters//[G]}\n  letters=${letters//[G]}\n  letters=${letters//[G]}\n\
    \  letters=${letters//[G]}\n  letters=${letters//[G]}\n  letters=${letters//[G]}\n\
    \  letters=${letters//[G]}\n  letters=${letters//[G]}\n  letters=${letters//[G]}\n\
    \  letters=${letters//[G]}\n  letters=${letters//[G]}\n  letters=${letters//[G]}\n\
    \  letters=${letters//[G]}\n  letters=${letters//[G]}\n  letters=${letters//[G]}\n\
    \  letters=${letters//[G]}\n  letters=${letters//[G]}\n  letters=${letters//[G]}\n\
    \  letters=${letters//[G]}\n  letters=${\n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmps88604vv.sh: line 82: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    message=$1\n    count=0\n    swapped=false\n\
    \    \n    while [ -n \"$message\" ]; do\n        if [ \"$swapped\" == \"false\"\
    \ ]; then\n            swapped=true\n            message=$(echo $message | sed\
    \ -e 's/\\(.*\\)\\([aeiouAEIOU]\\)/\\L\\1\\E\\2/g')\n        fi\n\n        echo\
    \ $message | awk '{\n            for(i=1; i<=NF; i++){\n                if($i\
    \ ~ /[aeiouAEIOU]/){\n                    a=tolower($i)\n                    b=toupper($i)\n\
    \                    print toupper($i),$(i+1)\n                    print tolower($i),$(a+2)\n\
    \                    print toupper($i),$(a+3)\n                }\n           \
    \ }\n        }' > $TMPDIR/tmp1\n        \n        \n        awk '{\n         \
    \   for(i=1; i<=NF; i++){\n                if($i ~ /[aeiouAEIOU]/){\n        \
    \            c=toupper($i)\n                    d=tolower($i)\n              \
    \      print toupper($i),$(c+2)\n                    print tolower($i),$(d)\n\
    \                    print toupper($i),$(d+2)\n                }\n           \
    \ }\n        }' < $TMPDIR/tmp1 > $TMPDIR/tmp2\n        \n        \n        message=$(sed\
    \ -n '1,$p' $TMPDIR/tmp2 | sed 's/,$//' | sed 's/^\\(.*\\)$/echo \\&\\1/')\n \
    \       \n        \n        \n        \n        count=$(echo $message | wc -w)\n\
    \        \n        if [ \"$swapped\" == \"true\" ]; then\n            swapped=false\n\
    \        fi\n    done\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmp3irxoa00.sh: line 35: /tmp1: Permission denied\n/tmp/tmp3irxoa00.sh:
    line 48: /tmp1: No such file or directory\nsed: can''t read /tmp2: No such file
    or directory\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local i\n    local len=${#msg}\n\
    \    local encoded\n\n    for (( i = 0; i < len; i++ )); do\n        local c=${msg:i:1}\n\
    \        if [[ $c =~ [a-z] ]]; then\n            c=${c:0:1}\n            c=${c:1}\n\
    \        elif [[ $c =~ [aeiou] ]]; then\n            c=${c}\n            c=${c:2:1}\n\
    \            c=${c}\n        else\n            c=${c:0:1}\n            c=${c:1}\n\
    \        fi\n        encoded+=\"${c:1}\"\n    done\n    encoded=${encoded::1}\n\
    \    encoded=${encoded//[^a-zA-Z]}\n    encoded=${encoded//[aeiouy]}\n    encoded=${encoded//[!^$msg]}\n\
    \    encoded=${encoded//[aeiou]}\n    encoded=${encoded::1}\n    encoded=${encoded//[!^$msg]}\n\
    \    encoded=${encoded//[aeiouy]}\n    encoded=${encoded//[^a-zA-Z]}\n\n    echo\
    \ $encoded\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    echo \"$1\" | tr '[A-Z]' '[a-z]' | sed\
    \ 's/[aeiouAEIOU]/_&/g' | sed 's/[aeiouAEIOU]_/&/g'\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  # The '$1' is to get arguments to the function\n\
    \  local message=\"$1\"\n\n  # The for loop runs over the characters in the string\
    \ and\n  # if the character is an 'a' it swaps the case of the character\n  #\
    \ and if it is a vowel in the english alphabet it replaces it\n  # with the character\
    \ that appears 2 places ahead of it\n  local encoded=\"\"\n  for ((i = 0; i <\
    \ ${#message}; i++)); do\n    local char=\"${message:$i:1}\"\n    if [[ $char\
    \ == a ]]; then\n      char=\"A\";\n    elif [[ $char == o ]]; then\n      char=\"\
    O\";\n    elif [[ $char == u ]]; then\n      char=\"U\";\n    elif [[ $char ==\
    \ y ]]; then\n      char=\"Y\";\n    elif [[ $char == i ]]; then\n      char=\"\
    I\";\n    elif [[ $char == o ]]; then\n      char=\"O\";\n    elif [[ $char ==\
    \ u ]]; then\n      char=\"U\";\n    elif [[ $char == y ]]; then\n      char=\"\
    Y\";\n    elif [[ $char == i ]]; then\n      char=\"I\";\n    elif [[ $char ==\
    \ o ]]; then\n      char=\"O\";\n    elif [[ $char == u ]]; then\n      char=\"\
    U\";\n    elif [[ $char == y ]]; then\n      char=\"Y\";\n    elif [[ $char ==\
    \ i ]]; then\n      char=\"I\";\n    elif [[ $char == o ]]; then\n      char=\"\
    O\";\n    elif [[ $char == u ]]; then\n      char=\"U\";\n    elif [[ $char ==\
    \ y ]]; then\n      char=\"Y\";\n    elif [[ $char == i ]]; then\n      char=\"\
    I\";\n    elif [[ $char == o ]]; then\n      char=\"O\";\n    elif [[ $char ==\
    \ u ]]; then\n      char=\"U\";\n    elif [[ $char == y ]]; then\n      char=\"\
    Y\";\n    elif [[ $char == i ]]; then\n      char=\"I\";\n    elif [[ $char ==\
    \ o ]]; then\n      char=\"O\";\n    elif [[ $char == u ]]; then\n      char=\"\
    U\";\n    elif [[ $char == y ]]; then\n      char=\"Y\";\n    elif [[ $char ==\
    \ i ]]; then\n      char=\"I\";\n    elif [[ $char == o ]]; then\n      char=\"\
    O\";\n    elif [[ $char == u ]]; then\n      char=\"U\";\n    elif [[ $char ==\
    \ y ]]; then\n      char=\"Y\";\n    elif [[ $char == i ]]; then\n      char=\"\
    I\";\n    elif [[ $char == o ]]; then\n      char\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp65kfxxqt.sh: line 85: syntax error near unexpected token `}''\n/tmp/tmp65kfxxqt.sh:
    line 85: `}''\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  message=$1\n  # Get a hold of all the uppercase\
    \ letters.\n  uppercase=$(echo $message | tr '[A-Z]' '[a-z]')\n  # Replace each\
    \ vowel in the message with the letter that \n  # appears 2 places ahead of that\
    \ vowel in the english alphabet.\n  echo $uppercase | tr [aeiouAEIOU] a\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local string=\"${1}\"\n  local lettersOnly=\"\
    ${string//[^a-zA-Z]}\"\n  local vowels=\"aeiouAEIOU\"\n  local replaced=\"${lettersOnly,,}\"\
    \n  local positions=$(echo \"${replaced}\" | tr a-z A-Z)\n  local vowelPositions=$(echo\
    \ \"${positions}\" | grep -i -v \"${vowels}\")\n  local replacement=\"\"\n  for\
    \ position in ${vowelPositions}; do\n    replacement=\"${lettersOnly:$((position+1))}\"\
    \n  done\n  echo \"${replacement}\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a\xE0\xE4\
    \xE2\xE1\xE0\xE9\xE8\xEA\xEB\xEC\xED\xEE\xEF\xF2\xF3\xF4\xF5\xF6\xF9\xFA\xFB\xFC\
    \xFD\xFF\"\n  local output\n  local count\n  local currentLetter\n  local previousLetter\n\
    \  \n  output=\"\"\n  count=1\n  \n  currentLetter=\"a\"\n  previousLetter=\"\
    a\"\n  \n  for letter in ${message}; do\n    if [[ ${letter} == ${previousLetter}\
    \ ]]; then\n      currentLetter=\"b\"\n    fi\n    if [[ ${letter} == ${currentLetter}\
    \ ]]; then\n      currentLetter=\"a\"\n      previousLetter=\"a\"\n      output+=\"\
    b\"\n    elif [[ ${letter} != ${previousLetter} ]]; then\n      output+=\"${letter}\"\
    \n    else\n      output+=\"${vowels}${count}\"\n      count=$((count+1))\n  \
    \    currentLetter=\"a\"\n      previousLetter=\"a\"\n    fi\n  done\n  \n  echo\
    \ -n \"${output}\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    # Write the code here\n    local message=$1\n\
    \    local alphabet='abcdefghijklmnopqrstuvwxyz'\n    for i in $alphabet; do\n\
    \        local index=$(($alphabet - $i) + 2)\n        local letter=$i\n      \
    \  if [ $index -lt $message ]; then\n            letter=$message[$index]\n   \
    \     fi\n        echo $letter \n    done\n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpv_oxj92v.sh: command substitution: line 19: syntax error near
    unexpected token `+''\n/tmp/tmpv_oxj92v.sh: command substitution: line 19: `($alphabet
    - $i) + 2''\n/tmp/tmpv_oxj92v.sh: line 21: [: -lt: unary operator expected\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  local len=${#msg}\n  local\
    \ pos=0\n  local tmp=${msg:0:1}\n  local msg2=\"\"\n  local i\n  while ((pos <\
    \ len)) ; do\n    tmp=${msg:pos:1}\n    pos=$((pos+1))\n    if (( $pos % 2 ==\
    \ 0 )); then\n      msg2=${msg2}${tmp}${msg2:pos}\n    else\n      msg2=${msg2}${msg2:$((pos+1))}${tmp}\n\
    \    fi\n  done\n  echo \"${msg2:0:1}${msg2:1}\"\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local upper=$(echo\
    \ $message | sed 's/\\([a-zA-Z]*\\)/\\U&/g')\n    local lower=$(echo $message\
    \ | sed 's/\\([a-zA-Z]*\\)/\\L&/g')\n    local vowels=$(echo $message | sed 's/\\\
    ([a-zA-Z]*\\)/\\E&/g')\n    echo $upper $lower $vowels\n}\n\ncandidate() {\n \
    \   encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    msg=${msg//[^a-zA-Z]/.}\n\
    \    msg=${msg//a}/c\n    msg=${msg//e}/s\n    msg=${msg//i}/h\n    msg=${msg//o}/k\n\
    \    msg=${msg//u}/l\n    msg=${msg//y}/t\n    msg=${msg//A}/C\n    msg=${msg//E}/S\n\
    \    msg=${msg//I}/H\n    msg=${msg//O}/K\n    msg=${msg//U}/L\n    msg=${msg//Y}/T\n\
    \    msg=${msg//\xC4/C}\n    msg=${msg//\xD6/S}\n    msg=${msg//\xDC/H}\n    msg=${msg//\xDC\
    /K}\n    msg=${msg//\xDC/L}\n    msg=${msg//\xE4/C}\n    msg=${msg//\xF6/S}\n\
    \    msg=${msg//\xFC/H}\n    msg=${msg//\xFC/K}\n    msg=${msg//\xFC/L}\n    msg=${msg//\xDC\
    /T}\n    msg=${msg//\xD6/C}\n    msg=${msg//\xE4/S}\n    msg=${msg//\xFC/H}\n\
    \    msg=${msg//\xFC/K}\n    msg=${msg//\xFC/L}\n    msg=${msg//\xC4/H}\n    msg=${msg//\xD6\
    /K}\n    msg=${msg//\xDC/L}\n    msg=${msg//\xC4/K}\n    msg=${msg//\xD6/L}\n\
    \    msg=${msg//\xDC/S}\n    msg=${msg//\xC4/L}\n    msg=${msg//\xD6/S}\n    msg=${msg//\xE4\
    /S}\n    msg=${msg//\xFC/H}\n    msg=${msg//\xFC/K}\n    msg=${msg//\xFC/L}\n\
    \    msg=${msg//\xDC/T}\n    msg=${msg//\xD6/C}\n    msg=${msg//\xE4/C}\n    msg=${msg//\xF6\
    /S}\n    msg=${msg//\xFC/H}\n    msg=${msg//\xFC/K}\n    msg=${msg//\xFC/L}\n\
    \    msg=${msg//\xDC/T}\n    msg=${msg//\xD6/C}\n    msg=${msg\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqx27g3qh.sh: line 83: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  local letters=$2\n  local\
    \ vowels=$3\n  local encoded=\n  local last=\n  local i\n\n  for (( i=1 ; i<${#msg}\
    \ ; i++ )); do\n    if [[ ${msg:$i} == \"a\" ]]; then \n      encoded+=\"a\"\n\
    \    elif [[ ${msg:$i} == \"e\" ]]; then \n      encoded+=\"e\"\n    elif [[ ${msg:$i}\
    \ == \"i\" ]]; then \n      encoded+=\"i\"\n    elif [[ ${msg:$i} == \"o\" ]];\
    \ then \n      encoded+=\"o\"\n    elif [[ ${msg:$i} == \"u\" ]]; then \n    \
    \  encoded+=\"u\"\n    elif [[ ${msg:$i} == \"y\" ]]; then \n      encoded+=\"\
    y\"\n    else\n      last=${msg:$i}\n      encoded+=$(echo \"$last\" | sed -e\
    \ 's/\\([AEIOUYaeiouy]\\)\\(.*\\)/\\1\\U\\2/' -e 's/[aeiouy]/\\3/g')\n    fi\n\
    \  done\n  encoded+=\"${letters}${last}\"\n  echo $encoded\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"sed: -e expression #2, char 15: invalid reference \\3 on `s'' command''s
    RHS\nsed: -e expression #2, char 15: invalid reference \\3 on `s'' command''s
    RHS\nsed: -e expression #2, char 15: invalid reference \\3 on `s'' command''s
    RHS\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  local alphabet=abcdefghijklmnopqrstuvwxyz\n\
    \  local vowels=aeiouyAEIOUY\n\n  local msg2=$(echo $msg | tr \"[A-Z]\" \"[a-z]\"\
    )\n  local msg3=$(echo $msg2 | tr \" \" \"-\")\n  local msg4=$(echo $msg3 | sed\
    \ 's/u/a/' | sed 's/e/i/' | sed 's/o/o/' | sed 's/a/e/' | sed 's/i/o/' | sed 's/u/a/'\
    \ | sed 's/y/o/' | sed 's/u/a/' | sed 's/e/y/' | sed 's/i/y/' | sed 's/u/a/' |\
    \ sed 's/y/a/' | sed 's/s/s/o/' | sed 's/y/s/' | sed 's/s/y/' | sed 's/s/s/' |\
    \ sed 's/y/s/' | sed 's/s/s/')\n  local msg5=$(echo $msg4 | sed 's/a/e/' | sed\
    \ 's/y/i/' | sed 's/i/o/' | sed 's/e/a/' | sed 's/s/y/' | sed 's/y/o/' | sed 's/y/a/'\
    \ | sed 's/y/s/' | sed 's/s/y/' | sed 's/y/s/')\n\n  echo $msg5\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"sed: -e expression #1, char 7: unknown option to `s''\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  # Convert the first letter of each word to\
    \ lowercase\n  local msg=$1\n  echo ${msg%% *} | tr '[A-Z]' '[a-z]'\n  # Replace\
    \ every vowel with the letter that comes 2 places ahead\n  # of the vowel in the\
    \ alphabet.\n  echo ${msg%% *} | sed 's/[aeiouAEIOU]/& \\\n  &/' | sed 's/^/\\\
    \n/' | sed 's/$/&/'\n  # Revert back to uppercase\n  echo ${msg%% *} | tr '[a-z]'\
    \ '[A-Z]'\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=\"$1\"\n  local first\n  local\
    \ second\n  local result\n\n  result=$(echo $message | sed -e 's/[^a-z]/T/g' -e\
    \ 's/[aeiouAEIOU]/H/g' -e 's/[AEIOUaeiou]/I/g')\n\n  first=$(echo $result | cut\
    \ -c 1)\n  second=$(echo $result | cut -c 3)\n\n  echo $first,$second\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  local msg2=\"\"\n  local\
    \ msg3=\"\"\n  local vowels=$(echo $msg | grep -c -e \"[aeiouAEIOU]\")\n  for\
    \ ((i=0; i < $vowels; i++))\n  do\n    local next=${msg:i:1}\n    msg2+=$next\n\
    \    msg3=$next\n    msg3=${msg3:0:1}\n  done\n  for ((i=1; i <= $((msg2 | wc\
    \ -c)); i++)); do\n    msg3=$msg3:$(($msg2 | sed -n \"$i\"p | awk '{print $1}'))\n\
    \    msg3=${msg3:0:1}\n    msg3=${msg3:0:1}\n    msg3=${msg3:0:1}\n    msg3=${msg3:0:1}\n\
    \    msg3=${msg3:0:1}\n    msg3=${msg3:0:1}\n  done\n  msg3=${msg3//[aeiou]/\\\
    $((($(msg3 | tr 'A-Z' '[a-z]') | sed 's/\\(.\\)/\\1/' | sed 's/.//g' | sed 's/.//g'\
    \ | awk '{print $1}') | awk '{print $1}'))}\n  msg3=${msg3//\\./\\$((($(msg3 |\
    \ tr 'A-Z' '[a-z]') | sed 's/\\(.\\)/\\1/' | sed 's/.//g' | sed 's/.//g' | awk\
    \ '{print $1}') | awk '{print $1}') | awk '{print $1}') | awk '{print $1}'))}\n\
    \  msg3=${msg3//\\./\\$((($(msg3 | tr 'A-Z' '[a-z]') | sed 's/\\(.\\)/\\1/' |\
    \ sed 's/.//g' | sed 's/.//g' | awk '{print $1}') | awk '{print $1}') | awk '{print\
    \ $1}') | awk '{print $1}'))}\n  msg3=${msg3//\\./\\$((($(msg3 | tr 'A-Z' '[a-z]')\
    \ | sed 's/\\(.\\)/\\1/' | sed 's/.//g' | sed 's/.//g' | awk '{print $1}') | awk\
    \ '{print $1}') | awk '{print $1}') | awk '{print $1}'))}\n  msg3=${msg3//\\./\\\
    $((($(msg3 | tr 'A-Z' '[a-z]') | sed 's/\\(.\\)/\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpzfoxn0sy.sh: line 39: unexpected EOF while looking for matching
    `''''\n/tmp/tmpzfoxn0sy.sh: line 56: syntax error: unexpected end of file\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local alpha=\"abcdefghijklmnopqrstuvwxyz\"\
    \n    local vowels=\"aeiou\"\n    echo \"${msg}\"\n    echo \"${msg//[aeiou]/${alpha:0:(($(($#msg)+2)-1))}}\"\
    \n    echo \"${msg//[aeiou]/${alpha:(($(($#msg)+2))):(($(($#msg)+4))-1)}}\"\n\
    \    echo \"${msg//[aeiou]/${alpha:(($(($#msg)+3))):(($(($#msg)+5))-1)}}\"\n \
    \   echo \"${msg//[aeiou]/${alpha:(($(($#msg)+4))):(($(($#msg)+6))-1)}}\"\n  \
    \  echo \"${msg//[aeiou]/${alpha:(($(($#msg)+5))):(($(($#msg)+7))-1)}}\"\n   \
    \ echo \"${msg//[aeiou]/${alpha:(($(($#msg)+6)):(($(($#msg)+8))-1)}}\"\n    echo\
    \ \"${msg//[aeiou]/${alpha:(($(($#msg)+7)):(($(($#msg)+9))-1)}}\"\n    echo \"\
    ${msg//[aeiou]/${alpha:(($(($#msg)+8)):(($(($#msg)+10))-1)}}\"\n    echo \"${msg//[aeiou]/${alpha:(($(($#msg)+9)):(($(($#msg)+11))-1)}}\"\
    \n    echo \"${msg//[aeiou]/${alpha:(($(($#msg)+10)):(($(($#msg)+12))-1)}}\"\n\
    \    echo \"${msg//[aeiou]/${alpha:(($(($#msg)+11)):(($(($#msg)+13))-1)}}\"\n\
    \    echo \"${msg//[aeiou]/${alpha:(($(($#msg)+12)):(($(($#msg)+14))-1)}}\"\n\
    \    echo \"${msg//[aeiou]/${alpha:(($(($#msg)+13)):(($(($#msg)+15))-1)}}\"\n\
    \    echo \"${msg//[aeiou]/${alpha:(($(($#msg)+14)):(($(($#msg)+16))-1)}}\"\n\
    \    echo \"${msg//[aeiou]/${alpha:(($(($#msg)+15)):(($(($#msg)+17))-1)}}\"\n\
    \    echo \"${msg//[aeiou]/${alpha:(($(($#msg)+16)):(($(($#msg)+18))-1)}}\"\n\
    \    echo \"${msg//[aeiou]/${alpha:(($(($#msg)+17)):(($(($#msg)+19))-1)}}\"\n\
    \    echo \"${msg//[aeiou]/${alpha:(($(($#\n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp5xlbzplx.sh: line 36: unexpected EOF while looking for matching
    `)''\n/tmp/tmp5xlbzplx.sh: line 53: syntax error: unexpected end of file\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n\t# We have to encode our message twice, \n\
    \t# with each letter being counted twice, \n\t# and each vowel being counted once.\n\
    \t# In each case, we also have to consider that \n\t# vowels and consonants may\
    \ both appear \n\t# twice in the message. We also have to \n\t# consider that\
    \ some vowels and consonants\n\t# may appear only once in the message. \n\t# To\
    \ do this, we build up an array with all \n\t# of the possible \"shifts\" that\
    \ we need to \n\t# take to encode a message in the correct way. \n\tshifts=\"\
    ${1//[aAcEeIiOoUu]/*}\" \n\tshifts=\"${shifts//[cC]/*}\" \n\tshifts=\"${shifts//[aA]/*}\"\
    \ \n\tshifts=\"${shifts//[eE]/*}\" \n\tshifts=\"${shifts//[iI]/*}\" \n\tshifts=\"\
    ${shifts//[uU]/*}\" \n\tshifts=\"${shifts//[yY]/*}\" \n\tshifts=\"${shifts//[pP]/*}\"\
    \ \n\tshifts=\"${shifts//[hH]/*}\" \n\tshifts=\"${shifts//[pP]/*}\" \n\tshifts=\"\
    ${shifts//[sS]/*}\" \n\tshifts=\"${shifts//[zZ]/*}\" \n\tshifts=\"${shifts//[nN]/*}\"\
    \ \n\tshifts=\"${shifts//[dD]/*}\" \n\tshifts=\"${shifts//[rR]/*}\" \n\tshifts=\"\
    ${shifts//[jJ]/*}\" \n\tshifts=\"${shifts//[kK]/*}\" \n\tshifts=\"${shifts//[tT]/*}\"\
    \ \n\tshifts=\"${shifts//[fF]/*}\" \n\tshifts=\"${shifts//[mM]/*}\" \n\tshifts=\"\
    ${shifts//[sS]/*}\" \n\tshifts=\"${shifts//[wW]/*}\" \n\tshifts=\"${shifts//[zZ]/*}\"\
    \ \n\tshifts=\"${shifts//[tT]/*}\" \n\tshifts=\"${shifts//[sS]/*}\" \n\tshifts=\"\
    ${shifts//[gG]/*}\" \n\tshifts=\"${shifts//[vV]/*}\" \n\tshifts=\"${shifts//[sS]/*}\"\
    \ \n\tshifts=\"${shifts//[cC]/*}\" \n\tshifts=\"${shifts//[uU]/*}\" \n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local encoded=\n\
    \    while [ ${#message} -gt 0 ]; do\n        encoded=$(printf $message | awk\
    \ '{ for (i=2; i <= NF; i++) { printf \"%s\", tolower($i) } printf \"\\n\"; print\
    \ $NF }' | sed -e 's/[aeiouy]/[AEIOUY]/' -e 's/a/[AEIOUY]/')\n        message=$encoded\n\
    \    done\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=10>
  stdout: <_io.BufferedReader name=3>
  timestamp: 1660078680
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n   local msg=$1\n   local msg2=$( echo $msg\
    \ | sed -e 's/\\(.*\\)([aeiou])/\\1\\2/g' -e 's/a/E/g' -e 's/e/I/g' -e 's/o/U/g'\
    \ -e 's/i/O/g' -e 's/u/U/g' -e 's/y/A/g' -e 's/e/E/g' -e 's/s/S/g' -e 's/t/T/g'\
    \ -e 's/k/K/g' -e 's/f/F/g' -e 's/m/M/g' -e 's/r/R/g' -e 's/o/O/g' -e 's/n/N/g'\
    \ -e 's/u/U/g' -e 's/i/I/g' -e 's/r/R/g' -e 's/k/K/g' -e 's/s/S/g' -e 's/t/T/g'\
    \ -e 's/h/H/g' -e 's/r/R/g' -e 's/d/D/g' -e 's/g/G/g' -e 's/f/F/g' -e 's/c/C/g'\
    \ -e 's/s/S/g' -e 's/k/K/g' -e 's/c/C/g' -e 's/u/U/g' -e 's/t/T/g' -e 's/s/S/g'\
    \ -e 's/r/R/g' -e 's/d/D/g' -e 's/s/S/g' -e 's/f/F/g' -e 's/a/A/g' -e 's/e/E/g'\
    \ -e 's/y/A/g' -e 's/o/O/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/l/L/g' -e 's/o/O/g'\
    \ -e 's/n/N/g' -e 's/l/L/g' -e 's/a/A/g' -e 's/s/S/g' -e 's/e/E/g' -e 's/y/A/g'\
    \ -e 's/o/O/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/s/S/g' -e 's/s/S/g' -e 's/f/F/g'\
    \ -e 's/r/R/g' -e 's/d/D/g' -e 's/s/S/g' -e 's/f/F/g' -e 's/a/A/g' -e 's/n/N/g'\
    \ -e 's/l/L/g' -e 's/o/O/g' -e 's/n/N/g' -e 's/l/L/g' -e 's/a/A/g' -e 's/\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmp3240tz1p.sh: line 16: unexpected EOF while looking for matching
    `''''\n/tmp/tmp3240tz1p.sh: line 33: syntax error: unexpected end of file\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  message=\"$1\"\n  echo $message | sed \"\
    s/[A-Z]/e\\^&/g\" | \n  sed \"s/[AEIOUYaeiouy]/o\\^&/g\" | \n  sed \"s/[\xC4\xC5\
    \xD6\xDC\xE4\xE5\xF6]/u\\^&/g\" | \n  sed \"s/[\xC0\xC1\xC2\xC3\xC4\xC5\xC6\xC7\
    \xC8\xC9\xCA\xCB]/a\\^&/g\" | \n  sed \"s/[\xE0\xE1\xE2\xE3\xE4\xE5\xE6\xE7\xE8\
    \xE9\xEA\xEB]/a\\^&/g\" | \n  sed \"s/[\xD9\xDA\xDB\xDC\xFC]/y\\^&/g\" | \n  sed\
    \ \"s/[\xD1\xDF]/n\\^&/g\" | \n  sed \"s/[\xBF\xA1\\#\\$\\%\\^\\&\\*\\/\\\\\\\
    ?]/o\\^&/g\" | \n  sed \"s/[\\.\\;\\:\\-\\_\\+]/o\\^&/g\"\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    # Replace each vowel with its 2 place counterpart\
    \ in the alphabet\n    # Replace all letters with their counterparts in the alphabet\n\
    \    # Swap each pair of letters \n    echo ${1//aeiou/${1:0:2}:${1:2:2}:${1:3:2}}\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local str=$1\n    echo \"$str\" | sed -e\
    \ 's/\\(.\\)/\\L\\1/g' -e 's/[AEIOUaeiou]/[&]/g'\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local -i numvowels=0\n    local -i lastletter=0\
    \ \n    local -i message=$1\n    local -a letters=( ${message//[a-zA-Z]/} ) \n\
    \    local -a result=( )\n    local letter \n    local vowel \n    for letter\
    \ in ${letters[@]}; do\n        if [[ \"$letter\" = $vowel ]]; then \n       \
    \     (( numvowels++ ))\n            if (( numvowels == 2 )); then \n        \
    \        lastletter=( ${letters[$(( lastletter + 1 ))]} )\n            fi\n  \
    \      else\n            if (( numvowels == 0 )); then \n                lastletter=(\
    \ ${letters[$(( lastletter + 1 ))]} )\n            else\n                vowel=(\
    \ ${letters[$(( numvowels - 2 ))]} )\n            fi\n        fi\n        result=(\
    \ \"${result[@]}\" ${lastletter} $letter )\n    done\n    local -a output\n  \
    \  output=( ${result[@]:0:1} )\n    for letter in ${result[@]}; do\n        output=(\
    \ \"${output[@]}\" ${letter} )\n    done\n    local -a result\n    result=( \"\
    ${output[@]}\" )\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiou\"\
    \n    local encoded=$(perl -ne '\n        foreach $char (split //, $ARGV[0]) {\n\
    \            $swap = map { $a =~ m/\\Q$char\\E\\Q$char\\E/ ? $a : $a =~ m/\\Q$vowels\\\
    E\\Q$vowels\\E/ ? $a : $a }; \n            $char = join \"\", map { $a =~ m/\\\
    Q$vowels\\E\\Q$vowels\\E/ ? $a : $a }; \n            $char = join \"\", $swap,\
    \ $char;\n            print $char;\n        }\n    ' <<< \"$message\")\n    printf\
    \ '%s\\n' \"$encoded\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: b'syntax error at -e line 3, near "};"\nsyntax error at -e line 4, near
    "};"\nExecution of -e aborted due to compilation errors.\n'
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local length=${#message}\n\
    \    local letters=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\n\
    \    for ((i=1; i<=${length}; i++)); do\n        message=\"${message//${letters[i]}/${letters[$(expr\
    \ ${i}-1)]}${letters[${i}]}\"\n    done\n\n    for ((i=1; i<=${length}; i++));\
    \ do\n        message=\"${message//[aeiou]/${letters[$(expr ${i}-1)]}\"\n    done\n\
    \n    for ((i=1; i<=${length}; i++)); do\n        message=\"${message//[aeiouy]/${letters[$(expr\
    \ ${i}-1)]}\"\n    done\n\n    echo $message\n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfu_qv9ux.sh: line 44: unexpected EOF while looking for matching
    `"\''\n/tmp/tmpfu_qv9ux.sh: line 48: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  # declare variable here\n  local message=$1\n\
    \  \n  # get first letter of each message\n  local letters=$(echo $message | cut\
    \ -c1)\n\n  # convert message to lowercase\n  local msgLower=$message\n  msgLower=${msgLower,,}\n\
    \n  # make all letters lowercase\n  msgLower=$(echo $msgLower | tr '[:upper:]'\
    \ '[:lower:]')\n\n  # for loop that swaps case\n  for ((i=0; i<${#msgLower}; i++));\
    \ do \n    local letter=${msgLower:$i:1}\n    msgLower=${msgLower:$i:1}\n    msgLower=${msgLower,,}\n\
    \    msgLower=${msgLower,:,}\n    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n\
    \    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n\
    \    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n\
    \    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n\
    \    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n\
    \    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n\
    \    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n\
    \    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n\
    \    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n\
    \    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n\
    \    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n\
    \    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n\
    \    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n\
    \    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n    msgLower=${msgLower,,}\n\
    \    msg\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpiu3m6dk5.sh: line 76: syntax error near unexpected token `}''\n/tmp/tmpiu3m6dk5.sh:
    line 76: `}''\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local letters=\"\
    \ ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local vowels=\"AEIOU\"\n    local vowel2=\"\
    ${letters:1}\"\n    local lettersIdx=0\n    local lettersIdx2=0\n    local lettersIdx3=0\n\
    \    local lettersIdx4=0\n    local lettersIdx5=0\n    local lettersIdx6=0\n \
    \   local lettersIdx7=0\n    local lettersIdx8=0\n    local lettersIdx9=0\n  \
    \  local lettersIdx10=0\n    local lettersIdx11=0\n    local lettersIdx12=0\n\
    \    local lettersIdx13=0\n    local lettersIdx14=0\n    local lettersIdx15=0\n\
    \    local lettersIdx16=0\n    local lettersIdx17=0\n    local lettersIdx18=0\n\
    \    local lettersIdx19=0\n    local lettersIdx20=0\n    local lettersIdx21=0\n\
    \    local lettersIdx22=0\n    local lettersIdx23=0\n    local lettersIdx24=0\n\
    \    local lettersIdx25=0\n    local lettersIdx26=0\n    local lettersIdx27=0\n\
    \    local lettersIdx28=0\n    local lettersIdx29=0\n    local lettersIdx30=0\n\
    \    local lettersIdx31=0\n    local lettersIdx32=0\n    local lettersIdx33=0\n\
    \    local lettersIdx34=0\n    local lettersIdx35=0\n    local lettersIdx36=0\n\
    \    local lettersIdx37=0\n    local lettersIdx38=0\n    local lettersIdx39=0\n\
    \    local lettersIdx40=0\n    local lettersIdx41=0\n    local lettersIdx42=0\n\
    \    local lettersIdx43=0\n    local lettersIdx44=0\n    local lettersIdx45=0\n\
    \    local lettersIdx46=0\n    local lettersIdx47=0\n    local lettersIdx48=0\n\
    \    local lettersIdx49=0\n    local lettersIdx50=0\n    local lettersIdx51=0\n\
    \    local lettersIdx52=0\n    local lettersIdx53=0\n    local lettersIdx54=0\n\
    \    local lettersIdx55=0\n    local lettersIdx56=0\n    local lettersIdx57=0\n\
    \    local lettersIdx58=0\n    local lettersIdx59=0\n    local lettersIdx60=0\n\
    \    local lettersIdx61=0\n    local lettersIdx62=0\n    local lettersIdx63=0\n\
    \    local lettersIdx64=0\n    local lettersIdx65=0\n    local lettersIdx66=0\n\
    \    local lettersIdx67=0\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local string=\"$1\" \n  local message=\"\"\
    \n\n  for ((i = 0; i < ${#string}; i++)); do \n    local letter=\"${string:i:1}\"\
    \ \n    local place=\"$(expr ${i} + 1)\"\n\n    if [[ ${letter} -eq \"${VOWELS[@]}\"\
    \ ]]; then\n      message+=\"${LETTERS[${place}]}\"\n    elif [[ ${letter} -eq\
    \ \"${LETTERS[@]}\" ]]; then\n      message+=\"${VOWELS[${place}]}\"\n    elif\
    \ [[ \"${letter}\" =~ ^[a-z] ]]; then\n      message+=\"${LETTERS[${place}]}\"\
    \n    fi\n  done\n\n  printf '%s\\n' \"$message\"\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  message=${message,,}\n\
    \  local length=\"${#message}\"\n  local vowels=\"aeiouyAEIOUY\"\n  local output=''\n\
    \n  local i\n  for i in $(seq 0 $((length - 1))); do \n    local current=${message:$i:1}\n\
    \    if [[ \"$vowels\" =~ $current ]] ; then \n      output+=$current\n      output+=$((current\
    \ + 2))\n    else \n      output+=$((current + 1))\n    fi\n  done\n\n  output=${output:0:1}\n\
    \n  printf \"$output\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local str=$1\n    local result=\"\"\n \
    \   local vowels=\"aeiouAEIOU\"\n    for (( i=0; i<${#str}; i++ )); do \n    \
    \    v=$(echo $vowels | awk -F '' '{print $i}')\n        (( k=(${#vowels} + ${#str})\
    \ - i))\n        echo \"${str:k:1}${v}\"\n    done\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local string=\"$1\"\n    local vowel=\"\
    a\"\n    local result\n    local index\n    for index in $(seq 0 $((${#string}\
    \ - 1)))\n    do\n        local letter=$(echo $string | awk '{print $index}')\n\
    \        local vowelIndex=$(echo $string | awk '{print $index + 1}')\n       \
    \ local nextVowelIndex=$((${vowelIndex} - 1))\n        local nextLetter=$(echo\
    \ $string | awk '{print $index + 2}')\n        result=\"$result$($letter | awk\
    \ '{print tolower($0)}')\"\n        if [ \"$letter\" == \"$nextLetter\" ] \n \
    \       then\n            if [ \"$nextVowelIndex\" -eq 0 ]\n            then\n\
    \                result=\"$result$vowel\"\n            else\n                local\
    \ newVowel=$(echo $string | awk '{print substr($0, 1, vowelIndex) + substr($0,\
    \ nextVowelIndex) + substr($0, vowelIndex + 1)}')\n                result=\"$result$newVowel\"\
    \n            fi\n        fi\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''awk: cmd. line:1: {print $index}\nawk: cmd. line:1:              ^ syntax
    error\nawk: cmd. line:1: {print $index + 1}\nawk: cmd. line:1:               ^
    syntax error\nawk: cmd. line:1: {print $index + 2}\nawk: cmd. line:1:               ^
    syntax error\nawk: cmd. line:1: {print $index}\nawk: cmd. line:1:              ^
    syntax error\nawk: cmd. line:1: {print $index + 1}\nawk: cmd. line:1:               ^
    syntax error\nawk: cmd. line:1: {print $index + 2}\nawk: cmd. line:1:               ^
    syntax error\nawk: cmd. line:1: {print $index}\nawk: cmd. line:1:              ^
    syntax error\nawk: cmd. line:1: {print $index + 1}\nawk: cmd. line:1:               ^
    syntax error\nawk: cmd. line:1: {print $index + 2}\nawk: cmd. line:1:               ^
    syntax error\nawk: cmd. line:1: {print $index}\nawk: cmd. line:1:              ^
    syntax error\nawk: cmd. line:1: {print $index + 1}\nawk: cmd. line:1:               ^
    syntax error\nawk: cmd. line:1: {print $index + 2}\nawk: cmd. line:1:               ^
    syntax error\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=\"$1\"\n  local alphabet=\"\
    a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n  local encoded_message\n\
    \  local i\n  \n  for ((i=1; i<=${#message}; i++)); do\n    # Get the letter that\
    \ appears 2 places ahead\n    local letter=\"${alphabet:$((i-2))}\"\n    \n  \
    \  # If the letter matches a vowel, swap it with the letter that appears 2 places\
    \ ahead\n    if [[ $message == *\"$letter\"* ]]; then\n      message=\"${message/$letter/$alphabet:$((i-2))}\"\
    \n    fi\n    \n    # If the letter matches the letter that appears 2 places ahead\
    \ of a vowel, swap it with the letter that appears 2 places ahead of the other\
    \ vowel\n    if [[ $message == *\"$alphabet$letter\"* ]]; then\n      message=\"\
    ${message/${alphabet:$((i-2))}$alphabet:$((i-3))}\"\n    fi\n    \n    encoded_message+=\"\
    $message\"\n  done\n  \n  echo $encoded_message\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  echo \"$1\" | tr [a-z] [A-Z] | tr [AEIOUaeiouAEIOU]\
    \ [a-z]\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"\
    mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"\
    This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw\
    \ WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local tmp\n    local\
    \ vowels=\"aeiouAEIOU\"\n    tmp=$(echo $message | sed -e 's/[aeiou]/&/2' -e 's/a/&B/g'\
    \ -e 's/e/&D/g' -e 's/i/&I/g' -e 's/o/&O/g' -e 's/u/&U/g')\n    for vowel in $vowels;\
    \ do\n        tmp=$(echo $tmp | sed -e \"s/$vowel/$vowel/g\")\n    done\n    tmp=$(echo\
    \ $tmp | tr 'A-Z' 'a-z')\n    echo $tmp\n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n   local message=$1\n   local vowels=\"AEIOUaeiou\"\
    \n   local count=0\n   for letter in $message; do\n      ((count += 1))\n    \
    \  ((count %= vowels))\n      message=${message//${letter}/${((count-1))}\n  \
    \ done\n   echo ${message}\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3l7n1zob.sh: line 40: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local messageLength=$#\n\
    \  local encoded=\"\"\n  local positions=\"\"\n  local lastPosition=0\n  local\
    \ lastVowel=0\n  local vowels=\"aeiouAEIOU\"\n  local char=\"a\"\n  local i=0\n\
    \  while [ $i -lt $messageLength ]; do\n    if [[ $message =~ $char ]]; then\n\
    \      encoded+=$char\n      positions+=\" \"\n      lastPosition=$i\n    else\n\
    \      char=$(echo $message|sed 's/./&\\L&/g')\n      lastVowel=$(echo $vowels|grep\
    \ $char|wc -l)\n      if [[ $lastVowel -lt 2 ]]; then\n        positions+=\"$lastPosition\
    \ \" \n      else\n        positions+=\"$lastPosition $lastVowel \" \n      fi\n\
    \      lastPosition=0\n    fi\n    i=$((i+1))\n  done\n  if [[ ${messageLength}\
    \ -gt $i ]]; then\n    positions+=\"$i \"\n  fi\n  echo \"${encoded}${positions}\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    echo \"$1\" | perl -ne '\n        $c=\"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        foreach $v (@F) {\n            if ($v eq\
    \ \"a\") {$v = \"A\";}\n            if ($v eq \"e\") {$v = \"E\";}\n         \
    \   if ($v eq \"i\") {$v = \"I\";}\n            if ($v eq \"o\") {$v = \"O\";}\n\
    \            if ($v eq \"u\") {$v = \"U\";}\n            if ($v eq \"y\") {$v\
    \ = \"Y\";}\n        }\n        $m = join(\"\",split(\"\",$1));\n        foreach\
    \ $v (split(\"\",$m)) {\n            if ($v eq \"A\") {\n                $n =\
    \ \"A\";\n            }\n            if ($v eq \"E\") {\n                $n =\
    \ \"E\";\n            }\n            if ($v eq \"I\") {\n                $n =\
    \ \"I\";\n            }\n            if ($v eq \"O\") {\n                $n =\
    \ \"O\";\n            }\n            if ($v eq \"U\") {\n                $n =\
    \ \"U\";\n            }\n            if ($v eq \"Y\") {\n                $n =\
    \ \"Y\";\n            }\n            if ($v eq \"a\") {\n                $n =\
    \ \"a\";\n            }\n            if ($v eq \"e\") {\n                $n =\
    \ \"e\";\n            }\n            if ($v eq \"i\") {\n                $n =\
    \ \"i\";\n            }\n            if ($v eq \"o\") {\n                $n =\
    \ \"o\";\n            }\n            if ($v eq \"u\") {\n                $n =\
    \ \"u\";\n            }\n            if ($v eq \"y\") {\n                $n =\
    \ \"y\";\n            }\n            chomp($n);\n            $m = $n . $m;\n \
    \       }\n        $m = join(\"\",split(\"\",$m));\n        foreach $v (split(\"\
    \",$m)) {\n            if ($v eq \"A\") {\n                $n = \"B\";\n     \
    \       }\n            if ($v eq \"B\") {\n                $n = \"C\";\n     \
    \       }\n            if ($v eq \"C\") {\n                $n = \"D\";\n     \
    \       }\n            if ($v eq \"D\") {\n                $n = \"F\";\n     \
    \       }\n            if ($v eq \"F\") {\n                $n = \"G\";\n     \
    \       }\n            if ($v eq \"G\") {\n                $n = \"H\";\n     \
    \       }\n            if ($v eq \"H\") {\n                $n = \"J\";\n     \
    \       }\n            if ($v eq \"J\") {\n                $n = \"K\";\n     \
    \       }\n            if ($v eq \"K\") {\n                $n\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpo6lpa1x5.sh: line 15: unexpected EOF while looking for matching
    `''''\n/tmp/tmpo6lpa1x5.sh: line 110: syntax error: unexpected end of file\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n    local vowels=\"aeiouAEIOU\"\n    local encodedMsg=\"\"\n    local vowelCount\n\
    \    for (( i = 0; i < ${#msg}; i++ )); do\n        local msgChar=${msg:$i:1}\n\
    \        if [ $msgChar != \"\" ]; then\n            if [[ ${msgChar:0:1} == \"\
    a\" || ${msgChar:0:1} == \"A\" ]]; then\n                encodedMsg+=\"${alphabet:$((${msgChar:0:1}-${vowels:0:1}-1)):1}\"\
    \n            else\n                encodedMsg+=\"${alphabet:$((${msgChar:0:1}+${vowels:0:1}-1)):1}\"\
    \n            fi\n        fi\n    done\n    echo \"$encodedMsg\"\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local message_uppercase=`echo\
    \ \"$message\" | tr '[:upper:]' '[:lower:]'`\n    local vowels=\" A E I O U ae\
    \ ii oo uu \"\n    local encoded_message=\"\"\n    local vowels_count=`echo \"\
    $vowels\" | wc -l`\n    for c in $message_uppercase; do \n        encoded_message=\"\
    $c${encoded_message}\"\n        if [ $((c+1)) -eq $vowels_count ]; then\n    \
    \        encoded_message=\"a${encoded_message}\"\n        fi\n    done\n    echo\
    \ $encoded_message\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local tmp\n    local\
    \ letter\n    local tmp2\n    local tmp3\n    local n\n    for (( i = 0; i < ${#msg};\
    \ i++ )); do\n        letter=${msg:$i:1}\n        n=$(echo $letter | tr 'A-Z'\
    \ 'a-z')\n        letter=${msg:$i:1}\n        n=$(echo $letter | tr 'ae' 'AE')\n\
    \        letter=${msg:$i:1}\n        n=$(echo $letter | tr 'AE' 'ae')\n      \
    \  letter=${msg:$i:1}\n        n=$(echo $letter | tr 'AE' 'ae')\n        letter=${msg:$i:1}\n\
    \        n=$(echo $letter | tr 'ae' 'AE')\n        letter=${msg:$i:1}\n      \
    \  n=$(echo $letter | tr 'AE' 'ae')\n        letter=${msg:$i:1}\n        n=$(echo\
    \ $letter | tr 'ae' 'AE')\n        letter=${msg:$i:1}\n        n=$(echo $letter\
    \ | tr 'AE' 'ae')\n        letter=${msg:$i:1}\n        n=$(echo $letter | tr 'ae'\
    \ 'AE')\n        letter=${msg:$i:1}\n        n=$(echo $letter | tr 'AE' 'ae')\n\
    \        letter=${msg:$i:1}\n        n=$(echo $letter | tr 'ae' 'AE')\n      \
    \  letter=${msg:$i:1}\n        n=$(echo $letter | tr 'AE' 'ae')\n        letter=${msg:$i:1}\n\
    \        n=$(echo $letter | tr 'ae' 'AE')\n        letter=${msg:$i:1}\n      \
    \  n=$(echo $letter | tr 'AE' 'ae')\n        letter=${msg:$i:1}\n        n=$(echo\
    \ $letter | tr 'ae' 'AE')\n        letter=${msg:$i:1}\n        n=$(echo $letter\
    \ | tr 'AE' 'ae')\n        letter=${msg:$i:1}\n        n=$(echo $letter | tr 'ae'\
    \ 'AE')\n        letter=${msg:$i:1}\n        n=$(echo $letter | tr 'AE' 'ae')\n\
    \        letter=${msg:$i:1}\n        n=$(echo $letter | tr 'ae' 'AE')\n      \
    \  letter=${msg:$i:1}\n        n=$(echo $letter | tr 'AE' 'ae')\n        letter=${msg:$i:1}\n\
    \        n=$(echo $letter | tr 'ae' 'AE')\n        letter=${msg:$i:1}\n      \
    \  n=$(echo $letter | tr 'AE' 'ae')\n        letter=${msg:$i:1}\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpnbuoal1e.sh: line 67: syntax error near unexpected token `}''\n/tmp/tmpnbuoal1e.sh:
    line 67: `}''\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  local vowels=\"a e i o u\
    \ y\" # Assume only letters\n  local i=0\n  local output=\"\"\n  local vowel_idx=0\n\
    \  \n  for (( i=0; i<${#msg}; i++ )); do\n    \n    # First get the letter that\
    \ 2 places ahead of the current letter\n    local c=$(echo $msg | awk -F \"[aeiouy]+\"\
    \ '{print $'$((i+2))'}')\n    \n    # Now replace that letter with the correct\
    \ letter in the english alphabet\n    local l=$(echo $vowels | awk '{print $'$((i+2))'}')\n\
    \    \n    # Add the letter to the output\n    output=$output$l$c\n    \n    #\
    \ If the current letter is a vowel\n    if [[ ${vowels} =~ $c ]]; then\n     \
    \ # Move the vowel_idx to the next letter ahead\n      vowel_idx=$((i+1))\n  \
    \    \n      # If the vowel has just become a consonant\n      if [[ ${vowels}\
    \ =~ 'a'* ]]; then\n        # Add the consonant to the output\n        output=$output$(echo\
    \ $l | tr '[aeiouy]' '[AEIOUY]')\n      fi\n    fi\n  done\n\n  echo $output\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=${1}\n\n    local chars=$(for\
    \ ((i=0; i<${#msg}; i++)); do printf %c ${msg:i:1}; done)\n    local vowels=\"\
    a e i o u\"\n    local output=$(for ((i=0; i<${#msg}; i++)); do if [[ \"${vowels}\"\
    \ =~ \"${chars:i:1}\" ]];\n    then printf ${chars:i:1}; else printf ${chars:i:2};\
    \ fi; done)\n\n    echo \"$output\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=\"$1\"\n    local alphabet=\"\
    abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local output\n   \
    \ local outputChar\n    for char in ${msg//[!A-Za-z]/}; do\n        outputChar=\"\
    ${alphabet:${#alphabet}-1:1}${char:0:1}${alphabet:${#alphabet}-2:1}${char:1:1}${alphabet:${#alphabet}-3:1}${char:2:1}\"\
    \n        output=\"${output}${outputChar}\"\n    done\n    echo -e \"$output\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local word=$1\n    local output=$(echo\
    \ \"${word}\" | sed -e \"s/./${lowercase[$(( $(echo \"${word}\" | sed -e 's/[aeiouAEIOU]/[aeiouAEIOU]/g'\
    \ | wc -m) - 1 ))]}/;s/[aeiouAEIOU]/[aeiouAEIOU]/g;s/[aeiouAEIOU]/[aeiouAEIOU]/g\"\
    )\n    echo -n \"${output}\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local MESSAGE=$1\n  local MESSAGE1=$2\n \
    \ local MESSAGE2=$3\n  local MESSAGE3=$4\n  local MESSAGE4=$5\n  local MESSAGE5=$6\n\
    \  local MESSAGE6=$7\n  local MESSAGE7=$8\n  local MESSAGE8=$9\n  local MESSAGE9=$10\n\
    \  local MESSAGE10=$11\n  local MESSAGE11=$12\n  local MESSAGE12=$13\n  local\
    \ MESSAGE13=$14\n  local MESSAGE14=$15\n  local MESSAGE15=$16\n  local MESSAGE16=$17\n\
    \  local MESSAGE17=$18\n  local MESSAGE18=$19\n  local MESSAGE19=$20\n  local\
    \ MESSAGE20=$21\n  local MESSAGE21=$22\n  local MESSAGE22=$23\n  local MESSAGE23=$24\n\
    \  local MESSAGE24=$25\n  local MESSAGE25=$26\n  local MESSAGE26=$27\n  local\
    \ MESSAGE27=$28\n  local MESSAGE28=$29\n  local MESSAGE29=$30\n  local MESSAGE30=$31\n\
    \  local MESSAGE31=$32\n  local MESSAGE32=$33\n  local MESSAGE33=$34\n  local\
    \ MESSAGE34=$35\n  local MESSAGE35=$36\n  local MESSAGE36=$37\n  local MESSAGE37=$38\n\
    \  local MESSAGE38=$39\n  local MESSAGE39=$40\n  local MESSAGE40=$41\n  local\
    \ MESSAGE41=$42\n  local MESSAGE42=$43\n  local MESSAGE43=$44\n  local MESSAGE44=$45\n\
    \  local MESSAGE45=$46\n  local MESSAGE46=$47\n  local MESSAGE47=$48\n  local\
    \ MESSAGE48=$49\n  local MESSAGE49=$50\n  local MESSAGE50=$51\n  local MESSAGE51=$52\n\
    \  local MESSAGE52=$53\n  local MESSAGE53=$54\n  local MESSAGE54=$55\n  local\
    \ MESSAGE55=$56\n  local MESSAGE56=$57\n  local MESSAGE57=$58\n  local MESSAGE58=$59\n\
    \  local MESSAGE59=$60\n  local MESSAGE60=$61\n  local MESSAGE61=$62\n  local\
    \ MESSAGE62=$63\n  local MESSAGE63=$64\n  local MESSAGE64=$65\n  local MESSAGE65=$66\n\
    \  local MESSAGE66=$67\n  local MESSAGE67=$68\n  local MESSAGE68=$69\n  local\
    \ MESSAGE69=$70\n  local MESSAGE70=$71\n  local MESSAGE71=$72\n  local MESSAGE72=$73\n\
    \  local \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  local out=\"\"\n\n  IFS=\"\
    \ \"\n  for ((i = 0; i < ${#msg}; i++)); do\n    local l=$(echo \"${msg:$i:1}\"\
    \ | tr '[:upper:]' '[:lower:]')\n    local rest=${msg:$i:2}\n    local new=\"\"\
    \n    for ((j = 0; j < ${#rest}; j++)); do\n      local c=$(echo \"${rest:$j:1}\"\
    \ | tr '[:upper:]' '[:lower:]')\n      new=\"${new:$j:1}${l:$j:1}\"\n    done\n\
    \    out=\"${out:$i:1}${new}\"\n  done\n\n  echo \"${out}\"\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=$(echo\
    \ $message | tr a-z A-Z)\n    local output=\"\"\n    for letter in $message; do\
    \ \n        case \"$letter\" in\n            a|e|i|o|u|y|*)\n                letter=$((\
    \ ${letter:0:1} * 2 ))\n                ;;\n            *)\n                letter=${vowels}\n\
    \                ;;\n        esac\n        output+=$letter\n    done\n    echo\
    \ $output\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local encodedMessage\n\
    \    encodedMessage=$(echo $message | sed -e \"s/\\(.\\)/\\L\\1/g\" \\\n     \
    \   -e \"s/([aeiouy])/[g]\\1/g\" \\\n        -e \"s/[aeiouy]\\([aeiouy]\\)/\\\
    1/g\")\n    echo \"$encodedMessage\"\n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"sed: -e expression #2, char 20: invalid reference \\1 on `s'' command''s
    RHS\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n   local msg=$1\n   local i\n   local j\n \
    \  for ((i=0; i < ${#msg}; i++)); do\n      local l=$(expr $i + 1)\n      local\
    \ k=$(expr $l - 1)\n      local l=$(expr $i - 1)\n      local j=0\n      while\
    \ ((j < l)); do\n         if [[ ${msg:$j:1} == \"a\" ]]; then\n            msg=${msg:0:$j}\n\
    \            msg=${msg:0:$j}A\n         fi\n         j=$((j + 1))\n      done\n\
    \      if [[ ${msg:$i:1} =~ ([[:alpha:]]|[[:punct:]]) ]]; then\n         local\
    \ j=0\n         while ((j < l)); do\n            if [[ ${msg:$j:1} =~ ([[:alpha:]]|[[:punct:]])\
    \ ]]; then\n               msg=${msg:0:$j}\n               msg=${msg:0:$j}a\n\
    \            fi\n            j=$((j + 1))\n         done\n      fi\n      msg=${msg:0:$i}\n\
    \   done\n   echo $msg\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  # Set variables\n  message=$1\n  len=${#message}\n\
    \  vowels=\"AEIOU\"\n  repl=\"ACGTRYAEIOU\"\n\n  # Iterate through the message\
    \ one character at a time\n  for i in $(seq 0 $((len-1)) )\n  do\n    # If the\
    \ character is a letter\n    if [ ${message:$i:1} -eq ${alphabet:1} ]\n    then\n\
    \      # Set the current letter to the current character in the message\n    \
    \  letter=${message:$i:1}\n      # Iterate through the vowels\n      for j in\
    \ $(seq 0 $((${#vowels}-1)) )\n      do\n        # If the current letter is a\
    \ vowel\n        if [[ ${vowels:$j:1} =~ ${letter:$j:1} ]]\n        then\n   \
    \       # Swap the letter\n          letter=${letter:$j:1}${letter:$i:1}\n   \
    \       # Set the current vowel to the next vowel in the alphabet\n          letter=${alphabet:$j:1}\n\
    \        fi\n      done\n\n      # Set the new character to the new letter\n \
    \     message=${message:0:i}${letter}${message:(i+1):$len}\n    fi\n  done\n\n\
    \  # Return the encoded message\n  echo \"$message\"\n}\n\ncandidate() {\n   \
    \ encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmp1phq8fej.sh: line 25: [: T: unary operator expected\n/tmp/tmp1phq8fej.sh:
    line 25: [: E: unary operator expected\n/tmp/tmp1phq8fej.sh: line 25: [: S: unary
    operator expected\n/tmp/tmp1phq8fej.sh: line 25: [: T: unary operator expected\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[a-z]' '[A-Z]' | tr '[a-z]' '[A-Z]'\n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  echo \"$1\" | awk '{\n    for (i=1; i<=NF;\
    \ i++) {\n      gsub(/e/, \"o\", $i);\n      gsub(/u/, \"a\", $i);\n      gsub(/i/,\
    \ \"l\", $i);\n      gsub(/o/, \"a\", $i);\n      gsub(/a/, \"u\", $i);\n    \
    \  gsub(/l/, \"i\", $i);\n      gsub(/k/, \"h\", $i);\n      gsub(/s/, \"g\",\
    \ $i);\n      gsub(/c/, \"s\", $i);\n      gsub(/m/, \"k\", $i);\n      gsub(/z/,\
    \ \"x\", $i);\n      gsub(/y/, \"z\", $i);\n      gsub(/x/, \"y\", $i);\n    \
    \  gsub(/z/, \"t\", $i);\n    }\n  }' | sed 's/oa/e/g;s/ua/a/g;s/iu/g;s/il/u/g;s/oh/a/g;s/ao/u/g;s/as/g;s/ic/s/g;s/ks/h/g;s/sg/g;s/cs/s/g;s/ms/k/g;s/zs/x/g;s/yz/z/g;s/xy/y/g;s/zt/t/g;s/e//g;s/i//g;s/l//g;s/k//g;s/s//g;s/c//g;s/m//g;s/z//g;s/y//g;s/x//g;s/t//g;s/[^a-zA-Z]//g'\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"sed: -e expression #1, char 29: unknown option to `s''\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouyAEIOUY\"\
    \n    local newmessage=\"\"\n    local length=${#message}\n\n    for ((i=0;i<length;i++));\
    \ do\n        if [[ ${message:$i:1} == \"a\" ]]; then\n            newmessage+=\"\
    ${message:$i:1}\"\n        elif [[ ${message:$i:1} == \"e\" ]]; then\n       \
    \     newmessage+=\"${message:$i:2}G\"\n        elif [[ ${message:$i:1} == \"\
    i\" ]]; then\n            newmessage+=\"${message:$i:2}G\"\n        elif [[ ${message:$i:1}\
    \ == \"o\" ]]; then\n            newmessage+=\"${message:$i:2}G\"\n        elif\
    \ [[ ${message:$i:1} == \"u\" ]]; then\n            newmessage+=\"${message:$i:2}G\"\
    \n        elif [[ ${message:$i:1} == \"y\" ]]; then\n            newmessage+=\"\
    ${message:$i:2}G\"\n        elif [[ ${message:$i:1} == \"A\" ]]; then\n      \
    \      newmessage+=\"${message:$i:1}\"\n        elif [[ ${message:$i:1} == \"\
    E\" ]]; then\n            newmessage+=\"${message:$i:2}G\"\n        elif [[ ${message:$i:1}\
    \ == \"I\" ]]; then\n            newmessage+=\"${message:$i:2}G\"\n        elif\
    \ [[ ${message:$i:1} == \"O\" ]]; then\n            newmessage+=\"${message:$i:2}G\"\
    \n        elif [[ ${message:$i:1} == \"U\" ]]; then\n            newmessage+=\"\
    ${message:$i:2}G\"\n        elif [[ ${message:$i:1} == \"Y\" ]]; then\n      \
    \      newmessage+=\"${message:$i:2}G\"\n        elif [[ ${message:$i:1} == \"\
    b\" ]]; then\n            newmessage+=\"B\"\n        elif [[ ${message:$i:1} ==\
    \ \"f\" ]]; then\n            newmessage+=\"F\"\n        elif [[ ${message:$i:1}\
    \ == \"k\" ]]; then\n            newmessage+=\"K\"\n        elif [[ ${message:$i:1}\
    \ == \"l\" ]]; then\n            newmessage+=\"L\"\n        elif [[ ${message:$i:1}\
    \ == \"n\" ]]; then\n            newmessage+=\"N\"\n        elif [[ ${message:$i:1}\
    \ == \"r\" ]]; then\n            newmessage+=\"R\"\n        elif [[ ${message:$i:1}\
    \ == \"s\" ]]; then\n            newmessage+=\"S\"\n        elif [[ ${message:$i:1}\
    \ == \"t\" ]]; then\n            newmessage+=\"T\"\n        elif [[ ${message:$i:1}\
    \ == \"w\" ]]; then\n            newmessage+=\"W\"\n        else\n           \
    \ newmessage+\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpr0562qbr.sh: line 65: syntax error near unexpected token `}''\n/tmp/tmpr0562qbr.sh:
    line 65: `}''\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local encodedMessage=\"\
    \"\n  for (( i=0; i<${#message}; i++ )); do\n    local letter=${message:i:1}\n\
    \    if (( $letter == A )); then\n      encodedMessage+=$letter\n    elif (( $letter\
    \ =~ [aeiouAEIOU] )); then\n      letter=${letter:2:1}\n      encodedMessage+=$letter\n\
    \    else \n      echo \"Bad letter '${letter}' when encoding '${message:i:1}'\"\
    \n      exit 1\n    fi\n  done\n  echo \"$encodedMessage\"\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local MESSAGE=\"$1\" # e.g. \"This is a\
    \ message\"\n\n    local MESSAGE=\"${MESSAGE}\" # e.g. \"This is a message\"\n\
    \    local MESSAGE=\"${MESSAGE//a/t}\" # e.g. \"ThiS a message\"\n    local MESSAGE=\"\
    ${MESSAGE//e/t}\" # e.g. \"ThisS a message\"\n    local MESSAGE=\"${MESSAGE//i/t}\"\
    \ # e.g. \"ThisS a message\"\n    local MESSAGE=\"${MESSAGE//o/t}\" # e.g. \"\
    ThisS a message\"\n    local MESSAGE=\"${MESSAGE//u/t}\" # e.g. \"ThisS a message\"\
    \n    local MESSAGE=\"${MESSAGE//Y/t}\" # e.g. \"ThisS a message\"\n    local\
    \ MESSAGE=\"${MESSAGE//X/t}\" # e.g. \"ThisS a message\"\n    local MESSAGE=\"\
    ${MESSAGE//Z/t}\" # e.g. \"ThisS a message\"\n    local MESSAGE=\"${MESSAGE//a/a}\"\
    \ # e.g. \"ThSS St SgSgCGG\"\n    local MESSAGE=\"${MESSAGE//e/e}\" # e.g. \"\
    ThSS St SgSgCGG\"\n    local MESSAGE=\"${MESSAGE//i/i}\" # e.g. \"ThSS St SgSgCGG\"\
    \n    local MESSAGE=\"${MESSAGE//o/o}\" # e.g. \"ThSS St SgSgCGG\"\n    local\
    \ MESSAGE=\"${MESSAGE//u/u}\" # e.g. \"ThSS St SgSgCGG\"\n    local MESSAGE=\"\
    ${MESSAGE//Y/y}\" # e.g. \"ThSS St SgSgCGG\"\n    local MESSAGE=\"${MESSAGE//X/x}\"\
    \ # e.g. \"ThSS St SgSgCGG\"\n    local MESSAGE=\"${MESSAGE//Z/z}\" # e.g. \"\
    ThSS St SgSgCGG\"\n    local MESSAGE=\"${MESSAGE//a/A}\" # e.g. \"ThSS St SgSgCGG\"\
    \n    local MESSAGE=\"${MESSAGE//e/E}\" # e.g. \"ThSS St SgSgCGG\"\n    local\
    \ MESSAGE=\"${MESSAGE//i/I}\" # e.g. \"ThSS St SgSgCGG\"\n    local MESSAGE=\"\
    ${MESSAGE//o/O}\" # e.g. \"ThSS St SgSgCGG\"\n    local MESSAGE=\"${MESSAGE//u/U}\"\
    \ # e.g. \"ThSS St SgSgCGG\"\n    local MESSAGE=\"${MESSAGE//y/Y}\" # e.g. \"\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local encodedMessage=${message,,}\n\
    \    local vowels=\"aeiouAEIOU\"\n    local vowelsCount=$(echo $vowels | grep\
    \ -c $2)\n    local vowelsInTheMessage=$(echo $encodedMessage | sed -e \"s/$2/$2/g\"\
    )\n    if [[ $vowelsCount -gt 0 ]]; then\n        local vowelsCountInTheMessage=$(echo\
    \ $vowelsInTheMessage | grep -c $2)\n        local letterCount=$(echo $vowelsInTheMessage\
    \ | wc -l)\n        if [[ $letterCount -gt 0 ]]; then\n            local letterCountInTheMessage=$(echo\
    \ $vowelsInTheMessage | sed -e \"s/$2/$3/g\")\n            if [[ $letterCountInTheMessage\
    \ -gt 1 ]]; then\n                local letterCountInTheMessage=$(echo $vowelsInTheMessage\
    \ | sed -e \"s/$2/$letterCountInTheMessage/g\")\n            fi\n        fi\n\
    \        encodedMessage=$(echo $encodedMessage | sed -e \"s/$2/$vowelsCountInTheMessage/g\"\
    )\n    else\n        encodedMessage=$(echo $encodedMessage | sed -e \"s/$2/$vowelsInTheMessage/g\"\
    )\n    fi\n    encodedMessage=$(echo $encodedMessage | sed -e \"s/$3/$1/g\")\n\
    \    echo $encodedMessage\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"Usage: grep [OPTION]... PATTERNS [FILE]...\nTry ''grep --help'' for more
    information.\nsed: -e expression #1, char 0: no previous regular expression\nsed:
    -e expression #1, char 0: no previous regular expression\nsed: -e expression #1,
    char 0: no previous regular expression\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    message=$1\n\n    if [[ $message != *[A-Za-z]\
    \ ]]; then\n        echo \"The function encode only accepts strings with all uppercase\
    \ letters.\"\n        return 1\n    fi\n\n    i=0\n    res=''\n    while [[ $i\
    \ -lt ${#message} ]]; do\n        if [[ $i -lt ${#message} ]]; then\n        \
    \    if [[ $i -lt ${#message} ]]; then\n                ch=$(expr ${i} + ${#message}\
    \ - 1)\n                res=\"$res${message[$i]}${message[ch]}\"\n           \
    \ else\n                res=\"$res${message[$i]}\"\n            fi\n        fi\n\
    \        res=\"$res$(expr ${i} + 1 \\* 2)${res}\"\n        (( i++ ))\n    done\n\
    \n    echo $res\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    # Store the message in lower case\n   \
    \ msg=$1\n    \n    # Replace all vowels into the english alphabet\n    msg=${msg//[aeiouAEIOU]/a}\n\
    \    \n    # Swap the case of all letters\n    msg=${msg//[a-z]/k}\n    \n   \
    \ # Swap the case of all vowels \n    msg=${msg//[aeiou]/q}\n    \n    # Return\
    \ encoded message\n    echo \"$msg\"\n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=\"$1\"\n    local i ichar k kchar\
    \ l lchar count num\n\n    msg=${msg,,}\n    msg=${msg,,}\n    msg=${msg,,}\n\
    \    msg=${msg,,}\n    msg=${msg,,}\n    msg=${msg,,}\n    msg=${msg,,}\n\n  \
    \  echo ${msg}\n    for((i=0;i<${#msg};i++))\n    do\n        ichar=${msg:i:1}\n\
    \        kchar=${msg:i+1:1}\n        echo ${ichar}\n        echo ${kchar}\n  \
    \      num=${ichar,,}\n        num=${num,,}\n        num=${num,,}\n        num=${num,,}\n\
    \        num=${num,,}\n        num=${num,,}\n        num=${num,,}\n        num=${num,,}\n\
    \        num=${num,,}\n        echo ${num}\n        echo ${kchar}\n        echo\
    \ ${ichar}\n        echo ${msg:i:1}\n        echo ${msg:i+1:1}\n        echo ${msg:i:2}\n\
    \        echo ${msg:i+2:1}\n        echo ${msg:i:3}\n        echo ${msg:i+3:1}\n\
    \        echo ${msg:i:4}\n        echo ${msg:i+4:1}\n        echo ${msg:i:5}\n\
    \        echo ${msg:i+5:1}\n        echo ${msg:i:6}\n        echo ${msg:i+6:1}\n\
    \        echo ${msg:i:7}\n        echo ${msg:i+7:1}\n        echo ${msg:i:8}\n\
    \        echo ${msg:i+8:1}\n        echo ${msg:i:9}\n        echo ${msg:i+9:1}\n\
    \        echo ${msg:i:10}\n        echo ${msg:i+10:1}\n        echo ${msg:i:11}\n\
    \        echo ${msg:i+11:1}\n        echo ${msg:i:12}\n        echo ${msg:i+12:1}\n\
    \        echo ${msg:i:13}\n        echo ${msg:i+13:1}\n        echo ${msg:i:14}\n\
    \        echo ${msg:i+14:1}\n        echo ${msg:i:15}\n        echo ${msg:i+15:1}\n\
    \        echo ${msg:i:16}\n        echo ${msg:i+16:1}\n        echo ${msg:i:17}\n\
    \        echo ${msg:i+17:1}\n        echo ${\n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmptqsrchu1.sh: line 96: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u y\"\n    local alphabet=\"a b c d e f g h i j k l m n o p q r s t u\
    \ v w x y z\"\n    for i in ${message}; do\n    \n        if [[ \"${i}\" == *[aeiou]*\
    \ ]]; then\n            \n            # first character in the vowel string is\
    \ 2 places ahead\n            # of the first vowel. \n            # For example,\
    \ \"u\" is the third vowel in \"uomo\" \n            # so we want the third \"\
    u\" in \"oumo\" to be capitalized. \n            upperCase=\"${vowels[*]:2:1}\"\
    \n            # now replace that vowel with the second character in \n       \
    \     # our upperCase string above. \n            message=\"${message//${i}/${upperCase}}\"\
    \n        fi\n    done\n    \n    # swap case for all other letters in the alphabet\n\
    \    for i in ${alphabet}; do\n        message=\"${message//${i}/${i:i:1}\"\n\
    \    done\n    echo \"$message\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2i3jgr55.sh: line 50: unexpected EOF while looking for matching
    `"\''\n/tmp/tmp2i3jgr55.sh: line 54: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n\tmsg=\"$1\" \n\tlet count=0\n\twhile [ $count\
    \ -lt ${#msg} ]; do\n\t\tlet count=$count+2 \n\t\tif [ ${msg:$count:1} = a ];\
    \ then \n\t\t\tmsg=${msg:0:$count}A\n\t\telif [ ${msg:$count:1} = e ]; then \n\
    \t\t\tmsg=${msg:0:$count}E\n\t\telif [ ${msg:$count:1} = i ]; then \n\t\t\tmsg=${msg:0:$count}I\n\
    \t\telif [ ${msg:$count:1} = o ]; then \n\t\t\tmsg=${msg:0:$count}O\n\t\telif\
    \ [ ${msg:$count:1} = u ]; then \n\t\t\tmsg=${msg:0:$count}U\n\t\telif [ ${msg:$count:1}\
    \ = e ]; then \n\t\t\tmsg=${msg:0:$count}E\n\t\telif [ ${msg:$count:1} = o ];\
    \ then \n\t\t\tmsg=${msg:0:$count}O\n\t\telif [ ${msg:$count:1} = i ]; then \n\
    \t\t\tmsg=${msg:0:$count}I\n\t\telif [ ${msg:$count:1} = a ]; then \n\t\t\tmsg=${msg:0:$count}A\n\
    \t\telse\n\t\t\tmsg=${msg:0:$count}${msg:$count:1}\n\t\tfi\n\tdone\n\techo $msg\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpzbv7w81q.sh: line 19: [: =: unary operator expected\n/tmp/tmpzbv7w81q.sh:
    line 21: [: =: unary operator expected\n/tmp/tmpzbv7w81q.sh: line 23: [: =: unary
    operator expected\n/tmp/tmpzbv7w81q.sh: line 25: [: =: unary operator expected\n/tmp/tmpzbv7w81q.sh:
    line 27: [: =: unary operator expected\n/tmp/tmpzbv7w81q.sh: line 29: [: =: unary
    operator expected\n/tmp/tmpzbv7w81q.sh: line 31: [: =: unary operator expected\n/tmp/tmpzbv7w81q.sh:
    line 33: [: =: unary operator expected\n/tmp/tmpzbv7w81q.sh: line 35: [: =: unary
    operator expected\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n\tlocal STRING=$1\n\tlocal LETTERS=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n\tlocal VOWELS=\"AEIOU\"\n\tlocal ENGLISH_LETTERS=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n\tlocal ENGLISH_VOWELS=\"AEIOUaeiouy\"\n\tlocal ENGLISH_LETTERS_INDEX=`echo\
    \ $ENGLISH_LETTERS | tr \" \" \"\\n\" | grep -i \"^$STRING$\"`\n\tlocal ENGLISH_VOWELS_INDEX=`echo\
    \ $ENGLISH_VOWELS | tr \" \" \"\\n\" | grep -i \"^$STRING$\"`\n\tif [ -z \"$ENGLISH_LETTERS_INDEX\"\
    \ ]; then\n\t\techo \"Illegal input: $STRING\"\n\t\techo \"A legal input must\
    \ contain only English letters.\"\n\t\texit 1\n\tfi\n\tlocal ENGLISH_LETTERS_COMMIT=`echo\
    \ $ENGLISH_LETTERS | cut -c-$ENGLISH_LETTERS_INDEX`\n\tlocal ENGLISH_VOWELS_COMMIT=`echo\
    \ $ENGLISH_VOWELS | cut -c-$ENGLISH_VOWELS_INDEX`\n\tENGLISH_LETTERS_COMMIT=`echo\
    \ $ENGLISH_LETTERS_COMMIT | tr $ENGLISH_VOWELS_COMMIT $ENGLISH_LETTERS_COMMIT`\n\
    \tENGLISH_VOWELS_COMMIT=`echo $ENGLISH_VOWELS_COMMIT | tr $ENGLISH_VOWELS_COMMIT\
    \ $ENGLISH_LETTERS_COMMIT`\n\techo $ENGLISH_LETTERS_COMMIT\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local str=$1\n    local alphabet='abcdefghijklmnopqrstuvwxyz'\n\
    \    local vowels=\"aeiouyAEIOUY\"\n    local new_str=\"\"\n    for i in $str;\
    \ do\n        let \"index=index($alphabet, $i)+1\"\n        if [ $index -lt 5\
    \ ]; then\n            new_str+=$i\n        else\n            new_str+=$alphabet[$((index+2))]\n\
    \        fi\n    done\n    echo $new_str\n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp62dgo_ge.sh: line 20: let: index=index(abcdefghijklmnopqrstuvwxyz,
    TEST)+1: syntax error in expression (error token is "(abcdefghijklmnopqrstuvwxyz,
    TEST)+1")\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local a=(a b c d e f g h i j k l m n o p\
    \ q r s t u v w x y z)\n  local b=(a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z)\n  local c=(a b c d e f g h i j k l m n o p q r s t u v w x y z)\n\
    \  local d=(a b c d e f g h i j k l m n o p q r s t u v w x y z)\n  local e=(a\
    \ b c d e f g h i j k l m n o p q r s t u v w x y z)\n  local f=(a b c d e f g\
    \ h i j k l m n o p q r s t u v w x y z)\n  local g=(a b c d e f g h i j k l m\
    \ n o p q r s t u v w x y z)\n  local h=(a b c d e f g h i j k l m n o p q r s\
    \ t u v w x y z)\n  local i=(a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z)\n  local j=(a b c d e f g h i j k l m n o p q r s t u v w x y z)\n  local\
    \ k=(a b c d e f g h i j k l m n o p q r s t u v w x y z)\n  local l=(a b c d\
    \ e f g h i j k l m n o p q r s t u v w x y z)\n  local m=(a b c d e f g h i j\
    \ k l m n o p q r s t u v w x y z)\n  local n=(a b c d e f g h i j k l m n o p\
    \ q r s t u v w x y z)\n  local o=(a b c d e f g h i j k l m n o p q r s t u v\
    \ w x y z)\n  local p=(a b c d e f g h i j k l m n o p q r s t u v w x y z)\n\
    \  local q=(a b c d e f g h i j k l \n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpnsxpyixi.sh: line 34: syntax error near unexpected token `(''\n/tmp/tmpnsxpyixi.sh:
    line 34: `candidate() {''\n/tmp/tmpnsxpyixi.sh: line 35: encode: command not found\n/tmp/tmpnsxpyixi.sh:
    line 36: syntax error near unexpected token `}''\n/tmp/tmpnsxpyixi.sh: line 36:
    `}''\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local letters=$(echo\
    \ \"$message\" | sed -e 's/\\(.\\)/\\U\\1/g' -e 's/[aeiou]/\\n/g')\n    echo $message\
    \ | sed -e 's/\\(.\\)/\\L\\1/g' -e 's/[AEIOU]/\\n/g' -e \"s/$letters/$letters\\\
    n/g\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\"\
    \ ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a\
    \ message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt\
    \ tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local input=\"${1}\"\n    local output=\"\
    \"\n    local i\n    local vowel=\"a\"\n    local vowel_index=1\n    for (( i=0;\
    \ i<${#input}; i++ )); do\n        if [[ ${input:$i:1} == \"a\" || ${input:$i:1}\
    \ == \"e\" || ${input:$i:1} == \"i\" || ${input:$i:1} == \"o\" || ${input:$i:1}\
    \ == \"u\" ]]; then\n            (( vowel_index++ ))\n        fi\n    done\n \
    \   local vowel2=\"a\"\n    local vowel_index2=1\n    for (( i=0; i<${#input};\
    \ i++ )); do\n        if [[ ${input:$i:1} == \"a\" || ${input:$i:1} == \"e\" ||\
    \ ${input:$i:1} == \"i\" || ${input:$i:1} == \"o\" || ${input:$i:1} == \"u\" ]];\
    \ then\n            if [[ \"${vowel_index}\" = \"${vowel_index2}\" ]]; then\n\
    \                (( vowel_index2++ ))\n                (( vowel_index-- ))\n \
    \           fi\n        fi\n    done\n    local vowel3=\"a\"\n    local vowel_index3=1\n\
    \    for (( i=0; i<${#input}; i++ )); do\n        if [[ ${input:$i:1} == \"a\"\
    \ || ${input:$i:1} == \"e\" || ${input:$i:1} == \"i\" || ${input:$i:1} == \"o\"\
    \ || ${input:$i:1} == \"u\" ]]; then\n            if [[ \"${vowel_index}\" = \"\
    ${vowel_index2}\" ]]; then\n                if [[ \"${vowel_index}\" = \"${vowel_index3}\"\
    \ ]]; then\n                    (( vowel_index3++ ))\n                else\n \
    \                   (( vowel_index3++ ))\n                fi\n            fi\n\
    \        fi\n    done\n    local vowel4=\"a\"\n    local vowel_index4=1\n    for\
    \ (( i=0; i<${#input}; i++ )); do\n        if [[ ${input:$i:1} == \"a\" || ${input:$i:1}\
    \ == \"e\" || ${input:$i:1} == \"i\" || ${input:$i:1} == \"o\" || ${input:$i:1}\
    \ == \"u\" ]]; then\n            if [[ \"${vowel_index}\" = \"${vowel_index2}\"\
    \ ]]; then\n                if [[ \"${vowel_index}\" = \"${vowel_index3}\" ]];\
    \ then\n                    if [[ \"${vowel_index}\" = \"${vowel_index4}\" ]];\
    \ then\n                        (( vowel_index4++ ))\n                    else\n\
    \                        (( vowel_index4++ ))\n                    fi\n      \
    \          else\n                    (( vowel_index4++ ))\n                fi\n\
    \            fi\n        fi\n    done\n    for \n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmptzrlp3pr.sh: line 65: syntax error near unexpected token `newline''\n/tmp/tmptzrlp3pr.sh:
    line 65: `    for ''\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local encodedMessage=${message//a/T}\n\
    \  encodedMessage=${encodedMessage//e/E}\n  encodedMessage=${encodedMessage//i/I}\n\
    \  encodedMessage=${encodedMessage//o/O}\n  encodedMessage=${encodedMessage//u/U}\n\
    \  encodedMessage=${encodedMessage//h/H}\n  encodedMessage=${encodedMessage//c/C}\n\
    \  encodedMessage=${encodedMessage//s/S}\n  encodedMessage=${encodedMessage//v/V}\n\
    \  encodedMessage=${encodedMessage//x/X}\n  encodedMessage=${encodedMessage//w/W}\n\
    \  encodedMessage=${encodedMessage//g/G}\n  encodedMessage=${encodedMessage//e/E}\n\
    \  encodedMessage=${encodedMessage//t/T}\n  encodedMessage=${encodedMessage//p/P}\n\
    \  encodedMessage=${encodedMessage//b/B}\n  encodedMessage=${encodedMessage//z/Z}\n\
    \  encodedMessage=${encodedMessage//y/Y}\n  encodedMessage=${encodedMessage//d/D}\n\
    \  encodedMessage=${encodedMessage//f/F}\n  encodedMessage=${encodedMessage//z/Z}\n\
    \  encodedMessage=${encodedMessage//k/K}\n  encodedMessage=${encodedMessage//l/L}\n\
    \  encodedMessage=${encodedMessage//m/M}\n  encodedMessage=${encodedMessage//n/N}\n\
    \  encodedMessage=${encodedMessage//g/G}\n  encodedMessage=${encodedMessage//o/O}\n\
    \  encodedMessage=${encodedMessage//p/P}\n  encodedMessage=${encodedMessage//b/B}\n\
    \  encodedMessage=${encodedMessage//m/M}\n  encodedMessage=${encodedMessage//n/N}\n\
    \  encodedMessage=${encodedMessage//h/H}\n  encodedMessage=${encodedMessage//d/D}\n\
    \  encodedMessage=${encodedMessage//f/F}\n  encodedMessage=${encodedMessage//z/Z}\n\
    \  encodedMessage=${encodedMessage//y/Y}\n  encodedMessage=${encodedMessage//c/C}\n\
    \  encodedMessage=${encodedMessage//t/T}\n  encodedMessage=${encodedMessage//p/P}\n\
    \  encodedMessage=${encodedMessage//s/S}\n  encodedMessage=${encodedMessage//v/V}\n\
    \  encodedMessage=${encodedMessage//w/W}\n  encodedMessage=${encodedMessage//b/B}\n\
    \  encodedMessage=${encodedMessage//m/M}\n  encodedMessage=${encodedMessage//n/N}\n\
    \  encodedMessage=${encodedMessage//h/\n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1oo991h1.sh: line 78: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  # $1 is a string\n  local message=$1\n  local\
    \ enc=''\n  local c=0\n  while [ \"$message\" != \"\" ]; do\n    local c=0\n \
    \   local i=1\n    local k\n    local v\n    while [[ $i -lt $((${#message}))\
    \ ]]; do\n      k=$i\n      v=`echo \"$message\" | sed \"s/./\\U$((${#k})-1)/ig\"\
    `\n      message=${message#*${k}}\n      message=${message%${k}}\n      if [ \"\
    $v\" != \"\" ]; then\n        c=$((${c}+1))\n        if [ \"$c\" -gt 2 ]; then\n\
    \          enc+=\"${v:0:1}\"\n        else\n          enc+=\"${v}${v:1:1}\"\n\
    \        fi\n      else\n        enc+=\"${v:0:1}\"\n      fi\n      i=$((${i}+1))\n\
    \    done\n  done\n  echo \"$enc\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=41>
  stdout: <_io.BufferedReader name=39>
  timestamp: 1660078680
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    echo \"$1\" | tr [:lower:] [:upper:] |\
    \ tr \"AEIOUaeiou\" \"AEIOUaeiouAeiou\" | sed -e 's/[AEIOUaeiouAEIOU]/A/g' | sed\
    \ -e 's/[AEIOUaeiouAEIOU]/E/g' | sed -e 's/[AEIOUaeiouAEIOU]/I/g' | sed -e 's/[AEIOUaeiouAEIOU]/O/g'\
    \ | sed -e 's/[AEIOUaeiouAEIOU]/U/g' | sed -e 's/[AEIOUaeiouAEIOU]/a/g' | sed\
    \ -e 's/[AEIOUaeiouAEIOU]/e/g' | sed -e 's/[AEIOUaeiouAEIOU]/i/g' | sed -e 's/[AEIOUaeiouAEIOU]/o/g'\
    \ | sed -e 's/[AEIOUaeiouAEIOU]/u/g' | sed -e 's/A/e/g' | sed -e 's/E/a/g' | sed\
    \ -e 's/I/i/g' | sed -e 's/O/o/g' | sed -e 's/U/u/g'\n}\n\ncandidate() {\n   \
    \ encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  local message=$msg\n  local\
    \ msgLetters=$msg\n  local msgLettersReverse=${msg//[a-z]/}\n  local msgLettersReverseLetters=$msgLettersReverse\n\
    \  local msgLettersReverseLettersLower=$msgLettersReverseLetters\n  local msgLettersReverseLettersLowerLower=$msgLettersReverseLettersLower\n\
    \  local msgLettersReverseLettersLowerLowerLower=$msgLettersReverseLettersLowerLowerLower\n\
    \  local msgLettersReverseLettersLowerLowerLowerLowerUpper=$msgLettersReverseLettersLowerLowerLowerUpper\n\
    \  local msgLettersReverseLettersLowerLowerLowerUpperUpperLower=$msgLettersReverseLettersLowerLowerLowerUpperLower\n\
    \  local msgLettersReverseLettersLowerLowerLowerUpperLowerUpperUpper=$msgLettersReverseLettersLowerLowerLowerUpperLowerUpper\n\
    \  local msgLettersReverseLettersLowerLowerLowerUpperLowerUpperUpperUpper=$msgLettersReverseLettersLowerLowerLowerUpperLowerUpperUpper\n\
    \  local msgLettersReverseLettersLowerLowerLowerUpperLowerUpperUpperUpper=$msgLettersReverseLettersLowerLowerLowerUpperLowerUpperUpperUpper\n\
    \  local msgLettersReverseLettersLowerLowerLowerUpperLowerUpperUpperUpperUpper=$msgLettersReverseLettersLowerLowerLowerUpperLowerUpperUpperUpperUpper\n\
    \  local msgLettersReverseLettersLowerLowerLowerUpperLowerUpperUpperUpperUpperUpper=$msgLettersReverseLettersLowerLowerLowerUpperLowerUpperUpperUpperUpper\n\
    \  local msgLettersReverseLettersLowerLowerLowerUpperLowerUpperUpperUpperUpper=$msgLettersReverseLettersLowerLowerLowerUpperLowerUpperUpperUpperUpper\n\
    \  local msgLettersReverseLettersLowerLowerLowerUpperLowerUpperUpperUpperUpperUpper=$msgLettersReverseLettersLowerLowerLowerUpperLowerUpperUpperUpperUpperUpper\n\
    \  local msgLettersReverseLettersLowerLowerLowerUpperLowerUpperUpperUpperUpperUpperUpper=$msgLettersReverseLettersLowerLowerLowerUpperLowerUpperUpperUpperUpperUpperUpper\n\
    \  local msgLettersReverseLettersLowerLowerLowerUpperLowerUpperUpperUpperUpperUpperUpperUpper=$msgLettersReverseLettersLowerLowerLowerUpperLowerUpperUpperUpperUpperUpperUpper\n\
    \  local msgLettersReverseLettersLowerLowerLowerUpperLowerUpperUpperUpperUpperUpperUpperUpper=$msgLettersReverseLettersLowerLowerLowerUpperLowerUpperUpperUpperUpperUpperUpper\n\
    \  local msgLettersReverseLetters\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"a\
    \ e i o u\"\n    local map=( $(for letter in ${message}; do echo $vowels; done)\
    \ )\n    for letter in ${message}; do\n        local idx=0\n        while [[ ${map[$idx]}\
    \ != $letter ]]; do\n            idx=$(($idx+1))\n        done\n        local\
    \ idx2=$(($idx+2))\n        if [[ ${map[$idx2]} != ${map[$idx]} ]]; then\n   \
    \         local tmp_val=${map[$idx]} \n            map[$idx]=${map[$idx2]}\n \
    \           map[$idx2]=${tmp_val}\n        fi\n    done\n    echo \"${map[*]}\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=27>
  stdout: <_io.BufferedReader name=22>
  timestamp: 1660078680
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    echo $1 | tr [a-z] [A-Z] | tr [aeiou] [aAeEiIoOuU]\
    \ | sed -e 's/\\(.\\)$/\\1\\1/' -e 's/a/A/g' -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g'\
    \ -e 's/u/U/g' -e 's/\\(.\\)\\(.\\)/\\1\\2 /g'\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  # Your code goes here\n  message=$1\n  for\
    \ i in $message; do\n    \n    case \"$i\" in\n      a|e|i|o|u) n=$i\n       \
    \       n1=$(echo \"$n\" | awk '{print $1}')\n              n2=$(echo \"$n\" |\
    \ awk '{print $2}')\n              echo \"${n1:0:1}${n2:0:1}\"\n      ;;\n   \
    \   b|c|d|f|g|h|j|k|l|m|n|o|p|q|r|s|t|v|w|x|z) l=$i\n              l1=$(echo \"\
    $l\" | awk '{print $1}')\n              l2=$(echo \"$l\" | awk '{print $2}')\n\
    \              echo \"${l1:0:1}${l2:0:1}\"\n      ;;\n      *) echo \"${i:0:1}\"\
    \n    esac\n  done\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message \n    message=$(echo $1 |\
    \ tr [A-Z] [A-Z]) \\\n    echo ${message//a/A}\n    echo ${message//e/E}\n   \
    \ echo ${message//i/I}\n    echo ${message//o/O}\n    echo ${message//u/U}\n \
    \   echo ${message//e/E}\n    echo ${message//i/I}\n    echo ${message//o/O}\n\
    \    echo ${message//u/U}\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local i\n  local encoded\n\
    \n  encoded=$(echo $message | sed 's/^/~/g')\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"${encoded^^}\"\n\n  encoded=\"\
    ${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n  encoded=\"${encoded^^}\"\n\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n  encoded=\"${encoded^^}\"\n\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n  encoded=\"${encoded^^}\"\n\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n  encoded=\"${encoded^^}\"\n\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n\n  encoded=\"${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n  encoded=\"${encoded^^}\"\n\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n\n  encoded=\"${encoded^^}\"\n  encoded=\"${encoded^^}\"\n  encoded=\"\
    ${encoded^^}\"\n  encoded=\"${encoded^^}\"\n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  message=\"$1\"\n  # Write a function that\
    \ takes a message and encodes it in this way.\n  # Assume only letters. \n  #\
    \ Examples:\n  # >>> $(encode \"test\")\n  # \"TGST\"\n  # >>> $(encode \"This\
    \ is a message\")\n  # \"tHKS KS C MGSSCGG\"\n  #\n  # $1 is a string\n  echo\
    \ $(echo \"$1\" | sed -e 's/^./\\L&/g' -e 's/\\b\\([AEIOUaeiou]\\)/\\1/g' -e 's/\\\
    ([aeiou]\\)\\([aeiou]\\)/\\1\\2/g')\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n   local message=$1\n   local outstr\n   \n\
    \   # Define the map of lower case letters to upper case letters \n   local lower2upper=\"\
    abcdefghijklmnopqrstuvwxyz\" \n   local upper2lower=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n   \n   for ((i=0; i<${#message}; i++)); do\n      lower=${message:i:1}\n  \
    \    if [ \"$lower\" != \"$lower\" ]; then\n        outstr=$outstr${lower:0:1}\n\
    \      else\n        outstr=$outstr${lower2upper[$((i-1))]}\n      fi\n   done\n\
    \   echo \"$outstr\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpwc67t58x.sh: line 27: lower2upper: bad array subscript\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    message=$1\n    temp=${message}\n    temp=${temp,,}\n\
    \    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n\
    \    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n\
    \    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n\
    \    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n\
    \    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n\
    \    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n\
    \    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n\
    \    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n\
    \    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n\
    \    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n\
    \    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n\
    \    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n\
    \    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n\
    \    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n\
    \    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n\
    \    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n\
    \    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,}\n\
    \    temp=${temp,,}\n    temp=${temp,,}\n    temp=${temp,,\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmplvx3w79u.sh: line 105: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    echo \"$1\" | tr '[a-z]' '[A-Z]' | sed\
    \ -r 's/(.)\\1{2,}/\\U\\1/g' | tr '[A-Z]' '[a-z]' \n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=\"$1\"\n  local result=\"\"\n \
    \ local vowels=\"a e i o u y\" # Define the set of vowels we'll use in the message\n\
    \  local alphabet=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n  local\
    \ avowels=\" \" \n  local bvowels=\" \" \n  local cvowels=\" \" \n  local dvowels=\"\
    \ \" \n  local evowels=\" \" \n  local fvowels=\" \" \n  local gvowels=\" \" \n\
    \  local hvowels=\" \" \n  local ivowels=\" \" \n  local jvowels=\" \" \n  local\
    \ kvowels=\" \" \n  local lvowels=\" \" \n  local mvowels=\" \" \n  local nvowels=\"\
    \ \" \n  local ovowels=\" \" \n  local pvowels=\" \" \n  local qvowels=\" \" \n\
    \  local rvowels=\" \" \n  local svowels=\" \" \n  local tvowels=\" \" \n  local\
    \ uvowels=\" \" \n  local vvowels=\" \" \n  local wvowels=\" \" \n  local xvowels=\"\
    \ \" \n  local yvowels=\" \" \n  local zvowels=\" \"\n  \n  # Replace all vowels\
    \ in the message with letter that appears 2 places ahead of vowel \n  msg=\"${msg//[aeiouy]${avowels}${bvowels}${cvowels}${dvowels}${evowels}${fvowels}${gvowels}${hvowels}${ivowels}${jvowels}${kvowels}${lvowels}${mvowels}${nvowels}${ovowels}${pvowels}${qvowels}${rvowels}${svowels}${tvowels}${uvowels}${vvowels}${wvowels}${xvowels}${yvowels}${zvowels}}\"\
    \n  # Replace all vowels in the message with letter that appears 3 places ahead\
    \ of vowel \n  msg=\"${msg//[aeiouy]${avowels}${bvowels}${cvowels}${dvowels}${evowels}${fvowels}${gvowels}${hvowels}${ivowels}${jvowels}${kvowels}${lvowels}${mvowels}${nvowels}${ovowels}${pvowels}${qvowels}${rvowels}${svowels}\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp72lpcnnp.sh: line 62: unexpected EOF while looking for matching
    `"\''\n/tmp/tmp72lpcnnp.sh: line 66: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=\"$1\"\n    \n    local first=$(echo\
    \ $message | sed -r 's/(.)/ \\U\\1/')\n    local second=$(echo $message | sed\
    \ -r 's/(.)/ \\U\\2/' | sed -r 's/(.)/ \\U\\1\\1/')\n    local third=$(echo $message\
    \ | sed -r 's/(.)/ \\U\\1\\2/' | sed -r 's/(.)/ \\U\\1\\1\\1/')\n    local fourth=$(echo\
    \ $message | sed -r 's/(.)/ \\U\\1\\2\\2/' | sed -r 's/(.)/ \\U\\1\\1\\2\\1/')\n\
    \    local fifth=$(echo $message | sed -r 's/(.)/ \\U\\1\\2\\3/' | sed -r 's/(.)/\
    \ \\U\\1\\1\\2\\3/' | sed -r 's/(.)/ \\U\\1\\1\\2\\3/' | sed -r 's/(.)/ \\U\\\
    1\\1\\2\\3/' | sed -r 's/(.)/ \\U\\1\\1\\2\\3/' | sed -r 's/(.)/ \\U\\1\\1\\2\\\
    3/' | sed -r 's/(.)/ \\U\\1\\1\\2\\3/' | sed -r 's/(.)/ \\U\\1\\1\\2\\3/' | sed\
    \ -r 's/(.)/ \\U\\1\\1\\2\\3/' | sed -r 's/(.)/ \\U\\1\\1\\2\\3/' | sed -r 's/(.)/\
    \ \\U\\1\\1\\2\\3/' | sed -r 's/(.)/ \\U\\1\\1\\2\\3/' | sed -r 's/(.)/ \\U\\\
    1\\1\\2\\3/' | sed -r 's/(.)/ \\U\\1\\1\\2\\3/' | sed -r 's/(.)/ \\U\\1\\1\\2\\\
    3/' | sed -r 's/(.)/ \\U\\1\\1\\2\\3/' | sed -r 's/(.)/ \\U\\1\\1\\2\\3/' | sed\
    \ -r 's/(.)/ \\U\\1\\1\\2\\3/' | sed -r 's/(.)/ \\U\\1\\1\\2\\3/' | sed -r 's/(.)/\
    \ \\U\\1\\1\\2\\3/' | sed -r 's/(.)/ \\U\\1\\1\\2\\3/' | sed -r 's/(.)/ \n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpvzvd_mkt.sh: line 21: unexpected EOF while looking for matching
    `''''\n/tmp/tmpvzvd_mkt.sh: line 38: syntax error: unexpected end of file\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local str=$1\n  local vowels=\"a e i o u\
    \ y A E I O U\"\n  local output=\"\"\n  local i=0 \n  local j=0\n  for (( i; i<${#str};\
    \ i++ )) \n  do \n    if [[ ${str:$i:1} =~ $vowels ]]; then\n      for (( j; j\
    \ <= i-1; j++ ))\n      do \n        local a=${str:$j:1}\n        local b=${str:$j:2}\n\
    \        output+=\"${a:0:1}${b:0:1}\"\n        ((j++))\n      done\n    else\n\
    \      output+=\"${str:$i:1}\"\n    fi\n  done\n  echo \"$output\"\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | sed 's/[AEIOUaeiou]/./g' | sed 's/./&\\L\\1/' | sed 's/^/T/g' | sed 's/$/K/g'\
    \ | sed 's/[AEIOUaeiou]/./g' | sed 's/./&\\L\\1/' | sed 's/^/G/g' | sed 's/$/S/g'\
    \ | sed 's/[AEIOUaeiou]/./g' | sed 's/./&\\L\\1/' | sed 's/^/M/g' | sed 's/$/C/g'\
    \ | sed 's/[AEIOUaeiou]/./g' | sed 's/./&\\L\\1/' | sed 's/^/K/g' | sed 's/$/G/g'\
    \ | sed 's/[AEIOUaeiou]/./g' | sed 's/./&\\L\\1/' | sed 's/^/S/g' | sed 's/$/G/g'\
    \ | sed 's/[AEIOUaeiou]/./g' | sed 's/./&\\L\\1/' | sed 's/^/K/g' | sed 's/$/H/g'\
    \ | sed 's/[AEIOUaeiou]/./g' | sed 's/./&\\L\\1/' | sed 's/^/G/g' | sed 's/$/G/g'\
    \ | sed 's/[AEIOUaeiou]/./g' | sed 's/./&\\L\\1/' | sed 's/^/S/g' | sed 's/$/G/g'\
    \ | sed 's/[AEIOUaeiou]/./g' | sed 's/./&\\L\\1/' | sed 's/^/G/g' | sed 's/$/G/g'\
    \ | sed 's/[AEIOUaeiou]/./g' | sed 's/./&\\L\\1/' | sed 's/^/S/g' | sed 's/$/G/g'\
    \ | sed 's/[AEIOUaeiou]/./g' | sed 's/./&\\L\\1/' | sed 's/^/M/g' | sed 's/$/C/g'\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"sed: -e expression #1, char 10: invalid reference \\1 on `s'' command''s
    RHS\nsed: -e expression #1, char 10: invalid reference \\1 on `s'' command''s
    RHS\nsed: -e expression #1, char 10: invalid reference \\1 on `s'' command''s
    RHS\nsed: -e expression #1, char 10: invalid reference \\1 on `s'' command''s
    RHS\nsed: -e expression #1, char 10: invalid reference \\1 on `s'' command''s
    RHS\nsed: -e expression #1, char 10: invalid reference \\1 on `s'' command''s
    RHS\nsed: -e expression #1, char 10: invalid reference \\1 on `s'' command''s
    RHS\nsed: -e expression #1, char 10: invalid reference \\1 on `s'' command''s
    RHS\nsed: -e expression #1, char 10: invalid reference \\1 on `s'' command''s
    RHS\nsed: -e expression #1, char 10: invalid reference \\1 on `s'' command''s
    RHS\nsed: -e expression #1, char 10: invalid reference \\1 on `s'' command''s
    RHS\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  message=${message//[a-z]/t}\n\
    \  message=${message//[aeiou]/h}\n  message=${message//[aeiou]/k}\n  message=${message//[aeiou]/j}\n\
    \  message=${message//[aeiou]/l}\n  message=${message//[aeiou]/m}\n  message=${message//[aeiou]/n}\n\
    \  message=${message//[aeiou]/o}\n  message=${message//[aeiou]/p}\n  message=${message//[aeiou]/q}\n\
    \  message=${message//[aeiou]/r}\n  message=${message//[aeiou]/s}\n  message=${message//[aeiou]/t}\n\
    \  message=${message//[aeiou]/u}\n  message=${message//[aeiou]/v}\n  message=${message//[aeiou]/x}\n\
    \  message=${message//[aeiou]/y}\n  message=${message//[aeiou]/z}\n  message=${message//[aeiou]/a}\n\
    \  message=${message//[aeiou]/e}\n  message=${message//[aeiou]/i}\n  message=${message//[aeiou]/o}\n\
    \  message=${message//[aeiou]/u}\n  message=${message//[aeiou]/y}\n  message=${message//[aeiou]/o}\n\
    \  message=${message//[aeiou]/p}\n  message=${message//[aeiou]/q}\n  message=${message//[aeiou]/r}\n\
    \  message=${message//[aeiou]/s}\n  message=${message//[aeiou]/t}\n  message=${message//[aeiou]/u}\n\
    \  message=${message//[aeiou]/y}\n  message=${message//[aeiou]/u}\n  message=${message//[aeiou]/p}\n\
    \  message=${message//[aeiou]/q}\n  message=${message//[aeiou]/r}\n  message=${message//[aeiou]/s}\n\
    \  message=${message//[aeiou]/t}\n  message=${message//[aeiou]/v}\n  message=${message//[aeiou]/x}\n\
    \  message=${message//[aeiou]/z}\n  message=${message//[aeiou]/a}\n  message=${message//[ae\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8lseue5y.sh: line 75: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local messageEncoded=\"\
    \"\n    local messageUpper=$(echo $message | tr '[:upper:]' '[:lower:]')\n   \
    \ local messageLower=$(echo $message | tr '[:lower:]' '[:upper:]')\n    local\
    \ vowels=\"AEIOUaeiou\"\n    local replacements=\"AEIOUaeiou\"\n    local j=1\n\
    \    local i\n    local nextVowel\n    local nextChar\n    \n    for (( i=1; i<${#messageLower};\
    \ i++ )); do\n        nextChar=$(echo ${messageLower:$i:1})\n        nextVowel=$(echo\
    \ ${vowels:$j:1})\n        \n        if [[ ${nextChar} == ${nextVowel} ]]; then\n\
    \            messageEncoded=\"${messageEncoded}${nextChar:0:1}\"\n        else\n\
    \            messageEncoded=\"${messageEncoded}${nextChar:0:1}${nextChar:1:1}\"\
    \n            messageEncoded=\"${messageEncoded}${nextVowel}\"\n        fi\n \
    \       j=$(( j + 1 ))\n    done\n    \n    echo $messageEncoded\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local s=\"$1\"\n    local t\n    local\
    \ len\n    local p\n    local i\n    local vowel\n    local c\n    local e\n \
    \   local j\n    local g\n    local h\n    local f\n    local l\n    local n\n\
    \    local m\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local i\n    local j\n    local k\n    local l\n    local m\n\
    \    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n\
    \    local t\n    local u\n    local v\n    local w\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local \n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n\tlocal message=$1\n\tlocal count=1\n\tlocal\
    \ count2=1\n\tlocal count3=1\n\tlocal count4=1\n\tlocal count5=1\n\tlocal count6=1\n\
    \tlocal count7=1\n\tlocal count8=1\n\tlocal count9=1\n\tlocal count10=1\n\tlocal\
    \ count11=1\n\tlocal count12=1\n\tlocal count13=1\n\tlocal count14=1\n\tlocal\
    \ count15=1\n\tlocal count16=1\n\tlocal count17=1\n\tlocal count18=1\n\tlocal\
    \ count19=1\n\tlocal count20=1\n\tlocal count21=1\n\tlocal count22=1\n\tlocal\
    \ count23=1\n\tlocal count24=1\n\tlocal count25=1\n\tlocal count26=1\n\tlocal\
    \ count27=1\n\tlocal count28=1\n\tlocal count29=1\n\tlocal count30=1\n\tlocal\
    \ count31=1\n\tlocal count32=1\n\tlocal count33=1\n\tlocal count34=1\n\tlocal\
    \ count35=1\n\tlocal count36=1\n\tlocal count37=1\n\tlocal count38=1\n\tlocal\
    \ count39=1\n\tlocal count40=1\n\tlocal count41=1\n\tlocal count42=1\n\tlocal\
    \ count43=1\n\tlocal count44=1\n\tlocal count45=1\n\tlocal count46=1\n\tlocal\
    \ count47=1\n\tlocal count48=1\n\tlocal count49=1\n\tlocal count50=1\n\tlocal\
    \ count51=1\n\tlocal count52=1\n\tlocal count53=1\n\tlocal count54=1\n\tlocal\
    \ count55=1\n\tlocal count56=1\n\tlocal count57=1\n\tlocal count58=1\n\tlocal\
    \ count59=1\n\tlocal count60=1\n\tlocal count61=1\n\tlocal count62=1\n\tlocal\
    \ count63=1\n\tlocal count64=1\n\tlocal count65=1\n\tlocal count66=1\n\tlocal\
    \ count67=1\n\tlocal count68=1\n\tlocal count69=1\n\tlocal count70=1\n\tlocal\
    \ count71=1\n\tlocal count72=1\n\tlocal count73=1\n\tlocal count74=1\n\tlocal\
    \ count75=1\n\tlocal count76=1\n\tlocal count77=1\n\tlocal count78=1\n\tlocal\
    \ count79=1\n\tlocal count80=1\n\tlocal count81=1\n\tlocal count82=1\n\tlocal\
    \ count83=1\n\tlocal count84=1\n\tlocal count\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=\"$1\"\n    # Write code here.\n\
    \    local out\n    for (( i = 0; i <= ${#msg}; i++ )); do\n        out=${msg:i:1}\n\
    \        out=${out:0:1}\n        out=${out:0:1}\n        echo \"$out\"\n    done\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  # Use a while loop to\
    \ find the vowels\n  local vowels=\"\"\n  local output=\"\"\n  local count=0\n\
    \  local currentChar=\"\"\n  while read -r char\n  do\n    if [ \"$char\" == \"\
    a\" -o \"$char\" == \"e\" -o \"$char\" == \"i\" -o \"$char\" == \"o\" -o \"$char\"\
    \ == \"u\" ]\n    then\n      currentChar=$char\n    elif [ \"$char\" == \"A\"\
    \ -o \"$char\" == \"E\" -o \"$char\" == \"I\" -o \"$char\" == \"O\" -o \"$char\"\
    \ == \"U\" ]\n    then\n      currentChar=$(echo $char | sed 's/[AaEeIiOoUu]/[AEIIOU]/g')\n\
    \      vowels=$vowels$currentChar\n      count=$((count+1))\n      if [ $count\
    \ -eq 2 ]; then\n        vowels=$vowels$(echo $vowels | sed 's/[AEIIOU]/[A]/g')\n\
    \        count=0\n      fi\n    fi\n  done <<< $message\n  echo \"$vowels\"\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local alphabet=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n  local length=${#message}\n  local code=\"\"\n  local i\n  for i in $(seq 1\
    \ $length)\n  do\n    local c=${message:$i:1}\n    local l=${#alphabet}\n    local\
    \ h=${#c}\n    if [[ ${#c} -gt 1 ]]\n    then\n      if [[ ${alphabet:$((h-1)):1}\
    \ =~ $(c:1) ]]\n      then\n        code=$(printf \"$code${alphabet:$((h-1)):1}$c\"\
    )\n      fi\n    fi\n  done\n  printf \"$code\"\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n\tlocal msg=$1\n\techo $msg |sed -e \"s/[a-h]//g\"\
    \ | sed -e \"s/[aeiou]/[G]/g\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local res=\n    local\
    \ vowels=\"AEIOUaeiou\"\n    local i\n\n    for ((i=0; i<${#msg}; i++)); do\n\
    \        local char=${msg:$i:1}\n        if [[ \"$char\" =~ $vowels ]]; then\n\
    \            char=${BASH_REMATCH[1]}\n            ((i--))\n        fi\n      \
    \  ((i--))\n        res+=\"${char}\"\n        ((i--))\n    done\n    echo $res\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.BufferedReader name=24>
  stdout: <_io.BufferedReader name=17>
  timestamp: 1660078680
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  cat <<EOT\nfunction {\n  local msg=$1\n \
    \ local len=${#msg}\n  local vowels=\"aeiouy\"\n  local new=\"\"\n\n  # for each\
    \ vowel in msg\n  for vowel in $vowels\n  do\n    # for each letter pair\n   \
    \ for (( i=1; i<=len; i++ ))\n    do\n      # if this is the vowel before the\
    \ current pair\n      if [[ $msg[$((i-1))] == $vowel ]]\n      then\n        #\
    \ then add 2 letters to the end of the new letter\n        new += ${msg[$((i-1))]}${msg[$i]}\n\
    \      fi\n    done\n  done\n  echo \"$new\"\n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpc_dq8e8j.sh: line 52: warning: here-document at line 15 delimited
    by end-of-file (wanted `EOT'')\n/tmp/tmpc_dq8e8j.sh: line 53: syntax error: unexpected
    end of file\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local s=\"$1\" # store string\n    local\
    \ e # store current index\n    local c # current letter\n    local count # store\
    \ count of vowels\n    local str1 # store first half of string\n    local str2\
    \ # store second half of string\n    \n    str1=$(echo $s | cut -c1-${#s}/2) #\
    \ store first half of string\n    str2=$(echo $s | cut -c${#s}/2+${#s}) # store\
    \ second half of string\n    \n    # Loop through string and swap case of each\
    \ letter\n    for (( e=0 ; e<${#s} ; e++ )); do\n        c=${s:$e:1}\n       \
    \ case $c in\n            \"a\") c=\"A\";;\n            \"b\") c=\"B\";;\n   \
    \         \"c\") c=\"C\";;\n            \"d\") c=\"D\";;\n            \"e\") c=\"\
    E\";;\n            \"f\") c=\"F\";;\n            \"g\") c=\"G\";;\n          \
    \  \"h\") c=\"H\";;\n            \"i\") c=\"I\";;\n            \"j\") c=\"J\"\
    ;;\n            \"k\") c=\"K\";;\n            \"l\") c=\"L\";;\n            \"\
    m\") c=\"M\";;\n            \"n\") c=\"N\";;\n            \"o\") c=\"O\";;\n \
    \           \"p\") c=\"P\";;\n            \"q\") c=\"Q\";;\n            \"r\"\
    ) c=\"R\";;\n            \"s\") c=\"S\";;\n            \"t\") c=\"T\";;\n    \
    \        \"u\") c=\"U\";;\n            \"v\") c=\"V\";;\n            \"w\") c=\"\
    W\";;\n            \"x\") c=\"X\";;\n            \"y\") c=\"Y\";;\n          \
    \  \"z\") c=\"Z\";;\n            *) continue;; # unknown letter\n        esac\n\
    \        s=${s//$c/$c}\n    done\n\n    # Loop through string and replace vowels\
    \ with letters 2 places \n    # ahead of that vowel\n    for (( e=0 ; e<${#s}\
    \ ; e++ )); do\n        c=${s:$e:1}\n        case $c in\n            \"a\") c=\"\
    A\";;\n            \"b\") c=\"B\";;\n            \"c\") c=\"C\";;\n          \
    \  \"d\") c=\"D\";;\n            \"e\") c=\"E\";;\n            \"f\") c=\"F\"\
    ;;\n            \"g\") c=\"G\";\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpo9pveil4.sh: line 72: syntax error near unexpected token `}''\n/tmp/tmpo9pveil4.sh:
    line 72: `}''\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    message=$1\n    alphabet=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n    vowels=\"AEIOU\"\n    count=0\n    for i in $(seq 0 ${#message[@]}); do\n\
    \        # First letter\n        first=$message[i]\n        # Swap the case of\
    \ the first letter\n        swap=$(echo \"${message}\" | tr '[a-z]' '[A-Z]')\n\
    \        # Replace all vowels in message with the letter that appears \n     \
    \   # two places ahead of that vowel in the english alphabet\n        replace=$(echo\
    \ \"${swap}\" | sed \"s/[${vowels}]/&${alphabet[$((count + 2))]}/g\")\n      \
    \  \n        # Swap case of the rest of the message\n        swap=$(echo \"${replace}\"\
    \ | tr '[A-Z]' '[a-z]')\n        \n        final=$(echo \"${swap}\" | tr '[a-z]'\
    \ '[A-Z]')\n        \n        message[i]=$final\n        \n        count=$((count+1))\n\
    \    done\n    \n    echo \"${message[@]}\"\n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    message=$( echo \"\
    ${message}\" | sed -e 's/\\([aeiouAEIOU]\\)/\\L\\1/g' -e 's/[aeiouAEIOU]/\\n/g'\
    \ | awk '{ for(i=1;i<=NF;i++){ if($i==$(i-1)){ $i=$(i+1)}}; print $0}' )\n   \
    \ local output=\"\"\n    local vowels=\"a e i o u \"\n    local alphabet=\"a b\
    \ c d e f g h i j k l m n o p q r s t u v w x y z \"\n    local first\n    local\
    \ second\n    local first2\n    local second2\n    local char\n    local first2char\n\
    \    local second2char\n    local len\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local A\n    local E\n    local I\n\
    \    local O\n    local U\n\n    for ((i=1;i<=${#message};i+=1)); do\n       \
    \ first=${message:i:1}\n        second=${message:i+1:1}\n        if [[ ${first:0:1}\
    \ == \"a\" ]]; then\n            first2=\"${first:0:1}\"\n            second2=\"\
    ${second:0:1}\"\n        else\n            first2=\"${first:0:1}\"\n         \
    \   second2=\"${second:0:1}\"\n        fi\n        if [[ ${second:0:1} == \"a\"\
    \ ]]; then\n            first2char=\"${second:0:1}\"\n            second2char=\"\
    ${second:1:1}\"\n        else\n            first2char=\"${second:0:1}\"\n    \
    \        second2char=\"${second:1:1}\"\n        fi\n        for ((j=0;j<=${#alphabet};j+=1));\
    \ do\n            char=${alphabet:j:1}\n            first2char=\"${first2char}\"\
    \n            second2char=\"${second2char}\"\n            first2=\"${first2}\"\
    \n            second2=\"${second2}\"\n            if [[ ${char:0:1} == \"a\" ]];\
    \ then\n                first2=\"${first2:0:1}\"\n                second2=\"${second2:0:1}\"\
    \n            else\n                first2=\"${first2:0:1}\"\n\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpyt9w26tj.sh: line 81: syntax error near unexpected token `}''\n/tmp/tmpyt9w26tj.sh:
    line 81: `}''\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local i\n    local vowels\n\
    \    local letter\n    local vowel\n    local encoded\n    local count\n    vowels=\"\
    aeiouyAEIOUY\"\n    letters=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    \n    for ((i=1; i<=${#msg}; i++)); do\n        if [[ ${msg:i:1} == ${vowels}\
    \ ]]; then\n            count=0\n            for ((j=0; j<i; j++)); do\n     \
    \           if [[ ${msg:j:1} == ${vowels} ]]; then\n                    let count=$count+1\n\
    \                fi\n            done\n            if [[ ${count} -gt 2 ]]; then\n\
    \                vowel=\"${vowels:0:1}\"\n                encoded=\"${msg:0:1}${letters:((${count}+1)):1}${vowel}\"\
    \n            else\n                encoded=\"${msg:0:1}${letters:((${count}+1)):1}${msg:i}\"\
    \n            fi\n        fi\n    done\n    echo \"$encoded\"\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    # Declare a variable for the number of\
    \ vowels before the \n    # vowel we're looking for. \n    let numVowels=$(grep\
    \ -Eo \"[aeiou]\" <<< \"$1\" | wc -l)\n    # Declare a variable for the letter\
    \ that comes after the vowel\n    # we're looking for. \n    let letter=$(grep\
    \ -Eo \"[aeiou]\" <<< \"$1\" | awk -F \"[aeiou]\" '{print $2}')\n    # Declare\
    \ a variable for the vowel we're looking for. \n    let vowel=\"a\"\n    # Declare\
    \ a variable for the letters that come 2 places ahead.\n    # So for example,\
    \ the letters \"th\" come before the vowel in the \n    # english alphabet \"\
    a\". \n    let lettersAfterVowel=$(grep -Eo \"[aeiou]\" <<< \"$1\" | \n      \
    \  awk -F \"[aeiou]\" '{print $3}')\n    # Replace all the vowels in the message\
    \ with the letter that \n    # appears 2 places ahead of the vowel.\n    \n  \
    \  for i in $(seq 0 $numVowels); do\n        echo \"${lettersAfterVowel:i:1}$letter\"\
    \n    done\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk_4_5_sj.sh: line 20: let: letter=: syntax error: operand expected
    (error token is "=")\n/tmp/tmpk_4_5_sj.sh: line 27: let: lettersAfterVowel=: syntax
    error: operand expected (error token is "=")\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    msg=${msg,,}\n    msg=${msg/#\\\
    ?}\n    msg=${msg/:/+}\n    msg=${msg/;/+}\n    msg=${msg/&/+}\n    msg=${msg/@/+}\n\
    \    msg=${msg/[/+}\n    msg=${msg/]/+}\n    msg=${msg/$/.}\n    msg=${msg/./}\n\
    \    msg=${msg/.\\*/.}\n    msg=${msg/.\\(.\\)/${1^^}}\n    msg=${msg/.\\(.\\\
    )/${1^^}}\n    msg=${msg/.\\(.\\)/${1^^}}\n    msg=${msg/.\\(.\\)/${1^^}}\n  \
    \  msg=${msg/.\\(.\\)/${1^^}}\n    msg=${msg/.\\(.\\)/${1^^}}\n    msg=${msg/.\\\
    (.\\)/${1^^}}\n    msg=${msg/.\\(.\\)/${1^^}}\n    msg=${msg/.\\(.\\)/${1^^}}\n\
    \    msg=${msg/.\\(.\\)/${1^^}}\n    msg=${msg/.\\(.\\)/${1^^}}\n    msg=${msg/.\\\
    (.\\)/${1^^}}\n    msg=${msg/.\\(.\\)/${1^^}}\n    msg=${msg/.\\(.\\)/${1^^}}\n\
    \    msg=${msg/.\\(.\\)/${1^^}}\n    msg=${msg/.\\(.\\)/${1^^}}\n    msg=${msg/.\\\
    (.\\)/${1^^}}\n    msg=${msg/.\\(.\\)/${1^^}}\n    msg=${msg/.\\(.\\)/${1^^}}\n\
    \    msg=${msg/.\\(.\\)/${1^^}}\n    msg=${msg/.\\(.\\)/${1^^}}\n    msg=${msg/.\\\
    (.\\)/${1^^}}\n    msg=${msg/.\\(.\\)/${1^^}}\n    msg=${msg/.\\(.\\)/${1^^}}\n\
    \    msg=${msg/.\\(.\\)/${1^^}}\n    msg=${msg/.\\(.\\)/${1^^}}\n    msg=${msg/.\\\
    (.\\)/${1^^}}\n    msg=${msg/.\\(.\\)/${1^^}}\n    msg=${msg/.\\(.\\)/${1^^}}\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n# Write your code here\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpk1p8q53r.sh: line 16: syntax error near unexpected token `}''\n/tmp/tmpk1p8q53r.sh:
    line 16: `}''\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  local i=0\n  local j=0\n\
    \  local msgLength=${#msg}\n  local msgUpper=${msg,,}\n  local msgLower=${msg,,}\n\
    \  local msgFinal=${msgLower,,}\n  local v=${msgUpper:0:1}\n  local t=${msgUpper:1:1}\n\
    \  local h=${msgLower:0:1}\n  local k=${msgLower:1:1}\n  local w=${msgLower:2:1}\n\
    \  while [ $i -lt $msgLength ]; do\n    if (( $i -lt $msgLength )); then\n   \
    \   msgFinal=${msgFinal:0:1}${msgFinal:1:1}${msgFinal:2:2}${msgFinal:3:3}${msgFinal:4:4}${msgFinal:5:5}${msgFinal:6:6}${msgFinal:7:7}${msgFinal:8:8}${msgFinal:9:9}${msgFinal:10:10}${msgFinal:11:11}${msgFinal:12:12}${msgFinal:13:13}${msgFinal:14:14}${msgFinal:15:15}${msgFinal:16:16}${msgFinal:17:17}${msgFinal:18:18}${msgFinal:19:19}${msgFinal:20:20}${msgFinal:21:21}${msgFinal:22:22}${msgFinal:23:23}${msgFinal:24:24}${msgFinal:25:25}${msgFinal:26:26}${msgFinal:27:27}${msgFinal:28:28}${msgFinal:29:29}${msgFinal:30:30}${msgFinal:31:31}${msgFinal:32:32}${msgFinal:33:33}${msgFinal:34:34}${msgFinal:35:35}${msgFinal:36:36}${msgFinal:37:37}${msgFinal:38:38}${msgFinal:39:39}${msgFinal:40:40}${msgFinal:41:41}${msgFinal:42:42}${msgFinal:43:43}${msgFinal:44:44}${msgFinal:45:45}${msgFinal:46:46}${msgFinal:47:47}${msgFinal:48:48}${msgFinal:49:49}${msgFinal:50:50}${msgFinal:51:51}${msg\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpeafa209t.sh: line 46: syntax error: unexpected end of file\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local output=\" \"\
    \n    for i in $(seq 1 $((${#message}-1))); do\n            local c=$(echo $message\
    \ | cut -c1- | sed 's/[aeiouAEIOU]/A/g')\n            local p=$(echo $message\
    \ | cut -c1- | sed 's/[aeiouAEIOU]/B/g')\n            if [[ $c != $p ]]; then\n\
    \                    output+=$c\n            else\n                    output+=$p\n\
    \            fi\n    done\n    echo ${output}\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n   local msg=$1\n   local msgLength=$((${#msg}\
    \ + 1))\n   local msgLetters=$(echo $msg | tr '[a-z]' '[A-Z]')\n   local msgVowels=$(echo\
    \ $msgLetters | tr ' ' '|' | sed 's/|/||/g')\n   local msgVowelIndex=1\n   local\
    \ msgVowelCount=0\n   local msgVowel2Index=1\n   local msgVowel2Count=0\n   local\
    \ msgVowel3Index=1\n   local msgVowel3Count=0\n   local msgVowel4Index=1\n   local\
    \ msgVowel4Count=0\n   local msgVowel5Index=1\n   local msgVowel5Count=0\n\n \
    \  msg=$( sed 's/|/||/g' <<< $msgVowels )\n   msgVowels=$(echo $msg | tr '||'\
    \ '|')\n   msgLength=$((${#msg} - 1))\n\n   while [ $msgVowelIndex -le $msgLength\
    \ ]\n   do\n      msgVowelCount=$((msgVowelCount + 1))\n      msgVowel2Index=$((msgVowelIndex\
    \ + 1))\n      msgVowel2Count=$((msgVowel2Count + 1))\n      msgVowel3Index=$((msgVowel2Index\
    \ + 1))\n      msgVowel3Count=$((msgVowel3Count + 1))\n      msgVowel4Index=$((msgVowel3Index\
    \ + 1))\n      msgVowel4Count=$((msgVowel4Count + 1))\n      msgVowel5Index=$((msgVowel4Index\
    \ + 1))\n      msgVowel5Count=$((msgVowel5Count + 1))\n\n      if [ $msgVowelCount\
    \ -eq 1 ]\n      then\n         msgVowel3Index=$((msgVowelIndex + 1))\n      \
    \   msgVowel3Count=$((msgVowel3Count + 1))\n         msgVowel4Index=$((msgVowel3Index\
    \ + 1))\n         msgVowel4Count=$((msgVowel4Count + 1))\n         msgVowel5Index=$((msgVowel4Index\
    \ + 1))\n         msgVowel5Count=$((msgVowel5Count + 1))\n\n      fi\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpww_eo7zt.sh: line 56: syntax error near unexpected token `}''\n/tmp/tmpww_eo7zt.sh:
    line 56: `}''\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n local message result vowels letter\n message=\"\
    $1\"\n result=''\n vowels='aeiou'\n letters=$(echo $message | sed 's/[aeiouAEIOU]/\\\
    n/g')\n for letter in $letters; do \n  result=$(echo \"$letter\" | sed 's/[^\\\
    n]//g' | sed 's/[aeiouAEIOU]/\\n/g' | sed 's/\\<$letter\\>/$letter\\n/g')\n  result=\"\
    ${result// /$letter}\"\n done\n echo $result\n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: b''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"AEIOUY\"\
    \n    local newVowels=\"AIOUY\"\n    local newMessage=$message\n    local count\n\
    \    local tmp\n    local i\n    \n    for ((i = 0; i < ${#message}; i++)); do\n\
    \        tmp=${message:$i:1}\n        if [[ ${vowels:s:1} = ${tmp:s:1} ]]; then\n\
    \            tmp=${tmp:s:1}\n        else\n            count=0\n            for\
    \ ((j = 0; j < ${#newVowels}; j++)); do\n                if [[ ${newVowels:s:1}\
    \ = ${tmp:s:1} ]]; then\n                    count=$((count + 1))\n          \
    \      fi\n            done\n            if [[ $count -eq 2 ]]; then\n       \
    \         tmp=${newVowels:s:1}\n            fi\n        fi\n        newMessage=${newMessage:1:$i}\
    \ $tmp ${newMessage:$((i + 1)):1}\n    done\n    echo \"$newMessage\"\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b''/tmp/tmpytekkvs1.sh: line 38: T: command not found\n/tmp/tmpytekkvs1.sh:
    line 38: E: command not found\n/tmp/tmpytekkvs1.sh: line 38: S: command not found\n/tmp/tmpytekkvs1.sh:
    line 38: T: command not found\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n   if [ \"$1\" == \"\" ]\n   then\n      echo\
    \ \"You must supply a message to encode\"\n   fi\n   let \"counter=0\"\n   let\
    \ \"vowels='aeiouAEIOU'\"\n   let \"vowels_len=${#vowels}\"\n   let \"ascii_vowels='abcdefghijklmnopqrstuvwxyz'\"\
    \n   let \"ascii_vowels_len=${#ascii_vowels}\"\n   let \"ascii_vowels_len++\"\n\
    \n   while [ \"$1\" != \"\" ]; do\n      new_char=\"\"\n      case \"$1\" in\n\
    \         $ascii_vowels) new_char=\"$ascii_vowels[$counter]\" \n           counter=$((counter+1))\n\
    \           shift ;;\n         $vowels) new_char=\"$ascii_vowels[$((counter-vowels_len))]\"\
    \ \n           counter=$((counter-vowels_len))\n           shift ;;\n      esac\n\
    \      if [ \"$new_char\" != \"\" ]\n      then\n         echo \"$new_char\"\n\
    \      else\n         echo \"$1\"\n      fi\n      shift\n   done\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxmc7cxzr.sh: line 20: let: vowels=\''aeiouAEIOU\'': syntax error:
    operand expected (error token is "\''aeiouAEIOU\''")\n/tmp/tmpxmc7cxzr.sh: line
    22: let: ascii_vowels=\''abcdefghijklmnopqrstuvwxyz\'': syntax error: operand
    expected (error token is "\''abcdefghijklmnopqrstuvwxyz\''")\n'''
  stdout: b''
  timestamp: 1660078675
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local string=$1\n    local alpha=\"$2 \"\
    \n    local vowel=\"AEIOUYAEIOUY\"\n    local output=\"\"\n    local firstvowel=${string%%[!a]}\
    \ #removes the first letter from the string\n    local secondvowel=${string##*[!a]}\
    \ #removes the last letter from the string\n    local allvowels=${string//[a][e][o][u][y]}\
    \ #removes all vowels from string\n    local firstletter=${firstvowel%%[!a]} #removes\
    \ the first vowel from the first letter\n    local secondletter=${secondvowel##*[!a]}\
    \ #removes the second vowel from the first letter\n    local firstvowel2=\"${alpha}\"\
    \n    local secondvowel2=\"${alpha}\"\n    local output2=\"\"\n    local count=0\n\
    \    local count2=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\
    \    while [ $i -lt ${#string} ]\n    do\n        firstletter=${string[i]%%[!a]}\
    \ #removes the first letter from the string\n        secondletter=${string[i]##*[!a]}\
    \ #removes the second letter from the string\n        allvowels=${string[i]//[a][e][o][u][y]}\
    \ #removes all vowels from string\n        firstvowel=${allvowels[i]%%[!a]} #removes\
    \ the first vowel from the first letter\n        secondvowel=${allvowels[i]##*[!a]}\
    \ #removes the second vowel from the first letter\n        firstvowel2=\"${alpha}\"\
    \n        secondvowel2=\"${alpha}\"\n        firstvowel2=\"${alpha}\"\n      \
    \  secondvowel2=\"${alpha}\"\n        if [ $count -eq 1 ]\n        then\n    \
    \        firstletter=${firstletter%%[!a]} #removes the first vowel from the first\
    \ letter\n            secondletter=${secondletter##*[!a]} #removes the second\
    \ vowel from the first letter\n            firstvowel2=\"${alpha}\"\n        \
    \    secondvowel2=\"${alpha}\"\n        fi\n        if [ $count2 -eq 1 ]\n   \
    \     then\n            firstletter2=\"${firstletter%%[!a]} #removes the first\
    \ vowel from the first letter\n            secondletter2=\"${secondletter##*[!a]}\
    \ #removes the second vowel from the first letter\n            firstvowel2=\"\
    ${alpha}\"\n            secondvowel2=\"${alpha}\"\n        fi\n        if [[ $string\
    \ =~ $vowel \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'b"/tmp/tmpytlh_fv1.sh: line 58: syntax error in conditional expression\n/tmp/tmpytlh_fv1.sh:
    line 59: syntax error near `}''\n/tmp/tmpytlh_fv1.sh: line 59: `}''\n"'
  stdout: b''
  timestamp: 1660078675
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    \n    # encode function\n    \n    msg=\"\
    $1\" \n    \n    letters=\"\"\n    \n    for letter in $msg; do\n        \n  \
    \      if [[ \"$letter\" == [A-Za-z] ]]; then\n            letters=$letters$letter\n\
    \        else\n            letters=$letters${letter./$'a'/$'A'}\n        fi\n\
    \    done\n    \n    letters=$(echo $letters | sed -e 's/\\(.\\)/\\L\\1/')\n \
    \   \n    encoded=\"\"\n    \n    for letter in $letters; do\n        \n     \
    \   \n        if [[ \"$letter\" == [aeiouAEIOU] ]]; then\n            \n     \
    \       encoded=$encoded${letter./$'a'/$'A'}\n            \n        else\n   \
    \         encoded=$encoded${letter./$'e'/$'E'}\n        fi\n        \n    done\n\
    \    \n    encoded=\"${encoded// /$'A'}/\"\n    encoded=\"${encoded// /$'E'}/\"\
    \n    encoded=\"${encoded// /$'I'}/\"\n    \n    return $encoded\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'b"/tmp/tmpss72hckz.sh: line 27: $letters${letter./''a''/''A''}: bad substitution\n"'
  stdout: b''
  timestamp: 1660078675

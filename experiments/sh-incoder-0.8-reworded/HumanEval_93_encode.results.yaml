language: sh
name: HumanEval_93_encode
results:
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=\"$1\"\n    local result=\"\"\
    \n    local i\n\n    for i in $(seq 1 $msg | wc -w); do\n        local l=$(echo\
    \ \"$msg\" | cut -d \" \" -f $i)\n        local m=$l\n        for j in $(seq 2\
    \ $i); do\n            m=\"$(echo $m | tr \"[A-Z]\" \"[a-z]\")\"\n           \
    \ m=\"$(echo $m | tr \"[aeiouAEIOU]\" \"[aeiouAEIOU]\")\"\n        done\n    \
    \    result=$result$l$m\n    done\n\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "seq: invalid floating point argument: \u2018TEST\u2019\nTry 'seq --help'\
    \ for more information.\ncut: fields are numbered from 1\nTry 'cut --help' for\
    \ more information.\n"
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n\n    for (( i=1; i<${#message};\
    \ i++ )); do\n        local letter=${message:$i:1}\n\n        if [[ \"$letter\"\
    \ == [a-zA-Z] ]]; then\n            letter=${#letter}\n        fi\n        if\
    \ [[ \"$letter\" == [aeiou] ]]; then\n            letter=${#letter}\n        fi\n\
    \n        local replacement=${#letter}\n\n        if (( replacement-$i <= 0 ))\
    \ ; then\n            replacement=1\n        fi\n\n        local replace=${letter:0:$replacement}\n\
    \n        replace=\"${A[$replace]}\"\n\n        (( ${#message}-i ))\n        ((\
    \ ${#replace} ))\n\n        local ending=${message:$i:1}\n\n        if [[ \"$ending\"\
    \ == [a-zA-Z] ]]; then\n            ending=\"${ending}${#ending}\"\n        fi\n\
    \n        local endingReplace=${end:0:$replacement}\n\n        endingReplace=\"\
    ${A[$endingReplace]}\"\n\n        local newMessage=${message/${letter}/${replace}}\n\
    \        newMessage=${newMessage/${ending}/${endingReplace}}\n\n        echo \"\
    ${newMessage}\"\n    done\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local str=$1\n    local outstr=\"\"\n \
    \   # use these lists for case insensitive (all lower and all upper)\n    local\
    \ lower=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n    local upper=\"\
    A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\"\n    \n    # use these lists\
    \ for case sensitive (all lower and all upper)\n    local lower2=\"A b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z\"\n    local upper2=\"a B c D e f G\
    \ H I j k L m N o p Q R S t u V W X Y Z\"\n    \n    # use these lists for case\
    \ insensitive (all upper and all lower)\n    local lower3=\"A B C D E F G H I\
    \ J K L M N O P Q R S T U V W X Y z\"\n    local upper3=\"a b c D e f G H I j\
    \ K L M N O P Q R S t u V W X Y Z\"\n    \n    for ((i=0; i<${#str}; i++)); do\n\
    \        # use these lists for case sensitive (all upper and all lower)\n    \
    \    local lower4=\"a B C d e f g h i J k l m n O P Q R S T U v w x Y z\"\n  \
    \      local upper4=\"a b C D E f g h i J k L m n O P Q R S t u V W X Y Z\"\n\
    \        \n        local letter=${str:$i:1}\n        if [[ ${lower:$i:1} =~ [[:upper:]]${letter}\
    \ ]] || [[ ${upper:$i:1} =~ [[:lower:]]${letter} ]]; then\n            echo \"\
    ${letter}\"\n        elif [[ ${lower2:$i:1} =~ [[:upper:]]${letter} ]] || [[ ${upper2:$i:1}\
    \ =~ [[:lower:]]${letter} ]]; then\n            echo \"${letter}\"\n        elif\
    \ [[ ${lower3:$i:1} =~ [[:upper:]]${letter} ]] || [[ ${upper3:$i:1} =~ [[:lower:]]${letter}\
    \ ]]; then\n            echo \"${letter}\"\n        elif [\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpocdips4a.sh: line 42: syntax error near unexpected token `}''

    /tmp/tmpocdips4a.sh: line 42: `}''

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  local vowels=\"aAiIuUeEoO\"\
    \n  local len=${#msg}\n  local idx=0\n  local out=\"\"\n  \n  while ((idx < len))\
    \ do\n    local c=${msg:$idx:1}\n    local v=${vowels:$c:1}\n    ((idx+=2))\n\
    \    \n    local new_c=\"${v#a}\"\n    new_c=\"${v#A}\"\n    new_c=\"${new_c^^}\"\
    \n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\
    \n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\
    \n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\
    \n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\
    \n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\
    \n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\
    \n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\
    \n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\
    \n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\
    \n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\
    \n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\
    \n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\
    \n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\
    \n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\
    \n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\
    \n    new_c=\"${new_c^^}\"\n    new_c=\"${new_c:1:1}\"\n    new_c=\"${new_c^^}\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpznengo8h.sh: line 21: syntax error near unexpected token `do''

    /tmp/tmpznengo8h.sh: line 21: `  while ((idx < len)) do''

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    echo $1 | \n    sed -e 's/\\([AEIOUaeiou]\\\
    )/\\1/g' -e 's/\\([aeiou]\\)/\\1/g' \\\n        -e 's/\\([AEIOU]\\)/\\L&/g' -e\
    \ 's/\\([aeiou]\\)/\\L&/g' \\\n        -e 's/\\([aeiouAEIOU]\\)/\\U&/g'\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    # TODO\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqji1kd60.sh: line 16: syntax error near unexpected token `}''

    /tmp/tmpqji1kd60.sh: line 16: `}''

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local lowerMessage=\"\
    ${message,,}\"\n  local upperMessage=\"${lowerMessage,,}\"\n  local upperToLower=\"\
    ${lowerMessage,,}\"\n  local lowerToUpper=\"${upperMessage,,}\"\n  local upperVowels=\"\
    ${upperToLower,,}\"\n  local lowerVowels=\"${lowerToUpper,,}\"\n  local newMessage=\"\
    \"\n  local i\n  local j\n  local k\n  local l\n  local n\n  local m\n  local\
    \ vowelCount\n\n  # convert message to upper case\n  for (( i= 0; $i<${#lowerMessage};\
    \ i++ ))\n  do\n    lowerMessage[i]=${lowerMessage[i],,}\n  done\n\n  # create\
    \ mapping of lowercase to uppercase\n  for (( i=0; i<${#lowerMessage}; i++ ))\n\
    \  do\n    lowerMessage[i]=${lowerMessage[i]^^}\n  done\n\n  # change all letters\
    \ to upper case\n  for (( i=0; i<${#lowerMessage}; i++ ))\n  do\n    lowerToUpper[i]=${lowerToUpper[i],,}\n\
    \  done\n\n  # count all vowels in message\n  for (( i=0; i<${#lowerMessage};\
    \ i++ ))\n  do\n    lowerVowels[i]=${lowerVowels[i],,}\n  done\n\n  # map every\
    \ letter back to it's original case\n  for (( i=0; i<${#lowerToUpper}; i++ ))\n\
    \  do\n    upperToLower[i]=${upperToLower[i],,}\n  done\n\n  # count all vowels\
    \ in upper case\n  for (( i=0; i<${#upperToLower}; i++ ))\n  do\n    upperVowels[i]=${upperVowels[i],,}\n\
    \  done\n\n  for (( i=0; i<${#message}; i++ ))\n  do\n    message[i]=${message[i],,}\n\
    \  done\n\n  for (( i=0; i<${#lowerMessage}; i++ ))\n  do\n    lowerMessage[i]=${lowerMessage[i],,}\n\
    \  done\n  \n  message=${message,,}\n\n  # convert message to lower case\n  for\
    \ (( i= 0; $i<${#lowerMessage}; i++ ))\n  do\n    lowerMessage[i]=${lowerMessage[i],,}\n\
    \  done\n\n  # create mapping of lowercase to uppercase\n  for (( i=0; i<${#lowerMessage};\
    \ i++ ))\n  do\n    lowerMessage[i]=${lowerMessage[i]^^}\n  done\n\n  # change\
    \ all letters to upper case\n  for (( i=0; i<${#lower\n}\n\ncandidate() {\n  \
    \  encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphbfb6gqs.sh: line 92: unexpected EOF while looking for matching
    `)''

    /tmp/tmphbfb6gqs.sh: line 109: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local letter\n  local word\n  local c\n \
    \ local vowels\n  local swapped\n  local count\n  local last\n  local first\n\
    \  local last2\n  local first2\n  local last3\n  local first3\n  local middle\n\
    \  local last4\n  local first4\n  local firstLetter\n  local firstFour\n  local\
    \ firstFive\n  local firstSix\n  local firstSeven\n  local firstEight\n  local\
    \ firstNine\n  local firstTen\n\n  c=$2\n  first=${1:0:1}\n  last=${1:1:1}\n \
    \ firstLetter=${first:0:1}\n  firstFour=${first:1:1}\n  firstFive=${first:2:1}\n\
    \  firstSix=${first:3:1}\n  firstSeven=${first:4:1}\n  firstEight=${first:5:1}\n\
    \  firstNine=${first:6:1}\n  firstTen=${first:7:1}\n\n  last2=${last:0:1}\n  first2=${first:1:1}\n\
    \  last3=${last:1:1}\n  first3=${first:2:1}\n  middle=${first:2:1}\n  first4=${first:3:1}\n\
    \  firstLetter=${first:4:1}\n  firstFour=${first:5:1}\n  firstFive=${first:6:1}\n\
    \  firstSix=${first:7:1}\n  firstSeven=${first:8:1}\n  firstEight=${first:9:1}\n\
    \  firstNine=${first:10:1}\n  firstTen=${first:11:1}\n\n  vowels=$(echo $1 | tr\
    \ -cd '[:alnum:]' |\n    sed 's/[aeiouyAEIOUY].*[aeiouyAEIOUY]/e/g' |\n    sed\
    \ 's/^[aeiouyAEIOUY]*//g')\n  swapped=$(echo $1 | tr -cd '[:alnum:]' |\n    sed\
    \ 's/[AEIOUY].*[AEIOUY]/e/g' |\n    sed 's/^[AEIOUY]*//g')\n\n  letter=$(echo\
    \ $vowels | cut -d'e' -f 1)\n  count=$(echo $vowels | cut -d'e' -f 2)\n  last=$(echo\
    \ $vowels | cut -d'e' -f 3)\n  first=$(echo $vowels | cut -d'e' -f 4)\n  last2=$(echo\
    \ $vowel\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpopm7wp8n.sh: line 77: unexpected EOF while looking for matching
    `)''

    /tmp/tmpopm7wp8n.sh: line 94: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local out=$msg\n    local\
    \ vowels=\"aeiouAEIOU\"\n    local vowels2=\"AEIOU\"\n    for v in ${vowels};\
    \ do\n        local newV=${v#${v%%[!${v}]*}}\n        newV=${v#${newV}}\n    \
    \    out=${out//$v/$newV}\n    done\n    local vowels3=\"AEIOUaeiou\"\n    for\
    \ v in ${vowels3}; do\n        local newV=${v#${v%%[!${v}]*}}\n        newV=${v#${newV}}\n\
    \        out=${out//$v/$newV}\n    done\n    for v in ${vowels2}; do\n       \
    \ out=${out//$v/$v}\n    done\n    echo \"$out\"\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local string=$1\n    local vowels=\"a e\
    \ i o u y\"\n    local newString=\"\"\n    for i in $string; do\n        if [[\
    \ $i =~ $vowels ]]; then\n            vowelIndex=${i%?}\n            shift\n \
    \           wordIndex=${i#$vowelIndex}\n            newString+=\"${letters[$wordIndex]}\"\
    \n            newString+=\"${letters[$wordIndex+1]}\"\n        fi\n    done\n\
    \    echo \"$newString\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    msg=$1\n    echo $(echo $msg | sed \"s/\\\
    (.*\\)\\(.\\)\\(.\\)\\(.*\\)/\\1\\2\\3\\4/g\" | sed \"s/aeiou/a/g\" | sed \"s/AEIOU/A/g\"\
    \ | sed \"s/eE/E/g\" | sed \"s/iI/I/g\" | sed \"s/oO/O/g\" | sed \"s/uU/U/g\"\
    \ | sed \"s/yY/Y/g\" | sed \"s/[^a-zA-Z]/N/g\")\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local STRING=$1\n    local TEMP=\"\"\n\
    \    local CHARACTERS=`echo $STRING | tr a-z A-Z | tr A A B | tr e E`\n    for\
    \ ((i=0; i<${#CHARACTERS}; i++)); do\n        local CHARACTER=${CHARACTERS[i]}\n\
    \        local POS=$(echo $CHARACTER | tr 'a' ' ' | tr 'e' 'e' | tr 'i' 'i' |\
    \ tr 'o' 'o' | tr 'u' 'u' | tr 'y' 'y' | tr 'A' 'A' | tr 'E' 'E' | tr 'I' 'I'\
    \ | tr 'O' 'O' | tr 'U' 'U' | tr 'Y' 'Y')\n        local NEGATIVE=$(cat /dev/null\
    \ | tr -d 'a' | tr -d 'e' | tr -d 'i' | tr -d 'o' | tr -d 'u' | tr -d 'y' | tr\
    \ -d 'A' | tr -d 'E' | tr -d 'I' | tr -d 'O' | tr -d 'U' | tr -d 'Y')\n      \
    \  local POS2=$(echo $CHARACTER | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr '\
    \ ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr\
    \ ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr\
    \ ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr\
    \ ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr\
    \ ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr\
    \ ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr\
    \ ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr\
    \ ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr\
    \ ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' 'a' | tr ' ' '\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjszo9kg9.sh: line 22: unexpected EOF while looking for matching
    `''''

    /tmp/tmpjszo9kg9.sh: line 39: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local newMessage=\"\
    \"\n    local position=1\n    local previousLetter=\n    local firstLetter=\n\
    \    local lastLetter=\n    local letterCount=0\n    local letterArray=()\n  \
    \  local vowelArray=(\"a\",\"e\",\"i\",\"o\",\"u\")\n    # First we go through\
    \ the message and build an array\n    # of what letters we have and how many times\
    \ they appear.\n    for letter in $message; do\n        letterArray[$letter]=$((letterArray[$letter]+1))\n\
    \    done\n    # Now we go through the letters and replace all vowels with \n\
    \    # the letter that is 2 places ahead of the vowel in their position\n    for\
    \ letter in $message; do\n        if [[ $letter =~ ^[aeiouAEIOU] ]]; then\n  \
    \          newLetter=${letter%?}\n            if [[ $newLetter =~ ^[aeiouAEIOU]\
    \ ]]; then\n                previousLetter=${letter:0:1}\n                if [[\
    \ $firstLetter != $previousLetter ]]; then\n                    if [[ $position\
    \ -gt 0 ]]; then\n                        lastLetter=${letter:1}\n           \
    \             newMessage+=$lastLetter\n                        position=$((position-1))\n\
    \                    fi\n                    firstLetter=$previousLetter\n   \
    \                 lastLetter=${letter:1}\n                    newMessage+=$lastLetter\n\
    \                fi\n                newMessage+=$firstLetter\n              \
    \  position=$((position+1))\n            fi\n        else\n            newMessage+=$letter\n\
    \        fi\n        letterCount=$((letterCount+1))\n    done\n    # Now we go\
    \ through the letter array again, \n    # replacing all vowels with their position\
    \ in alphabet.\n    # This is where we add the final letters back in.\n    # Make\
    \ sure to start at position=1 to \n    # account for first letter.\n    for letter\
    \ in $newMessage; do\n        letterArray[$letter]=$((letterArray[$letter]+1))\n\
    \        if [[ $letterArray[$letter] -gt 2 ]]; then\n            letterCount=$((letterCount-1))\n\
    \            newMessage+=$letter\n            if [[ $letterCount -gt 1 ]]; then\n\
    \                position=$((position+1))\n            fi\n        fi\n    done\n\
    \    # Now we go through the vowel array again, \n    # replacing vowels with\
    \ their position in alphabet.\n    # This is where we add the final vowels back\
    \ in.\n    # Make sure to start at position=1 to \n    # account for first letter.\n\
    \    for vowel in $vowelArray; do\n        vowelArray[$vowel]=$((vowelArray[$\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoz9oi69y.sh: line 75: unexpected EOF while looking for matching
    `)''

    /tmp/tmpoz9oi69y.sh: line 92: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n\tlocal message=$1\n\tlocal alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \n\tlocal vowels=\"aeiouAEIOU\"\n\n\tfor letter in ${message}; do \n\t\tcount=0\n\
    \t\tfor i in ${alphabet}; do \n\t\t\tif [[ ${i} =~ ${letter} ]]; then\n\t\t\t\t\
    let count+=1\n\t\t\tfi\n\t\tdone\n\t\tif [[ ${count} -ne 2 ]]; then\n\t\t\tletter=$(echo\
    \ ${letter} | tr [a-z] [A-Z])\n\t\tfi\n\t\techo ${letter}\n\tdone\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "tr: extra operand \u2018[A-Z]\u2019\nTry 'tr --help' for more information.\n"
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local string=$1\n  \n  echo $(echo $string\
    \ | awk '{for(i=1;i<=NF;i++) printf toupper(substr($i,i,1)); printf \"%s\",substr($i,1,1)}')\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=\"$1\"\n    local vowel=\"\
    aeiou\"\n    local out\n\n    for (( i=0; i<${#message}; i++ ))\n    do\n    \
    \    local letter=\"${message:$i:1}\"\n        if [[ ${#vowel} -eq 0 ]]\n    \
    \    then\n            local out\n            out=\"${letter}\"\n        else\n\
    \            local out\n            ((i+=2))\n            for (( j=0; j<${#vowel};\
    \ j++ ))\n            do\n                if [[ \"${message:$i:1}\" = \"${vowel:$j:1}\"\
    \ ]]\n                then\n                    out=\"${letter:$j:1}\"\n     \
    \               break\n                fi\n            done\n        fi\n    \
    \    message=\"${message:0:i}${out}${message:$i:1}\"\n    done\n\n    echo $message\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=\"$1\"\n  message=${message//[a-z]/}\n\
    \  message=${message//[aeiou]/}\n  message=${message//[!@#\\$%\\^&\\*\\(\\)_+\\\
    [\\]\\{\\}\\|;:\"<>?]/}\n  message=${message//[a-z][a-z]/}\n  message=${message//[aeiou][aeiou]/}\n\
    \  message=${message//[!@#\\$%\\^&\\*\\(\\)_+\\[\\]\\{\\}\\|;:\"<>?]/}\n  message=${message//[a-z][a-z]/}\n\
    \  message=${message//[aeiou][aeiou]/}\n  message=${message//[!@#\\$%\\^&\\*\\\
    (\\)_+\\[\\]\\{\\}\\|;:\"<>?]/}\n  message=${message//[a-z][a-z]/}\n  message=${message//[aeiou][aeiou]/}\n\
    \  message=${message//[!@#\\$%\\^&\\*\\(\\)_+\\[\\]\\{\\}\\|;:\"<>?]/}\n  message=${message//[a-z][a-z]/}\n\
    \  message=${message//[aeiou][aeiou]/}\n  message=${message//[!@#\\$%\\^&\\*\\\
    (\\)_+\\[\\]\\{\\}\\|;:\"<>?]/}\n  message=${message//[a-z][a-z]/}\n  message=${message//[aeiou][aeiou]/}\n\
    \  message=${message//[!@#\\$%\\^&\\*\\(\\)_+\\[\\]\\{\\}\\|;:\"<>?]/}\n  message=${message//[a-z][a-z]/}\n\
    \  message=${message//[aeiou][aeiou]/}\n  message=${message//[!@#\\$%\\^&\\*\\\
    (\\)_+\\[\\]\\{\\}\\|;:\"<>?]/}\n  message=${message//[a-z][a-z]/}\n  message=${message//[aeiou][aeiou]/}\n\
    \  message=${message//[!@#\\$%\\^&\\*\\(\\)_+\\[\\]\\{\\}\\|;:\"<>?]/}\n  message=${message//[a-z][a-z]/}\n\
    \  message=${message//[aeiou][aeiou]/}\n  message=${message//[!@#\\$%\\^&\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcovftux0.sh: line 55: unexpected EOF while looking for matching
    `"''

    /tmp/tmpcovftux0.sh: line 59: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    \n    local replace='abcdefghijklmnopqrstuvwxyz'\n\
    \    local vowels='aeiou'\n    local letter='ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n   \
    \ local new_letter=''\n    \n    local i=0\n    while [ $i -lt ${#message} ];\
    \ do\n        new_letter=\"${letter:0:1}${replace:${#vowels} + $((i+1)):1}\"\n\
    \        \n        local j=0\n        while [ $j -lt ${#replace} ]; do\n     \
    \       \n            if [[ \"${message:$i:1}\" == \"${replace:$j:1}\" ]]; then\n\
    \                message=$(echo \"${message}\" | sed -e \"s/$replace/$new_letter/g\"\
    )\n            \n                i=$((i+1))\n                j=$((j+1))\n    \
    \        else\n                j=$((j+1))\n            fi\n        done\n    \
    \    i=$((i+1))\n    done\n    \n    echo \"$message\"\n}\n\ncandidate() {\n \
    \   encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    message=$1\n\n    i=0\n    lastVowel=0\n\
    \    swappedVowel=0\n    countVowels=0\n\n    while [ $i -lt ${#message} ]; do\n\
    \        currentChar=${message:$i:1}\n        ((i++))\n\n        if [ $currentChar\
    \ != $lastVowel ]; then\n            swappedVowel=0\n            lastVowel=$currentChar\n\
    \n            ((countVowels++))\n        else\n            if [ $swappedVowel\
    \ -eq 0 ]; then\n                swappedVowel=$currentChar\n                ((countVowels++))\n\
    \            else\n                ((countVowels++))\n                swappedVowel=$currentChar\n\
    \            fi\n        fi\n    done\n\n    result=\"\"\n    i=0\n    while [\
    \ $i -lt ${#message} ]; do\n        ((i++))\n        if [ $((i%2)) == 0 ]; then\n\
    \            result+=$swappedVowel\n        fi\n        result+=$((${message:$i:1}))\n\
    \    done\n\n    echo \"$result\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  # The dictionary we'll use to determine whether\
    \ each letter is a\n  # vowel\n  declare -A vowel_map\n  \n  # Initialize a variable\
    \ that contains the count of the number of \n  # vowel instances in the message\n\
    \  declare -a counts\n  \n  # Initialize a variable that contains the character\
    \ that appears 2\n  # places ahead of the vowel\n  declare -a position\n  \n \
    \ # Initialize a variable that contains the message encoded in the \n  # required\
    \ format\n  declare -a output\n  \n  # Initialize a variable that holds the letter\
    \ that the vowel \n  # immediately follows\n  declare -a next_letter\n  \n  #\
    \ Initialize a variable that holds 1 if the vowel should be replaced\n  # with\
    \ itself and 0 if it should be preserved.\n  declare -a vowel\n  \n  vowel_map[\"\
    a\"]=0 vowel_map[\"e\"]=0 vowel_map[\"i\"]=0 vowel_map[\"o\"]=0 vowel_map[\"u\"\
    ]=0\n  vowel_map[\"A\"]=0 vowel_map[\"E\"]=0 vowel_map[\"I\"]=0 vowel_map[\"O\"\
    ]=0 vowel_map[\"U\"]=0\n  \n  for i in $1;do\n    # If the letter does not appear\
    \ in the dictionary add the letter \n    # to the dictionary and set the corresponding\
    \ count to 1 \n    if [ ! -z \"$(i+${i:2:1})\" ]; then \n      ((${vowel_map[$(i+${i:2:1})]}+=1))\
    \ \n      output+=$i\n    fi\n  done\n  \n  for i in \"${!vowel_map[@]}\"; do\n\
    \    # if the count of the letter is greater than 1, then we should\n    # check\
    \ the letter immediately after it\n    if [ ${counts[$i]} -gt 1 ]; then\n    \
    \  position[$i]=${!position[$i]}\n      if [ ${position[$i]} -gt 2 ]; then\n \
    \       next_letter[$i]=${!next_letter[$i]}\n        vowel[$i]=1\n      fi\n \
    \   fi\n  done\n  \n  for i in \"${!counts[@]}\"; do\n    # if the letter is a\
    \ vowel then we replace the vowel with the letter\n    # that appears 2 places\
    \ ahead of it\n    if [ ${vowel[$i]} -eq 1 ]; then\n      output+=${output#$(i)}\n\
    \      output+=${output#$(i+${i:2:1})}\n      output+=$next_letter[$i]\n     \
    \ output+=${output#$next_letter[$i]}\n    fi\n  done\n\n}\n\ncandidate() {\n \
    \   encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_6zrqz7y.sh: line 45: i+S: command not found

    /tmp/tmp_6zrqz7y.sh: line 54: [: -gt: unary operator expected

    /tmp/tmp_6zrqz7y.sh: line 54: [: -gt: unary operator expected

    /tmp/tmp_6zrqz7y.sh: line 54: [: -gt: unary operator expected

    /tmp/tmp_6zrqz7y.sh: line 54: [: -gt: unary operator expected

    /tmp/tmp_6zrqz7y.sh: line 54: [: -gt: unary operator expected

    /tmp/tmp_6zrqz7y.sh: line 54: [: -gt: unary operator expected

    /tmp/tmp_6zrqz7y.sh: line 54: [: -gt: unary operator expected

    /tmp/tmp_6zrqz7y.sh: line 54: i: expression recursion level exceeded (error token
    is "i")

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    \n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9dwt7jvi.sh: line 16: syntax error near unexpected token `}''

    /tmp/tmp9dwt7jvi.sh: line 16: `}''

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=\"$1\"\n    local vowels=\"\
    AEIOUYaeiouy\"\n    local letters=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\
    \n    local n=0\n    local vowel_letter=\"\"\n    local new_letter=\"\"\n\n  \
    \  for character in $message; do\n        if [[ \"$letters\" == *\"$character\"\
    * ]]; then\n            new_letter=\"${letters:$n:1}\"\n        fi\n\n       \
    \ if [[ \"$vowels\" == *\"$character\"* ]]; then\n            vowel_letter=\"\
    ${vowels:$n:1}\"\n        fi\n\n        n=$((n+1))\n    done\n\n    echo \"$new_letter\
    \ $vowel_letter\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local string=\"$1\"\n    local result=\"\
    a\" \n    local vowels=\"AEIOUaeiou\"\n\n    local index=1\n    while [ \"$index\"\
    \ -lt \"${#string}\" ]\n    do\n        local letter=\"${string:$index:1}\"\n\n\
    \        # Skip letters that are not in the english alphabet.\n        if [ \"\
    $letter\" != \"a\" -a \"$letter\" != \"e\" -a \"$letter\" != \"i\" -a \"$letter\"\
    \ != \"o\" -a \"$letter\" != \"u\" ] ; then\n            result+=$letter\n   \
    \     else\n            # Swap the case of letters \n            case \"$letter\"\
    \ in\n                A)\n                    letter=\"b\"\n                 \
    \   ;;\n                E)\n                    letter=\"f\"\n               \
    \     ;;\n                I)\n                    letter=\"g\"\n             \
    \       ;;\n                O)\n                    letter=\"h\"\n           \
    \         ;;\n                U)\n                    letter=\"j\"\n         \
    \           ;;\n            esac\n            # Replace all vowels in message\
    \ with that letter 2 places \n            # ahead.\n            for vowel in $vowels\n\
    \            do\n                if [ \"$letter\" == \"$vowel\" ] ; then\n   \
    \                 letter=$((letter % 26 + 21))\n                fi\n         \
    \   done\n            result+=$letter\n        fi\n        index=$((index + 1))\n\
    \    done\n    echo \"$result\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local string=$(echo $message\
    \ | sed 's/\\(.*\\)/\\L\\1/g' | \n                   sed 's/[aeiou]/e/g' | \n\
    \                   sed 's/[AEIOU]/E/g' | \n                   sed 's/^[aeiou]/G/g'\
    \ | \n                   sed 's/^[AEIOU]/G/g' | \n                   sed 's/^[aeiou]/G/g'\
    \ | \n                   sed 's/e\\([aeiou]\\)/\\1E/g' | \n                  \
    \ sed 's/E\\([AEIOU]\\)/\\1E/g' | \n                   sed 's/\\([aeiou]\\)e/\\\
    1G/g' | \n                   sed 's/\\([AEIOU]\\)E/\\1G/g' | \n              \
    \     sed 's/\\([aeiou]\\)e/\\1G/g' | \n                   sed 's/\\([AEIOU]\\\
    )E/\\2G/g' | \n                   sed 's/e\\([AEIOU]\\)/\\1G/g' | \n         \
    \          sed 's/E\\([aeiou]\\)/\\1G/g' | \n                   sed 's/\\([aeiou]\\\
    )e/\\1G/g' | \n                   sed 's/\\([AEIOU]\\)E/\\2G/g' | \n         \
    \          sed 's/e\\([AEIOU]\\)/\\1G/g' | \n                   sed 's/E\\([aeiou]\\\
    )/\\1G/g' | \n                   sed 's/\\([aeiou]\\)e/\\1G/g' | \n          \
    \         sed 's/\\([AEIOU]\\)E/\\2G/g' | \n                   sed 's/e\\([AEIOU]\\\
    )/\\1G/g' | \n                   sed 's/E\\([aeiou]\\)/\\1G/g' | \n          \
    \         sed 's/\\([aeiou]\\)e/\\1G/g' | \n                   sed 's/\\([AEIOU]\\\
    )E/\\2G/g' | \n                   sed 's/e\\([AEIOU]\\)/\\1G/g' | \n         \
    \          sed 's/E\\([aeiou]\\)/\\1G/g' | \n                   sed 's/\\([aeiou]\\\
    )e/\\1G/g' | \n                   sed 's/\\([AEIOU]\\)E/\\2G/g' | \n         \
    \          sed 's/e\\([AEIOU]\\)/\\1\n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7i_sld4_.sh: line 44: unexpected EOF while looking for matching
    `''''

    /tmp/tmp7i_sld4_.sh: line 61: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  # Set variables to empty strings. \n  local\
    \ message=$1\n  local encodedMessage\n  encodedMessage=\"\"\n  # Iterate over\
    \ each letter in the string.\n  for i in \"${message[@]}\" \n  do\n    # Append\
    \ letter to encodedMessage variable if \n    # it doesn't already have one, otherwise\
    \ \n    # replace the vowel with the letter that appears 2 \n    # places ahead\
    \ of the vowel. \n    if [[ $encodedMessage != \"\" ]]; then\n      encodedMessage+=\"\
    \ $i\"\n    elif [[ $i == $((????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphhb1e4v1.sh: line 28: unexpected EOF while looking for matching
    `)''

    /tmp/tmphhb1e4v1.sh: line 45: unexpected argument to conditional binary operator

    /tmp/tmphhb1e4v1.sh: line 45: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  echo $1 | sed 's/\\([a-zA-Z]\\)/\\L\\1/g'\
    \ | sed 's/[aeiouyAEIOUY]/[GASDFGHJKL]/g' | sed 's/^/[GASDFGHJKL]/g' | sed 's/$/[GASDFGHJKL]/g'\
    \ | sed 's/^/[GASDFGHJKL]/g' | sed 's/$/[GASDFGHJKL]/g' | sed 's/^/[GASDFGHJKL]/g'\
    \ | sed 's/$/[GASDFGHJKL]/g' | sed 's/^/[GASDFGHJKL]/g' | sed 's/$/[GASDFGHJKL]/g'\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowel=\"a\"\
    \n    local count=0\n    local char\n    local count2\n    local new_message\n\
    \    local replace=\"a\"\n\n    count=$((${#message} - 2))\n\n    for ((i=2; i\
    \ <= ${#message}; i++ )); do\n        char=${message:$i:1}\n        count2=$((${#char}\
    \ - 2))\n        for ((j=2 ; j <= ${#char}; j++)); do\n            if [ ${char:$j:1}\
    \ == \"e\" ]; then char=${char:$j:1}\n            elif [ ${char:$j:1} == \"i\"\
    \ ]; then char=${char:$j:1}\n            elif [ ${char:$j:1} == \"o\" ]; then\
    \ char=${char:$j:1}\n            elif [ ${char:$j:1} == \"u\" ]; then char=${char:$j:1}\n\
    \            elif [ ${char:$j:1} == \"a\" ]; then char=${char:$j:1}\n        \
    \    elif [ ${char:$j:1} == \"u\" ]; then char=${char:$j:1}\n            elif\
    \ [ ${char:$j:1} == \"e\" ]; then char=${char:$j:1}\n            elif [ ${char:$j:1}\
    \ == \"a\" ]; then char=${char:$j:1}\n            elif [ ${char:$j:1} == \"a\"\
    \ ]; then char=${char:$j:1}\n            elif [ ${char:$j:1} == \"o\" ]; then\
    \ char=${char:$j:1}\n            elif [ ${char:$j:1} == \"u\" ]; then char=${char:$j:1}\n\
    \            elif [ ${char:$j:1} == \"o\" ]; then char=${char:$j:1}\n        \
    \    elif [ ${char:$j:1} == \"u\" ]; then char=${char:$j:1}\n            fi\n\
    \        done\n        new_message+=\"${char:$count:1}${replace:$count2:1}\"\n\
    \        count+=2\n        count2+=2\n        replace+=\"a\"\n    done\n    echo\
    \ $new_message\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=$(echo\
    \ \"$message\" | sed 's/\\(.\\)\\(.*\\)\\(..\\)/\\2/g')\n    local result=\"\"\
    \n    for letter in $message; do\n        local vowel=\"$(echo \"$letter\" | sed\
    \ 's/\\(.\\)\\(.*\\)\\(..\\)/\\2/g')\"\n        local resultLetter=\"${letter^^}\"\
    \n        local resultVowel=\"${vowel^^}\"\n        resultLetter=\"$(echo \"$resultLetter\"\
    \ | sed 's/\\(.\\)\\(.*\\)\\(..\\)/\\2/g')\"\n        resultVowel=\"$(echo \"\
    $resultVowel\" | sed 's/\\(.\\)\\(.*\\)\\(..\\)/\\2/g')\"\n        if [ \"$vowel\"\
    \ = \"$resultVowel\" ]; then\n            resultLetter=\"$(echo \"$resultLetter\"\
    \ | sed 's/\\(.\\)\\(.*\\)\\(..\\)/\\1/g')\"\n            result=\"${resultLetter}${result}\"\
    \n        fi\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local string=\"$1\"\n    local alphabet=\"\
    ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    local len=${#alphabet}\n    local numVowels=0\n\
    \    local numConsonants=0\n    local result=\"\"\n    local i\n    for (( i =\
    \ 0; i < ${#string}; i++ )); do\n        local letter=\"${string: i 1}\"\n   \
    \     if [ \"$letter\" == \"A\" ]; then\n            letter=\"Z\"\n        elif\
    \ [ \"$letter\" == \"E\" ]; then\n            letter=\"J\"\n        elif [ \"\
    $letter\" == \"I\" ]; then\n            letter=\"K\"\n        elif [ \"$letter\"\
    \ == \"O\" ]; then\n            letter=\"P\"\n        elif [ \"$letter\" == \"\
    U\" ]; then\n            letter=\"T\"\n        elif [ \"$letter\" == \"Y\" ];\
    \ then\n            letter=\"B\"\n        fi\n        if [ \"$letter\" == \"a\"\
    \ ] || [ \"$letter\" == \"e\" ] || [ \"$letter\" == \"i\" ] || [ \"$letter\" ==\
    \ \"o\" ] || [ \"$letter\" == \"u\" ] || [ \"$letter\" == \"y\" ]; then\n    \
    \        numVowels+=1\n        fi\n        local nextLetter=\"${string: (i + 1)\
    \ 1}\"\n        if [ \"$nextLetter\" == \"a\" ] || [ \"$nextLetter\" == \"e\"\
    \ ] || [ \"$nextLetter\" == \"i\" ] || [ \"$nextLetter\" == \"o\" ] || [ \"$nextLetter\"\
    \ == \"u\" ] || [ \"$nextLetter\" == \"y\" ]; then\n            numVowels+=1\n\
    \        fi\n        local nextTwoLetters=\"${string: (i + 2) 2}\"\n        if\
    \ [ \"$nextTwoLetters\" == \"A\" ] || [ \"$nextTwoLetters\" == \"E\" ] || [ \"\
    $nextTwoLetters\" == \"I\" ] || [ \"$nextTwoLetters\" == \"O\" ] || [ \"$nextTwoLetters\"\
    \ == \"U\" ] || [ \"$nextTwoLetters\" == \"Y\" ]; then\n            numVowels+=1\n\
    \        fi\n        local nextThreeLetters=\"${string: (i + 3) 3}\"\n       \
    \ if [ \"$nextThreeLetters\" == \"A\" ] || [ \"$nextThreeLetters\" == \"E\" ]\
    \ || [ \"$nextThreeLetters\" == \"I\" ] || [ \"$nextThreeLetters\" == \"O\" ]\
    \ || [ \"$nextThreeLetters\" == \"U\" ] || [ \"$nextThreeLetters\" == \"Y\" ];\
    \ then\n            numVowels+=1\n        fi\n        local nextFourLetters=\"\
    ${string: (i + 4) 4}\"\n        if [ \"$nextFourLetters\" == \"A\" ] || [ \"$nextFourLetters\"\
    \ == \"E\" ] || [ \"$nextFourLetters\" == \"I\" ] || [ \"$nextFourLetters\" ==\
    \ \"O\" ] || [ \"$nextFourLetter\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7xc5x36x.sh: line 66: unexpected EOF while looking for matching
    `"''

    /tmp/tmp7xc5x36x.sh: line 70: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  echo -n \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr ':' '__' | tr ' ' '__' | tr ',' '__' | sed -e \"s/.*/&:/g\" | sed -e \"\
    s/\\([AEIOUaeiou]\\)\\(.\\)/\\1\\L\\2/g\" | sed -e \"s/\\([AEIOUaeiou]\\)/\\U\\\
    1/g\" | sed -e \"s/\\([AEIOUaeiou]\\)\\(.\\)/\\1\\L\\2/g\" | sed -e \"s/\\([AEIOUaeiou]\\\
    )/\\U\\1/g\" | sed -e \"s/\\([AEIOUaeiou]\\)\\(.\\)/\\1\\L\\2/g\" | sed -e \"\
    s/\\([AEIOUaeiou]\\)/\\U\\1/g\" | sed -e \"s/\\([AEIOUaeiou]\\)\\(.\\)/\\1\\L\\\
    2/g\" | sed -e \"s/\\([AEIOUaeiou]\\)/\\U\\1/g\" | sed -e \"s/\\([AEIOUaeiou]\\\
    )\\(.\\)/\\1\\L\\2/g\" | sed -e \"s/\\([AEIOUaeiou]\\)/\\U\\1/g\" | sed -e \"\
    s/\\([AEIOUaeiou]\\)\\(.\\)/\\1\\L\\2/g\" | sed -e \"s/\\([AEIOUaeiou]\\)/\\U\\\
    1/g\" | sed -e \"s/\\([AEIOUaeiou]\\)\\(.\\)/\\1\\L\\2/g\" | sed -e \"s/\\([AEIOUaeiou]\\\
    )/\\U\\1/g\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local alphabet=$(echo\
    \ $message|tr [a-z] [A-Z])\n    local count=0\n    local letter=0\n    local newMessage=''\n\
    \n    # Iterate through each character in message\n    for (( i=1; i<${#message};\
    \ i++ )) ; do\n        (( count++ ))\n        # If this letter exists in the alphabet\n\
    \        if [[ ${alphabet:i} == ${message:i} ]] ; then \n            (( letter\
    \ = $(( letter + 1 )) ))\n            (( ${alphabet:i:i} ))\n            # Set\
    \ the newMessage to the newMessage concatenated with the \n            # character\
    \ that appears ${letter} places ahead\n            newMessage=\"${newMessage}${message:i:i:letter}\"\
    \n            # Replace the character in the alphabet with an empty string\n \
    \           alphabet=${alphabet:i:i:1}\n        fi\n    done\n    echo \"$newMessage\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "tr: extra operand \u2018[A-Z]\u2019\nTry 'tr --help' for more information.\n"
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=\"$1\"\n  local i\n  local swapped\n\
    \  local swap\n  local last\n  local length\n  local vowels\n  local vowel\n \
    \ \n  # first find the length of message\n  length=${#msg} \n  \n  # initialise\
    \ array for vowels\n  vowels=(\"a\" \"e\" \"i\" \"o\" \"u\")\n\n  # initialise\
    \ empty string\n  swapped=\"\"\n  \n  # loop through message replacing vowels\n\
    \  for ((i = 0; i <= length; i++)) {\n    vowel=${msg:$i:1}\n    swap=${vowels:$vowel:2}\n\
    \    swapped+=\"${swap}\"\n  }\n\n  # return string\n  echo \"${swapped}\"\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local output=\"\"\
    \n    for ((i=1; i<=${#message}; i++)); do\n        local letter=${message:$i:1}\n\
    \        local vowels=\"aeiouAEIOU\"\n        if (( ${#vowels} > 0 )); then\n\
    \            for ((j=0; j<${#vowels}; j++)); do\n                if [[ $letter\
    \ == ${vowels:$j:1} ]]; then\n                    output+=\"$(echo \"$letter\"\
    \ |  sed 's/'\"${letter}\"'/\"'\"${LETTERS[${j}+1]}\"'/g')\"\n               \
    \     break\n                fi\n            done\n        else\n            output+=\"\
    $letter\"\n        fi\n    done\n    echo \"$output\"\n}\n\ncandidate() {\n  \
    \  encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \ #lowercase english letters\n  local i\n  local newmessage=\"\"\n  local letter\n\
    \  local vowel\n  local vowel_letter\n\n  for i=(${#message}); do\n    letter=${message:$i:1}\n\
    \    vowel=${message:$i:2}\n    vowel_letter=${alphabet:$(( ${#alphabet}+1 )):$((\
    \ ${#alphabet}-(${#vowel}-1) ))]\n    # Replace all vowels with vowel_letter 2\
    \ places ahead\n    newmessage+=$letter$vowel_letter\n  done\n\n  echo \"$newmessage\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphkq134tn.sh: line 23: syntax error near unexpected token `(''

    /tmp/tmphkq134tn.sh: line 23: `  for i=(${#message}); do''

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n\n    echo \"$(echo $message\
    \ | sed -e 's/a/A/g' -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/o/O/g'\
    \ -e 's/u/U/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g'\
    \ -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g'\
    \ -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g'\
    \ -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g'\
    \ -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g'\
    \ -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g'\
    \ -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g'\
    \ -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g'\
    \ -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g'\
    \ -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g'\
    \ -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/s/S/g' -e 's/t/T/g' -e 's/\n}\n\
    \ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkcg925qu.sh: line 17: unexpected EOF while looking for matching
    `''''

    /tmp/tmpkcg925qu.sh: line 34: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  local alpha=(a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z)\n  local vowel=(a e i o u)\n  local\
    \ swap=()\n  for i in ${msg}; do\n    if [[ ${alpha[i]} == ${msg} ]]; then\n \
    \     swap+=(${msg} ${alpha[i]})\n    fi\n  done\n  for i in ${swap[@]}; do\n\
    \    msg=${msg//${vowel[i]}/${alpha[${i}+1]}}\n  done\n  echo \"${msg}\"\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local vowels=\"a e i\
    \ o u\"\n  local alphabet=\"a b c d e f g h i j k l m n o p q r s t u v w x y\
    \ z\"\n  local decodedMessage\n  decodedMessage=\"\"\n  for word in $message;\
    \ do\n    i=0\n    for char in $word; do\n      if [[ \"$char\" == $vowels ]];\
    \ then\n        char=\"${alphabet[$(( $i+1 ))]}\"\n        (( i++ ))\n      fi\n\
    \      decodedMessage+=\"$char\"\n    done\n  done\n  echo \"$decodedMessage\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  echo $(echo $message\
    \ | tr a-z A-Z) | tr aeiouAEIOUA AOU\n}\n\ncandidate() {\n    encode \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  # This encodes your message in the way that\
    \ it swaps case of \n  # all letters, replaces all vowels in the message with\
    \ the letter \n  # that appears 2 places ahead of that vowel in the english alphabet.\
    \ \n  # Assume only letters. \n  # Examples:\n  # >>> $(encode \"test\")\n  #\
    \ \"TGST\"\n  # >>> $(encode \"This is a message\")\n  # \"tHKS KS C MGSSCGG\"\
    \n  # \n  message=$1\n  # Loop through all characters in the message\n  for i\
    \ in {1..${#message}}\n  # Replace all vowels with corresponding vowel 2 places\
    \ ahead of that vowel\n  do\n    letter=${message:i:1}\n    if [ \"$letter\" =\
    \ \"a\" ] || [ \"$letter\" = \"e\" ] || [ \"$letter\" = \"i\" ] || [ \"$letter\"\
    \ = \"o\" ] || [ \"$letter\" = \"u\" ]; then\n      letter=${letter:1}\n    else\n\
    \      letter=${letter:0:1}\n    fi\n    message=${message:0:1}${letter}${message:1:1}\n\
    \  done\n  echo ${message}\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1y05t_lc.sh: line 30: message: {1..4}: syntax error: operand expected
    (error token is "{1..4}")

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    message=$1\n    \n    local message_bytes=$(echo\
    \ \"$message\" | xxd -r -p | tr '[a-z]' '[A-Z]' | tr '[A-Z]' '[a-z]' | tr '[A-Z]'\
    \ '[0-9]')\n    \n    local encoded_message=\"\"\n    local i\n    \n    for ((\
    \ i=0; i<${#message_bytes}; i++ )) \n    do \n        encoded_message+=\"${message_bytes:$i:1}${message_bytes:$i+1:2}${message_bytes:$i+2:1}\"\
    \n    done\n    \n    echo \"$encoded_message\"\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    echo \"${message//[[:upper:]]/}\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local enc=\"\"\n    for\
    \ i in $msg; do\n        # Use a hash to map the alphabet letters to integers\
    \ \n        # that represent their location in the alphabet. \n        # For example,\
    \ if I use the letter \"T\" as the key \n        # for the hash, I would get a\
    \ return of 8 (the integer \n        # value associated with \"T\"). \n      \
    \  local hash=$(echo $i | tr -d [:alpha:] | sed -e 's/\\(.\\)/\\=\\1/g')\n   \
    \     local k=${hash}\n        enc=\"${enc},${k}\"\n    done\n    enc=${enc:1}\n\
    \    enc=${enc^^}\n    enc=${enc//$msg/}\n    enc=${enc//$enc/}\n    enc=${enc//,/$msg/}\n\
    \    enc=${enc//,/$msg/}\n    enc=${enc//,/-}\n    enc=${enc//,/-}\n    enc=${enc//-,-}\n\
    \    enc=${enc//-,-}\n    enc=${enc//-,}\n    enc=${enc//-,}\n    enc=${enc//,/}\n\
    \    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n\
    \    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n\
    \    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n\
    \    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n\
    \    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n\
    \    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n\
    \    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n    enc=${enc//,/}\n\
    \    enc=${enc//,/}\n    enc=${enc//,/}\n\n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    echo $1 | \n        sed \"s/^\\([A-Z]\\\
    )/\\U\\1/g\" | \n        sed \"s/\\([aeiou]\\)\\([A-Z]\\)/\\1\\3/g\" | \n    \
    \    sed \"s/\\([aeiou]\\)\\([A-Z]\\)/\\1\\U\\2/g\" | \n        sed \"s/\\([aeiou]\\\
    )\\([A-Z]\\)/\\1\\E\\2/g\" \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 29: invalid reference \3 on `s'' command''s
    RHS

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local enc\n    enc=\"\
    \"\n    for ((i = 1; i <= ${#message}; i++)); do\n        local letter=$( echo\
    \ $message | sed -n \"${i}p\" )\n        letter=${letter,,}\n        enc=${enc}${letter^^}\n\
    \    done\n    echo $enc\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local output=\"\"\
    \n    local vowels=\"a e i o u y\"\n    local alphabet=\"a b c d e f g h i j k\
    \ l m n o p q r s t u v w x y z\"\n    local a\n    local b\n    local c\n   \
    \ local d\n    local e\n    local f\n    local g\n    local h\n    local i\n \
    \   local j\n    local k\n    local l\n    local m\n    local n\n    local o\n\
    \    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n\
    \    local v\n    local w\n    local x\n    local y\n    local z\n    local llen\n\
    \    local len\n    local i\n    local j\n    local k\n    local l\n    local\
    \ m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local\
    \ s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local\
    \ y\n    local z\n    \n    for ((i=0; i < ${#message}; i++)); do\n        a=${message:i:1}\n\
    \        b=${message:i:2}\n        c=${message:i:3}\n        d=${message:i:4}\n\
    \        e=${message:i:5}\n        f=${message:i:6}\n        g=${message:i:7}\n\
    \        h=${message:i:8}\n        i=${message:i:9}\n        j=${message:i:10}\n\
    \        k=${message:i:11}\n        l=${message:i:12}\n        m=${message:i:13}\n\
    \        n=${message:i:14}\n        o=${message:i:15}\n        p=${message:i:16}\n\
    \        q=${message:i:17}\n        r=${message:i:18}\n        s=${message:i:19}\n\
    \        t=${message:i:20}\n        u=${message:i:21}\n        v=${message:i:22}\n\
    \        w=${message:i:23}\n        x=${message:i:24}\n        y=${message:i:25}\n\
    \        z=${message:i:26}\n        llen=${#a}\n        len=${#message}\n    \
    \    i=$((i+2))\n        j=$((j+2))\n        k=$((k+2))\n        l=$((l+2))\n\
    \        m=$((m+2))\n        n=$((n+2))\n        o=$((o+2))\n        p=$((p+2))\n\
    \        q=$((q+2))\n        r\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph285eg_u.sh: line 105: syntax error near unexpected token `}''

    /tmp/tmph285eg_u.sh: line 105: `}''

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  # encode message\n  echo -n \"$1\" | tr \"\
    A-Z\" \"a-z\" | tr \"aeiou\" \"bcdfghjklmnpqrstvwxyz\"\n}\n\ncandidate() {\n \
    \   encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message\n  local new_message\n\n  message=$1\n\
    \  new_message=$(echo $message | tr [a-z] [A-Z])\n  new_message=$(echo $new_message\
    \ | tr [aeiou] [A-Z])\n  new_message=$(echo $new_message | tr [A-Z] [a-z])\n \
    \ echo $new_message\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "tr: extra operand \u2018[A-Z]\u2019\nTry 'tr --help' for more information.\n\
    tr: extra operand \u2018x\u2019\nTry 'tr --help' for more information.\n"
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local original=\"$1\"\n    local encoded=\"\
    \"\n    local vowel=\"AEIOU\"\n    local position\n    for position in $(seq 0\
    \ $original); do\n        local current=\"${original:$position:1}\"\n        local\
    \ next=\"${original:$((position+1)):1}\"\n        local alphabet=\"AEIOU\"\n \
    \       if [[ \"$current\" == \"$next\" ]]; then\n            encoded=\"$encoded\"\
    $current\n        elif [[ \"$current\" == \"$vowel\" ]]; then\n            encoded=\"\
    $encoded\"$next\n        elif [[ \"$next\" == \"$vowel\" ]]; then\n          \
    \  encoded=\"$encoded\"$current\n        else\n            encoded=\"$encoded\"\
    $(echo \"$next\" | tr [a-z] [A-Z])\n        fi\n    done\n    echo \"$encoded\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "seq: invalid floating point argument: \u2018TEST\u2019\nTry 'seq --help'\
    \ for more information.\n"
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local message2=\"\"\n\
    \n  local alphabet=\"a b c d e f g h i j k l m n o p q r s t u v w x y z\"\n \
    \ local vowels=\"a e i o u\"\n\n  local x\n  for ((i = 0; i < ${#message}; i++));\
    \ do\n    x=\"${message:$i:1}\"\n    # replace first vowel in message\n    x=\"\
    ${x:0:1}${x:2:1}${x:1:1}${x:3:1}\"\n\n    # replace all vowels in message\n  \
    \  x=\"${x//[${vowels}]/.}\"\n    # replace all vowels in message 2\n    x=\"\
    ${x//[${vowels}]/.}\"\n\n    # replace all vowels in message 2\n    x=\"${x//[${alphabet}${vowels}]/.}\"\
    \n\n    message2=\"${message2}${x}\"\n  done\n\n  printf \"%s\\n\" \"$message2\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  # Set a variable to keep\
    \ track of the first vowel. \n  local vowel=\"${message:0:1}\"\n  # Set a variable\
    \ that keeps track of each character in the \n  # string while we loop through.\
    \ \n  local encode=\"${message:1}\"\n  while [[ ${encode:0:1} != $vowel ]]; do\n\
    \    encode=${encode:1:1}\n  done\n  while [[ ${encode:1:1} == $vowel ]]; do\n\
    \    encode=${encode:2:1}\n  done\n  echo $encode\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=36 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=3 encoding='utf-8'>
  timestamp: 1660059341
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    echo $1 | sed \"s/[^a-zA-Z]/./g\" | sed\
    \ \"s/a/.b./g\" | sed \"s/e/.e/g\" | sed \"s/i/.i/g\" | sed \"s/o/o.o/g\" | sed\
    \ \"s/u/u.g/g\" | sed \"s/y/y./g\" | sed \"s/g/g.g/g\" | sed \"s/s/s.s./g\" |\
    \ sed \"s/t/t.t./g\" | sed \"s/y/y.y./g\"\n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowel=\"a\"\
    \n    local output=\"\"\n\n    # Sum up how many times each letter appears in\
    \ the message.\n    local count=0\n    for (( i=0; i < ${#message}; i++ )); do\n\
    \        [[ -z ${message[i]} ]] && continue\n        (( count++ ))\n    done\n\
    \n    # Write the letters in order, with the vowels swapped out \n    # with the\
    \ letters 2 letters ahead of the vowels.\n    for (( i=0; i < ${#message}; i++\
    \ )); do\n        [[ -z ${message[i]} ]] && continue\n        if [[ \"${message[i]}\"\
    \ = a ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = e ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = i ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = o ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = u ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = y ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = o ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = e ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = i ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = u ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = y ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = o ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = e ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = i ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = u ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = y ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = o ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = e ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = i ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = u ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = y ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = o ]]; then\n            output += ${vowel}\n        elif [[ \"${message[i]}\"\
    \ = e ]]; then\n            output += ${vowel}\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfagsb3jz.sh: line 76: syntax error near unexpected token `}''

    /tmp/tmpfagsb3jz.sh: line 76: `}''

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local alpha=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n \
    \   local count=0\n    local newMessage=\"\"\n    local newLetter=\"\"\n\n   \
    \ for i in $(echo $message | sed -e 's/[][]//g' ); do\n      count=$(( $count\
    \ + 1 ))\n      for j in $vowels; do\n         if [[ $i =~ $j ]]; then\n     \
    \       echo $j\n            newLetter=$( echo $j | sed -e 's/a/A/g' -e 's/e/E/g'\
    \ -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/o/O/g'\
    \ -e 's/A/a/g' -e 's/E/e/g' -e 's/I/i/g' -e 's/O/o/g' -e 's/U/u/g' -e 's/O/o/g'\
    \ -e 's/U/u/g' )\n            newLetter=$(echo $newLetter | sed -e 's/A/a/g' -e\
    \ 's/E/e/g' -e 's/I/i/g' -e 's/O/o/g' -e 's/U/u/g' -e 's/o/O/g' -e 's/u/U/g' )\n\
    \         fi\n      done\n      newMessage=$newMessage$newLetter\n    done\n \
    \   echo $newMessage\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local output=\"\"\
    \n    local c=0\n    for (( i=0; i<${#message}; i++ )); do\n        c=$((c+1))\n\
    \        if (( c == 2 )); then \n            local letter=\"${message:i:1}\"\n\
    \            letter=${letter^^}\n            letter=${letter:0:1}\n          \
    \  output+=\"${letter}${letter}\"\n            ((i--))\n            ((c=0))\n\
    \        fi\n        output+=\"${message:i:1}\"\n    done\n    echo \"$output\"\
    \n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local string=$1\n  local alphabet=\"aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ\"\
    \n  local output\n  for letter in \"${string}\"; do\n    # First replace all vowels\
    \ with 'a'.\n    # Then replace 'a' with the letter that is 2 places ahead of\
    \ 'a'.\n    local letter_with_2places\n    letter_with_2places=\"${alphabet:$letter+2:1}\"\
    \n    output=\"$output$letter\"\n    output=\"$output$letter_with_2places\"\n\
    \  done\n  echo \"$output\"\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n\n    local messageString=$(echo\
    \ $message | sed -e 's/\\(.\\)/\\L\\1/')\n    local messageArray=($messageString)\n\
    \    local messageCount=${#messageArray[@]}\n\n    echo \"$message\" | sed -e\
    \ 's/.*/&\\n/g' | sed -e 's/[^A-Za-z]*//g' | sed -e 's/^/ /' -e 's/ $//'\n\n \
    \   for (( i = 1; i < ( messageCount ); i++ )); do\n        local currChar=${messageArray[$i]}\n\
    \        local previousChar=${messageArray[$((i - 1))]}\n\n        if [[ \"$currChar\"\
    \ == *[aeiou]* ]]; then\n            local currCount=$(echo \"$message\" | sed\
    \ -e 's/[^A-Za-z]*//g' | sed -e 's/^/ /' -e 's/ $//' | wc -c)\n            local\
    \ previousCount=$(echo \"$message\" | sed -e 's/[^A-Za-z]*//g' | sed -e 's/^/\
    \ /' -e 's/ $//' | wc -c)\n            local newChar=$((previousChar + currCount))\n\
    \n            if (( $newChar < 65 )); then\n                newChar=$((65 + $newChar))\n\
    \            fi\n\n            if (( $newChar > 90 )); then\n                newChar=$((90\
    \ - $newChar))\n            fi\n\n            local newCharString=$((newChar +\
    \ ${previousChar}))\n\n            local newString=${messageArray[$i]}\n     \
    \       local newStringArray=($newString)\n            local newStringCount=${#newStringArray[@]}\n\
    \            \n            for (( j = 1; j < ( newStringCount ); j++ )); do\n\
    \                local newChar=${newStringArray[$j]}\n\n                if [[\
    \ \"$newChar\" == *[aeiou]* ]]; then\n                    local newCount=$(echo\
    \ \"$newString\" | sed -e 's/[^A-Za-z]*//g' | sed -e 's/^/ /' -e 's/ $//' | wc\
    \ -c)\n                    local newCharIndex=$((j - 1))\n\n                 \
    \   if (( $newCount == 1 )); then\n                        newChar=$((newChar\
    \ + 1))\n                    fi\n\n                    local newCharString=$((newChar\
    \ + ${newCharIndex}))\n                    \n                    newString=${newStringArray[$j]}\n\
    \                    newStringArray=($newString)\n                    newStringCount=${#newStringArray[@]}\n\
    \                fi\n            done\n\n}\n\ncandidate() {\n    encode \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[\
    \ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"\
    ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n\
    \    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpit4up21n.sh: line 65: syntax error near unexpected token `}''

    /tmp/tmpit4up21n.sh: line 65: `}''

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    local alphabet=\"abcdefghijklmnopqrstuvwxyz\"\
    \ \n    local i=0\n    local encoded=\"\"\n    while [ $i -lt ${#msg} ]; do\n\
    \        if [[ \"$msg\" =~ [a-z] ]]; then\n            encoded+=\"${alphabet[$((${msg:$i:1}-${msg:$i:1}%(${#alphabet[@]}-1)+1))]}\"\
    \n        else\n            encoded+=\"$((${msg:$i:1}))\"\n        fi\n      \
    \  i=$((i+1))\n    done\n    echo $encoded\n}\n\ncandidate() {\n    encode \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    awk -v m=\"$1\" '{\n        for (i=1;i<=NF;i++)\
    \ {\n            $(NF-2)=$(NF-1)$(NF-2)\n            if ($(i+1)~/^[aeiou]$/) $(NF-1)=$(i+1)\n\
    \            $(NF-1)=$(NF-1)$(NF-1)\n        }\n        print\n    }'\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=19 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=16 encoding='utf-8'>
  timestamp: 1660059341
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    msg=$1\n    msg=${msg//[aeiouAEIOU]/<$((26+$((\
    \ $(echo $msg | sed -e 's/[aeiou]//g' -e 's/[AEIOU]//g' -e 's/e/E/g' -e 's/i/I/g'\
    \ -e 's/o/O/g' -e 's/u/U/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/0/O/g' -e 's/a/A/g'\
    \ -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/0/O/g' -e 's/a/A/g'\
    \ -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/0/O/g' -e 's/a/A/g'\
    \ -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/0/O/g' -e 's/a/A/g'\
    \ -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/0/O/g' -e 's/a/A/g'\
    \ -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/0/O/g' -e 's/a/A/g'\
    \ -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/0/O/g' -e 's/a/A/g'\
    \ -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/0/O/g' -e 's/a/A/g'\
    \ -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/0/O/g' -e 's/a/A/g'\
    \ -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g' -e 's/0/O/g' -e 's/a/A/g'\
    \ -e 's/e/E/g' -e 's/i/I/g' -e 's/o/O/g' -e 's/u/U/g\n}\n\ncandidate() {\n   \
    \ encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpivgiin6h.sh: line 16: unexpected EOF while looking for matching
    `''''

    /tmp/tmpivgiin6h.sh: line 33: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  \n  declare -a vowels # array of all vowels\n\
    \  declare -a words # array of all words\n\n  # declare an array that will hold\
    \ the letters swapped\n  # by letter. \n  declare -a swapped_letters=()\n  \n\
    \  # declare an array that will hold the letters swapped\n  # by vowel. \n  declare\
    \ -a swapped_vowels=()\n\n  # loop through every letter in the message\n  for\
    \ i in $@; do\n    \n    # if the letter is a vowel, add it to the swapped_vowels\
    \ array\n    if [[ \"$i\" == \"a\"* ]] || [[ \"$i\" == \"A\"* ]] || [[ \"$i\"\
    \ == \"e\"* ]] || [[ \"$i\" == \"E\"* ]] || [[ \"$i\" == \"i\"* ]] || [[ \"$i\"\
    \ == \"I\"* ]] || [[ \"$i\" == \"o\"* ]] || [[ \"$i\" == \"O\"* ]]; then\n   \
    \   swapped_vowels+=($i)\n      \n    # otherwise add it to the swapped_letters\
    \ array\n    else\n      swapped_letters+=( $(echo \"$i\" | awk '{print toupper($0)}')\
    \ )\n    fi\n  done\n  \n  # declare a counter to keep track of how long the longest\
    \ word is.\n  declare -i longest_word=0\n  \n  # loop through all the words in\
    \ the dictionary\n  # (could be a lot of words...)\n  for word in $(cat /usr/share/dict/words);\
    \ do\n    \n    # if the current word is longer than the previous longest\n  \
    \  # word and if each vowel in the word is in the swapped_vowels array\n    #\
    \ then add the current word to the swapped_letters array \n    # and increment\
    \ the longest word counter\n    if [ \"$longest_word\" -lt \"${#word}\" ] && \\\
    \n       $(echo \"${swapped_vowels[@]}\" | grep -q \"${word//[AEIOUaeiou]/}\"\
    ); then\n      swapped_letters+=(\"${word//[AEIOUaeiou]/}\")\n      longest_word=$((\
    \ $longest_word + 1 ))\n    fi\n  done\n  \n  # declare an array that will hold\
    \ the letters of the message\n  # that have just been swapped \n  declare -a swapped_letters_2=()\n\
    \  \n  # loop through every letter in the message\n  for i in $@; do\n    \n \
    \   # if the letter is a vowel, add it to the swapped_letters_2 array\n    if\
    \ [[ \"$i\" == \"a\"* ]\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc7ygswt8.sh: line 66: syntax error in conditional expression

    /tmp/tmpc7ygswt8.sh: line 66: syntax error near `]''

    /tmp/tmpc7ygswt8.sh: line 66: `    if [[ "$i" == "a"* ]''

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local var=\"$1\"\n    local i=0\n\n   \
    \ local out\n    local char\n    while [[ ${#var} -gt $i ]]; do\n        char=${var:$i:1}\n\
    \        case $char in\n            A|a|E|e|I|i|O|o|U|u)\n                char=\"\
    ${char:0:1}${char:1:1}${char:2:1}${char:3:1}${char:4:1}${char:5:1}\"\n       \
    \         ;;\n            L|l|A|a|I|i|O|o|U|u)\n                char=\"${char:0:1}${char:1:1}${char:2:1}${char:2:1}${char:2:1}${char:3:1}\"\
    \n                ;;\n            O|o|I|i|A|a|U|u)\n                char=\"${char:0:1}${char:1:1}${char:1:1}${char:1:1}${char:1:1}${char:2:1}\"\
    \n                ;;\n            N|n|T|t|S|s|R|r)\n                char=\"${char:0:1}${char:1:1}${char:1:1}${char:1:1}${char:1:1}${char:2:1}\"\
    \n                ;;\n            D|d|F|f)\n                char=\"${char:0:1}${char:1:1}${char:1:1}${char:1:1}${char:1:1}${char:2:1}\"\
    \n                ;;\n            G|g)\n                char=\"${char:0:1}${char:1:1}${char:1:1}${char:1:1}${char:1:1}${char:2:1}\"\
    \n                ;;\n            H|h)\n                char=\"${char:0:1}${char:1:1}${char:1:1}${char:1:1}${char:1:1}${char:2:1}\"\
    \n                ;;\n            L|l)\n                char=\"${char:0:1}${char:1:1}${char:1:1}${char:1:1}${char:1:1}${char:2:1}\"\
    \n                ;;\n            V|v)\n                char=\"${char:0:1}${char:1:1}${char:1:1}${char:1:1}${char:1:1}${char:2:1}\"\
    \n                ;;\n            Z|z)\n                char=\"${char:0:1}${char:1:1}${char:1:1}${char:1:1}${char:1:\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptkbc8p1x.sh: line 64: unexpected EOF while looking for matching
    `"''

    /tmp/tmptkbc8p1x.sh: line 68: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=$1\n    # first find all vowels\
    \ and put them in a list\n    local vowels=\"a e i o u\"\n    local vowelsarr=(\
    \ $(echo $vowels | sed \"s/ /\\n/g\") )\n    # now replace each vowel with the\
    \ letter that appears 2 places ahead of it\n    for i in ${vowelsarr[@]}; do\n\
    \        local re=\"$(echo $i | sed -e \"s/$i\\(.*\\)\\(.*\\)\\(.*\\)\\(.*\\)/\\\
    1\\4\\3\\2\\1/\")\"\n        msg=$(echo $msg | sed -e \"s/$i/$re\")\n    done\n\
    \    # now swap case\n    local msg1\n    msg1=$(echo $msg | tr '[:upper:]' '[:lower:]')\n\
    \    msg1=$(echo $msg1 | tr '[AEIOUaeiou]' '[AEIOUAEIOU]' )\n    msg1=$(echo $msg1\
    \ | tr '[AEIOUaeiou]' '[AEIOUAEIOU]' )\n    # now decode the new string\n    msg1=$(echo\
    \ $msg1 | tr '[AEIOUaeiou]' '[AEIOUAEIOU]' )\n    msg1=$(echo $msg1 | tr '[:upper:]'\
    \ '[:lower:]')\n    msg1=$(echo $msg1 | tr '[AEIOUaeiou]' '[AEIOUAEIOU]' )\n \
    \   msg1=$(echo $msg1 | tr '[AEIOUaeiou]' '[AEIOUAEIOU]' )\n    # encode the new\
    \ string\n    msg1=$(echo $msg1 | tr '[AEIOUAEIOU]' '[AEIOUaeiou]' )\n    msg1=$(echo\
    \ $msg1 | tr '[aeiouAEIOU]' '[AEIOUaeiou]' )\n    msg1=$(echo $msg1 | tr '[aeiouAEIOU]'\
    \ '[AEIOUaeiou]' )\n    msg1=$(echo $msg1 | tr '[AEIOUaeiou]' '[AEIOUaeiou]' )\n\
    \    msg1=$(echo $msg1 | tr '[AEIOUaeiou]' '[AEIOUaeiou]' )\n    msg1=$(echo $msg1\
    \ | tr '[AEIOUaeiou]' '[AEIOUaeiou]' )\n    msg1=$(echo $msg1 | tr '[AEIOUaeiou]'\
    \ '[AEIOUaeiou]' )\n\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 4: unterminated `s'' command

    sed: -e expression #1, char 4: unterminated `s'' command

    sed: -e expression #1, char 4: unterminated `s'' command

    sed: -e expression #1, char 4: unterminated `s'' command

    sed: -e expression #1, char 4: unterminated `s'' command

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=\"$1\"\n    local vowels=\"aeiouyAEIOUY\"\
    \n    echo \"${msg//[aeiouyAEIOUY]/$(echo ${vowels} | sed 's/\\(..\\)/\\L\\1/')}\"\
    \ | tr -cd 'a-zA-Z'\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\"\
    ) = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n   local str=\"$1\"\n   local res=\"\"\n  \
    \ local i=0 \n   local v='aeiouAEIOU'\n\n   for ((i=0; i<${#str}; i++ )); do \n\
    \     local c=\"${str[i]}\"\n     local j=0\n     local k=0\n     local ks=0\n\
    \     for ((j=0; j<${#v}; j++)); do \n       k=$(( $k + ${#v} - $j ))\n      \
    \ if [[ $c == $v ]]; then\n         ks=$(( ks + 1 ))\n       fi\n     done\n \
    \    if [[ $ks -gt 0 ]]; then\n       while [[ $ks -gt 0 ]]; do \n         res=\"\
    ${res}$c${v[$(( $k + $ks ))]}\"\n         ks=$(( ks - 1 ))\n       done\n    \
    \   res=\"${res}${v[$(( $k + ${#v} - $i ))]}\"\n     else\n       res=\"${res}$c\"\
    \n     fi\n   done\n   echo ${res}\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n\tlocal vowels=\"aeiouAEIOU\"\n\tlocal first=\"\
    aA\"\n\tlocal last=\"zZ\"\n\tlocal message=\"$1\"\n\n\tlocal count\n\tlocal i\n\
    \tlocal messageEncoded=\"\"\n\tfor i in $(seq 1 $#); do\n\t\tif [[ \"$message\"\
    \ == *\"$vowels\" ]]; then\n\t\t\tcount=\"$(echo \"$message\" | grep -E \"[${vowels}]\"\
    \ | wc -l)\"\n\t\t\tmessage=\"$message\" | tr \"${vowels}\" \"${first}${last}\"\
    \n\t\t\tmessageEncoded=\"$messageEncoded${first}${count}${last}\"\n\t\telse\n\t\
    \t\tcount=\"$(echo \"$message\" | grep -E \"[${vowels}]\" | wc -l)\"\n\t\t\tmessage=\"\
    $message\" | tr \"${vowels}\" \"${first}${last}\"\n\t\t\tmessageEncoded=\"$messageEncoded${first}${last}${count}\"\
    \n\t\tfi\n\tdone\n\n\techo \"$messageEncoded\"\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message \n    message=$(echo $1 |\
    \ tr '[:upper:]' '[:lower:]' | sed 's/[aeiouAEIOU]/./g' | sed 's/./ & /g' | tr\
    \ 'A-Z' 'a-z')\n    message=$(echo $message | sed 's/\\(.\\)/\\l&/g')\n    echo\
    \ $message\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=\"$1\"\n    local vowels=$(echo\
    \ $message | sed -e 's/[aeiouAEIOU]/&/g')\n    local result=$(echo $message |\
    \ sed -e 's/\\([bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]\\)\\([aeiouAEIOU]\\\
    )/\\1\\2/g')\n    echo $result\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local messageArray=($message)\n\
    \  local length=${#messageArray[@]}\n  local messageLength=${#message}\n  local\
    \ vowel=\"AEIOUY\"\n  local result=''\n  local temp=''\n  local vowelCount=2\n\
    \  local letter\n  local letterCount\n  local lengthOfLetter\n  \n  while [ $letterCount\
    \ -lt $length ]; do\n    letter=${messageArray[$letterCount]}\n    letterCount=$((letterCount+1))\n\
    \    lengthOfLetter=${#letter}\n    \n    if [ $lengthOfLetter -eq 1 ]; then\n\
    \      temp=$(echo $letter | tr '[:upper:]' '[:lower:]')\n      temp=${temp:2}\n\
    \      result=\"${result}$temp\"\n    fi\n  done\n  \n  \n  local counter\n  for\
    \ (( counter=1; counter <= $vowelCount; counter++ )) do\n    if [[ $((counter-2))\
    \ -eq 0 ]]; then\n      temp=$(echo $vowel | tr '[:upper:]' '[:lower:]')\n   \
    \   temp=${temp:2}\n      result=\"${result}$temp\"\n    fi\n  done\n  \n  echo\
    \ $result\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") =\
    \ \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate\
    \ \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt\
    \ KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6mry4_rd.sh: line 27: [: -lt: unary operator expected

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local c=${message:0:1}\n\
    \  local message=${message:1}\n  local vowels=\"aeiouyAEIOUY\"\n  local vowel_array=($vowels)\n\
    \  local i=0 j=0\n  while [ $j -lt ${#message} ]; do\n    local l=${message:$j:1}\n\
    \    local m=$(echo $l | tr [A-Z] [a-z])\n    if [[ ${vowel_array[$i]} = ${l}\
    \ ]]; then\n      local h=${message:$j:2}\n      if [[ ${h:0:2} = \"ae\" || ${h:0:2}\
    \ = \"Ae\" ]]; then\n        h=${h:1}\n      elif [[ ${h:0:2} = \"o\" || ${h:0:2}\
    \ = \"O\" ]]; then\n        h=${h:1}\n      elif [[ ${h:0:2} = \"i\" || ${h:0:2}\
    \ = \"I\" ]]; then\n        h=${h:1}\n      else\n        h=${h:2}\n      fi\n\
    \      message=$message${l:0:1}${h:1}\n      i=$(($i+1))\n      j=$(($j+1))\n\
    \      continue\n    else\n      message=$message${l:0:1}${m:1}\n      i=$(($i+1))\n\
    \      j=$(($j+1))\n    fi\n  done\n  echo $message\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=34 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=13 encoding='utf-8'>
  timestamp: 1660059341
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local string=$1\n    local out=''\n   \
    \ local i\n    for (( i=0; i<${#string}; i++ )); do\n        case ${string:i:1}\
    \ in \n            'a'|'e'|'i'|'o'|'u') \n                let \"i++\"\n      \
    \          out+=${string:i:1}\n                out+=${string:i+1:2}\n        \
    \    ;;\n            'A'|'E'|'I'|'O'|'U') \n                let \"i+=1\"\n   \
    \             out+=${string:i:1}\n                out+=${string:i+1:2}\n     \
    \       ;;\n            *) \n                let \"i++\"\n                out+=${string:i:1}\n\
    \            ;;\n        esac\n    done\n    echo \"$out\"\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local msg=$1\n  # Set up the result string\n\
    \  local rmsg=\"\"\n  \n  # Swap case\n  local caps=false\n  local cap=0\n  local\
    \ capchar=\"a\"\n  for char in ${msg[@]}; do\n    local upper=${char:0:1}\n  \
    \  local lower=${char:1:1}\n    if [ \"$caps\" != true ]; then\n      if [ \"\
    $upper\" == \"A\" ] || [ \"$upper\" == \"E\" ] || [ \"$upper\" == \"I\" ] || [\
    \ \"$upper\" == \"O\" ] || [ \"$upper\" == \"U\" ]; then\n        caps=\"true\"\
    \n        cap=$((cap+1))\n        if [ \"$cap\" -eq 2 ]; then\n          capchar=$lower\n\
    \        else\n          capchar=\"${capchar}${upper}\"\n        fi\n      fi\n\
    \    else\n      if [ \"$upper\" == \"A\" ] || [ \"$upper\" == \"E\" ] || [ \"\
    $upper\" == \"I\" ] || [ \"$upper\" == \"O\" ] || [ \"$upper\" == \"U\" ]; then\n\
    \        caps=\"false\"\n      fi\n    fi\n  done\n  \n  # Replace vowels\n  for\
    \ char in ${msg[@]}; do\n    local vowels=\"aeiouAEIOU\"\n    local vowel=\"${vowels:$((${#vowels}*2-1))}\"\
    \n    if [ \"${caps:-}\" == \"true\" ]; then\n      vowel=\"${upper:0:1}${vowel}\"\
    \n    fi\n    if [ \"${msg:0:1}\" == \"$vowel\" ]; then\n      rmsg+=\"${capchar}\"\
    \n    else\n      rmsg+=\"${char}\"\n    fi\n  done\n  \n  echo $rmsg\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local message=$1\n  local encodedMessage\n\
    \  local vowels=\"a e i o u\"\n  local others=\"b c d f g h j k l m n p q r s\
    \ t v w x y z\"\n  local othersIndex=0\n  for ((i=0; i < ${#message}; i++)); do\n\
    \    if [[ \"${message:i:1}\" == \"z\" ]]; then\n      encodedMessage+=\"${others}\"\
    \n      othersIndex=0\n      break\n    else\n      if [[ \"${message:i:1}\" ==\
    \ \"a\" && ${vowels:r:1} == \"e\" ]]; then\n        encodedMessage+=\"${others}\"\
    \n        othersIndex=0\n        break\n      fi\n      if [[ \"${message:i:1}\"\
    \ == \"i\" && ${vowels:r:1} == \"o\" ]]; then\n        encodedMessage+=\"${others}\"\
    \n        othersIndex=0\n        break\n      fi\n      if [[ \"${message:i:1}\"\
    \ == \"e\" && ${vowels:r:1} == \"i\" ]]; then\n        encodedMessage+=\"${others}\"\
    \n        othersIndex=0\n        break\n      fi\n      if [[ \"${message:i:1}\"\
    \ == \"o\" && ${vowels:r:1} == \"i\" ]]; then\n        encodedMessage+=\"${others}\"\
    \n        othersIndex=0\n        break\n      fi\n      if [[ \"${message:i:1}\"\
    \ == \"u\" && ${vowels:r:1} == \"a\" ]]; then\n        encodedMessage+=\"${others}\"\
    \n        othersIndex=0\n        break\n      fi\n      if [[ \"${message:i:1}\"\
    \ == \"y\" && ${vowels:r:1} == \"u\" ]]; then\n        encodedMessage+=\"${others}\"\
    \n        othersIndex=0\n        break\n      fi\n      if [[ \"${message:i:1}\"\
    \ == \"b\" && ${vowels:r:1} == \"u\" ]]; then\n        encodedMessage+=\"${others}\"\
    \n        othersIndex=0\n        break\n      fi\n      if [[ \"${message:i:1}\"\
    \ == \"c\" && ${vowels:r:1} == \"u\" ]]; then\n        encodedMessage+=\"${others}\"\
    \n        othersIndex=0\n        break\n      fi\n      if [[ \"${message:i:1}\"\
    \ == \"d\" && ${vowels:r:1} == \"u\" ]]; then\n        encodedMessage+=\"${others}\"\
    \n        othersIndex=0\n        break\n      fi\n      if [[ \"${message:i:1}\"\
    \ == \"f\" && ${vowels:r:1} == \"u\" ]]; then\n        encodedMessage+=\"${others}\"\
    \n        othersIndex=0\n        break\n      fi\n      if [[ \"${message:i:1}\"\
    \ == \"g\" && ${vowels:\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"\
    Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[\
    \ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpm2yt1yt7.sh: line 77: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpm2yt1yt7.sh: line 77: syntax error near `}''

    /tmp/tmpm2yt1yt7.sh: line 77: `}''

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  msg=$1\n  len=${#msg}\n  case ${len} in\n\
    \    0)\n      echo \"$msg\"\n      ;;\n    1)\n      echo \"$msg\"\n      ;;\n\
    \    *)\n      # encode each character in turn\n      for (( c=0; c<${#msg}; c++))\n\
    \      do\n        ch=${msg:$c:1}\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\
    \n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n   \
    \     ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n       \
    \ ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"\
    ${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\
    \n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n   \
    \     ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n       \
    \ ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"\
    ${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\
    \n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n   \
    \     ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n       \
    \ ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"\
    ${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\
    \n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n   \
    \     ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n       \
    \ ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"\
    ${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\
    \n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n   \
    \     ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n        ch=\"${ch^^}\"\n       \
    \ ch=\"${ch^^}\"\n        ch=\"${\n}\n\ncandidate() {\n    encode \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n    [[ $(candidate\
    \ \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\") = \"ygs\" ]]\n  \
    \  [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate\
    \ \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbj_7asa8.sh: line 103: unexpected EOF while looking for matching
    `"''

    /tmp/tmpbj_7asa8.sh: line 107: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local -i idx=0\n    local -i len=${#1}\n\
    \    local -i start\n    local -i len2\n    local -i letter\n    local -i replacement\n\
    \n    len2=${#2}\n    replacement=\"${2:2:1}\"\n    for (( idx=0; idx<len; idx++\
    \ )); do\n        letter=${1:idx:1}\n        if [ \"$letter\" == $letter ]; then\n\
    \            local -i tmp\n            local -i count\n            tmp=${letter}\n\
    \            count=0\n            while [[ $tmp != ${letter:2:1} ]]; do\n    \
    \            tmp=${tmp:2:1}\n                count=$((count+1))\n            done\n\
    \            tmp=${tmp:1:1}\n            while [[ $tmp != $letter && $count -gt\
    \ 0 ]]; do\n                tmp=${tmp:2:1}\n                count=$((count-1))\n\
    \            done\n            if [ \"$count\" -eq 0 ]; then\n               \
    \ letter=${letter:1}\n            fi\n            \n        fi\n        echo -n\
    \ \"$letter\"\n    done\n    echo -n \"$replacement\"\n}\n\ncandidate() {\n  \
    \  encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=32 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=30 encoding='utf-8'>
  timestamp: 1660059341
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  message=$1\n  shift\n  output=\"\"\n  for\
    \ i in $message\n  do\n    case \"$i\" in\n       a|e|i|o|u)\n         output+=$i\n\
    \         output+=$i\n         output+=$i\n         output+=$i\n         ;;\n\
    \       e|i|o|u)\n         output+=$i\n         output+=$i\n         output+=$i\n\
    \         output+=$i\n         ;;\n       a|o)\n         output+=$i\n        \
    \ output+=$i\n         output+=$i\n         output+=$i\n         ;;\n       u)\n\
    \         output+=$i\n         output+=$i\n         output+=$i\n         output+=$i\n\
    \         ;;\n    esac\n  done\n  echo $output\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local a=\"abcdefghijklmnopqrstuvwxyz\"\n\
    \  local b=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  local vowels=\"aeiouyAEIOUY\"\n \
    \ local message=\"$2\"\n  local msg=\"\"\n  local i\n  local j\n  local k\n  for\
    \ ((i=0;i<${#message};i++));\n  do\n    msg=\"${msg}${message:$i:1}\"\n  done\n\
    \  for ((i=0;i<${#message};i++));\n  do\n    j=0\n    while ((${#msg}<${#message}+${#a}));\n\
    \    do\n      if [[ ${msg:$j:1} == ${a:$i:1} ]]; then\n        msg=\"${msg:$j:1}\"\
    \n      else\n        j=$((j+1))\n      fi\n    done\n    for ((k=0;k<${#a};k++));\n\
    \    do\n      if [[ ${vowels:$i:1} == ${b:$k:1} ]]; then\n        i=$((i+1))\n\
    \      fi\n    done\n    msg=\"${msg:0:$i}\"\n  done\n  echo \"$msg\"\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  local char\n  local prevchar\n  local encoded\n\
    \  local i\n\n  prevchar=$1\n  encoded=\"\"\n\n  for char in $1 \n  do \n    i=\"\
    ${#char}\"\n    if [ $i -eq 1 ]; then\n      char=`echo ${char} | tr \"[:upper:]\"\
    \ \"[:lower:]\"`\n    else\n      char=`echo ${char} | tr \"[:upper:]\" \"[:lower:]\"\
    \ | sed -e \"s/[aeiouAEIOU]/\\L$char/g\"`\n    fi\n    encoded=\"$encoded$char\"\
    \n    prevchar=\"$char\"\n  done\n\n  echo \"$encoded\"\n}\n\ncandidate() {\n\
    \    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") =\
    \ \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiouAEIOU\"\
    \n    local output=\" \"\n\n    for (( i=0; i < ${#message}; i++ ))\n    do\n\
    \        local current=${message:$i:1}\n        local vowel=\"${vowels:$i:1}\"\
    \n        local next=${message:$((i+1)):1}\n        if [[ \"$current\" == \"$next\"\
    \ ]]\n        then\n            echo \"$current\"\n        else\n            if\
    \ [[ \"$current\" =~ \"$vowel\" ]]\n            then\n                local next=\"\
    ${message:$i:2}\"\n                if [[ \"$next\" =~ \"$vowel\" ]]\n        \
    \        then\n                    output+=\"${message:0:$i}\"\n             \
    \       output+=\"$next\"\n                    output+=\"${message:$((i+1)):2}\"\
    \n                    echo \"$output\"\n                else\n               \
    \     output+=\"$current\"\n                    output+=\"${message:$i:2}\"\n\
    \                    echo \"$output\"\n                fi\n            else\n\
    \                output+=\"$current\"\n                output+=\"${message:$i:2}\"\
    \n                echo \"$output\"\n            fi\n        fi\n    done\n}\n\n\
    candidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: -1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n  msg=$1\n  msg2=$(encode $msg)\n  echo $msg2\n\
    }\n\ncandidate() {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"TEST\") = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n\
    \    [[ $(candidate \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\"\
    ) = \"tHKS KS C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\"\
    ) = \"k dQnT kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=37 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=14 encoding='utf-8'>
  timestamp: 1660059341
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local msg=${1}\n\n    # replace all vowels\
    \ in msg with an alternate vowel\n    local alt=\"M\"\n    msg=${msg//[aeiouAEIOU]/$alt}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ two places ahead of that vowel\n    local alt2=\"Z\"\n    msg=${msg//$alt/$alt2}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ three places ahead of that vowel\n    local alt3=\"Y\"\n    msg=${msg//$alt2/$alt3}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ four places ahead of that vowel\n    local alt4=\"X\"\n    msg=${msg//$alt3/$alt4}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ five places ahead of that vowel\n    local alt5=\"W\"\n    msg=${msg//$alt4/$alt5}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ six places ahead of that vowel\n    local alt6=\"V\"\n    msg=${msg//$alt5/$alt6}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ seven places ahead of that vowel\n    local alt7=\"U\"\n    msg=${msg//$alt6/$alt7}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ eight places ahead of that vowel\n    local alt8=\"T\"\n    msg=${msg//$alt7/$alt8}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ nine places ahead of that vowel\n    local alt9=\"S\"\n    msg=${msg//$alt8/$alt9}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ ten places ahead of that vowel\n    local alt10=\"R\"\n    msg=${msg//$alt9/$alt10}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ eleven places ahead of that vowel\n    local alt11=\"Q\"\n    msg=${msg//$alt10/$alt11}\n\
    \n    # replace all vowels in alternate vowel with the vowel \n    # that comes\
    \ twelve places ahead of that vowel\n    local alt12\n}\n\ncandidate() {\n   \
    \ encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"\
    tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    local message=$1\n    local vowels=\"aeiou\"\
    \n    local output\n    output=$(printf \"%s\\n\" \"${message//[aeiou]/$((awk\
    \ 'BEGIN{a=1} { print substr(a,1,1) }' <<< ${message}))\")\n    local output2\n\
    \    output2=$(printf \"%s\\n\" \"${message//[aeiou]/$((awk 'BEGIN{a=1} { print\
    \ substr(a,1,1) }' <<< ${output}))\")\n    local output3\n    output3=$(printf\
    \ \"%s\\n\" \"${message//[aeiou]/$((awk 'BEGIN{a=1} { print substr(a,1,1) }' <<<\
    \ ${output2}))\")\n    local output4\n    output4=$(printf \"%s\\n\" \"${message//[aeiou]/$((awk\
    \ 'BEGIN{a=1} { print substr(a,1,1) }' <<< ${output3}))\")\n    local output5\n\
    \    output5=$(printf \"%s\\n\" \"${message//[aeiou]/$((awk 'BEGIN{a=1} { print\
    \ substr(a,1,1) }' <<< ${output4}))\")\n    echo \"${output5}\"\n}\n\ncandidate()\
    \ {\n    encode \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\"\
    ) = \"tgst\" ]]\n    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate\
    \ \"YES\") = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS\
    \ C MGSSCGG\" ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT\
    \ kNqW wHcT Tq wRkTg\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjeihwu00.sh: line 40: unexpected EOF while looking for matching
    `"''

    /tmp/tmpjeihwu00.sh: line 44: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059336
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that takes a message, and encodes in such\
    \ a \n# way that it swaps case of all letters, replaces all vowels in \n# the\
    \ message with the letter that appears 2 places ahead of that \n# vowel in the\
    \ english alphabet. \n# Assume only letters. \n# Examples:\n# >>> $(encode \"\
    test\")\n# \"TGST\"\n# >>> $(encode \"This is a message\")\n# \"tHKS KS C MGSSCGG\"\
    \n#\n# $1 is a string\nencode() {\n    message=$1\n    first=$2\n    second=$3\n\
    \    shift 3\n    echo ${message//$first/$second}\n}\n\ncandidate() {\n    encode\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"TEST\") = \"tgst\" ]]\n\
    \    [[ $(candidate \"Mudasir\") = \"mWDCSKR\" ]]\n    [[ $(candidate \"YES\"\
    ) = \"ygs\" ]]\n    [[ $(candidate \"This is a message\") = \"tHKS KS C MGSSCGG\"\
    \ ]]\n    [[ $(candidate \"I DoNt KnOw WhAt tO WrItE\") = \"k dQnT kNqW wHcT Tq\
    \ wRkTg\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059336

language: sh
name: HumanEval_122_add_elements
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=( \"${@}\" )\n    local k=\"${2}\"\n    local result\n\n  \
    \  for ((i=0; i<\"${#arr[@]}\"; i++)); do\n        result=\"$(($result + ${arr[i]}\
    \ + ${arr[i]} + ${arr[i]}))\"\n    done\n\n    # Remove extra digits if k is too\
    \ large\n    if (( ${#result} > ${k} )) ; then\n        result=$(($result % ${#arr[@]}))\n\
    \    fi\n\n    echo \"$result\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv2uoooac.sh: line 19: + 1 -2 -3 41 57 76 87 88 99 + 1 -2 -3 41
    57 76 87 88 99 + 1 -2 -3 41 57 76 87 88 99: syntax error in expression (error
    token is "41 57 76 87 88 99 + 1 -2 -3 41 57 76 87 88 99 + 1 -2 -3 41 57 76 87
    88 99")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=( \"${@}\" )\n    local k # k is a positive integer\n    local\
    \ sum\n\n    k=\"${arr[0]}\"\n    for i in \"${arr[@]:1}\"; do\n        (( k >=\
    \ $i ))\n        if (( k <= $i )); then\n            k=$i\n            sum=$((\
    \ sum + $i ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n \
    \   add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvntfuvq7.sh: line 20: ((: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    /tmp/tmpvntfuvq7.sh: line 21: ((: 1 -2 -3 41 57 76 87 88 99: syntax error in expression
    (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr k ret\n  arr=$(echo $1 | tr ' ' '\\n' | sort -n)\n  k=$(echo\
    \ $2 | tr -d '\\n' | wc -c)\n  ret=$(echo $2 | awk '{printf \"%s%d\\t\", $1, $1}')\n\
    \  for i in $(seq 1 $((k-1)) )\n  do\n    if [ $i -gt $k ]\n    then\n      echo\
    \ \"$ret\"\n      break\n    fi\n    ret=$(echo $ret | sed 's/.*/& & & /' | sed\
    \ 's/ &/, /' | sed \"s/& & /& /g\")\n  done\n  echo \"$ret\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local a b\n    local k\n    read -r -a a <<< \"$1\"\n    read -r -a b\
    \ <<< \"$2\"\n    k=${#a[0]}\n    local sum=0\n    for ((i=1;i<k;i++)) do\n  \
    \      sum=$((sum+b[i]))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local output=\"\"\n    local tmp\n\
    \    local j=0\n    for ((i = 0; i < ${#arr}; i++)); do\n        j=$((i+k))\n\
    \        tmp=${arr[i]}\n        while [[ ${#arr[j]} -le 2 ]]; do\n           \
    \ arr[j]=${arr[j]}0\n            j=$((j+1))\n        done\n        tmp=${arr[j]}\n\
    \        output+=\"${tmp}\"\n    done\n    echo \"$output\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=17 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=15 encoding='utf-8'>
  timestamp: 1660055456
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum\n  local i\n\n  local arr_length=${#arr[@]}\n\
    \  local max_digits\n  local i\n  \n  max_digits=${arr_length}\n  if [ $max_digits\
    \ -lt $k ]; then\n    max_digits=$k\n  fi\n\n  sum=$(echo \"${arr[0]} ${arr[1]}\
    \ ${arr[2]} ${arr[3]} ${arr[4]} ${arr[5]} ${arr[6]} ${arr[7]} ${arr[8]}\" | tr\
    \ -s \" \" | awk -v n=$max_digits 'NR > n {print $0}' | grep -v \"^ *$\" | sed\
    \ 's/\\s/+/g')\n\n  # The loop below is just to trim trailing zero digits from\
    \ $sum\n  i=$((k-1))\n  while [ $i -ge 0 ] && [[ $sum == ${sum:0:i} ]]; then\n\
    \    i=$((i-1))\n  done\n\n  while [ $i -ge 0 ] && [[ ${sum} == ${sum:$i:1} ]];\
    \ then\n    i=$((i-1))\n  done\n\n  while [ $i -ge 0 ] && [[ ${sum} == ${sum:0:i}\
    \ ]]; then\n    i=$((i-1))\n  done\n\n  while [ $i -ge 0 ] && [[ ${sum} == ${sum:0:i}\
    \ ]]; then\n    i=$((i-1))\n  done\n  \n  # Add one more zero to trim off trailing\
    \ zero from $sum\n  ((i--))\n  while [ $i -ge 0 ] && [[ ${sum} == ${sum:0:i} ]];\
    \ then\n    i=$((i-1))\n  done\n\n  sum=$(( ${sum:0:i}+ ${sum:$i} ))\n\n  echo\
    \ $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2p4z9wcq.sh: line 32: syntax error near unexpected token `then''

    /tmp/tmp2p4z9wcq.sh: line 32: `  while [ $i -ge 0 ] && [[ $sum == ${sum:0:i} ]];
    then''

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=( $1 )\n    k=( $2 )\n    sum=0\n    while [ ${#arr[@]} -gt 0 ];\
    \ do\n        if [ ${#arr[@]} -eq 1 ]\n        then\n            sum=$( echo \"\
    ${arr[@]}\" | cut -c4- )\n            break\n        else\n            first_two_digits=$(\
    \ echo \"${arr[@]:0:2}\" )\n            arr=( \"${arr[@]:2}\"  )\n           \
    \ sum=$( echo \"${sum}${first_two_digits}\"${arr[@]} )\n        fi\n    done\n\
    \    echo \"${sum}\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n        local arr=$1\n        local k=$2\n        local sum=0\n        local\
    \ j=0\n        local i\n        local n\n        for (( i=0; i < ${#arr[@]}; i++\
    \ )); do\n                if (( ${arr:$i} > 10 )); then\n                    \
    \    n=\"${arr:$i}\"\n                        arr=\"${arr:0:$i} ${arr:$i+1}\"\n\
    \                        sum=$(( ${sum} + $n ))\n                fi\n        done\n\
    \        echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppjgms3nx.sh: line 21: ((: 1 -2 -3 41 57 76 87 88 99 > 10 : syntax
    error in expression (error token is "41 57 76 87 88 99 > 10 ")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=$1\n    k=$2\n    local arr=($arr)\n    local sum\n    local i\n\
    \    local j\n\n    for (( i=0; i <= $(( k )); i++ )); do\n        sum=$(( sum\
    \ + $arr[i] ))\n    done\n\n    sum=$(( $sum + $arr[$(( k ))] ))\n\n    echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbmyn34ui.sh: line 22: sum + 1[i] : syntax error: invalid arithmetic
    operator (error token is "[i] ")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  arr=($1);\n  k=$2;\n  local sum=0;\n  echo \"$arr\" | while read line\n\
    \  do\n    arr2=( $line );\n    sum_digit=0;\n    for el in \"${arr2[@]}\"\n \
    \   do\n      sum_digit+=$el;\n    done\n    if [ $sum_digit -gt $k ]\n    then\n\
    \      sum=$(($sum+$sum_digit));\n    fi\n  done\n  echo $sum;\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    # Write your code here\n    arr=($1)\n    k=$2\n    sum=0\n    for i\
    \ in $(seq 0 $((k-1))); do\n        ((i<k)) && sum=$(expr $sum + ${arr[i]})\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=(${1// / })\n    local k=${2//-/}\n    local sum=0\n    for\
    \ ((i=0; i < ${#arr[@]}; i++)); do\n        local value=${arr[$i]}\n        for\
    \ ((j=0; j < k; j++)); do\n            value=$(echo $value | cut -d' ' -f1-${k+j})\n\
    \        done\n        sum=$((sum+value))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n\
    cut: invalid field value \u2018j\u2019\nTry 'cut --help' for more information.\n"
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  shift\n  arr=( \"$arr\" ); arr=(\
    \ \"${arr[@]}\" ); k=( \"${k}\" ); k=( \"${k[@]}\" ); k=$((k+1));\n  local res=$((\
    \ 10#$k + ${arr[@]:0:k} ));\n  for ((i=1; i <= k; ++i)); do\n    if [[ ${arr[i]}\
    \ != ${arr[i-1]} ]]; then\n      res=$(( 10#$res + ${arr[i]} ));\n    fi;\n  done;\n\
    \  echo \"$res\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp19kzsjmg.sh: line 18: 10#4 + 1 -2 -3 41 57 76 87 88 99 : syntax
    error in expression (error token is "41 57 76 87 88 99 ")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  arr=($1)\n  k=$2\n  sum=0\n  for i in $(seq 0 $((k-1))); do\n      if \
    \ [[ ${arr[$i]} == *[^ ] ]]; then\n          sum=$((sum + arr[$i]))\n      fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpktr9uzk2.sh: line 18: syntax error in conditional expression

    /tmp/tmpktr9uzk2.sh: line 18: syntax error near `]''

    /tmp/tmpktr9uzk2.sh: line 18: `      if  [[ ${arr[$i]} == *[^ ] ]]; then''

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=($1);\n  local k=$2;\n  local sum=0;\n  local first=$( head -$k\
    \ $arr );\n\n  for i in $( seq $k ); do\n    if [ $i -lt $k ]; then\n      local\
    \ second=$( tail -1 $arr )\n      sum=$(( $sum + $first + $second ));\n    fi;\n\
    \  done;\n\n  echo $sum;\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpq55x12so.sh: line 22: 0 +  +  : syntax error: operand expected
    (error token is "+  ")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=($1)\n  local k=$2\n  local sum=\n  (( ${#arr[@]} <= k )) &&\
    \ return 0\n  for (( i=0; i<k; i++ )); do\n    (( ${arr[i]} > ${arr[k-i]} )) &&\
    \ break\n    sum=$(( ${sum} + ${arr[i]} ))\n  done\n  (( i < k )) && sum=$(( ${sum}\
    \ + ${arr[k]} ))\n  echo $(( ${sum} ))\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=$1\n    k=$2\n    sum=0\n    len=${#arr[@]}\n    for i in $(seq 0\
    \ $((len-k-1))); do\n\tsum=$(expr $sum + ${arr[$i]})\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr k\n  arr=$1\n  k=$2\n  echo \"$arr\" | awk '{ for (i=1; i<=k;\
    \ i++) {\n  sum=0; for (j=i; j<k; j++) {\n  sum += $j;\n  }\n  printf(\"%d\\t%d\\\
    n\", i, sum); \n  i=i+1;\n  } }'\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr i k res\n    arr=$1\n    k=$2\n    res=\"\"\n    for i in $(seq\
    \ 1 $((${#arr}-1)))\n    do\n        if [ $((${arr:$i:1})) -le $k ]\n        then\n\
    \            res=\"${res} ${arr:$i}\"\n        fi\n    done\n    if [[ ${#res}\
    \ -eq 0 ]]\n    then\n        res=\"$arr\"\n    fi\n    echo $res\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbkn1rtsq.sh: line 20: -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr k \n    arr=$1\n    k=$2\n    local answer=0\n    while ((\
    \ k <= ${#arr}-1 )); do\n        answer=$(( $answer + ${arr:$k:2} ))\n       \
    \ (( k++ ))\n    done\n    echo $answer\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpi4mgfk47.sh: line 19: 2 +  - : syntax error: operand expected (error
    token is "- ")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local result\n    local i=0\n    local\
    \ sum\n\n    for i in $(seq 0 $((k-1)) )\n    do\n        result=`expr $1 + $2\
    \ + $3 + $4 + $5 + $6 + $7 + $8 + $9`\n        arr[i]=$result\n    done\n\n  \
    \  for i in $(seq 0 $((k-1)) )\n    do\n        sum=`expr $sum + ${arr[i]}`\n\
    \    done\n\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\")\
    \ = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "expr: syntax error: unexpected argument \u2018-2\u2019\nexpr: syntax error:\
    \ unexpected argument \u2018-2\u2019\nexpr: syntax error: unexpected argument\
    \ \u2018-2\u2019\nexpr: syntax error: missing argument after \u2018+\u2019\nexpr:\
    \ syntax error: missing argument after \u2018+\u2019\nexpr: syntax error: missing\
    \ argument after \u2018+\u2019\n"
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=${2:-1}\n  local sum=0\n  local index=0\n  local\
    \ len=${#arr[@]}\n  local current=${arr[index]//\\//}\n  local remainder=${current}\n\
    \  while [[ ${index} -lt ${len} ]]; do\n    local current=${arr[index]//\\//}\n\
    \    local remainder=${remainder}${current}\n    local current_digit=${remainder:0:1}\n\
    \    local remainder_digit=${remainder:1:1}\n    if (( ${remainder_digit} > 1\
    \ )); then\n      sum=$((sum+current))\n    fi\n    if (( ${remainder_digit} >\
    \ 0 )) && (( ${remainder_digit} == ${current_digit} )); then\n      index=$((index+1))\n\
    \      remainder=${remainder:2:${#remainder}}\n    fi\n    ((index++))\n  done\n\
    \  sum=$((sum+current))\n  printf \"$sum\\n\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_seufdka.sh: line 26: ((: > 1 : syntax error: operand expected
    (error token is "> 1 ")

    /tmp/tmp_seufdka.sh: line 29: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    /tmp/tmp_seufdka.sh: line 35: 1 -2 -3 41 57 76 87 88 99: syntax error in expression
    (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr k\n  arr=($(echo \"$1\" | sed \"s/ /\\\"/g\"))\n  k=$2\n  ((\
    \ k < 1 )) && k=1\n  (( k > ${#arr} )) && k=${#arr}\n  echo \"${arr[k]}\"\n}\n\
    \ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr k\n    arr=$(echo $1 | sed 's/ /\\n/g' | sort -n -r)\n    k=$(echo\
    \ $2 | sed 's/ /\\n/g' | awk '{print length}')\n    echo $(echo $arr | awk \"\
    NR > $k && NR < $((k+1)) && $1 + $2 > 9\")\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=$1\n    k=$2\n\n    arr=$(echo $arr | tr \" \" \",\")\n    arr=($arr)\n\
    \    arr=(${arr[*]})\n    arr=(\"${arr[@]:0:$k}\")\n    arr=(\"${arr[@]:1:${#arr[@]}-2}\"\
    )\n    echo $((${arr[*]}))\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\")\
    \ = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=()\n  local k=$1\n  local sum=$2\n\n  arr=($1)\n  echo \"$sum\"\
    \n\n  # Loop through the array and find sum for every element\n  for (( i=0; i<${#arr[@]};\
    \ ++i )); do\n    (( count[${arr[i]}]++ ))\n    if (( count[${arr[i]}] == 2 ));\
    \ then\n      (( sum+=${arr[i]} ))\n      count[${arr[i]}]=0\n    fi\n  done\n\
    \n  # Remove elements with more than one digit from sum\n  for (( i=0; i<${#arr[@]};\
    \ ++i )); do\n    if (( count[${arr[i]}] == 1 )); then\n      arr[i]=0\n    fi\n\
    \  done\n\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\")\
    \ = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpllhs1hlq.sh: line 23: count: bad array subscript

    /tmp/tmpllhs1hlq.sh: line 23: count[-3]: bad array subscript

    /tmp/tmpllhs1hlq.sh: line 24: count: bad array subscript

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -r arr=$1\n  local -r k=$(echo $2 | sed 's/^\\([0-9]*\\)$/\\1/')\n\
    \n  local sum=0\n  local i=0\n  while [ $i -lt $k ]; do\n    sum=$(( $sum + ${arr:$i:1}\
    \ ))\n    i=$(( $i + 1 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvmu64r1y.sh: line 20: 1 +   : syntax error: operand expected (error
    token is "+   ")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n\n    arr=(${arr//[^ ]/ })\n    for ((i=0;i<k;i++))\n\
    \    do\n        arr+=(\"0\")\n    done\n\n    arr=(${arr[@]:0:k})\n    echo \"\
    ${arr[@]}\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local elements=$1\n  local k=$2\n  local sum=0\n  echo $(($(echo \"$elements\"\
    \ | sed -r \"s/(.*)(^| )([0-9]{2})([0-9]{2})([^0-9]|$)/\\1 + \\3 + \\4 +/g\" |\
    \ awk -F'[+]' '{print ($2+$3)}' \"$elements\"))) | sed -r \"s/([0-9]{2})([0-9]{2})/\\\
    1 + \\2 +/g\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'awk: fatal: cannot open file `1 -2 -3 41 57 76 87 88 99'' for reading (No
    such file or directory)

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n\n    local i=0 j=0\n\
    \    while (( i < k )); do\n        j=0\n        while (( j < k && arr[i] <= arr[j]\
    \ )); do\n            j=$(( j+1 ))\n        done\n        (( sum += arr[i] + (\
    \ j > k ? arr[k-1] : 0 ) ))\n        i=$(( i+1 ))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp78nl50oq.sh: line 21: ((: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    /tmp/tmp78nl50oq.sh: line 24: ((: 1 -2 -3 41 57 76 87 88 99: syntax error in expression
    (error token is "41 57 76 87 88 99")

    /tmp/tmp78nl50oq.sh: line 21: ((: 1 -2 -3 41 57 76 87 88 99: syntax error in expression
    (error token is "41 57 76 87 88 99")

    /tmp/tmp78nl50oq.sh: line 21: ((: 1 -2 -3 41 57 76 87 88 99: syntax error in expression
    (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i\n\n    for\
    \ (( i=0; i<${#arr[@]}; i++ )); do\n        if [[ ${arr[$i]} == [0-9] ]]; then\n\
    \            (( sum+=${arr[$i]} ))\n        elif [[ ${arr[$i]} != [0-9]* ]]; then\n\
    \            (( sum+=${arr[$i]} ))\n        elif [[ ${arr[$i]} != [0-9]* ]] &&\
    \ [[ ${arr[$i+1]} != [0-9]* ]]; then\n            (( sum+=${arr[$i]} ))\n    \
    \    fi\n    done\n\n    if [[ ${k} -ge ${#arr[@]} ]]; then\n        (( sum+=${arr[$k]}\
    \ ))\n    fi\n\n    echo \"${sum}\"\n}\n\ncandidate() {\n    add_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdo64ux6w.sh: line 30: ((: sum+= : syntax error: operand expected
    (error token is "+= ")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=($@)\n  local k=$2\n  local sum\n  local firstk\n  local remain\n\
    \n  for ((i=0; i<${#arr[@]}; i++)); do\n    if [ $i -eq $k ]; then\n      firstk=i\n\
    \    fi\n    remain=${#arr[$i]}\n    while (( remain > 1 )); do\n      if [ ${arr[$firstk]}\
    \ -lt 10 ]; then\n        arr[$firstk]=${arr[$firstk]} + ${arr[$i]}\n        arr[$i]=0\n\
    \        remain=${remain-1}\n      else\n        if [ $firstk -lt $(( ${#arr[@]}\
    \ - 1 )) ]; then\n          firstk=$(( ${#arr[@]} - 1 ))\n        fi\n       \
    \ arr[$firstk]=${arr[$firstk]} + ${arr[$i]}\n        arr[$i]=0\n        remain=${remain-1}\n\
    \      fi\n    done\n    sum=$(expr $sum + ${arr[$i]})\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=41 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=30 encoding='utf-8'>
  timestamp: 1660055456
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local count=0\n\
    \n    arr=($arr)\n    arr=( \"${arr[@]}\" )\n\n    arr=(${arr[@]:0:k})\n    arr=(\
    \ \"${arr[@]}\" )\n    arr=(${arr[@]:1:k})\n\n    for el in \"${arr[@]}\"; do\n\
    \        (( count++ ))\n        sum=$(( sum + el ))\n    done\n\n    if (( count\
    \ > 1 )); then\n        sum=$(( sum + ${arr[0]} ))\n    fi\n\n    echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr\n    local k\n    arr=$1\n    k=$2\n    echo \"${arr}\" | awk\
    \ '{for(i=1;i<=NF;i++) if(i>=k) sum+=i; print sum}'\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  local len=${#arr[@]}\n\
    \  echo \"${arr[@]}\" | while read x; do\n    while ((i < len) && [[ \"$x\" <\
    \ ${arr[i]} ]]); do\n      i=$((i+1))\n    done\n    if ((i < len) && [[ \"$x\"\
    \ >= ${arr[i]} ]]; then\n      sum=$((sum+${x}))\n      i=$((i+1))\n    else\n\
    \      echo \"$sum\"\n      sum=0\n      i=$((i+1))\n    fi\n  done\n  echo \"\
    $sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2apyab5g.sh: line 23: syntax error in conditional expression

    /tmp/tmp2apyab5g.sh: line 23: syntax error near `${arr[i]}''

    /tmp/tmp2apyab5g.sh: line 23: `    if ((i < len) && [[ "$x" >= ${arr[i]} ]]; then''

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n\n    local output\n    arr=( $arr\
    \ )\n    k=( $k )\n    \n    # $arr may have leading or trailing empty strings,\
    \ so we strip those off\n    arr=( \"${arr[@]#*[[:space:]]}\" )\n    k=(  \"${k[@]#*[[:space:]]}\"\
    \ )\n    \n    local count=0\n    local element\n    for element in \"${arr[@]:${k[0]}}\"\
    ; do\n        if [[ $element -gt ${count}* ]]; then\n            count=$(( $element\
    \ ))\n        elif [[ $element -lt ${count}* ]]; then\n            count=$(( $element\
    \ ))\n        fi\n    done\n    \n    echo $(( $count + $k[0] ))\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnz8zagqv.sh: line 28: [[: 0*: syntax error: operand expected (error
    token is "*")

    /tmp/tmpnz8zagqv.sh: line 30: [[: 0*: syntax error: operand expected (error token
    is "*")

    /tmp/tmpnz8zagqv.sh: line 28: [[: 0*: syntax error: operand expected (error token
    is "*")

    /tmp/tmpnz8zagqv.sh: line 30: [[: 0*: syntax error: operand expected (error token
    is "*")

    /tmp/tmpnz8zagqv.sh: line 28: [[: 0*: syntax error: operand expected (error token
    is "*")

    /tmp/tmpnz8zagqv.sh: line 30: [[: 0*: syntax error: operand expected (error token
    is "*")

    /tmp/tmpnz8zagqv.sh: line 28: [[: 0*: syntax error: operand expected (error token
    is "*")

    /tmp/tmpnz8zagqv.sh: line 30: [[: 0*: syntax error: operand expected (error token
    is "*")

    /tmp/tmpnz8zagqv.sh: line 28: [[: 0*: syntax error: operand expected (error token
    is "*")

    /tmp/tmpnz8zagqv.sh: line 30: [[: 0*: syntax error: operand expected (error token
    is "*")

    /tmp/tmpnz8zagqv.sh: line 28: [[: 0*: syntax error: operand expected (error token
    is "*")

    /tmp/tmpnz8zagqv.sh: line 30: [[: 0*: syntax error: operand expected (error token
    is "*")

    /tmp/tmpnz8zagqv.sh: line 35: 0 + 3[0] : syntax error: invalid arithmetic operator
    (error token is "[0] ")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum\n  sum=0\n  for (( i=0; i<k; i++\
    \ )); do\n    (( sum+=$((${arr[i]}%10)*10 )) ))\n    (( ${arr[i]} /= 10 ))\n \
    \ done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_ebgd1lw.sh: line 19: syntax error near unexpected token `)''

    /tmp/tmp_ebgd1lw.sh: line 19: `    (( sum+=$((${arr[i]}%10)*10 )) ))''

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -r arr1=$1\n    local k=$2\n    local sum=0\n\n    for (( i=0;\
    \ i<${#arr1[@]}; i++ )); do\n        if (( ${arr1[i]} == ${arr1[0]} )); then\n\
    \            sum+=$arr1[i]\n        fi\n    done\n\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppl10lwrj.sh: line 19: ((: 1 -2 -3 41 57 76 87 88 99 == 1 -2 -3
    41 57 76 87 88 99 : syntax error in expression (error token is "41 57 76 87 88
    99 == 1 -2 -3 41 57 76 87 88 99 ")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($(echo $1 $2 $3 $4 $5 $6 $7 $8 $9))\n    local k=$(($4 > $5\
    \ && $5 > $6 && $6 > $7 && $7 > $8 && $8 > $9)) && echo \"Invalid input: k <=\
    \ $9\" || echo \"$k\"\n    local sum=0\n    local n=0\n    local i=0\n    for\
    \ ((i=0; i<k; i++)); do\n        sum=$(($sum + ${arr[i]}))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe41d5cfe.sh: line 15: >  &&  >  &&  >  &&  >  &&  > : syntax error:
    operand expected (error token is ">  &&  >  &&  >  &&  >  &&  > ")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr\n  local k\n  arr=$1\n  k=${2:-0}\n  local res\n  res=0\n  local\
    \ element\n  for element in ${arr[*]}; do\n    if [ $((k--)) -eq 0 ]; then\n \
    \     res=$((res+element))\n    fi\n  done\n  echo $res\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  # Set variable value\n  local arr=\"$1\"\n  local k=\"$2\"\n\n  # Check\
    \ for correct inputs\n  if [[ ! ${#arr} -ge 1 ]] || [[ ! ${k} -ge 1 ]]; then\n\
    \    echo \"Usage: add_elements <array> <integer>\"\n    return 1\n  fi\n\n  #\
    \ Split string into array\n  IFS=\" \" read -r -a arr <<< \"$arr\"\n\n  # If array\
    \ has more than k elements, return empty string\n  if (( ${#arr[@]} > k )); then\n\
    \    echo \"$k is greater than the number of elements in array $arr\"\n    return\
    \ 0\n  fi\n\n  # Sum first k elements\n  local result=0\n  local digits=0\n\n\
    \  # Iterate through array until length is less than k\n  for ((i=1;i<k;i++));\
    \ do\n    # Count number of digits in the current element\n    local digits=$((${arr[i]#-}))\n\
    \    if [[ \"${arr[i]}\" -gt \"99\" ]]; then\n      # If current element > 99,\
    \ increment digit count\n      digits+=1\n      result=$((result*10 + ${arr[i]%$((10#$digits))}))\n\
    \    else\n      # Otherwise, increment result by current element\n      result=$((result*10\
    \ + ${arr[i]}))\n    fi\n  done\n\n  # Return result\n  echo \"$result\"\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr k\n    IFS=$'\\n' arr=$1\n    k=${2:-1}\n    local sum\n  \
    \  local i\n    local elem\n    sum=$(cat <<-END\n    $arr\n    END\n    )\n \
    \   # Find first k elements in the array\n    for i in $(seq 1 $k); do\n     \
    \   elem=$(echo \"$sum\" | cut -d\" \" -f${i})\n        sum=$(echo \"$sum\" |\
    \ cut -d\" \" -f$((i+1)))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n \
    \   add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsvh4_cz5.sh: line 20: unexpected EOF while looking for matching
    `)''

    /tmp/tmpsvh4_cz5.sh: line 46: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  # $1: empty array\n  # $2: integer\n\
    \n  local result=\"\"\n  # $1: first k elements of arr\n  # $2: integer\n\n  arr=$(echo\
    \ \"${arr}\" | cut -d' ' -f1)\n  k=$(echo \"${k}\" | cut -d' ' -f1)\n  # $1: first\
    \ k elements of arr\n\n  result=$((\n    ${arr:$k} - ${arr:0:$k}\n  ))\n  # $1:\
    \ first k elements of arr\n  # $2: integer\n\n  echo $result\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  arr=$1\n  k=$2\n  i=0\n  sum=0\n  while [ $i -lt ${#arr} ]; do\n    if\
    \ [ $(($i+k)) -gt ${#arr} ]; then \n      i=${#arr}\n      sum=$((sum+$arr[$i]))\n\
    \      break\n    else\n      sum=$((sum+$arr[$i])+$arr[$(($i+1))])\n      ((i++))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpaoamz56p.sh: command substitution: line 24: syntax error near unexpected
    token `+$arr[$(($i+1))]''

    /tmp/tmpaoamz56p.sh: command substitution: line 24: `(sum+$arr[$i])+$arr[$(($i+1))]''

    /tmp/tmpaoamz56p.sh: command substitution: line 24: syntax error near unexpected
    token `+$arr[$(($i+1))]''

    /tmp/tmpaoamz56p.sh: command substitution: line 24: `(sum+$arr[$i])+$arr[$(($i+1))]''

    /tmp/tmpaoamz56p.sh: command substitution: line 24: syntax error near unexpected
    token `+$arr[$(($i+1))]''

    /tmp/tmpaoamz56p.sh: command substitution: line 24: `(sum+$arr[$i])+$arr[$(($i+1))]''

    /tmp/tmpaoamz56p.sh: command substitution: line 24: syntax error near unexpected
    token `+$arr[$(($i+1))]''

    /tmp/tmpaoamz56p.sh: command substitution: line 24: `(sum+$arr[$i])+$arr[$(($i+1))]''

    /tmp/tmpaoamz56p.sh: command substitution: line 24: syntax error near unexpected
    token `+$arr[$(($i+1))]''

    /tmp/tmpaoamz56p.sh: command substitution: line 24: `(sum+$arr[$i])+$arr[$(($i+1))]''

    /tmp/tmpaoamz56p.sh: command substitution: line 24: syntax error near unexpected
    token `+$arr[$(($i+1))]''

    /tmp/tmpaoamz56p.sh: command substitution: line 24: `(sum+$arr[$i])+$arr[$(($i+1))]''

    /tmp/tmpaoamz56p.sh: command substitution: line 24: syntax error near unexpected
    token `+$arr[$(($i+1))]''

    /tmp/tmpaoamz56p.sh: command substitution: line 24: `(sum+$arr[$i])+$arr[$(($i+1))]''

    /tmp/tmpaoamz56p.sh: command substitution: line 24: syntax error near unexpected
    token `+$arr[$(($i+1))]''

    /tmp/tmpaoamz56p.sh: command substitution: line 24: `(sum+$arr[$i])+$arr[$(($i+1))]''

    /tmp/tmpaoamz56p.sh: command substitution: line 24: syntax error near unexpected
    token `+$arr[$(($i+1))]''

    /tmp/tmpaoamz56p.sh: command substitution: line 24: `(sum+$arr[$i])+$arr[$(($i+1))]''

    /tmp/tmpaoamz56p.sh: command substitution: line 24: syntax error near unexpected
    token `+$arr[$(($i+1))]''

    /tmp/tmpaoamz56p.sh: command substitution: line 24: `(sum+$arr[$i])+$arr[$(($i+1))]''

    /tmp/tmpaoamz56p.sh: command substitution: line 24: syntax error near unexpected
    token `+$arr[$(($i+1))]''

    /tmp/tmpaoamz56p.sh: command sub'
  stdout: ''
  timestamp: 1660055451
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=($1)\n    k=$2\n    result=`echo $arr | sed 's/ /\\n/g' | head -n\
    \ $k | tail -n 1`\n    for x in $arr; do\n        if [[ `echo $x | awk '{print\
    \ $1 }'` -ge `echo $result | awk '{print $1}' `]] ; then\n            result=`echo\
    \ $result | awk '{print $1 }'`+`echo $x | awk '{print $1 }'`\n        else\n \
    \           result=`echo $result | awk '{print $1 }'`\n            result=`echo\
    \ $result | awk '{print $1 }'`+`echo $x | awk '{print $1 }'`\n        fi\n   \
    \ done\n    echo \"$result\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp06l8_c3p.sh: line 18: syntax error in conditional expression: unexpected
    token `;''

    /tmp/tmp06l8_c3p.sh: line 18: syntax error near `;''

    /tmp/tmp06l8_c3p.sh: line 18: `        if [[ `echo $x | awk ''{print $1 }''` -ge
    `echo $result | awk ''{print $1}'' `]] ; then''

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    # initialize variables\n    arr=$1\n    key=$2\n    sum=0\n\n    # check\
    \ if $key is larger than length of arr\n    if [ $key -gt $1 ]\n    then\n   \
    \     echo \"Key greater than array length\"\n        exit 1\n    fi\n\n    #\
    \ loop through the array\n    for ((i=0;i<$key;i++)); do\n        if [ ${arr:$i:1}\
    \ = \"0\" ]; then\n            arr=$arr ${arr:$i+1}\n        elif [ ${arr:$i:1}\
    \ = \"1\" ]; then\n            arr=$arr ${arr:$i+1}\n        else\n          \
    \  arr=$arr ${arr:$i+1}\n        fi\n    done\n\n    # sum up all remaining numbers\
    \ with at most two digit\n    for ((i=$key;i<${#arr};i++)); do\n        if [ ${arr:$i:1}\
    \ = \"0\" ]; then\n            sum=$((sum + ${arr:$i}))\n        elif [ ${arr:$i:1}\
    \ = \"1\" ]; then\n            sum=$((sum + ${arr:$i}))\n        else\n      \
    \      sum=$((sum + ${arr:$i}))\n        fi\n    done\n    echo \"$sum\"\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc2_fnzdj.sh: line 20: [: too many arguments

    /tmp/tmpc2_fnzdj.sh: line 31: -2: command not found

    /tmp/tmpc2_fnzdj.sh: line 28: [: =: unary operator expected

    /tmp/tmpc2_fnzdj.sh: line 30: [: =: unary operator expected

    /tmp/tmpc2_fnzdj.sh: line 33: -2: command not found

    /tmp/tmpc2_fnzdj.sh: line 33: 2: command not found

    /tmp/tmpc2_fnzdj.sh: line 44: sum + 2 -3 41 57 76 87 88 99: syntax error in expression
    (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq 0 $((k\
    \ - 1))); do\n        sum=$((sum + ${arr:$i:1}))\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8_gx2i5_.sh: line 18: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq 1 $k);\
    \ do\n        sum=$(( $sum + ${arr:$i:1} ))\n    done\n    echo \"$sum\"\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw6500f55.sh: line 18: 0 +   : syntax error: operand expected (error
    token is "+   ")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  arr=($1)\n  k=$2\n  while [ ${#arr[@]} -gt 0 ]; do\n    # k is greater\
    \ than the length of the array so don't do anything.\n    if [ \"$k\" -lt \"$#arr\"\
    \ ]; then\n      break\n    fi\n    if [ \"$k\" -eq \"$#arr\" ]; then\n      k=$(expr\
    \ $k - 1)\n    fi\n    sum=$(expr \"$arr[$k + 1]\" ++ \"$arr[$k]\")\n    arr=$(\"\
    $@\" \"$arr\" \"$sum\")\n  done\n  echo $arr\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=58 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=4 encoding='utf-8'>
  timestamp: 1660055456
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=($1)\n  local k=$2\n  local sum=0\n\n  arr=$(echo $arr | tr -d\
    \ '\\n')\n  k=$(echo $k | tr -d '\\n')\n\n  for i in $(seq 0 $((${#arr[@]} - 1)));\
    \ do\n    arr[i]=$(echo $arr[i] | tr -d '\\n')\n  done\n\n  local i=0\n  local\
    \ elements=(${arr[@]})\n\n  while (( i < ${#elements[@]} && $i < ${#arr[@]} ))\
    \ ; do\n    local element=$(echo ${elements[i]} | tr -d '\\n')\n    if (( element\
    \ == ${arr[$i]} )) ; then\n      (( i = i + 1 ))\n    else\n      sum=$(( $sum\
    \ + $element ))\n      (( i = i + 1 ))\n    fi\n  done\n\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqqwqxl7_.sh: line 30: ((: 1[i]: syntax error: invalid arithmetic
    operator (error token is "[i]")

    /tmp/tmpqqwqxl7_.sh: line 33: 0 + 1[i] : syntax error: invalid arithmetic operator
    (error token is "[i] ")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=${2:-1}\n  local i=0\n  local sum=0\n\n  while\
    \ [[ $i -lt $k ]]; do\n    sum=$((sum + $arr[i]))\n    let i++\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb0bthp_4.sh: line 20: sum + 1 -2 -3 41 57 76 87 88 99[i]: syntax
    error in expression (error token is "41 57 76 87 88 99[i]")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n        local arr=$1\n        local k=$2\n        local res\n        IFS=$'\\\
    n' read -r -a array <<< \"${arr// /$'\\n'}\"\n        len=\"${#array[@]}\"\n \
    \       res=\"${array[0]}\"\n        for (( j=0; j<k; j++ )); do\n           \
    \     res+=\"${array[j]}\"\n        done\n        echo ${res}\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  arr=($1)\n  k=$2\n  echo $((${arr[0]}+${arr[1]}))\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    # Convert to an array\n    local arr=( $(echo \"$1\" | tr '\\n' ' ')\
    \ )\n    # Make sure it's okay\n    [[ $# -lt 2 ]] && return 1\n    # Make sure\
    \ it's an integer\n    [[ \"$2\" =~ ^[0-9]+$ ]] && return 1\n    # Make sure that\
    \ the array has at least one element\n    [[ ${#arr[@]} -eq 0 ]] && return 1\n\
    \    # Add all the elements to get k\n    local k=$2\n    # Return the sum of\
    \ the first k elements\n    local sum=0\n    for i in $(seq 1 $k); do\n      \
    \  ((sum += ${arr[$i]}))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n  \
    \  add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=$1\n    k=$2\n    res=0\n    for i in $(seq 0 $((k - 1))); do\n \
    \       res=$((res + arr[i]))\n    done\n    echo $res\n}\n\ncandidate() {\n \
    \   add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk_xna4hn.sh: line 18: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local output\n  local i j sum\n\n  for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n    sum=0\n    for ((j=0; j<$k; j++)); do\n      if\
    \ [[ ${arr[$i]} =~ ^[0-9][0-9]$ ]]; then\n        ((sum+=${arr[$i]}))\n      \
    \  ((arr[$i]=0))\n      else\n        break\n      fi\n    done\n    echo ${sum}\n\
    \  done\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    declare -a sum\n    local i\n\
    \    sum=()\n    for i in \"${arr[@]:0:$k}\"; do\n        sum+=(\"$i\")\n    done\n\
    \    echo \"${sum[0]}+${sum[1]}\"\n}\n\ncandidate() {\n    add_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=(\"${@:3}\" )\n    local k=${2:-2}\n    local sum=0\n    while\
    \ [ \"${k}\" -gt 0 ]; do\n        sum=$((sum + arr[${k}-1]))\n        k=$((k-2))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  arr=$1\n  k=$2\n  sum=0\n  for i in `seq $k`; do\n    arr=${arr// /$i}\n\
    \    sum=$(($sum + ${arr:0:$k}))\n  done\n  echo $sum\n}\n\ncandidate() {\n  \
    \  add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk19qtt2b.sh: line 19: 0 + 11-: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0 i j\n\n  for (( i=0; i<k; i++\
    \ )); do\n    sum=0\n    for (( j=i; j<k; j++ )); do\n      if [[ ${arr:$j:1}\
    \ == [0-9][0-9] ]]; then\n        sum=$(($sum+${arr:$j:1}))\n      fi\n    done\n\
    \    echo $sum\n  done\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local length=0\n \
    \   local i\n    local tmp\n    while [ $length -ge $k ]; do\n        length=$((length+1))\n\
    \    done\n    for ((i=0; i<length; ++i)); do\n        tmp=${arr:$i:1}\n     \
    \   if [[ $tmp != \"\" ]]; then\n            sum=$((sum+tmp))\n        fi\n  \
    \  done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\")\
    \ = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local i\n    local arr=($(echo $1 | tr ' ' '\\n'))\n    local k=$2\n\
    \    local result\n    local sum\n    sum=$(( arr[0] % 10 + arr[1] % 10 ))\n \
    \   for i in $(seq 2 $((k-1)) ); do\n        sum=$(( sum + arr[i] % 10 ))\n  \
    \  done\n    result=$(( arr[k-1] % 10 + sum ))\n    echo $result\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n\n    local sum=0\n    local cnt=0\n  \
    \  local first\n    local second\n    \n    for ((i=0; i < ${#arr[@]}; i++));\
    \ do\n        if [ $cnt -gt 0 ]; then\n            first=\"${arr[$((cnt-k))]}\"\
    \n            second=\"${arr[$((cnt))]}\"\n            (( sum += first + second\
    \ ))\n            cnt=$((cnt+1))\n        else\n            first=\"${arr[i]}\"\
    \n            second=\"${arr[$((i+1))]}\"\n            (( sum += first + second\
    \ ))\n            cnt=$((i+1))\n        fi\n    done\n    echo \"$sum\"\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2xuat9pf.sh: line 31: ((: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  arr=( $1 )\n  num=${#arr[@]}\n  k=${2:-1}\n  sum=0\n  \n  echo \"${arr[@]}\"\
    \n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"\
    ${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n\
    \  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\
    \n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"\
    ${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n\
    \  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\
    \n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"\
    ${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n\
    \  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\
    \n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"\
    ${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n\
    \  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\
    \n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"\
    ${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n\
    \  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\
    \n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"${arr[@]}\"\n  echo \"\
    ${arr[@]}\"\n  echo \"${\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl5a5om0j.sh: line 92: unexpected EOF while looking for matching
    `"''

    /tmp/tmpl5a5om0j.sh: line 96: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr_of_elements=$1\n    local arr_of_digits=$2\n    local result=0\n\
    \    for (( i=0; i<$arr_of_digits; i++ )); do\n        if (( i+1 )>$arr_of_digits)\
    \ ; then\n            result=$(( result+$arr_of_elements[i]) )\n        elif ((\
    \ i+2 )>$arr_of_digits && $(echo \"$arr_of_elements[$i]\" $arr_of_elements[$((i+1))]\
    \ $arr_of_elements[$((i+2))]| tr ' ' '\\n' ) ); then\n            tmp=$(echo \"\
    $arr_of_elements[$i]\" $arr_of_elements[$((i+1))] $arr_of_elements[$((i+2))]|\
    \ tr ' ' '\\n')\n            result=$(( result+$tmp | awk '{sum+=$1}END{print\
    \ sum}') ))\n        fi\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp872jxfuf.sh: line 22: syntax error near unexpected token `)''

    /tmp/tmp872jxfuf.sh: line 22: `            result=$(( result+$tmp | awk ''{sum+=$1}END{print
    sum}'') ))''

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"${1:-}\"\n    local k=\"${2:-}\"\n\n    if [[ \"$arr\" ==\
    \ \"\" ]]; then\n        echo \"ERROR: No integers were provided\"\n        return\
    \ 1\n    fi\n\n    if [[ \"$k\" == \"\" ]]; then\n        echo \"ERROR: No number\
    \ for k was provided\"\n        return 1\n    fi\n\n    local sum=0\n    for i\
    \ in $(seq 1 $k); do\n        local elem=\"${arr:$i:1}\"\n        if [[ \"$elem\"\
    \ == [0-9] ]]; then\n            local mult\n            if [[ \"$elem\" < 10\
    \ ]]; then\n                mult=\"$elem\"\n            else\n               \
    \ mult=$(expr $elem \\* 10)\n            fi\n            (( sum += mult ))\n \
    \       fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  # Get the input\n  local arr=$1\n  local k=$2\n\n  # Get first k elements\n\
    \  local arr1=$(echo $arr | cut -d \" \" -f 1-$k)\n  local arr2=$(echo $arr |\
    \ cut -d \" \" -f $k+1)\n\n  # Get the sum of the first k elements\n  local sum1=$(echo\
    \ $arr1 | awk '{s+=$1} END {print s}')\n  # Get the sum of the last k elements\n\
    \  local sum2=$(echo $arr2 | awk '{s+=$1} END {print s}')\n\n  # Return the sum\n\
    \  echo $((sum1+sum2))\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "cut: invalid field value \u2018+1\u2019\nTry 'cut --help' for more information.\n"
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr k\n    # split $2 into array $arr by space\n    IFS=' ' read\
    \ -r -a arr <<< \"$1\"\n    # set variable $k to the first $2 digits\n    k=${arr[0]}\n\
    \    # traverse the rest of the array $arr by incrementing $k each time\n    for\
    \ element in \"${arr[@]:1}\"; do\n        let k++\n        if [[ \"$k\" -ge \"\
    $2\" ]]; then\n            k=$element\n            break\n        fi\n    done\n\
    \    # convert k back to a string\n    k=\"$(echo \"$k\")\"\n    # concatenate\
    \ $2 and $k\n    echo \"$2+$k\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=$((k-1))\n\
    \    local max\n\n    # Sort the array in descending order\n    arr=$(echo \"\
    $arr\" | sort -nr)\n\n    # Find sum of the first k elements\n    for((i=0; i<=k;\
    \ i++))\n    do\n        sum=$((sum+arr[i]))\n    done\n\n    # Find maximum of\
    \ first k elements\n    max=$((sum-arr[i]))\n\n    # Find sum of the remaining\
    \ elements - k\n    for((i=k; i<=${#arr[*]}; i++)); do\n        sum=$((sum+arr[i]))\n\
    \    done\n\n    # Find maximum of remaining elements\n    max=$((max+sum-arr[i]))\n\
    \n    # Return the maximum\n    echo \"$max\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgvqdbnrq.sh: line 26: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n   arr=$1\n   num=$2\n   sum=0\n   for i in $(seq 1 $num); do\n      arr1=${arr:i:1}\n\
    \      arr2=${arr:i+1:1}\n      sum=$(( sum + arr1 * 10 + arr2 ))\n   done\n \
    \  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0t7nh40y.sh: line 20: -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -r arr=$1\n    local -r k=$2\n    local result=0\n    for i in\
    \ $(seq 0 $((k - 1))); do\n        result=$((result+arr[i]))\n    done\n    echo\
    \ \"$result\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyg2jymns.sh: line 18: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  arr=($(echo $1 | tr ' ' ' '))\n  k=$2\n  local sum\n  local index\n  local\
    \ count\n  local len\n  len=${#arr[@]}\n  sum=0\n  for (( index = 0; index < k;\
    \ index++ )); do\n    count=0\n    while [[ ${arr[$count]} =~ [0-9]{1,2} ]]; do\n\
    \      ((count++))\n      if [[ $count -eq $len ]]; then\n        break\n    \
    \  fi\n    done\n    ((index++))\n    ((sum+=$arr[$index]))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp638umqbv.sh: line 31: ((: sum+=1[1]: syntax error: invalid arithmetic
    operator (error token is "[1]")

    /tmp/tmp638umqbv.sh: line 31: ((: sum+=1[3]: syntax error: invalid arithmetic
    operator (error token is "[3]")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr k\n    arr=$1\n    k=$2\n    res=0\n    for i in $(seq $k);\
    \ do\n        res=$((res+${arr:$i:2}))\n    done\n    echo \"$res\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb7xwnekj.sh: line 19: res+ -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  \n  local sum=0\n  for (( i=1; i<=k; i++\
    \ )); do\n    local element=${arr:$i:1}\n    (( sum += element ))\n  done\n  \n\
    \  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf7hqd9nu.sh: line 20: ((: -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    declare -a arr=();\n    declare -i sum=0\n    \n    while read line\n\
    \    do\n        arr+=(\"$line\")\n    done < \"$1\"\n    \n    for ((i=0;i<${#arr[@]};++i));\
    \ do\n        if (( ${arr[i]} > ${arr[i+1]} )) ; then\n            sum+=$((${arr[i]}+${arr[i+1]}))\n\
    \        fi\n    done\n    \n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9n3ndlds.sh: line 13: 1 -2 -3 41 57 76 87 88 99: No such file or
    directory

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n\tarr=$1\n\tk=${2:-1}\n\ti=0\n\tlet \"k = (k%len(arr))\"\n\tsum=$((k + arr[i]))\n\
    \tlet \"k--\"\n\twhile ((i < k) && (arr[i] > 0)); do\n\t\tlet \"sum += arr[i]\"\
    \n\t\tlet \"arr[i]--\"\n\t\t((i++))\n\tdone\n\techo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptyghrv3i.sh: line 17: let: k = (k%len(arr)): division by 0 (error
    token is "len(arr))")

    /tmp/tmptyghrv3i.sh: line 18: 1 -2 -3 41 57 76 87 88 99: syntax error in expression
    (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n\tlocal arr=$1\n\tlocal k=$2\n\techo \"$arr\" |\n\t\tawk -v k=\"$k\" '{\n\
    \t\t\tfor(i = 1; i <= k; ++i) a[i]+=$i;\n\t\t\tfor(j = 1; j <= k; ++j) printf(\"\
    %4d\", a[j]); print \"\";\n\t\t}' | bc\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local elements=\"$1\"\n  local k=\"$2\"\n  local sum=0\n\n  if [[ \"$elements\"\
    \ =~ ^[0-9]+(,[0-9]+)*$ ]]; then\n    local elements_array=(${elements//,/ })\n\
    \    local elements_array_length=${#elements_array[@]}\n    local max_elements_length=$((\
    \ ${elements_array_length} / 2 ))\n\n    local elements_prefix=(${elements_array[@]:0:$k})\n\
    \    local elements_prefix_length=${#elements_prefix[@]}\n\n    if [[ \"$elements_prefix_length\"\
    \ -ge \"$max_elements_length\" ]]; then\n      local elements_suffix=(${elements_array[@]:$k})\n\
    \      local elements_suffix_length=${#elements_suffix[@]}\n\n      for (( index\
    \ = 0; index < $elements_prefix_length; index++ )); do\n        local element_prefix=${elements_prefix[$index]}\
    \ || continue\n\n        if [[ \"$index\" -eq \"$elements_suffix_length\" ]];\
    \ then\n          sum=$(( sum + $element_prefix ))\n        else\n          sum=$((\
    \ sum + $element_prefix + ${elements_suffix[$index]}))\n        fi\n      done\n\
    \    fi\n  fi\n\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum\n    local num\n    local\
    \ i\n    sum=0\n    for ((i = 1; i <= k; i++)); do\n        num=$(echo $arr |\
    \ grep -o \"^$i\")\n        ((sum += num))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n\n    local sum=0\n    local i=0\n\
    \n    while [ $i -lt ${#arr[@]} ]; do\n        sum=$((sum + ${arr[$i]}))\n   \
    \     i=$((i+1))\n    done\n\n    if [[ ${#sum} -gt $k ]]; then\n        echo\
    \ \"Error : not enough digits from the first k elements of arr\"\n        return\
    \ 1\n    fi\n\n    echo ${sum}\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmponrsqoft.sh: line 21: sum + 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local array=\"$1\"\n    local k=\"$2\"\n\n    local sum=\"\"\n    local\
    \ count=0\n\n    for element in $array; do\n        if [ $count -lt \"$k\" ];\
    \ then\n            sum=\"$sum$element\"\n            count=$((count+1))\n   \
    \     fi\n    done\n\n    if [ \"$count\" -gt \"$k\" ]; then\n        sum=\"$sum$((10**(($count-$k)+1)))\"\
    \n    fi\n\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=($1)\n    k=$2\n    if [ $k -gt ${#arr[@]} ]; then\n        return\n\
    \    fi\n    arr2=${arr[@]:0:k}\n    for element in \"${arr2[@]}\"; do\n     \
    \   if [ ${#element} -gt 1 ]; then\n            arr2+=( ${element:0:1} )\n   \
    \     else\n            arr2+=( ${element:0:1} ${element:1} )\n        fi\n  \
    \  done\n    echo $((${arr2[0]}+${arr2[1]}))\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=( $1 )\n    k=( $2 )\n    sum=0\n    while (( ${#arr[@]} > k ));\
    \ do\n        sum=$(( $sum + ${arr[0]} ))\n        arr=( \"${arr[@]:1}\" )\n \
    \   done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\")\
    \ = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr\n    local num\n\n    arr=( $1 )\n    num=( $2 )\n\n    local\
    \ sum=0\n\n    for ((i=0; i<${#arr[@]}; i++))\n    do\n        if (( ${#num[@]}\
    \ > i ))\n        then\n            sum=$(( sum + ${arr[i]} * 10 ** ${#num[@]}\
    \ ))\n        fi\n    done\n\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum\n  IFS=\" \" read -r -a\
    \ arr <<< \"$arr\"\n  sum=\"${arr[0]}\"\n  for ((i=1; i<k; i++))\n  do\n    ((\
    \ sum+=arr[i] ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  # split string into array\n  arr=($1)\n  # convert array into string\n\
    \  str=${arr[*]/%/ }\n  str=${str/#/ }\n\n  # set variables\n  num=$2\n  \n  while\
    \ [[ $str != \"\" ]]; do\n    digit=$(echo $str | sed 's/\\([0-9]*\\) /\\1 /')\n\
    \    digit=${digit/$/ }\n    digit=${digit/#/ }\n\n    # check if the digit is\
    \ less than k\n    if [[ \"$num\" -le \"$digit\" ]]; then\n      break\n    fi\n\
    \    \n    num=$(echo \"$num + $digit\" | bc)\n    \n    # remove leading zeros\
    \ \n    str=${str/$/ }\n  done\n\n  echo $num\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=37 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=33 encoding='utf-8'>
  timestamp: 1660055456
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr k\n  arr=$(echo $1 | tr \" \" \"\\n\")\n  k=$2\n  local output\n\
    \  output=0\n  for x in ${arr[@]}; do\n    local z\n    z=$((10#${x}))\n    if\
    \ [ \"$z\" -gt $k ]; then\n      output=$((${output}+$x))\n    fi\n  done\n  echo\
    \ ${output}\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n\n  if [[ -z \"$arr\" ]]\n  then\n    echo\
    \ \"Usage: $(basename $0) <number> <k>\"\n    exit 1\n  fi\n  if [[ -z \"$k\"\
    \ ]]\n  then\n    echo \"Usage: $(basename $0) <number> <k>\"\n    exit 1\n  fi\n\
    \n  local sum=0\n  local elements=$arr\n  local count=1\n  while [ $count -lt\
    \ $k ]\n  do\n    sum=$(($sum+$elements))\n    count=$(($count+1))\n    elements=${elements//\\\
    // }\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\")\
    \ = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp82hhkc7p.sh: line 33: 0+1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=( $1 )\n    k=( $2 )\n    sum=0\n    for i in \"${arr[@]:0:k}\";\
    \ do\n        sum=$(( sum + i ))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr\n  local k\n  arr=$(eval echo \"\\\\$1\")\n  k=$(eval echo \"\
    \\\\$2\")\n  local sum=0\n  for i in $(seq 0 $((${#arr[@]} - $k)))\n  do\n   \
    \ if [[ $i -le 0 ]]; then\n      break\n    elif [[ ${arr[$i]} =~ ^[0-9]*$ ]];\
    \ then\n      sum=$(( $sum + ${arr[$i]} ))\n      (( i++))\n    fi\n  done\n \
    \ echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  arr=$1; k=$2\n  local -i sum i\n  sum=0\n  while [ -n \"$arr\" ]; do\n\
    \    ((i++))\n    if [[ ${arr:$i:1} == [0-9] ]]; then\n      ((sum+=${arr:$i:1}))\n\
    \      arr=${arr:$((i+1))}\n    else\n      arr=${arr:0:$i}\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=20 encoding='utf-8'>
  timestamp: 1660055456
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  arr=($1)\n  k=$2\n  res=0\n  for ((i=0; i < $k; i++)); do\n    res=$((res\
    \ + $arr[i]))\n  done\n  echo $res\n}\n\ncandidate() {\n    add_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9xs4ksmx.sh: line 18: res + 1[i]: syntax error: invalid arithmetic
    operator (error token is "[i]")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=(\"${@:2}\")\n    local k=(\"${@:3}\")\n\n    local sum=0\n\
    \    local i=0 j=0\n\n    # we first calculate the sum for the first k elements\n\
    \    for i in $(seq 0 $k); do\n        sum=$((sum+arr[i]))\n    done\n\n    #\
    \ then we calculate the sum for the rest of the elements\n    for j in $(seq $k);\
    \ do\n        sum=$((sum+arr[i]))\n    done\n\n    # finally we remove all elements\
    \ from the array that have two or more digits\n    for i in $(seq $k); do\n  \
    \      for j in $(seq $k); do\n            if (( ${arr[i]} >= ${arr[j]} )); then\n\
    \                arr[i]=0\n            else\n                arr[j]=0\n      \
    \      fi\n        done\n    done\n\n    echo \"$sum\"\n}\n\ncandidate() {\n \
    \   add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'seq: missing operand

    Try ''seq --help'' for more information.

    seq: missing operand

    Try ''seq --help'' for more information.

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n\n    local tmp\n\n    while ((\
    \ \"$#\" )); do\n        local i\n        local j\n\n        tmp=$(echo $arr |\
    \ sed -n -e \"s/^.*${k}[^ ]\\+[ ]\\+\\(.*\\)$/\\1/p\")\n        if [[ -n \"$tmp\"\
    \ ]]; then\n            for (( i=0; i<${#tmp}; i++ )); do\n                arr=\"\
    $arr $tmp[$i]\"\n            done\n\n            tmp=\"\"\n        else\n    \
    \        j=$(( k+1 ))\n            while (( \"$j\" )); do\n                local\
    \ tmp\n                tmp=$(echo $arr | sed -n -e \"s/^.*[^ ]\\+[ ]\\+\\(.*\\\
    )$/\\1/p\")\n                if [[ -n \"$tmp\" ]]; then\n                    for\
    \ (( i=0; i<${#tmp}; i++ )); do\n                        arr=\"$arr $tmp[$i]\"\
    \n                    done\n                    tmp=\"\"\n                   \
    \ break\n                else\n                    j=$(( j-1 ))\n            \
    \    fi\n            done\n        fi\n    done\n\n    echo $arr\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=25 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=12 encoding='utf-8'>
  timestamp: 1660055456
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local array=$1\n  local k=$2\n  local sum\n  local elements\n  local new_array\n\
    \n  # Split the array into separate numbers\n  IFS=\" \" read -a elements <<<\
    \ \"$array\"\n  new_array=()\n  for (( i=k; i<${#elements[@]}; i++ )); do\n  \
    \  new_array+=(\"${elements[$i]}\")\n  done\n\n  # Calculate the sum of the first\
    \ k elements\n  sum=0\n  for (( i=0; i<${#new_array[@]}; i++ )); do\n    sum=$((\
    \ sum + new_array[i] ))\n  done\n\n  # Add up the last two elements\n  sum=$((\
    \ sum + new_array[$(( ${#new_array[@]} - 1 ))] ))\n\n  # Reassemble the array\
    \ with the sums\n  IFS=\" \" read -a new_array <<< \"$sum\"\n  echo \"${new_array[@]}\"\
    \n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  IFS=$'\\n' read -r -a array <<< \"$1\"\n  k=\"$2\"\n  local sum=\n  for\
    \ idx in \"${!array[@]}\"; do\n    if (( idx >= k )); then\n      (( sum = sum\
    \ + array[idx] ))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr k\n    arr=$1\n    k=$2\n    local sum elem max_sum\n    sum=0\n\
    \    elem=\n    max_sum=\n    local i j\n    for ((i = 0; i < ${#arr[@]}; i++));\
    \ do\n        if [[ ${arr[$i]} > ${max_sum} ]]; then\n            max_sum=${arr[$i]}\n\
    \        fi\n    done\n    for ((i = 0; i < ${k}; i++)); do\n        if [[ -z\
    \ ${elem} ]]; then\n            elem=${arr[i]}\n        else\n            if [[\
    \ ${elem} > ${max_sum} ]]; then\n                max_sum=${elem}\n           \
    \ fi\n            elem=${arr[i]}\n        fi\n    done\n    for ((i = 0; i < ${k};\
    \ i++)); do\n        sum=$((${sum}+${arr[i]}))\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptaq7wd6i.sh: line 38: 0+1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    # Convert the input into a single long string\n    local arr=${1:-}\n\
    \    local k=${2:-1}\n    local sum=${3:-0}\n    local i\n    local tmp\n    local\
    \ temp\n    local j\n    local j2\n    local j3\n    local j4\n    local j5\n\
    \    local j6\n    local j7\n    local j8\n    local j9\n    local j10\n    local\
    \ j11\n    local j12\n    local j13\n    local j14\n    local j15\n    local j16\n\
    \    local j17\n    local j18\n    local j19\n    local j20\n    local j21\n \
    \   local j22\n    local j23\n    local j24\n    local j25\n    local j26\n  \
    \  local j27\n    local j28\n    local j29\n    local j30\n    local j31\n   \
    \ local j32\n    local j33\n    local j34\n    local j35\n    local j36\n    local\
    \ j37\n    local j38\n    local j39\n    local j40\n    local j41\n    local j42\n\
    \    local j43\n    local j44\n    local j45\n    local j46\n    local j47\n \
    \   local j48\n    local j49\n    local j50\n    local j51\n    local j52\n  \
    \  local j53\n    local j54\n    local j55\n    local j56\n    local j57\n   \
    \ local j58\n    local j59\n    local j60\n    local j61\n    local j62\n    local\
    \ j63\n    local j64\n    local j65\n    local j66\n    local j67\n    local j68\n\
    \    local j69\n    local j70\n    local j71\n    local j72\n    local j73\n \
    \   local j74\n    local j75\n    local j76\n    local j77\n    local j78\n  \
    \  local j79\n    local j80\n    local j81\n    local j82\n    local j83\n   \
    \ local j84\n    local j85\n    local j86\n    local j87\n    local j88\n    local\
    \ j89\n    local j90\n    local j91\n    local j92\n    local j93\n    local j\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local result\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    local v=${arr[i]}\n    if (( ${v} < 10 )); then\n      result=\"\
    ${result} ${v}\"\n    elif (( ${v} > 9 )); then\n      result=\"${result} ${v+10}\"\
    \n    else\n      result=\"${result} ${v}\"\n    fi\n  done\n  echo $result\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcavemoa3.sh: line 19: ((: 1 -2 -3 41 57 76 87 88 99 < 10 : syntax
    error in expression (error token is "41 57 76 87 88 99 < 10 ")

    /tmp/tmpcavemoa3.sh: line 21: ((: 1 -2 -3 41 57 76 87 88 99 > 9 : syntax error
    in expression (error token is "41 57 76 87 88 99 > 9 ")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    # shellcheck disable=SC2154\n    set -- $1 $2 $3 $4 $5 $6 $7 $8 $9\n\
    \    while [[ ${#} -gt 0 ]]\n    do\n        local -i a=$1\n        local -i b=$2\n\
    \        shift\n        local -i c=$2\n        local -i d=$2\n        local -i\
    \ e=$2\n        local -i f=$2\n        local -i g=$2\n        local -i h=$2\n\
    \        local -i i=$2\n        local -i j=$2\n        local -i k=$2\n       \
    \ local -i l=$2\n        local -i m=$2\n        local -i n=$2\n        local -i\
    \ o=$2\n        local -i p=$2\n        local -i q=$2\n        local -i r=$2\n\
    \        local -i s=$2\n        local -i t=$2\n        local -i u=$2\n       \
    \ local -i v=$2\n        local -i w=$2\n        local -i x=$2\n        local -i\
    \ y=$2\n        local -i z=$2\n        local -i t=$2\n        local -i u=$2\n\
    \        local -i v=$2\n        local -i w=$2\n        local -i x=$2\n       \
    \ local -i y=$2\n        local -i z=$2\n        local -i t=$2\n        local -i\
    \ u=$2\n        local -i v=$2\n        local -i w=$2\n        local -i x=$2\n\
    \        local -i y=$2\n        local -i z=$2\n        local -i t=$2\n       \
    \ local -i u=$2\n        local -i v=$2\n        local -i w=$2\n        local -i\
    \ x=$2\n        local -i y=$2\n        local -i z=$2\n        local -i t=$2\n\
    \        local -i u=$2\n        local -i v=$2\n        local -i w=$2\n       \
    \ local -i x=$2\n        local -i y=$2\n        local -i z=$2\n        local -i\
    \ t=$2\n        local -i u=$2\n        local -i v=$2\n        local -i w=$2\n\
    \        local -i x=$2\n        local -i y=$2\n        local -i z=$2\n       \
    \ local -i t=$2\n        local -i u=$2\n        local -i v=$2\n        local -i\
    \ w=$2\n        local -i x=$2\n        local -i y=\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzjamfp8k.sh: line 86: syntax error near unexpected token `}''

    /tmp/tmpzjamfp8k.sh: line 86: `}''

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -r arr=($1)\n  local -r k=$2\n  local sum=0\n\n  for i in \"${arr[@]:0:k}\"\
    ; do\n    sum=$(($sum + ${arr[$i]}))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=($1);\n  local k=$2;\n  local sum;\n  local i;\n  for ((i=0;i<k;\
    \ i++))\n  do\n    if [ \"${arr[i]}\" != \"\" ] ; then\n      arr[i]=$(echo $arr[i]\
    \ | cut -d \" \" -f 1);\n    fi\n  done\n  sum=$(echo $((${#arr[@]} * ${#arr[@]})));\n\
    \  echo \"$sum\";\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local array=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    while ((\
    \ k < ${#array} )); do\n        sum=$(( sum + ${array:$k:2} | bc ))\n        k=$((\
    \ k + 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpub7kj2kx.sh: line 18: sum +  - | bc : syntax error: operand expected
    (error token is "| bc ")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  arr=$(echo $1 | tr ' ' ',')\n  k=$(echo $2 | tr ' ' ',')\n  length=$(echo\
    \ $((${#arr[@]}-1)) | tr ' ' ',')\n\n  for i in $(seq 0 $((${#arr[@]}-1)) -1 $k)\n\
    \  do\n    if ((($i % 2)==0))\n    then\n      sum=$((${sum} + ${arr[i]}))\n \
    \   fi\n  done\n  echo $((${sum} + ${arr[$k]} ))\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "seq: extra operand \u20183\u2019\nTry 'seq --help' for more information.\n\
    /tmp/tmpiq3xt5hh.sh: line 25: +  : syntax error: operand expected (error token\
    \ is \"+  \")\n"
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i\n    local\
    \ j\n    local len\n    local j1\n    local j2\n    for ((i=1; i<=k; i++))\n \
    \   do\n        len=${#arr[@]} #length\n        j1=$(expr $i \\* $len) \n    \
    \    j2=$(expr $j1 + $len)\n        j=$((j2+1))\n        arr[$j]=$(expr $arr[$j1]\
    \ + $arr[$j])\n    done\n    sum=$(expr $arr[0] + $arr[1])\n    return $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "expr: syntax error: unexpected argument \u2018-2\u2019\nexpr: syntax error:\
    \ unexpected argument \u2018-2\u2019\nexpr: syntax error: unexpected argument\
    \ \u2018-2\u2019\nexpr: syntax error: unexpected argument \u2018-2\u2019\n"
  stdout: ''
  timestamp: 1660055451
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n\n    local sum\n    local n\n\
    \    local i\n    sum=0\n    for ((i=0; i < ${#arr}; i++)); do\n        ((n=\"\
    ${arr:i:${k}}\"))\n        if ((${n} <= 9)) then\n            sum=$((${sum} +\
    \ ${n}))\n        fi\n    done\n\n    echo \"${sum}\"\n}\n\ncandidate() {\n  \
    \  add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1j80qs4v.sh: line 23: syntax error near unexpected token `then''

    /tmp/tmp1j80qs4v.sh: line 23: `        if ((${n} <= 9)) then''

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    if [[ $k -gt ${#arr[@]} ]]; then\n\
    \        return ${arr[0]}\n    fi\n    local sum\n    sum=0\n    for (( i=0; i<${#arr[@]};\
    \ i++ )); do\n        if [[ ${arr[$i]} -le 9 ]]; then\n            sum=$(($sum\
    \ + ${arr[$i]}))\n        elif [[ ${arr[$i]} -ge 10 ]]; then\n            if [[\
    \ ${k} -ge ${i} ]]; then\n                sum=$(($sum + ${arr[$i]}))\n       \
    \         k=$(($k - $i))\n            fi\n        fi\n    done\n    return $(($sum\
    \ + ${arr[$((k-1))]}))\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8lsdxsui.sh: line 17: return: too many arguments

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  arr=$1\n  k=$2\n  arr=( $arr )\n  arr=(${arr[@]:0:k})\n  arr+=( \"${arr[@]:k}\"\
    \ )\n  echo ${arr[@]}\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n\n    local sum=0\n\n    local elements=()\n\
    \n    local element=\"\"\n\n    # parse each element of the array\n    for ((\
    \ i=0; i<k; i++ )); do\n        element=$(echo $arr | sed -n \"$i\"p)\n      \
    \  elements[$i]=$element\n    done\n\n    # calculate sum\n    for (( i=0; i<k;\
    \ i++ )); do\n        sum=$((sum + elements[$i]))\n    done\n\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'sed: -e expression #1, char 2: invalid usage of line address 0

    /tmp/tmpn_afg2mj.sh: line 31: 1 -2 -3 41 57 76 87 88 99: syntax error in expression
    (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr k\n  read -r -a arr <<< \"$1\"\n  read -r -a k\n  declare -a\
    \ sum\n  sum=()\n  for ((i=0; i<k; i++)); do\n    sum+=(\"${arr[i]}\")\n  done\n\
    \  echo \"${sum[@]:2}\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=31 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=8 encoding='utf-8'>
  timestamp: 1660055456
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    echo \"${arr[@]:0:k}+${arr[@]:(k+1):$k}\"\
    \n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  arr=$1\n  k=$2\n  sum=0\n  for i in $arr; do\n    while [[ \"$i\" =~ ^[0-9]{2}$\
    \ ]]; do\n      ((sum+=i))\n      ((i++))\n    done\n    i=$((i+1))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  arr=$1\n  k=$2\n  result=$( printf \"%s\" \"${arr[@]:0:k}\" )\n  echo \"\
    $result\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr k\n    arr=$1\n    k=$2\n    # Store elements of arr in an\
    \ array\n    arr=( $arr )\n    # Store digits in an array\n    digits=(${arr[@]/#/\
    \ })\n    # Store array size in a variable\n    array_size=${#arr[@]}\n    # Initialize\
    \ sum variable\n    sum=0\n    # Initialize sum variable\n    i=2\n    # Initialize\
    \ a flag to keep track of element with only one digit\n    flag=false\n    # Initialize\
    \ an array to store elements with two digits\n    two_digits=()\n    # Initialize\
    \ a variable k which indicates that we will start taking elements from k elements\
    \ of arr\n    k=$(( k - 1 ))\n    # Iterate through all elements of arr\n    for\
    \ (( i=0; i < array_size; i++ )); do\n        if (( ${arr[i]} != 0 )) && [[ ${digits[$i]}\
    \ -gt ${arr[i]} ]]; then\n            sum=$(( sum + ${arr[i]} ))\n           \
    \ # Set flag to true if sum of digits is greater than sum variable\n         \
    \   if [[ ${sum} -gt ${sum} ]]; then\n                flag=true\n            #\
    \ Set flag to false if sum of digits is less than sum variable\n            elif\
    \ [[ ${sum} -lt ${sum} ]]; then\n                flag=false\n            # Else\
    \ the sum is equal\n            else\n                flag=false\n           \
    \ fi\n            # Store two digits element into two_digits array\n         \
    \   if [ \"$flag\" = true ]; then\n                two_digits+=(\"$(( ${arr[i]}\
    \ - 1 ))\")\n            # Else set flag to false and set two_digits element to\
    \ zero and add that element into two_digits array\n            elif [ \"$flag\"\
    \ = false ]; then\n                two_digits+=(\"0\")\n            fi\n     \
    \   # Else set the two digits element to zero and add that element into two_digits\
    \ array\n        else\n            two_digits+=(\"0\")\n        fi\n    done\n\
    \    # Append element with two digits into two_digits array\n    two_digits+=(\"\
    $(( ${arr[i]} - 1 ))\")\n    # Print sum variable\n    echo \"${sum}\"\n    #\
    \ Append elements of two_digits array\n    arr=(\"${two_digits[@]}\")\n    # Return\
    \ sum of elements with at most two digits from first k elements of arr\n    echo\
    \ \"${arr[@]:0:$k}\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum\n    local i\n  \
    \  local count\n    sum=0\n    count=0\n    for i in \"${arr}\"; do\n        [[\
    \ $i =~ ^[0-9]+$ ]] && count=$((count+1))\n        if [[ \"$count\" -ge \"$k\"\
    \ ]]; then\n            sum=$((sum+i))\n            count=0\n        fi\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n\n  local i=0\n  local sum=0\n  while IFS=\
    \ read -r line; do\n    sum=$(($sum + $line)) || continue\n    ((i++ == k)) &&\
    \ echo \"$sum\"\n  done\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=52 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=50 encoding='utf-8'>
  timestamp: 1660055456
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  arr=( ${arr[*]} )\n  # Remove trailing\
    \ zeros.\n  arr=( \"${arr[@]#????}\" )\n  arr=( \"${arr[@]#????}\" )\n  arr=(\
    \ \"${arr[@]#????}\" )\n  arr=( \"${arr[@]#????}\" )\n  # Add k to arr elements\
    \ that already have k digits.\n  arr=( \"${arr[@]}\" \"${k}\" )\n  # Get the index\
    \ of the first k digits.\n  local i=0\n  while [ \"${#arr[@]}\" -gt \"$k\" ];\
    \ do\n    (( i++ ))\n    arr=( \"${arr[@]%????}\" )\n  done\n  # Sum up all remaining\
    \ elements that have less k digits.\n  local result=0\n  for i in \"${arr[@]:$i}\"\
    ; do\n    (( result += $i ))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=57 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=5 encoding='utf-8'>
  timestamp: 1660055456
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=(\"${@:2}\")\n    local k=${#arr[@]}\n    local ret=0\n   \
    \ while ((k--)); do\n        [[ ${arr[$k]} -le 10 ]] && ret=$((ret+arr[$k]))\n\
    \        [[ ${arr[$k]} -le 999 ]] && ret=$((ret+arr[$k]))\n        arr=(\"${arr[@]:k}\"\
    )\n    done\n    echo \"$ret\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=$(echo \"$1\" | sed -e \"s/ /\\0/g\")\n    k=$(echo \"$2\" | sed\
    \ -e \"s/ /\\0/g\")\n    echo \"${arr:$k}\".sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr k\n    arr=$1\n    k=$2\n    local first\n    local sum\n \
    \   first=1\n    sum=0\n    local i\n    for ((i=1; i <= k; i++))\n    do\n  \
    \      sum=$(( $sum + ${arr[$i - 1]} ))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpti5nk_qr.sh: line 24: 0 + 1 -2 -3 41 57 76 87 88 99 : syntax error
    in expression (error token is "41 57 76 87 88 99 ")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum\n    local i\n\n\
    \    # Get the sum of first k elements with at most 2 digits\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        if [[ \"${arr:$i:2}\" == \"${arr:$i:2}\" ]]; then\n     \
    \       sum=$((${sum}+${arr[i]}))\n        fi\n    done\n\n    # Add the rest\
    \ of the elements\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if [[ ${arr:$i:2}\
    \ == ${arr:$i:2} ]]; then\n            sum=$((${sum}+${arr[i]}))\n        fi\n\
    \    done\n\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp64b26o30.sh: line 22: +1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=$(echo $arr | sed -e \"s/ /\\n/g\"\
    \ | sort | sed -e \"s/^/${k}d//\" | sed -e \"s/$/+/g\" | paste -d '+' -)\n  echo\
    \ $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 8: unknown option to `s''

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n\n  local tmp=\"\"\n  local sum=\"\"\
    \n  local i=${k}\n\n  for i in \"${arr[@]}\"; do\n    ((i>0)) && tmp+=\"$i\"\n\
    \    [[ \"$i\" =~ ^([[:digit:]]{0,2})$ ]] && tmp+=\"$i \"\n    ((i<${#arr[@]}-1))\
    \ && tmp+=\"$i\"\n  done\n\n  if [[ \"$tmp\" =~ ^([[:digit:]]{0,2})$ ]]; then\n\
    \    sum=$(($sum + $1))\n  else\n    sum=$(($sum + ${tmp%??}))\n  fi\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplsm7o61x.sh: line 22: ((: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    /tmp/tmplsm7o61x.sh: line 24: ((: 1 -2 -3 41 57 76 87 88 99: syntax error in expression
    (error token is "41 57 76 87 88 99")

    /tmp/tmplsm7o61x.sh: line 28: + 1 -2 -3 41 57 76 87 88 99: syntax error in expression
    (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n        local arr=$1\n        local k=$2\n        local sum=0\n        local\
    \ i=0\n        local count=1\n        while [ $i -lt $k ]; do\n              \
    \  if [[ ${arr:$i:1} == 1 ]]; then\n                        sum=$(($sum + ${arr:$i:1}))\n\
    \                        i=$(($i+1))\n                        count=$(($count\
    \ + 1))\n                else\n                        sum=$(($sum + ${arr:$i:1}))\n\
    \                        i=$(($i+1))\n                        count=$(($count\
    \ + 1))\n                fi\n        done\n        if [[ ${arr:$i:1} != 1 ]];\
    \ then\n                sum=$(($sum + ${arr:$i}))\n                i=$(($i+1))\n\
    \        fi\n        echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgw1c6fhk.sh: line 25: 1 +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr\n    local k\n    arr=$1\n    k=$2\n    local sum\n    sum=0\n\
    \    local i\n    i=2\n    while [ $i -le ${#arr} ]; do\n        # Skip non-digit\n\
    \        if [[ \"${arr[$i]}\" =~ ^\\D ]]; then\n            i=$((i+1))\n     \
    \       continue\n        fi\n        # Skip if out of range\n        if [ ${#arr[$i]}\
    \ -gt $k ]; then\n            break\n        fi\n        # Skip if too short\n\
    \        if [[ ${#arr[$i]} -le 2 ]]; then\n            break\n        fi\n   \
    \     sum=$((sum + arr[$i]))\n        i=$((i+1))\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr k\n  IFS=' ' read -r -a arr <<< \"$1\"\n  k=$2\n  echo \"${arr[*]}\"\
    \ | awk -v k=\"$k\" -v RS=\"[0-9]\" '{\n    for (i=1;i<=k;i++)\n      sum+=$(NF-i)*10\n\
    \    print sum\n  }'\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'awk: cmd. line:3: (FILENAME=- FNR=1) fatal: attempt to access field -1

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=( $1 )\n    k=$2\n\n    sum=0\n    for i in \"${arr[@]:0:$k}\"; do\n\
    \        sum=$(($sum + $i))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055451
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr k sum\n  read -a arr <<< \"$1\"\n  read k <<< \"$2\"\n  sum=0\n\
    \  for ((i=0; i<k; i++)) ; do\n    sum=$((sum+arr[i]))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=( $1 )\n    local k=$2\n    local sum=0\n    if [[ -z \"$arr\"\
    \ ]]; then\n        echo \"Missing parameter!\"\n        return 1\n    elif [[\
    \ -z \"$k\" ]]; then\n        echo \"Missing parameter!\"\n        return 1\n\
    \    fi\n    while (( k <= $k )); do\n        sum=$(( sum + arr[$k - 1] ))\n \
    \       k=$(( k + 1 ))\n    done\n    echo \"$sum\"\n    return 0\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=44 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=34 encoding='utf-8'>
  timestamp: 1660055457
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=\n    local tmp=$(echo $arr\
    \ | tr \" \" \"\")\n    for ((i = 0; i < k; i++)) ; do\n        sum=$(echo $sum\
    \ + $tmp | cut -c1-2)\n        tmp=$(echo $tmp | cut -c2-2)\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'tr: when not truncating set1, string2 must be non-empty

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr k num\n  arr=$1\n  k=$2\n  num=$(echo $arr | sed \"s/ /\\n/g\"\
    )\n  arr=$(echo $arr | sed \"s/ /\\n/g\")\n  num=$(echo $num | sed \"s/ /\\n/g\"\
    )\n  num=${#arr}\n  num=$((num - k + 1))\n  k=${#num}\n  num=$((num - k + 1))\n\
    \  total=0\n  for ((i=0; i<num; i=i+2)); do\n    total=$(($total + $arr[i]))\n\
    \  done\n  echo \"$total\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\")\
    \ = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo8yr57ni.sh: line 26: 0 + 1

    -2

    -3

    41

    57

    76

    87

    88

    99[i]: syntax error in expression (error token is "41

    57

    76

    87

    88

    99[i]")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr k\n  arr=( $1 )\n  k=( $2 )\n  local -a sum\n\n  sum=()\n  while\
    \ [[ ${#arr[@]} -gt 0 ]]; do\n    arr+=(${arr[0]})\n    local first=${arr[0]}\n\
    \    arr=( \"${arr[@]:1}\" )\n    if [[ ${#arr[@]} -gt 0 ]]; then\n      local\
    \ second=${arr[0]}\n      if (( ${#first} + ${#second} <= 2 )); then\n       \
    \ sum+=(\"$first$second\")\n      fi\n    fi\n  done\n  echo $(( ${sum[@]} + ${k}\
    \ ))\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=65 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=29 encoding='utf-8'>
  timestamp: 1660055457
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($(echo \"${1}\" <<< \"${@:2}\")); arr=($(echo \"${arr[*]}\"\
    \ | sed -e 's/ //g' -e 's/^ *//' -e 's/ *$//'));\n    local k=\"${#arr[*]}\";\
    \ k=\"${k}\";\n    local sum=0; for ((i=0;i<k;i++)); do\n      local digit=${arr[i]%%??*};\
    \ arr[i]=\"${arr[i]##*??}\";\n      if [[ \"$digit\" -le 10 ]]; then\n       \
    \ sum=$((sum+digit))\n      else\n        break\n      fi\n    done; echo \"$sum\"\
    \n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    echo \"$(( ${arr:$k:$k} + ${arr:0:$k}\
    \ ))\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk3h8qq81.sh: line 16: 2 - + 1 - : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=$1\n    k=$2\n    sum=0 # sum of first k elements with at most two\
    \ digits\n    for i in $(seq 1 $k)\n    do\n        if [[ ${arr[$i]} == ${arr[$i]}\
    \ \"-\" ]]; then\n            ((sum=sum+$((${arr[$i]}+1))))\n        elif [[ ${arr[$i]}\
    \ == ${arr[$i]} \"0\" ]]; then\n            ((sum=sum+${arr[$i]}))\n        elif\
    \ [[ ${arr[$i]} == ${arr[$i]} \"+\" ]]; then\n            ((sum=sum+${arr[$i]}))\n\
    \        elif [[ ${arr[$i]} > 0 && ${arr[$i]} < 10 ]]; then\n            ((sum=sum+$((${arr[$i]}+10))))\n\
    \        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpng4p2tug.sh: line 19: syntax error in conditional expression

    /tmp/tmpng4p2tug.sh: line 19: syntax error near `"-"''

    /tmp/tmpng4p2tug.sh: line 19: `        if [[ ${arr[$i]} == ${arr[$i]} "-" ]];
    then''

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr\n    arr=($1)\n    k=$2\n    if [ $k -lt $1 ]; then\n     \
    \   return -1\n    fi\n    echo \"${arr[@]:0:k}${arr[@]:k}\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpn64pkz1m.sh: line 17: [: too many arguments

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=(${@:2})\n    num=$(echo \"${arr[@]:0:k}\" | tr -d ' ')\n    sum=$((num\
    \ + arr[k-1]))\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  # Convert $1 to an array\n  set -- \"$1\"\n  declare -a arr\n\n  # Parse\
    \ the array from $2 to $3\n  for ((i=2;i<=$3;i++)); do\n    # Store all digits\
    \ in current index to an array arr\n    arr+=( $( IFS=+ read -d '' \"$2\" ) )\n\
    \    # Remove last digit from the current index\n    let \"arr[$i]--\"\n  done\n\
    \n  # Add all the remaining digits of arr\n  printf \"%s\\n\" \"${arr[@]}\" |\
    \ xargs -d '\\n' | awk '{sum += $1}; END {print sum}'\n}\n\ncandidate() {\n  \
    \  add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjejrv3dj.sh: line 19: ((: i<=: syntax error: operand expected (error
    token is "<=")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    arr=(${arr// / })\n    local sum=0\n\
    \    local sum2=0\n    local size=${#arr[@]}\n    for (( i=0; i<${k}; i++ ));\
    \ do\n        sum=$((${sum}+${arr[i]}))\n        sum2=$((${sum2}+${arr[i]}))\n\
    \    done\n    local result\n    if (( ${sum} > ${sum2} )) ; then\n        result=${sum}\n\
    \    else\n        result=${sum2}\n    fi\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=( \"${@}\" )\n    local k=${2:-1}\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        sum=$(( $sum + ${arr[i]} ))\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_cucpc4e.sh: line 18: 0 + 1 -2 -3 41 57 76 87 88 99 : syntax error
    in expression (error token is "41 57 76 87 88 99 ")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n   arr=($1)\n   k=$2\n   res=0\n   for i in $(seq $k); do res=$(expr ${arr[i]}\
    \ + ${res}); done\n   echo \"$res\"\n}\n\ncandidate() {\n    add_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -r arr_of_ints=$1\n    local -r k=$2\n    local sum=0\n\n    for\
    \ (( i = 0; i < ${#arr_of_ints}; i++ )); do\n        local elem=${arr_of_ints[i]}\n\
    \        if [[ -z \"${elem}\" ]]; then\n            continue\n        fi\n   \
    \     if (( elem < 10 && elem > 9 )); then\n            (( sum += elem ))\n  \
    \      fi\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp60scmhtq.sh: line 23: ((: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr k\n  read -r arr < <(echo $1 | tr \" \" \"\\n\")\n  read -r k\n\
    \  echo \"$((${arr:k}+${arr:k:2}))\"\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=43 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=36 encoding='utf-8'>
  timestamp: 1660055457
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local result=\"$3\"\n  local i\n\n\
    \  IFS=$'\\n' read -r -a elements <<< \"${arr}\"\n  if (( k <= ${#elements[*]}\
    \ )); then\n    for (( i = 0; i < k; i++ )); do\n      result=$(( ${result} +\
    \ ${elements[i]} ))\n    done\n  else\n    return 1\n  fi\n  printf '%s\\n' \"\
    $result\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  arr=($(echo $1 |sed \"s/ /\\n/g\"))\n  k=$2\n\n  result=$(echo ${arr[0]}\
    \ ${arr[1]})\n\n  for i in $(seq 2 $k); do\n    res=$(echo $result ${arr[i]})\n\
    \    result=$(echo $result ${res})\n  done\n  echo $result\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -r arr=\"$1\"\n    local -r k=\"$2\"\n    local sum=0\n    local\
    \ len=${#arr[@]}\n\n    for (( i=0; i<${len}; i++ )); do\n        if [[ ${arr[i]}\
    \ > 9 ]]; then\n            arr[i]=${arr[i]%?}\n        fi\n        sum=$(( ${sum}\
    \ + ${arr[i]} ))\n        if [[ ${sum} > 9 || ${sum} < 0 ]]; then\n          \
    \  sum=0\n        fi\n        if [[ \"${k}\" -eq \"${len}\" ]]; then\n       \
    \     echo \"${sum}\"\n            return 0\n        fi\n    done\n\n    local\
    \ j=$(( k - 1 ))\n    for (( j=0; j<len; j++ )); do\n        if [[ ${arr[j]} >\
    \ 9 ]]; then\n            arr[j]=${arr[j]%?}\n        fi\n        sum=$(( ${sum}\
    \ + ${arr[j]} ))\n        if [[ ${sum} > 9 || ${sum} < 0 ]]; then\n          \
    \  sum=0\n        fi\n        if [[ \"${k}\" -gt \"${j}\" ]]; then\n         \
    \   echo \"${sum}\"\n            return 0\n        fi\n    done\n\n    echo \"\
    ${sum}\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_ftfif09.sh: line 23: 0 + 1 -2 -3 41 57 76 87 88 99 : syntax error
    in expression (error token is "41 57 76 87 88 99 ")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n        arr=( $1 )\n        k=$2\n        arr=(${arr[*]} $k)\n        arr=(${arr[@]:1:$2})\n\
    \        echo $((${arr[0]}+${arr[1]}))\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    for (( i=0; i < ${#arr[@]};\
    \ i++ )); do\n        local element=${arr[$i]}\n        if [[ ${#element} -gt\
    \ 2 ]]; then\n            sum=$((sum+element))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjydilwon.sh: line 20: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=( $1 )\n    k=( $2 )\n    \n    while (( k <= $2 )); do\n       \
    \ sum=$(( sum + ${arr[k]} ))\n        k=$(( k + 1 ))\n    done\n\n    echo \"\
    ${sum}\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n   arr=( \"${@}\" )\n   k=\"${2}\"\n   echo \"${arr[0]}\"\n   for (( i=0;\
    \ i<${#arr[@]}; i++ )); do\n      echo \"${arr[$i]}\"\n   done\n   echo -n \"\
    \ \"\n   for (( j=0; j<${#arr[@]}; j++ )); do\n      if [[ ${arr[$j]} =~ ^[0-9][0-9]$\
    \ ]]; then\n         echo \"${arr[$j]}\"\n      else\n         echo \"${arr[$j]}+\"\
    \n      fi\n   done\n   echo -n \" \"\n   echo \"${arr[@]:0:k}\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n\n    local sum=0\n    local i\n\
    \    local j\n\n    for ((i=0; i < k; i++)); do\n        j=$((i+1))\n        sum=$((sum\
    \ + arr[i]))\n    done\n    sum=$((sum + arr[k-1]))\n\n    echo \"$sum\"\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp05swo0ji.sh: line 23: 1 -2 -3 41 57 76 87 88 99: syntax error in
    expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n\n    # empty arr\n    if [ -z\
    \ \"$arr\" ]; then\n        return 0\n    fi\n\n    # check if k is okay\n   \
    \ if [ -z \"$k\" ]; then\n        echo \"error: k must be an non-zero integer\"\
    \n        return 1\n    fi\n\n    # check if the arr has non-positive elements\n\
    \    if [ -z \"$arr\" ] || [ -z \"$k\" ] || [ \"$k\" -gt \"$#arr\" ]; then\n \
    \       echo \"error: arr must have non-zero length or k must be lower than the\
    \ length of arr\"\n        return 1\n    fi\n\n    # check if k is valid\n   \
    \ if [ \"$k\" -gt \"$#arr\" ]; then\n        echo \"error: k must be lower than\
    \ the length of arr\"\n        return 1\n    fi\n\n    arrLen=${#arr}\n    numElements=$((arrLen-1))\n\
    \    while ((numElements>0)); do\n        sum=0\n        digit=0\n        for\
    \ ((i=$((numElements-1)); i>=0; i--)); do\n            digit=${arr[$((i-1))]}\n\
    \            sum=$((sum+digit))\n        done\n        if ((sum<10)); then\n \
    \           sum=0\n        fi\n        ((numElements--))\n        arr[$((numElements))]=${sum}\n\
    \    done\n\n    if [ \"$k\" -eq \"$numElements\" ]; then\n        arr[$((numElements))]=\"\
    $((arr[$((numElements))]+1))\"\n    fi\n\n    sum=0\n    for ((i=$((k-1)); i>=0;\
    \ i--)); do\n        sum=$((sum+arr[i]))\n    done\n\n    echo \"$sum\"\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6pf5jvfw.sh: line 29: [: 2arr: integer expression expected

    /tmp/tmp6pf5jvfw.sh: line 35: [: 2arr: integer expression expected

    /tmp/tmp6pf5jvfw.sh: line 47: 1 -2 -3 41 57 76 87 88 99: syntax error in expression
    (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=(\"${@:3}\" )\n    k=\"${2:-2}\"\n    sum=0\n    arr1=()\n    for\
    \ (( i=0; i<k; i++ )); do\n        arr1+=( $( echo \"${arr[*]:0:i}1\" ) )\n  \
    \  done\n    for (( j=0; j<k; j++ )); do\n        arr1+=( $( echo \"${arr[*]:j:k}1\"\
    \ ) )\n    done\n    for (( i=0; i<k; i++ )); do\n        sum=$(( sum + arr1[i]\
    \ ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    if [[ \"$arr\" =~ (^| )([0-9]{2})([0-9]{2})(\
    \ (|$)) ]]; then\n        local tmp=${BASH_REMATCH[1]}\n        local sum=0\n\
    \        local i=0\n        while [[ $tmp != ${BASH_REMATCH[2]} ]]; do\n     \
    \       if (( $i > k )); then\n                break\n            fi\n       \
    \     (( sum += ${BASH_REMATCH[3]} ))\n            tmp=${BASH_REMATCH[2]}\n  \
    \          (( i++ ))\n        done\n        echo $sum\n    else\n        echo\
    \ \"0\";\n    fi\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=( $1 )\n    k=( $2 )\n    echo \"${arr[@]}\" | grep -v -E '^ *[0-9]+\
    \ *$' | \\\n        cut -d ' ' -f $2 | sort -n | head -n $k\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=$1\n    k=${2:-1000}\n    arr=($arr); k=$((k+1))\n\n    while ((\
    \ \"${#arr[@]}\" > $k )); do\n        arr=(\"${arr[@]:0:$k}\" \"${arr[@]:$k}\"\
    )\n    done\n    echo \"${arr[@]:0:k}\" | paste -s -d \"\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=61 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=59 encoding='utf-8'>
  timestamp: 1660055457
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr k i\n    IFS=' ' read -a arr <<< $1\n    k=$(echo \"$2\" |bc)\n\
    \    i=${#arr[@]}\n    if [ $k -gt $i ] ; then\n        k=$i\n    fi\n    local\
    \ answer\n    for (( c=0 ; c<=$((k-1)) ; c++))\n    do\n        local j=0\n  \
    \      while [ ${#arr[$c]} -gt $j ] ; do\n            if [ ${arr[$c]:$j} == ${arr[$c]:0:$j}\
    \ ] ; then\n                j=$((j+1))\n            else\n                arr[$c]=${arr[$c]:0:$j}\n\
    \                break\n            fi\n        done\n        answer=$((answer+arr[$c]))\n\
    \    done\n    echo \"$answer\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnh4f5c9o.sh: line 26: [: 1: unary operator expected

    /tmp/tmpnh4f5c9o.sh: line 26: [: -2: unary operator expected

    /tmp/tmpnh4f5c9o.sh: line 26: [: -3: unary operator expected

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  echo \"$(($k+$arr[0]+${arr[@]:1}|bc))\"\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzqui94px.sh: line 16: 3+1 -2 -3 41 57 76 87 88 99[0]+ -2 -3 41
    57 76 87 88 99|bc: syntax error in expression (error token is "41 57 76 87 88
    99[0]+ -2 -3 41 57 76 87 88 99|bc")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local i\n    local sum=0\n    local array=($1)\n    local k=$2\n    local\
    \ max=0\n    local firstk=0\n    local length=0\n    for i in \"${array[@]}\"\
    ; do\n        (( sum += i ))\n        (( length += 1 ))\n        if (( length\
    \ == k )); then\n            firstk=$i\n            (( length = 0 ))\n       \
    \ fi\n    done\n    if (( length > k )); then\n        firstk=$(echo $firstk |\
    \ cut -d ' ' -f1)\n    fi\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  declare -a arr=( \"${@:2}\"  \"${@:3}\" )\n  local i sum=0 last\n  i=0\n\
    \  while read -r number\n  do\n    (( i++ ))\n    last=${number:0:1}\n    [[ ${last}\
    \ != [0-9]* ]] || continue\n    sum=$(( sum + ${arr[$i]} ))\n  done < <(printf\
    \ '%s\\n' \"${arr[@]:0:$2}\")\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    # Convert to an integer array\n    arr=( $(echo $1 | tr ' ' '\\n' | tr\
    \ '\\n' ' ' | sed 's/ /\\ /g') )\n\n    # Sort the array\n    arr=( $(sort -n\
    \ <<<\"$arr\") )\n\n    # Count the number of digits and take the first k of them\n\
    \    k=$(echo $2 | wc -w)\n\n    # Sum of the first k digits of the number\n \
    \   sum=$(echo \"${arr[$k]}\" | tr -d [:alpha:] | tr -d '[:space:]')\n\n    #\
    \ Calculate the sum of the remaining digits\n    for (( i=1; i<=${#arr[@]}; i++\
    \ )); do\n        sum=$(echo \"${sum}${arr[$i]}\" | tr -d [:alpha:] | tr -d '[:space:]')\n\
    \    done\n\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=(\"${@}\")\n    local k=${2:-25}\n    local sum=0\n    local\
    \ i\n\n    for i in {1..k}; do\n        sum=$((sum+${arr[i-1]}))\n    done\n \
    \   echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyihy9rdt.sh: line 20: {1..k}: syntax error: operand expected (error
    token is "{1..k}")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    # Split $1 on white space\n    read -a arr <<< \"$1\"\n\n    # Set k\n\
    \    k=$2\n\n    # Sum elements\n    sum=$(echo $arr | sed 's/ //g' | sed 's/^.//g'\
    \ | sed 's/.$//g' | sort -n | tail -n \"$k\" | head -n 1)\n\n    # Return sum\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for i in $(seq $((k+1))\
    \ $((${#arr[@]}-1)) ); do\n    ((sum+=${arr[$i]}))\n  done\n  echo \"$sum\"\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9kikszxz.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n\n    for ((i=0;\
    \ i < ${#arr}; i++)); do\n        if [[ ${arr:$i:2} == ${arr:$i-1:2} ]]; then\n\
    \            (( sum += ${arr:$i:2} - ${arr:$i-1:2} ))\n        fi\n    done\n\n\
    \    echo \"${sum}\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=( $1 )\n    k=( $2 )\n    echo \"${arr[@]}\"\n    echo \"${arr[@]}\"\
    \ | awk -v k=\"$k\" '{sum = 0; for (i = 1; i <= k; i++) sum += arr[i]; print sum}'\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n\n    local sum=0\n    local max=0\n\
    \    local count=0\n\n    while read line; do\n        ((count+=1))\n        if\
    \ ((count <= k)) || ((count <= max)); then\n            if ((count <= max)) &&\
    \ ((count <= k)) {\n                ((sum+=line))\n                max=$((count\
    \ + 1))\n            else\n                ((sum+=line))\n                max=$((count))\n\
    \            fi\n        fi\n    done <<< \"$arr\"\n    ((sum+=arr[k]))\n    ((sum+=arr[k]))\n\
    \    ((sum+=arr[k]))\n    ((sum+=arr[k]))\n\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp27jza_p7.sh: line 24: syntax error near unexpected token `{''

    /tmp/tmp27jza_p7.sh: line 24: `            if ((count <= max)) && ((count <= k))
    {''

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=$1\n    k=$2\n    echo $((${arr:$k}+${arr:0:$k}))\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmr3kfcch.sh: line 16: 2 -3 41 57 76 87 88 99+1 -: syntax error
    in expression (error token is "41 57 76 87 88 99+1 -")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($(echo $1 | tr ' ' \"\\n\"))\n    local k\n    local sum\n\
    \    local sum2\n    ((k=$2))\n    sum=0\n    for ((i=0; i<k; i++)); do\n    \
    \    sum2=0\n        for ((j=0; j<k; j++)); do\n            ((j=$j+1))\n     \
    \       if ((j>i)); then\n                sum2=$(expr $sum2 + $arr[${i}+j])\n\
    \            fi\n        done\n        sum=$(expr $sum + $sum2)\n    done\n  \
    \  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "expr: non-integer argument\nexpr: syntax error: missing argument after\
    \ \u2018+\u2019\nexpr: non-integer argument\nexpr: syntax error: missing argument\
    \ after \u2018+\u2019\n"
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum\n    local index\n    local\
    \ element\n    local element2\n    local element_count\n    local element_count2\n\
    \    local element_count3\n    element_count=0\n    element_count2=1\n    element_count3=1\n\
    \    while (( index<k )); do\n        element=$(echo $arr | cut -d \" \" -f $index)\n\
    \        if [ \"$element\" != \"\" ]; then\n            if [ \"$element\" == $element\
    \ ]; then\n                element_count=$(($element_count + 1))\n           \
    \ else\n                if [ \"$element_count2\" -gt \"$element_count\" ]; then\n\
    \                    element_count2=$(($element_count2 + 1))\n               \
    \     sum=$(($sum + $element))\n                fi\n                if [ \"$element_count3\"\
    \ -gt \"$element_count\" ]; then\n                    element_count3=$(($element_count3\
    \ + 1))\n                fi\n            fi\n        fi\n        (( index+=1 ))\n\
    \    done\n    if [ \"$element_count2\" -gt \"$element_count\" ]; then\n     \
    \   sum=$(($sum + $element_count2))\n    fi\n    if [ \"$element_count3\" -gt\
    \ \"$element_count\" ]; then\n        sum=$(($sum + $element_count3))\n    fi\n\
    \    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'cut: option requires an argument -- ''f''

    Try ''cut --help'' for more information.

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local elements=$1\n  local sum=$2\n\n  IFS=' ' read -r -a elements <<<\
    \ \"$elements\"\n  elements+=( ${elements[-1]} )  # ensure there's at least one\
    \ element\n  local len=${#elements[@]}\n  local i\n  local first=${elements[0]}\n\
    \  local last=${elements[len-1]}\n\n  for i in $(seq $((len-k+1)) $((len))); do\n\
    \    if [[ ${elements[i]} -gt ${first} ]] || [[ ${elements[i]} -le ${last} ]];\
    \ then\n      sum=$((${sum}+${elements[i]}))\n    fi\n  done\n\n  echo \"$sum\"\
    \n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr k\n    arr=$1\n    shift\n    k=$1\n    shift\n    local sum\n\
    \    while (( $# > 0 )) ; do\n        if (( $(echo \"${arr:$k:2}\" | cut -c1)\
    \ > 9 )); then\n            sum=$(( ${arr:$k:2} + ${arr:$k:2} ))\n        else\n\
    \            sum=$(( ${arr:$k:2} + ${arr:$k:2} ))\n        fi\n        k=$(( k\
    \ + 1 ))\n        arr=${arr:0:$k}\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=()\n    local k=${2:-1}\n    local sum=0\n    local i\n   \
    \ local cnt=0\n    for ((i = 1; i <= ${#arr[@]}; i++)); do\n        if [ ${i}\
    \ -gt $k ]; then\n            ((cnt++))\n        else\n            arr[$cnt]=${arr[$cnt]}${arr[$i-1]}\n\
    \        fi\n    done\n    for ((i = 1; i <= $k; i++)); do\n        ((cnt++))\n\
    \    done\n    for ((i = 0; i <= $cnt; i++)); do\n        sum+=${arr[$i]}\n  \
    \  done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=($1)\n    k=${2:-1}\n\n    sum=0\n    arr_count=${#arr[@]}\n\n  \
    \  arr_count=${arr_count:-$((arr_count+1))}\n    k=${k:-$arr_count}\n\n    for\
    \ (( i=0; i<arr_count; i++ )); do\n        if [ ${#arr[i]} -gt $k ]; then\n  \
    \          arr+=( ${arr[i]} ${arr[i+1]} )\n            arr_count=$((arr_count-1))\n\
    \        fi\n        sum=$(( sum + arr[i] ))\n    done\n    echo \"$sum\"\n}\n\
    \ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr k\n    arr=$(echo $1 | tr ' ' ' ')\n    k=$(echo $2 | tr '\
    \ ' ' ')\n    sum=0\n    for i in $(seq 0 $((k - 1))); do\n        if [[ ${arr[$i]}\
    \ =~ ^[0-9]+$ ]]; then\n            sum=$((sum + ${arr[$i]}))\n        fi\n  \
    \  done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\")\
    \ = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1 k=$2\n  declare -a arr2=()\n  for i in ${arr[@]}; do\n   \
    \ arr2+=( $i )\n  done\n  local sum=0\n  for i in \"${arr2[@]:${k}}\"; do\n  \
    \  sum=$(( $sum + $i ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    local count=0\n\
    \    local last_index=0\n    for index in \"${arr[@]:0:$k}\"\n    do\n       \
    \ local element=$(echo $index | sed 's/^0/+/g')\n        if [[ -z ${element} ]];\
    \ then\n            break\n        fi\n        local index_to_check=${element}\n\
    \        local temp_sum=${element}\n        local temp_count=0\n        while\
    \ [[ -z ${temp_sum} ]]; do\n            temp_sum=$(echo $index_to_check | sed\
    \ 's/^0/+/g')\n            temp_count=$(echo $index_to_check | sed 's/^0/+/g')\n\
    \        done\n        if [[ -z ${temp_sum} ]]; then\n            continue\n \
    \       fi\n        if [[ $temp_count -eq 2 ]]; then\n            sum=$((sum+temp_sum))\n\
    \        fi\n        count=$(echo $temp_count | awk '{print $1}')\n        local\
    \ tmp_sum=${temp_sum}\n        local tmp_count=${temp_count}\n        last_index=${index}\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n\n    echo \"$arr\" |\n       \
    \ awk '{ for (i = 2; i <= NF; i++) if ($i < 10) sum+=$i };\n        END {print\
    \ sum; }'\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n\n    local arr_tmp k sum\n   \
    \ arr_tmp=$(IFS=' ' read -ra arr <<< \"$arr\")\n    arr_tmp=(${arr_tmp[@]})\n\
    \    sum=0\n    for ((i=k; i<${#arr[@]}; i++)); do\n        (( arr_tmp[i] < 10\
    \ && ((( sum + (10#$arr_tmp[i]) )) < 10#$k ))) || {\n            (( sum + (10#$arr_tmp[i])\
    \ ))\n            continue\n        }\n    done\n\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=${2:-99}\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        sum=$((sum+${arr:$i:2}))\n    done\n    echo \"${sum}\"\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu64tfspw.sh: line 18: sum+ -: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local result\n\n  local arr_len\n  arr_len=$(\
    \ echo $arr | wc -l )\n  if [ $arr_len -gt 0 ] && [ $k -gt $arr_len ]; then\n\
    \    echo \"invalid input\"\n    exit\n  fi\n\n  result=$( echo $arr | sed -n\
    \ \"s/^.\\(.\\{2\\}\\).*$/\\1/p\" | awk -F \" \" '{print $1 + $2} ' )\n  echo\
    \ $result\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  # Split $1 into a list of numbers\n  arr=($1)\n  # Split $2 into a list\
    \ of numbers\n  arr2=($2)\n  # Declare and initialize a variable to hold sum of\
    \ elements with 2 digits from arr2\n  result=0\n  # Go through arr2 array and\
    \ add elements to result if they have 2 digits in arr array\n  for ((i=0; i<${#arr2[@]};\
    \ i++)); do\n    if [[ ${arr2[$i]} == $(expr ${arr[$i]} * 100 + ${arr[$i]})* ]];\
    \ then\n      result=$(( ${result} + ${arr[$i]} ))\n    fi\n  done\n  echo $result\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "expr: syntax error: unexpected argument \u20181\u2019\n"
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local array=\"$1\"\n  local k=\"$2\"\n  shift\n  local sum=0\n\n  local\
    \ arr=( $array )\n  local size=${#arr[@]}\n  if [ \"$size\" -eq 0 ]\n  then\n\
    \    return 0\n  fi\n\n  local max_first_k=( $(echo \"${arr[@]:0:$k}\" | sort\
    \ -n | sed -e 's/^\\([0-9]*\\)\\([0-9]*\\).*/\\2\\1/' ) )\n  local first_k=0\n\
    \  local second_k=0\n  while (( k <= size )); do\n    local first_k=${max_first_k[$first_k]}\n\
    \    local second_k=${max_first_k[$second_k]}\n    (( k++ ))\n    (( first_k++\
    \ ))\n    (( second_k++ ))\n  done\n\n  for (( first_k=0; first_k < k; first_k++\
    \ )); do\n    (( sum+=\"${arr[$first_k]}\" ))\n  done\n  (( sum+=${arr[(( first_k\
    \ + 1 ))]} ))\n\n  for (( second_k=0; second_k < k; second_k++ )); do\n    ((\
    \ sum+=\"${arr[$second_k]}\" ))\n  done\n\n  return $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2l8fvv2d.sh: line 38: ((: sum+= : syntax error: operand expected
    (error token is "+= ")

    /tmp/tmp2l8fvv2d.sh: line 40: ((: sum+= : syntax error: operand expected (error
    token is "+= ")

    /tmp/tmp2l8fvv2d.sh: line 43: ((: sum+= : syntax error: operand expected (error
    token is "+= ")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local array=$1\n  local k=$2\n  echo \"${array/#/ }${array/#/ }$(sum_elements\
    \ \"${array:0:k}\")\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpexang21f.sh: line 16: sum_elements: command not found

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum\n  local i\n  local len\n  local\
    \ i1\n  len=${#arr[@]}\n  for ((i = 0; i < len; i++)); do\n    (( i1 = i + k ))\n\
    \    if (( i1 > len )) ; then\n      i1=len\n    fi\n    sum=$(( sum + ${arr[$i]}\
    \ ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\")\
    \ = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgbx6kj54.sh: line 26: sum + 1 -2 -3 41 57 76 87 88 99 : syntax
    error in expression (error token is "41 57 76 87 88 99 ")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum\n    local i=0\n    sum=0\n\
    \    while [ $i -lt $k ]; do\n        if [ ${arr:$i:1} -lt 9 ]; then\n       \
    \     sum=$(($sum+${arr:$i:1}))\n        fi\n        i=$(($i+1))\n    done\n \
    \   echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpx6glfffd.sh: line 20: [: -lt: unary operator expected

    /tmp/tmpx6glfffd.sh: line 20: [: -: integer expression expected

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=( \"${arr[@]}\" )\n  local k=\"${2}\"\n  local sum=0\n  local\
    \ j=0\n  for i in $(seq 0 \"$((k-1))\"); do\n    ((j++))\n    local el=( ${arr[$i]}\
    \ )\n    local sum=$(( $sum + ${el[0]} + ${el[1]} ))\n  done\n  printf \"$sum\\\
    n\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfalvv3ml.sh: line 21: 0 +  +  : syntax error: operand expected
    (error token is "+  ")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local result\n    if [[ $arr == *'\
    \ ' ]]; then\n        arr=$(echo $arr | sed -e 's/^ *//' -e 's/ *$//')\n    fi\n\
    \    # echo \"${arr}\" | tr -d ' '\n    for ((i=0; i<${#arr[@]}; i++)); do\n \
    \       local num=${arr[i]}\n        local digit=0\n        if [[ ${num} =~ ^[0-9]+$\
    \ ]]; then\n            digit=${BASH_REMATCH[0]}\n        else\n            digit=0\n\
    \        fi\n        if ((digit > k)) && [[ ${num} != 0 ]]; then\n           \
    \ result=$((result+num))\n        fi\n    done\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=( $1 )\n    k=( $2 )\n\n    declare -a sum=0\n\n    for i in \"${arr[@]}\"\
    ; do\n        if (( $(echo \"$i | cut -c1-2\" | sort -u | wc -l) -ge k )); then\n\
    \            (( sum += i ))\n        fi\n    done\n\n    echo \"${sum}\"\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmlf78ia2.sh: line 20: ((: 1 -ge k : syntax error in expression
    (error token is "k ")

    /tmp/tmpmlf78ia2.sh: line 20: ((: 1 -ge k : syntax error in expression (error
    token is "k ")

    /tmp/tmpmlf78ia2.sh: line 20: ((: 1 -ge k : syntax error in expression (error
    token is "k ")

    /tmp/tmpmlf78ia2.sh: line 20: ((: 1 -ge k : syntax error in expression (error
    token is "k ")

    /tmp/tmpmlf78ia2.sh: line 20: ((: 1 -ge k : syntax error in expression (error
    token is "k ")

    /tmp/tmpmlf78ia2.sh: line 20: ((: 1 -ge k : syntax error in expression (error
    token is "k ")

    /tmp/tmpmlf78ia2.sh: line 20: ((: 1 -ge k : syntax error in expression (error
    token is "k ")

    /tmp/tmpmlf78ia2.sh: line 20: ((: 1 -ge k : syntax error in expression (error
    token is "k ")

    /tmp/tmpmlf78ia2.sh: line 20: ((: 1 -ge k : syntax error in expression (error
    token is "k ")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local i arr k\n  arr=($1)\n  k=$2\n  # This loop should keep a running\
    \ total\n  sum=0\n  # Assume first k elements don't have a second digit\n  for\
    \ ((i=0; i<k; ++i)); do\n    ((sum+=(arr[i]))) #increment sum by current element\
    \ and store in sum\n    ((sum+=((arr[i]%10)) || 10)) #add current element modulo\
    \ 10 and store in sum\n  done\n  printf \"%s\\n\" \"$sum\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    # shellcheck disable=SC2154\n\
    \    local sum=0\n    while read x; do\n        (( sum += x ))\n    done <<(echo\
    \ \"$arr\" | cut -d\" \" -f\"$k\")\n    echo \"$sum\"\n}\n\ncandidate() {\n  \
    \  add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu7n4klbc.sh: line 20: syntax error near unexpected token `(''

    /tmp/tmpu7n4klbc.sh: line 20: `    done <<(echo "$arr" | cut -d" " -f"$k")''

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local output\n    if [ -z \"\
    $arr\" -o -z \"$k\" -o \"$k\" -gt \"$#arr\" ]; then\n        echo \"Invalid input\"\
    \n        return 1\n    fi\n\n    for (( i=0; i<k; i++ )); do\n        output=$(echo\
    \ \"$arr\" | grep -m 1 \"${arr[i]:0:1}\")\n        if [ -z \"$output\" ]; then\n\
    \            return 0\n        fi\n        arr[i]=$output\n    done\n    local\
    \ sum=${arr[0]}\n    for (( j=1; j<=k; j++ )); do\n        sum=$((sum+${arr[j]}))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqggc3cv6.sh: line 17: [: 2arr: integer expression expected

    /tmp/tmpqggc3cv6.sh: line 31: 1 -2 -3 41 57 76 87 88 99: syntax error in expression
    (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1);\n    local k=$2;\n    local sum;\n    local i;\n\n  \
    \  if [[ $arr == *' \"' ]]; then\n        arr=($(echo ${arr//[\" \"]//g}))\n \
    \   fi\n    local arrlen=${#arr[@]};\n    if [ $arrlen -gt $k ]; then\n      \
    \  echo \"ERROR: k cannot be bigger than length of array\";\n        exit 1;\n\
    \    fi\n\n    sum=0\n    for ((i = 0; i < $k; i++)); do\n        if [[ -z ${arr[$i]}\
    \ ]]; then\n            break;\n        fi\n        sum=$((sum + ${arr[$i]}))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=(\"$1\")\n  local k=(\"$2\")\n  local sum=0\n  local i\n  local\
    \ element\n\n  # Add elements with at most two digits from the first k elements\n\
    \  for ((i=0;i<k;i++)); do\n    element=$(expr $arr[i] + $arr[i+1])\n    if [[\
    \ ${element} =~ ^[0-9]+$ ]]; then\n      sum=$((sum+element))\n      arr[i+1]=\"\
    \"\n      ((i--))\n    fi\n  done\n\n  # Add last element\n  element=$arr[k]\n\
    \  if [[ ${element} =~ ^[0-9]+$ ]]; then\n    sum=$((sum+element))\n    arr[k]=\n\
    \  fi\n\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "expr: syntax error: unexpected argument \u2018-2\u2019\nexpr: syntax error:\
    \ unexpected argument \u2018-2\u2019\nexpr: syntax error: unexpected argument\
    \ \u2018-2\u2019\n"
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr k\n  arr=$(echo $1 | sed -e 's/ /\\n/g' | sed -e 's/^/[/' -e\
    \ 's/$/]/' -e 's/\\ //g')\n  k=$(echo $2 | sed -e 's/ /\\n/g' | sed -e 's/^/[/'\
    \ -e 's/$/]/' -e 's/\\ //g')\n  echo \"${arr[k]:0:2}${arr[k]:2:2}${arr[k]:4:2}\"\
    \n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8tk_nal5.sh: line 17: [3]: syntax error: operand expected (error
    token is "[3]")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    arr=( ${arr[@]} )\n    k=( ${k[@]}\
    \ )\n    local res=0\n    while [ $k -lt ${#arr[@]} ]; do\n        if [ \"${arr[$k]}\"\
    \ -le 10 ]; then\n            (( res += ${arr[$k]} ))\n            (( k++ ))\n\
    \        elif [ \"${arr[$k]}\" -gt 10 ]; then\n            (( res += ${arr[$k]}\
    \ ))\n            (( k-- ))\n        else\n            break\n        fi\n   \
    \ done\n    echo \"$res\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\")\
    \ = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=27 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=19 encoding='utf-8'>
  timestamp: 1660055457
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    arr=($1)\n    k=$2\n    if [ -z \"$arr\" -o -z \"$k\" ]\n    then\n \
    \       echo 0\n    else\n        # remove trailing spaces and convert to array\n\
    \        arr=(${arr[*]})\n        arr=(${arr[@]::-1})\n        result=$((${arr[0]}\
    \ + ${arr[1]}))\n        for (( i = 2; i <= ${#arr[@]}; i++ ))\n        do\n \
    \           result=$(( $result + ${arr[i]} ))\n        done\n        echo \"$result\"\
    \n    fi\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjflcr8e5.sh: line 22: -1: substring expression < 0

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local res=\"\"\n\n    # sort the\
    \ array\n    local sorting_arr=($(sort -k 2 <<<\"${arr[@]}\"))\n\n    # add the\
    \ elements that are in the first k elements to the res\n    for i in ${!sorting_arr[@]};\
    \ do\n        if [ \"$i\" -ge \"$k\" ]; then\n            local tmp=${sorting_arr[$i]}\n\
    \            res=\"${res} ${tmp}\"\n        fi\n    done\n\n    # add the elements\
    \ that are in the last k elements to the res\n    for i in $(tail -n +${!sorting_arr[@]}\
    \ <<<\"${arr[@]}\"; do\n        local tmp=${sorting_arr[$i]}\n        res=\"${res}\
    \ ${tmp}\"\n    done\n\n    # remove the last two elements\n    res=\"${res} ${sorting_arr[-1]}\"\
    \n\n    echo \"$res\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8aib5_b2.sh: line 30: unexpected EOF while looking for matching
    `)''

    /tmp/tmp8aib5_b2.sh: line 55: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n\n    local sum=0\n    for (( i=0; i<k;\
    \ i++ )); do\n        sum=$(( $sum + ${arr:$i} ))\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9g1sjahx.sh: line 19: 0 + 1 -2 -3 41 57 76 87 88 99 : syntax error
    in expression (error token is "41 57 76 87 88 99 ")

    '
  stdout: ''
  timestamp: 1660055452
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n        local arr k\n        arr=\"$1\"\n        k=\"$2\"\n        if [[\
    \ ! \"$arr\" =~ \" \" ]]; then\n                arr=\"$arr \"\n        fi\n  \
    \      arr=\"${arr##* }\"\n        arr=\"${arr%?}\"\n        arr=\"${arr##* }\"\
    \n        arr=\"${arr%?}\"\n        arr=\"${arr##* }\"\n        arr=\"${arr%?}\"\
    \n        if [[ \"$arr\" =~ ^[0-9]+$ ]]; then\n                arr=\"$(echo \"\
    $arr\" | sed 's/ //g' | sed 's/^/x/' | sed 's/$/x/' | sort -r -n | head -n \"\
    $k\")\"\n        fi\n        arr=\"$( echo \"$arr\" | sed 's/ //g' | sed 's/^/x/'\
    \ | sed 's/$/x/' )\"\n        arr=\"$( echo \"$arr\" | sort -nr )\"\n        arr=\"\
    $( echo \"$arr\" | head -n 1)\"\n        echo $arr\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055452

name: HumanEval_67_fruit_distribution
language: sh
prompt: "#!/bin/bash\n# In this task, you will be given a string that represents a\
  \ number of apples and oranges \n# that are distributed in a basket of fruit this\
  \ basket contains \n# apples, oranges, and mango fruits. Given the string that represents\
  \ the total number of \n# the oranges and apples and an integer that represent the\
  \ total number of the fruits \n# in the basket return the number of the mango fruits\
  \ in the basket.\n# for examble:\n# >>> $(fruit_distribution \"5 apples and 6 oranges\"\
  \ \"19\")\n# \"8\"\n# >>> $(fruit_distribution \"0 apples and 1 oranges\" \"3\"\
  )\n# \"2\"\n# >>> $(fruit_distribution \"2 apples and 3 oranges\" \"100\")\n# \"\
  95\"\n# >>> $(fruit_distribution \"100 apples and 1 oranges\" \"120\")\n# \"19\"\
  \n#\n# $1 is a string\n# $2 is an integer\nfruit_distribution() {\n"
tests: "}\n\ncandidate() {\n    fruit_distribution \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"5 apples and 6 oranges\" \"19\") = \"8\" ]]\n    [[ $(candidate\
  \ \"5 apples and 6 oranges\" \"21\") = \"10\" ]]\n    [[ $(candidate \"0 apples\
  \ and 1 oranges\" \"3\") = \"2\" ]]\n    [[ $(candidate \"1 apples and 0 oranges\"\
  \ \"3\") = \"2\" ]]\n    [[ $(candidate \"2 apples and 3 oranges\" \"100\") = \"\
  95\" ]]\n    [[ $(candidate \"2 apples and 3 oranges\" \"5\") = \"0\" ]]\n    [[\
  \ $(candidate \"1 apples and 100 oranges\" \"120\") = \"19\" ]]\n}\n\nrun_test"
completions: ["  local apples\n  local oranges\n  local mangoes\n  local total\n \
    \ local basket\n  local fruits\n\n  total=\"${2}\"\n  basket=\"$1\"\n  apples=\"\
    $(echo \"$basket\" | cut -d'a' -f1)\"\n  oranges=\"$(echo \"$basket\" | cut -d'a'\
    \ -f2)\"\n  mangoes=\"$(echo \"$basket\" | cut -d'a' -f3)\"\n  fruits=\"$(echo\
    \ \"$basket\" | cut -d'a' -f4)\"\n\n  # check if total is zero\n  if [ \"0\" =\
    \ \"$total\" ]; then\n    echo \"$mangoes\"\n  else\n    # check if apples is\
    \ zero and orangos is zero and mangoes is zero\n    if [ \"0\" = \"$apples\" ]\
    \ && [ \"0\" = \"$oranges\" ] && [ \"0\" = \"$mangoes\" ]; then\n      # check\
    \ if total is greater than apples and oranges and mangoes\n      if [ \"$total\"\
    \ -ge \"$apples\" ] && [ \"$total\" -ge \"$oranges\" ] && [ \"$total\" -ge \"\
    $mangoes\" ]; then\n        # subtract the total from apples and oranges and mangoes\n\
    \        apples=\"$(echo \"$apples\" - \"$total\")\"\n        oranges=\"$(echo\
    \ \"$oranges\" - \"$total\")\"\n        mangoes=\"$(echo \"$mangoes\" - \"$total\"\
    )\"\n        # check if apples and oranges are greater than or equal to zero and\
    \ mangoes is equal to or greater than zero\n        if [ \"$apples\" = \"$apples\"\
    \ ] && [ \"$oranges\" = \"$oranges\" ] && [ \"$mangoes\" = \"$mangoes\" ]; then\n\
    \          # if everything is greater than zero subtract mangoes from total and\
    \ return the total\n          total=\"$(echo \"$mangoes\" - \"$total\")\"\n  \
    \        echo $total\n        else\n          echo \"Error\"\n        fi\n   \
    \   else\n        echo \"Error\"\n      fi\n    else\n      echo \"Error\"\n \
    \   fi\n  fi", "  local apples=${1//apples/}\n  local oranges=${1//oranges/}\n\
    \  local fruits=$((${2//}+${3//}+${4//}+${5//}))\n  echo $fruits", "    local\
    \ -r STR=\"$1\" \n    local -r NUM=\"$2\"\n    local -r BASE=100\n    echo \"\
    $NUM\" > tmp\n    local -r NUM=$(echo \"$NUM\" |cut -d' ' -f 1,2)\n    local -r\
    \ COUNT=0\n    for (( i=0; i<\"${#NUM}\"; i++ )); do\n        (( COUNT=COUNT+${NUM:$i:1}\
    \ ))\n    done\n    echo \"${COUNT}\" > tmp\n    local -r FRUITS=`cat tmp`\n \
    \   echo \"$FRUITS\" > tmp\n    local -r MANGOFRUITS=0\n    for (( i=0; i<\"${#FRUITS}\"\
    ; i++ )); do\n        local -r FRUIT=\"${FRUITS:$i:1}\"\n        case \"${FRUIT}\"\
    \ in\n            \"a\") MANGOFRUITS=$MANGOFRUITS+$BASE;;\n            \"o\")\
    \ MANGOFRUITS=$MANGOFRUITS+$BASE;;\n            \"m\") MANGOFRUITS=$MANGOFRUITS+$BASE;;\n\
    \            esac\n        done\n    echo \"$MANGOFRUITS\"", "    local n_apples=\"\
    $1\"\n    local n_oranges=\"$2\"\n    local n_mangos=\"\"\n    while (( \"$n_apples\"\
    \ > 0 )); do\n        local apples=\"\"\n        while (( \"$apples\" < \"$n_apples\"\
    \ )); do\n            apples=\"$apples\"'$'\n        done\n        local apples=${apples:1:$n_apples}\n\
    \        local apples_string=\"$apples\"\n        local n_apples=\"$(($n_apples\
    \ - $apples))\"\n        n_apples=\"$n_apples\"\n        local apples_string=\"\
    $apples_string$apples\"\n        local n_oranges=\"$(($n_oranges - 1))\"\n   \
    \     n_oranges=\"$n_oranges\"\n        local oranges=\"$apples_string$oranges\"\
    \n        n_mangos=\"$(($n_mangos + $oranges))\"\n        n_mangos=\"$(($n_mangos\
    \ - 1))\"\n    done\n    echo \"$n_mangos\"", "    local arg1=$1\n    local arg2=$2\n\
    \    local arg3=$3\n\n    local total_oranges=$(echo $arg1 | awk '{print $1}')\n\
    \    local total_apples=$(echo $arg1 | awk '{print $2}')\n    local total_fruits=$(echo\
    \ $arg1 | awk '{print $3}')\n\n    local apples=$(echo $arg2 | awk '{print $1}')\n\
    \    local oranges=$(echo $arg2 | awk '{print $2}')\n    local fruits=$(echo $arg2\
    \ | awk '{print $3}')\n\n    local mangos=$((total_oranges * 4)) \n    local mangos=$((mangos\
    \ + total_apples * 2))\n    local mangos=$((mangos + fruits))\n\n    echo $mangos",
  '  # Write your code here', "  local str=$1\n  local num=$2\n  local fruits=$(echo\
    \ $str | sed 's/[^[:digit:]]//g')\n  local apples=$(echo $fruits | cut -d \"a\"\
    \ -f 1)\n  local oranges=$(echo $fruits | cut -d \"o\" -f 1)\n  local mangos=$(echo\
    \ $fruits | cut -d \"m\" -f 1)\n  echo \"$mangos\"", "   local string=\"$1\"\n\
    \   local total=\"$2\"\n   if [ \"$string\" == \"$total\" ]; then\n      return\
    \ 0\n   elif [ \"$string\" == \"$total*\" ]; then\n      echo \"-1\"\n   else\n\
    \      echo \"$(( $(echo $string | wc -w) * $(echo $total | wc -w) )) mango fruits\"\
    \n   fi", "    local apples=\"${1}\"\n    local oranges=\"${2}\"\n    local basket_count=${3}\"\
    \n    echo \"$(($apples % $oranges))\"", "    read num_apples num_oranges <<<\
    \ \"$1\"\n    read number_of_fruits <<< \"$2\"\n    num_oranges=$(echo \"$num_oranges\"\
    \ | awk '{print $1}')\n    num_apples=$(echo \"$num_apples\" | awk '{print $1}')\n\
    \    number_of_fruits=$(echo \"$number_of_fruits\" | awk '{print $1}')\n    \n\
    \    # convert apples to an integer\n    num_apples_int=$(( num_apples - 1 ))\n\
    \    \n    # calculate mango fruits by subtracting bananas from the total number\
    \ of fruits\n    mango_fruits=$(echo \"$number_of_fruits\" | awk -v num_oranges=\"\
    $num_oranges\" -v num_apples=\"$num_apples_int\" 'BEGIN{print num_oranges - num_apples}')\n\
    \    \n    echo \"$mango_fruits\"", "  local number_of_apples=$1\n  local number_of_oranges=$2\n\
    \  local number_of_fruits=$((number_of_apples + number_of_oranges))\n  local number_of_mangos=$((number_of_fruits\
    \ - number_of_apples - number_of_oranges))\n  echo $number_of_mangos", "    local\
    \ NUMBER=$1\n    local TYPEOFFRUIT=$2\n    local MANGOFRUITS=0\n    while [ \"\
    $NUMBER\" -gt 0 ]; do\n        local FRUIT=\"\"\n        for (( i=0; i<${#TYPEOFFRUIT};\
    \ i++ )); do\n            local FRUIT=\"$FRUIT${TYPEOFFRUIT:$i:1}\"\n        done\n\
    \        if [ \"$FRUIT\" = \"a\" ] || [ \"$FRUIT\" = \"e\" ] || [ \"$FRUIT\" =\
    \ \"i\" ] || [ \"$FRUIT\" = \"o\" ] || [ \"$FRUIT\" = \"u\" ] || [ \"$FRUIT\"\
    \ = \"e\" ]; then\n            (( MANGOFRUITS += 1 ))\n        fi\n        NUMBER=$((\
    \ $NUMBER - 1 ))\n    done\n    echo $MANGOFRUITS", "  local APPLE=\"apples\"\n\
    \  local ORANGE=\"oranges\"\n  local MANGO=\"mango\"\n\n  local apples=$(cat <<EOF\n\
    $1 $APPLE $ORANGE $MANGO\nEOF\n)\n  local oranges=$(echo $apples | grep -o $ORANGE\
    \ | wc -l )\n  local mango=$(echo $apples | grep -o $MANGO | wc -l )\n  echo $((\
    \ ($oranges + $mango) / 3 ))", "  local str=\"$1\"\n  local int_num=\"$2\"\n \
    \ local count=$(echo $str | sed -n \"s/\\(.*\\) apples.*\\(.*\\) oranges.*/\\\
    2/p\")\n  echo $count > \"$int_num\"", "  local -r string=$1\n  local -r number_fruits=$2\n\
    \  local -r number=\"\"\n  local i\n\n  for i in $(seq 1 $number_fruits); do\n\
    \    number=${number} \"${string:$i:1}\"\n  done\n  echo $(echo $number | tr [a-z]\
    \ [A-Z])", "  local apples=$1\n  local oranges=$2\n  local mangos=$(echo \"$oranges\"\
    \ - \"$apples\" | bc)\n  echo $mangos", "\tlocal total=\"$1\"\n\tlocal totalFruits=\"\
    $2\"\n\tlocal apples=\"${total% *}\"\n\tlocal oranges=\"${total#* }\"\n\tlocal\
    \ mangoes=`expr ${oranges} / 2`\n\t\n\techo ${mangoes}", "    local apples=$1\n\
    \    local oranges=$2\n    local mangos=0\n    \n    for i in $apples; do \n\t\
    mangos=$((mangos + $oranges)) \n    done\n    \n    echo $mangos", "  local str=\"\
    $1\"\n  local count=\"$2\"\n  local countfruits=$(echo \"$count*4\" | bc)\n  local\
    \ countmango=$(echo \"$count*10\" | bc)\n  local mango=$((countmango-$countfruits))\n\
    \  echo \"$mango\"", "  read -r fruits apples oranges < <(echo \"$1\")\n\n  ((apples=$apples+$oranges))\n\
    \  ((oranges=$oranges-$apples))\n  ((mangos=$apples))\n\n  echo \"$mangos\"",
  "  local apples=\"${1}\"\n  local oranges=\"${2}\"\n  local mangos=$(echo \"scale=2;$oranges-$apples\"\
    \ | bc)\n  local apples_count=$(echo \"scale=2;$apples\" | bc)\n  local oranges_count=$(echo\
    \ \"scale=2;$oranges\" | bc)\n  local total_count=$(echo \"scale=2;$apples+$oranges+$mangos\"\
    \ | bc)\n  local mango_fruits=$(echo \"scale=2;$mangos*$apples_count*$oranges_count\"\
    \ | bc)\n  echo $mango_fruits", "  local total=\"$1\"\n  local numberOfFruits=\"\
    $2\"\n  local numberOfFruitsWithMango=0\n  local numberOfApples=0\n  local numberOfOranges=0\n\
    \  local numberOfMango=0\n  local numberOfMangoFruits=0\n\n  # Parse string as\
    \ number\n  total=$(awk -v total=\"$total\" '{print $1}' <<< \"$total\")\n  numberOfApples=$(awk\
    \ -v numberOfApples=\"$numberOfApples\" '{print $1}' <<< \"$numberOfApples\")\n\
    \  numberOfOranges=$(awk -v numberOfOranges=\"$numberOfOranges\" '{print $1}'\
    \ <<< \"$numberOfOranges\")\n  numberOfMango=$(awk -v numberOfMango=\"$numberOfMango\"\
    \ '{print $1}' <<< \"$numberOfMango\")\n\n  if [[ $numberOfApples > 0 && $numberOfOranges\
    \ > 0 ]]; then\n    numberOfFruits=$numberOfApples + $numberOfOranges\n  else\n\
    \    echo \"error: invalid input\"\n    return 1\n  fi\n  numberOfFruits=$numberOfFruits\
    \ - 1\n  numberOfFruitsWithMango=$numberOfMango\n  numberOfMango=$numberOfMango\
    \ - numberOfMango % 2\n  numberOfApples=$numberOfApples - numberOfApples % 2\n\
    \  numberOfMangoFruits=$numberOfMango\n  numberOfMango=$numberOfMango - numberOfMango\
    \ % 2\n  numberOfOranges=$numberOfOranges - numberOfOranges % 2\n\n  if [[ $numberOfApples\
    \ -lt 0 ]]; then\n    echo \"error: invalid input\"\n    return 1\n  elif [[ $numberOfOranges\
    \ -lt 0 ]]; then\n    echo \"error: invalid input\"\n    return 1\n  elif [[ $numberOfMango\
    \ -lt 0 ]]; then\n    echo \"error: invalid input\"\n    return 1\n  fi\n\n  numberOfMangoFruits=$numberOfFruits\
    \ - (numberOfMangoFruits * numberOfFruits)\n  if [[ $numberOfMango -eq 0 ]]; then\n\
    \    echo \"error: invalid input\"\n    return 1\n  elif [[ $numberOfMango -eq\
    \ $numberOfFruits ]]; then\n    echo \"error: invalid input\"\n    return 1\n\
    \  fi\n\n  if [[ $numberOfMangoFruits -eq 0 ]]; then\n    echo \"error: invalid\
    \ input\"\n    return 1\n  elif [[ $numberOfMango", "    local total_apples=$(fruit\
    \ \"$1\" apples|cut -d' ' -f1)\n    local total_oranges=$(fruit \"$1\" oranges|cut\
    \ -d' ' -f1)\n    local total_fruits=$((total_apples + total_oranges))\n    local\
    \ number_of_fruits=$(fruit \"$2\" fruits|cut -d' ' -f1)\n    local number_of_mango_fruits=$((number_of_fruits\
    \ - total_fruits))\n    echo \"$number_of_mango_fruits\"", "    local apples=$1\n\
    \    local oranges=$2\n    local total=`echo $apples | awk '{print $1}'`\n   \
    \ local total_fruits= `echo $total | awk '{print $1}'`\n    local mango_fruits=`expr\
    \ ${total_fruits} - ${oranges}`\n    echo $mango_fruits", "  local a=$1\n  local\
    \ b=$2\n  local c=$3\n  local x=$(( $a - 1 ))\n  local y=$(( $b - 1 ))\n  local\
    \ z=$(( $c - 1 ))\n  local sum=0\n  if [ $x -ge $y ] && [ $x -ge $z ] ; then\n\
    \    sum=$(( $x + $y + $z ))\n  fi\n  if [ $y -ge $z ] ; then\n    sum=$(( $y\
    \ + $z ))\n  fi\n  if [ $z -ge $x ] ; then\n    sum=$(( $z + $x ))\n  fi\n  echo\
    \ $sum", "    local totalNum=$1\n    local numOfApples=$2\n    local numOfOranges=$((numOfApples\
    \ + numOfApples%21))\n    local numOfMango=$((numOfOranges + numOfOranges%21))\n\
    \    echo \"${numOfMango}\"", "    local number_of_apples=$1\n    local number_of_oranges=$2\n\
    \    local number_of_fruits=$((number_of_oranges + number_of_apples))\n\n    while\
    \ [ $number_of_fruits -lt $number_of_oranges ]; do\n        number_of_oranges+=1;\n\
    \    done\n\n    while [ $number_of_fruits -gt $number_of_oranges ]; do\n    \
    \    number_of_apples+=1;\n    done\n    \n    return $((number_of_oranges - number_of_apples));",
  "  read input\n  read total\n  read total\n  read total\n  read total\n  read total\n\
    \  total=$(($total+$total))\n  total=$(($total+$total))\n  total=$(($total+$total))\n\
    \  total=$(($total+$total))\n  total=$(($total+$total))\n  total=$(($total+$total))\n\
    \  echo $total", "  local -r number_of_apples=\"$1\"\n  local -r number_of_oranges=\"\
    $2\"\n  \n  local -r total_number_of_fruits=$(\n    echo ${number_of_apples}${number_of_oranges}\n\
    \  )\n  \n  local -r number_of_mangos=$(( ${total_number_of_fruits} - ${number_of_oranges}))\n\
    \  \n  echo $number_of_mangos", "    local num_apple num_orange basket_size\n\
    \    num_apple=$(echo \"$1\" | awk '{print $1}')\n    num_orange=$(echo \"$1\"\
    \ | awk '{print $2}')\n    basket_size=$(echo \"$2\" | awk '{print $1}')\n   \
    \ if [[ $basket_size =~ ([0-9]+) ]]; then\n        local num_mango=$((num_orange-num_apple))\n\
    \    else\n        echo \"$1 is not a number\"\n    fi\n    echo \"$num_mango\"",
  "    local -i apples=$1\n    local -i oranges=$2\n    local -i total=$3\n    # local\
    \ -i mango=$((apples + oranges))\n    local -i mango=$((apples + oranges + 10))\n\
    \    echo \"$mango\"", "    local -n arg1=$1\n    local -n arg2=$2\n    local\
    \ -n arg3=$3\n\n    local -n arg4=$4\n    local -n arg5=$5\n\n    local -n arg6=$6\n\
    \    local -n arg7=$7\n    local -n arg8=$8\n    local -n arg9=$9\n\n    local\
    \ -n arg10=$10\n    local -n arg11=$11\n    local -n arg12=$12\n\n    local -n\
    \ arg13=$13\n    local -n arg14=$14\n\n    local -n arg15=$15\n    local -n arg16=$16\n\
    \    local -n arg17=$17\n    local -n arg18=$18\n\n    local -n arg19=$19\n  \
    \  local -n arg20=$20\n    local -n arg21=$21\n    local -n arg22=$22\n\n    local\
    \ -n arg23=$23\n    local -n arg24=$24\n    local -n arg25=$25\n    local -n arg26=$26\n\
    \n    local -n arg27=$27\n    local -n arg28=$28\n    local -n arg29=$29\n   \
    \ local -n arg30=$30\n    local -n arg31=$31\n\n    local -n arg32=$32\n    local\
    \ -n arg33=$33\n    local -n arg34=$34\n    local -n arg35=$35\n    local -n arg36=$36\n\
    \    local -n arg37=$37\n    local -n arg38=$38\n    local -n arg39=$39\n    local\
    \ -n arg40=$40\n    local -n arg41=$41\n    local -n arg42=$42\n    local -n arg43=$43\n\
    \    local -n arg44=$44\n    local -n arg45=$45\n    local -n arg46=$46\n    local\
    \ -n arg47=$47\n    local -n arg48=$48\n    local -n arg49=$49\n    local -n arg50=$50\n\
    \    local -n arg51=$51\n    local -n arg52=$52\n    local -n arg53=$53\n    local\
    \ -n arg54=$54\n    local -n arg55=$55\n    local -n arg56=$56\n    local -n arg57=$57",
  "\t[[ \"$1\" =~ ^[0-9]+$ ]] && \\\n\t    echo $(expr $2 \\* $(expr $2 \\+ $1 | bc))\
    \ \\\n\t    || echo \"Invalid argument\"", "    local apples=$(get_number \"$1\"\
    )\n    local oranges=$(get_number \"$1\")\n    local count=0\n    local total=0\n\
    \    while [[ $apples -ge 0 && $oranges -ge 0 ]]; do\n        ((total+=apples))\n\
    \        ((total+=oranges))\n        count=$((count+1))\n        ((apples=$((apples-1))));\n\
    \        ((oranges=$((oranges-1))));\n    done\n    echo \"${count}\"", "  if\
    \ [[ \"$1\" =~ (^[0-9]+$|[0-9]+.[0-9]+$) ]]; then\n    total=0\n    apples=0\n\
    \    oranges=0\n    mangos=0\n    fruits=$2\n\n    for (( i = 0; i <= $fruits;\
    \ i++ )); do\n      if [[ $(echo $1 | egrep -w \"$i\") ]]; then\n        total=$((\
    \ $total + $i ))\n        if [[ $(( $(echo $1 | egrep -w \"$i\" | wc -l) )) -gt\
    \ 0 ]]; then\n          apples=$(( $apples + $i ))\n        else\n          oranges=$((\
    \ $oranges + $i ))\n        fi\n      else\n        mangos=$(( $mangos + $i ))\n\
    \      fi\n    done\n\n    if [[ $total -gt 0 ]]; then\n      echo \"$mangos\"\
    \n    else\n      echo \"$oranges\"\n    fi\n  else\n    echo \"Bad input\"\n\
    \  fi", "    local -i total_apples=$1\n    local -i total_oranges=$2\n    local\
    \ -i total_fruits=$3\n    local -i number_of_fruits=$((total_apples + total_oranges\
    \ + total_fruits ))\n    if [ \"$number_of_fruits\" = \"0\" ]; then\n        echo\
    \ \"$total_fruits\"\n    else\n        local -i number_of_mango_fruits=$((total_fruits\
    \ - number_of_fruits))\n        echo \"$number_of_mango_fruits\"\n    fi", " \
    \   local -r total_apples=$1\n    local -r total_oranges=$2\n    local -r total_fruits=$3\n\
    \    local -r fruits_basket=$4\n    local -r number_of_fruits=$(($total_oranges\
    \ - $total_apples + 1))\n    local -r number_of_apples=$(($total_apples - 1))\n\
    \    local -r number_of_oranges=$(($total_oranges - 1))\n    local -r number_of_mango=$(($number_of_fruits\
    \ - $number_of_apples))\n    echo $(($number_of_mango + $number_of_oranges + $number_of_apples))",
  "  local STRING=$1\n  local NUMBER=$2\n  \n  NUMBER=$(echo $NUMBER | awk '{print\
    \ $1}')\n  STRING=$(echo $STRING | awk '{print $1}')\n  \n  MANGO=$(echo $STRING\
    \ | awk '{print $2}')\n  \n  echo -n \"${NUMBER}\"\n  \n  if [ $NUMBER -gt 0 ]\
    \ && [ $NUMBER -lt 100 ]\n  then\n    echo -n \"and ${NUMBER} oranges\"\n  else\n\
    \    echo -n \"and ${NUMBER} oranges and ${NUMBER} mangoes\"\n  fi\n  \n  echo\
    \ $(( ${NUMBER} / ${MANGO} ))", "    local napples=$1\n    local noranges=$2\n\
    \    local totalfruits\n    local nmango\n    \n    totalfruits=$((napples+noranges))\n\
    \    nmango=$((totalfruits - noranges))\n    \n    echo \"$nmango\"", "  local\
    \ totalapples=\"$1\"\n  local totaloranges=\"$2\"\n  local totalmango=\"$(echo\
    \ \"$totalapples\" \\* \"$totaloranges\" \\* \"1\"  | bc -l)\"\n  echo \"$totalmango\"",
  "    read -r apples oranges <<< \"$1\"\n    read -r fruits <<< \"$2\"\n    \n  \
    \  local total\n    if [[ $(echo \"$fruits > $oranges\" | bc -l) -eq 1 ]]; then\n\
    \        total=\"$oranges\"\n    else\n        total=\"$apples\"\n    fi\n   \
    \ \n    if [[ $(echo \"$total > $fruits\" | bc -l) -eq 1 ]]; then\n        echo\
    \ \"$fruits\";\n    else\n        echo \"$total\";\n    fi", "  local apples=\"\
    $1\"\n  local oranges=\"$2\"\n  local total=\"$3\"\n  local apples_count\n  local\
    \ oranges_count\n  local mango\n  \n  apples_count=$(echo $apples | cut -d\" \"\
    \ -f1)\n  oranges_count=$(echo $oranges | cut -d\" \" -f1)\n  mango=$(echo $apples\
    \ | cut -d\" \" -f2)\n\n  case $mango in\n    '')\n      echo '0'\n      ;;\n\
    \    *)\n      echo $(echo $apples_count * $oranges_count * $total / $mango |\
    \ bc -w)\n      ;;\n  esac", "    local apples=\"$1\"\n    local oranges=\"$2\"\
    \n    local mango=\"$(echo \"scale=2; $apples + $oranges - 4\" |bc)\"\n    echo\
    \ $mango", "  local number_of_apples=$1\n  local number_of_oranges=$2\n  local\
    \ total_number_of_fruits=$((number_of_apples + number_of_oranges))\n  local number_of_mango_fruits=$total_number_of_fruits\n\
    \n  if [ $number_of_apples > 0 ] && [ $number_of_oranges > 0 ]; then\n    number_of_mango_fruits=$((number_of_mango_fruits\
    \ - number_of_apples))\n  fi\n  return $number_of_mango_fruits", "  local basket_string=$1\n\
    \  local number_of_apples=$2\n  local number_of_oranges=$(echo $basket_string\
    \ | awk '{print $1}')\n  local number_of_fruits=$(echo $basket_string | awk '{print\
    \ $2}')\n\n  local total_apples=$(echo $number_of_apples | awk '{print $1}')\n\
    \  local total_oranges=$(echo $number_of_oranges | awk '{print $1}')\n  local\
    \ total_fruits=$(echo $number_of_fruits | awk '{print $1}')\n\n  local total_mangoes=$(echo\
    \ $number_of_fruits - $total_fruits | awk '{print $1}')\n\n  echo $total_mangoes",
  "    local count=$1\n    local items=$2\n    local mango=0\n    local i\n    # loop\
    \ through items\n    for ((i=1;i<=items;i++))\n    do\n        if [ $i == \"apples\"\
    \ ]\n        then\n            mango=mango+$count\n        elif [ $i == \"oranges\"\
    \ ]\n        then\n            mango=mango+$count\n        else\n            mango=mango+$count\n\
    \        fi\n    done\n    echo $mango", "    local num_apples num_oranges basket_str\n\
    \    num_apples=$1 \n    num_oranges=$2\n    basket_str=$3\n\n    local max_num=0\n\
    \    local num_mango=0\n    local i=0\n    while [ $i -lt ${#basket_str} ]; do\n\
    \        if [[ ${basket_str:$i:1} == oranges ]] || [[ ${basket_str:$i:1} == apple\
    \ ]]; then\n            num_oranges+=1 \n            num_mango+=1\n        elif\
    \ [[ ${basket_str:$i:1} == apple ]]; then\n            num_apples+=1\n       \
    \ elif [[ ${basket_str:$i:1} == oranges ]]; then\n            num_oranges+=1\n\
    \        fi\n        ((i=i+1))\n    done\n\n    echo ${num_mango}", "    local\
    \ apple_num=\"$1\"\n    local orange_num=\"$2\"\n    local basket_fruits=$(eval\
    \ \"echo $apple_num + $orange_num\")\n    local mango_num=$(eval \"echo $basket_fruits\
    \ - $orange_num\")\n    echo \"$mango_num\"", "    local apples=\"$1\"\n    local\
    \ oranges=\"$2\"\n    local fruits=\"$apples\"\n    local mango=$(( $fruits *\
    \ $oranges ))\n    local apples_fruits=$(( $fruits * $apples ))\n    if [ $apples_fruits\
    \ -gt $mango ]; then\n        echo $mango\n    else\n        echo 0\n    fi",
  "  local IFS\n  fruits=$1\n  apples=$2\n  fruits=${fruits/ apples/}\n  fruits=${fruits/\
    \ oranges/}\n  fruits=${fruits/ apples/}\n  fruits=${fruits/ mango/}\n  fruits=${fruits/\
    \ oranges/}\n  fruits=${fruits/ apples/}\n  fruits=${fruits/ mango/}\n  fruits=${fruits/\
    \ apples/}\n  fruits=${fruits/ mango/}\n  fruits=${fruits/ apples/}\n  fruits=${fruits/\
    \ mango/}\n  echo ${fruits}", "  local arg1=\"$1\" \n  local arg2=\"$2\" \n  local\
    \ arg3=\"$3\"\n  local arg4=\"$4\"\n  local arg5=\"$5\"\n  local arg6=\"$6\"\n\
    \  local arg7=\"$7\"\n  local arg8=\"$8\"\n  local arg9=\"$9\"\n\n  # get the\
    \ number of apples, oranges, and mango fruits\n  local apples=\"$arg1\" \n  local\
    \ oranges=\"$arg2\" \n  local mangos=\"$arg3\"\n\n  # get the total number of\
    \ fruits\n  local total_fruits=\"$arg4\" \n  \n  # get the number of fruits in\
    \ the basket\n  local basket=\"$arg5\" \n  \n  # return number of fruits in the\
    \ basket \n  local mango_fruits=\"$arg6\" ", "    local number_of_oranges=$1\n\
    \    local number_of_apples=$2\n    local number_of_fruits=$(($number_of_oranges\
    \ + $number_of_apples))\n    local mango_fruits=$(echo $number_of_fruits | awk\
    \ '{print $3/2}')\n    echo $mango_fruits", "  local apples=\"$1\"\n  local oranges=\"\
    $2\"\n  local number=$((apples + oranges))\n  local mango=$((number - apples))\n\
    \  if [ \"$mango\" -gt \"0\" ]\n  then\n    echo \"$mango\"\n  else\n    echo\
    \ \"0\"\n  fi", "  local -r str=$1\n  local -r num=$2\n  \n  local -r apples=\"\
    0\"\n  local -r oranges=\"0\"\n  local -r mango=\"0\"\n\n  local -r tmp\n\n  tmp=${str#*apples}\n\
    \  [ -n \"$tmp\" ] && apples=$(( ${#tmp} + 0 ))\n\n  tmp=${str#*oranges}\n  [\
    \ -n \"$tmp\" ] && oranges=$(( ${#tmp} + 0 ))\n\n  tmp=${str#*mango}\n  [ -n \"\
    $tmp\" ] && mango=$(( ${#tmp} + 0 ))\n\n  local -r total=${apples}+${oranges}+${mango}\n\
    \  \n  [ \"${apples}\" -eq \"$num\" ] && return 0\n  [ \"${oranges}\" -eq \"$num\"\
    \ ] && return 1\n  [ \"${mango}\" -eq \"$num\" ] && return ${total}", "  local\
    \ total=\"$1\"\n  local apples=\"$2\"\n  local oranges=\"$3\"\n  local mangoes=\"\
    $4\"\n  local result\n  result=$(echo \"$mangoes*$oranges\" | bc )\n  echo \"\
    $result\"", "    local string=\"$1\"\n    local number_of_instances=\"$2\"\n \
    \   local number_of_apples=\"${string:0:$(($(echo $string | grep -o \"[0-9]*\"\
    ) + 1))}\"\n    local number_of_oranges=\"${string:$(($(echo $string | grep -o\
    \ \"[0-9]*\") + 1))}\"\n    local number_of_mango=\"$(echo $string | grep -o \"\
    [0-9]*\")\"\n    local number_of_mango_from_basket=\"$((($number_of_apples * $number_of_oranges)\
    \ + $number_of_mango))\"\n    echo $number_of_mango_from_basket", "    local apples=\"\
    ${1}\"\n    local oranges=\"${2}\"\n    local mangos=$(echo \"$apples + $oranges\"\
    \ | bc)\n    echo \"$mangos\"", "\tlocal apples_num=$1\n\tlocal oranges_num=$2\n\
    \tlocal fruits_num=$(echo \"$apples_num + $oranges_num\" | bc)\n\tlocal mango_num=$((\
    \ fruits_num - $(($apples_num + $oranges_num)) ))\n\techo $mango_num", "  local\
    \ num_apples=\"${1:-}\"\n  local num_oranges=\"${2:-}\"\n\n  # convert the strings\
    \ to integers\n  num_apples=\"${num_apples/apples/}\"\n  num_oranges=\"${num_oranges/oranges/}\"\
    \n\n  # calculate the total number of fruits\n  num_fruits=\"${num_apples} + ${num_oranges}\
    \ = ${num_apples}${num_oranges}\"\n\n  # calculate the number of fruits in the\
    \ basket\n  num_bruites=\"${num_fruits}*2\"\n\n  # calculate the number of fruits\
    \ in the basket\n  num_mangoes=$(echo \"${num_bruites} * 2\" | bc -l)\n  echo\
    \ \"${num_mangoes}\"", "  local num_apples=$1\n  local num_oranges=$2\n  local\
    \ apples=$3\n  local oranges=$4\n  local mangos=$5\n  \n  local total_oranges=$(echo\
    \ $num_oranges | sed -e 's/^0*//' -e 's/^\\([0-9]*\\).*/\\1/')\n  local total_apples=$(echo\
    \ $apples | sed -e 's/^0*//' -e 's/^\\([0-9]*\\).*/\\1/')\n  local total_mangos=$(echo\
    \ $mangos | sed -e 's/^0*//' -e 's/^\\([0-9]*\\).*/\\1/')\n  local total_fruits=$(($total_oranges\
    \ + $total_apples + $total_mangos))\n  \n  local count=0\n  local mango_fruits=0\n\
    \  \n  if (( total_fruits > 0 )) ; then\n    \n    for (( i = 1; i <= total_fruits;\
    \ i++ )); do\n      \n      if [[ $total_oranges -eq 0 ]] && [[ $total_apples\
    \ -eq 0 ]] && [[ $total_mangos -eq 0 ]] ; then\n        break\n      fi\n    \
    \  \n      if (( $i % $total_apples == 0 )); then\n        count=$(($count + 1))\n\
    \      fi\n      if (( $i % $total_oranges == 0 )); then\n        count=$(($count\
    \ + 1))\n      fi\n      if (( $i % $total_mangos == 0 )); then\n        count=$(($count\
    \ + 1))\n      fi\n      \n    done\n  fi\n  \n  echo $count", "    local APPLES=$1\n\
    \    local ORANGES=$2\n    local BASKET_NUMBER=0\n    local MANGO_FRUITS=0\n \
    \   local TEMP=0\n    local NUMBER=0\n    local FIRST_NUMBER=0\n    local NUMBER_OF_NUMBERS=0\n\
    \    local MANGO_FRUITS_IN_NUMBER=0\n    local MANGO_FRUITS_IN_ALL_NUMBERS=0\n\
    \    local MANGO_FRUITS_IN_BASKET=0\n\n    while [[ -n $APPLES || -n $ORANGES\
    \ ]]; do\n        if [[ -n $APPLES ]]; then\n            NUMBER_OF_NUMBERS=$(echo\
    \ $APPLES | tr -d \" \" | wc -c)\n            MANGO_FRUITS_IN_NUMBER=$(echo $APPLES\
    \ | tr -d \" \" | cut -d \" \" -f 1 | wc -c)\n            FIRST_NUMBER=$(echo\
    \ $APPLES | tr -d \" \" | cut -d \" \" -f 1 | sed 's/ //g')\n        else\n  \
    \          NUMBER_OF_NUMBERS=$(echo $ORANGES | tr -d \" \" | wc -c)\n        \
    \    MANGO_FRUITS_IN_NUMBER=$(echo $ORANGES | tr -d \" \" | cut -d \" \" -f 1\
    \ | wc -c)\n            FIRST_NUMBER=$(echo $ORANGES | tr -d \" \" | cut -d \"\
    \ \" -f 1 | sed 's/ //g')\n        fi\n\n        if [ $NUMBER_OF_NUMBERS -gt 0\
    \ ]; then\n            if [ $NUMBER_OF_NUMBERS -gt $NUMBER_OF_NUMBERS_IN_NUMBER\
    \ ]; then\n                NUMBER_OF_NUMBERS_IN_NUMBER=$NUMBER_OF_NUMBERS\n  \
    \          fi\n        fi\n\n        if [ $MANGO_FRUITS_IN_NUMBER -gt 0 ]; then\n\
    \            if [ $MANGO_FRUITS_IN_NUMBER -gt $MANGO_FRUITS_IN_NUMBER_IN_BASKET\
    \ ]; then\n                MANGO_FRUITS_IN_NUMBER_IN_BASKET=$MANGO_FRUITS_IN_NUMBER\n\
    \            fi\n        fi\n    done\n\n    if [ $NUMBER_OF_NUMBERS_IN_NUMBER\
    \ -gt 0 ]; then\n        if [ $NUMBER_OF_NUMBERS_IN_NUMBER -gt $NUMBER_OF_NUMBERS_IN_BASKET\
    \ ]; then\n            BASKET_NUMBER=$NUMBER_OF_NUMBERS_IN_BASKET\n        else\n\
    \            BASKET_NUMBER=$NUMBER_OF_NUMBERS_IN_NUMBER\n        fi\n    fi\n\n\
    \    if [ $MANGO_FRUITS_IN_NUMBER_IN_BASKET -gt 0 ]; then\n        if [ $M", " \
    \   local apples=$1\n    local oranges=$2\n    local total=$(echo $apples $oranges\
    \ | awk '{sum+=$1} END {print sum}')\n    local mangos=$((($total-$oranges)/2))\n\
    \    echo $mangos", "    local apples=$1\n    local oranges=$2\n    local mango=$((\
    \ $apples-$oranges+1 ))\n    echo \"$mango\"", "    echo \"$2\"\n    echo \"$1\"\
    \n    echo \"$3\"\n    echo \"$4\"\n    echo \"$5\"", "    local str=\"$1\"\n\
    \    local total=\"$2\"\n    local totalApples=$(echo \"$str\" | cut -d \" \"\
    \ -f1)\n    local totalOranges=$(echo \"$str\" | cut -d \" \" -f2)\n    local\
    \ totalOrangesCount=$(echo \"$str\" | grep -o '[+-]?[0-9]+')\n    local totalOrangesCount=$(echo\
    \ \"$totalOrangesCount\" | tr -d '[[:space:]]')\n    local totalOrangesCount=$((${totalOrangesCount}-1))\n\
    \    local totalApplesCount=$(echo \"$str\" | grep -o '[+-]?[0-9]+')\n    local\
    \ totalApplesCount=$(echo \"$totalApplesCount\" | tr -d '[[:space:]]')\n    local\
    \ totalApplesCount=$((${totalApplesCount}-1))\n    local totalOrangesSum=$((totalOrangesCount\
    \ + 1))\n    local totalApplesSum=$((totalApplesCount + 1))\n    local totalApples=$(echo\
    \ \"$totalApplesSum/$totalApplesCount\")\n    local totalOranges=$(echo \"$totalOrangesSum/$totalOrangesCount\"\
    )\n    local totalOrangesSum=$(echo \"$totalOrangesSum/${totalOrangesCount}\"\
    )\n    local totalOrangesCount=$(echo \"$totalOrangesSum/${totalOrangesCount}\"\
    )\n    local totalOrangesCount=$((${totalOrangesCount}+1))\n    local totalOrangesSum=$((${totalOrangesSum}+1))\n\
    \    echo \"$totalOrangesSum/$totalOrangesCount\"", "    local apples=$1 \n  \
    \  local oranges=$2\n    local basket=$3\n    local mangos=$( echo $((${apples}*${oranges}*${basket}/10))\
    \ | bc)\n    echo \"$mangos\"", "  local n=\"${1}\"\n  local apples=\"${2}\"\n\
    \  local oranges=\"${apples/apples/oranges}\"\n  local mango=\"${apples/oranges/mango}\"\
    \n  if [[ ${mango} -eq 1 ]] && [[ ${mango} -le ${oranges} ]] && [[ ${oranges}\
    \ -le ${apples} ]] && [[ ${apples} -le ${n} ]]; then\n    echo \"${mango}\"\n\
    \  else\n    echo \"0\"\n  fi", "    local string_1=$1\n    local string_2=$2\n\
    \    local number=$3\n    local string=$(echo $string_1 | sed 's/ apples/\\n/g'\
    \ | sed 's/ oranges/\\n/g' | sed 's/ mango/\\n/g')\n    local number_1=$(echo\
    \ $string | cut -d' ' -f1)\n    local number_2=$(echo $string | cut -d' ' -f2)\n\
    \    local number_3=$(echo $string | cut -d' ' -f3)\n    local number_4=$(echo\
    \ $string | cut -d' ' -f4)\n    local number_5=$(echo $string | cut -d' ' -f5)\n\
    \    local number_6=$(echo $string | cut -d' ' -f6)\n    local number_7=$(echo\
    \ $string | cut -d' ' -f7)\n    local number_8=$(echo $string | cut -d' ' -f8)\n\
    \    local number_9=$(echo $string | cut -d' ' -f9)\n    local number_10=$(echo\
    \ $string | cut -d' ' -f10)\n    local number_11=$(echo $string | cut -d' ' -f11)\n\
    \    local number_12=$(echo $string | cut -d' ' -f12)\n    local number_13=$(echo\
    \ $string | cut -d' ' -f13)\n    local number_14=$(echo $string | cut -d' ' -f14)\n\
    \    local number_15=$(echo $string | cut -d' ' -f15)\n    local number_16=$(echo\
    \ $string | cut -d' ' -f16)\n    local number_17=$(echo $string | cut -d' ' -f17)\n\
    \    local number_18=$(echo $string | cut -d' ' -f18)\n    local number_19=$(echo\
    \ $string | cut -d' ' -f19)\n    local number_20=$(echo $string | cut -d' ' -f20)\n\
    \    local number_21=$(echo $string | cut -d' ' -f21)\n    local number_22=$(echo\
    \ $string | cut -d' ' -f22)\n    local number_23=$(echo $string | cut -d' ' -f23)\n\
    \    local number_24=$(echo $string | cut -d' ' -f24)\n    local number_25=$(echo\
    \ $string | cut -d' ' -f25)\n    local number_26=$(echo $string | cut -d' ' -f26)\n\
    \    local number_27=$(echo $string | cut -d' ' -f27)\n    local number_28=$(echo\
    \ $string | cut -d' ' -f28)\n    local number_29=$(echo $string | cut -d' ' -f29)\n\
    \    local number_30=$(echo $string | cut -d' ' -f30)\n    local number_31=$(echo\
    \ $string | cut -d' ' -f31)\n    local number_32=$(echo $string | cut -d' ' -f32)\n\
    \    local ", "    local num_apples=\"$1\"\n    local num_oranges=\"$2\"\n   \
    \ local num_fruits=\"$3\"\n    local num_mango=\"$(\n        echo $num_fruits\
    \ \\\n        | awk '{\n            for(i = 1; i <= NF; i++) {\n             \
    \   if($i == \"apples\") {\n                    apples=i\n                }\n\
    \                if($i == \"oranges\") {\n                    oranges=i\n    \
    \            }\n                if($i == \"mango\") {\n                    mango=i\n\
    \                }\n            }\n        }'\n    )\"\n    echo \"$mango\"",
  "    local input=$1\n    local number_of_fruits=$2\n    local mango=0\n    local\
    \ apples=0\n    local orange=0\n    local basket=()\n\n    while read -r line\
    \ || [[ -n \"$line\" ]]; do\n        # read each line into BASH array BASH_SOURCE\
    \ BASH_LINENO\n        # BASH_SOURCE contains all source files that comprise a\
    \ bash program\n        # BASH_LINENO contains line number\n\n        # read line\
    \ into BASH array BASH_SOURCE\n        # BASH_SOURCE contains all source files\
    \ that comprise a bash program\n        # read each line into BASH array BASH_LINENO\n\
    \        # BASH_LINENO contains line number\n        # BASH_ARGV is the command\
    \ line arguments passed to the bash program\n        # read each line into BASH\
    \ array BASH_SOURCE\n        # BASH_SOURCE contains all source files that comprise\
    \ a bash program\n        # read each line into BASH array BASH_LINENO\n     \
    \   # BASH_LINENO contains line number\n        # BASH_ARGV is the command line\
    \ arguments passed to the bash program\n        BASH_SOURCE=(\"${BASH_SOURCE[@]}\"\
    )\n        BASH_LINENO=(\"${BASH_LINENO[@]}\")\n\n        # use BASH_SOURCE array\
    \ to find where $line exists in all BASH_LINENO array\n        # BASH_SOURCE contains\
    \ all source files that comprise a bash program\n        for (( i=0; i < ${#BASH_SOURCE[@]};\
    \ i++ )); do\n            if [[ ${BASH_SOURCE[i]} == $line ]]; then\n        \
    \        BASH_SOURCE[i]=${BASH_SOURCE[i+1]}\n                BASH_LINENO[i]=${BASH_LINENO[i+1]}\n\
    \                break\n            fi\n        done\n\n        if [[ -z \"${BASH_LINENO[i]}\"\
    \ ]]; then\n            echo \"Error: ${BASH_SOURCE[i]} does not exist\" >&2\n\
    \            return 1\n        fi\n        if [[ -z \"${BASH_SOURCE[i]}\" ]];\
    \ then\n            echo \"Error: ${BASH_LINENO[i]} does not exist\" >&2\n   \
    \         return 1\n        fi\n\n        ((apples=apples + ${BASH_LINENO[i]}\
    \ - 1))\n        ((orange=orange + ${BASH_LINENO[i]} - 1))\n    done <<< \"$input\"\
    \n\n    apples=$((apples + number_of_fruits - 1))\n    orange=$((orange + number_of_fruits\
    \ - 1))\n    for ((", "    local num_apples=\"$1\"\n    local num_oranges=\"$2\"\
    \n    local fruits_number=\"$3\"\n    # use awk command to filter out the apples\n\
    \    local apples=$(echo \"$num_apples\" | awk '{print $1}')\n    local oranges=$(echo\
    \ \"$num_oranges\" | awk '{print $1}')\n    local mango=$(echo $fruits_number\
    \ | awk '{print $1}')\n    local apples_count=$(echo $apples | wc -w)\n    local\
    \ oranges_count=$(echo $oranges | wc -w)\n    local mango_count=$(echo $mango\
    \ | wc -w)\n    local total_fruits=$(($apples_count+$oranges_count+$mango_count))\n\
    \    local mango_count=$(($apples_count+$oranges_count))\n    local mango_percent=$(($mango_count/$total_fruits*100))\n\
    \    echo $mango_count\n    echo $mango_percent", "  local BASKET=$1\n  local\
    \ NUMBER=$2\n  local MANGO\n  local count\n\n  MANGO=`echo $BASKET | awk '{print\
    \ $6}'`\n  count=`echo $MANGO | awk '{print $1}'`\n\n  echo $(($count+$NUMBER))",
  "    local x\n    local count\n    local result\n\n    IFS=' ' read -a x <<< \"\
    $1\"\n\n    count=\"${x[0]}\"\n    IFS=' ' read -a result <<< \"$2\"\n\n    local\
    \ i\n    local m\n\n    for ((i = 0; i < ${#result[@]}; i++)); do\n        if\
    \ [[ \"${result[i]}\" == \"mango\" ]]; then\n            m=i\n            break\n\
    \        fi\n    done\n\n    ((count--))\n    echo \"${result[m]}\"", "    local\
    \ apples=$1\n    local oranges=$2\n    local total=$(( $apples + $oranges ))\n\
    \    local count=0\n\n    while [ $apples -gt 0 ] && [ $oranges -gt 0 ]; do\n\
    \        (( $count += 1 ))\n        if [ $apples -eq $(( $apples - 1 )) ]; then\n\
    \            apples=0\n        fi\n        (( $apples += 1 ))\n        if [ $oranges\
    \ -eq $(( $oranges - 1 )) ]; then\n            oranges=0\n        fi\n       \
    \ (( $oranges += 1 ))\n    done\n\n    echo $count", "  local a=$1\n  local b=$2\n\
    \  local c=$3\n  \n  local apples=$(awk '{print $1}' <<< $a)\n  local oranges=$(awk\
    \ '{print $1}' <<< $a)\n  local mango=$(awk '{print $1}' <<< $a)\n\n  local total_oranges=$(awk\
    \ '{print $2}' <<< $b)\n  local total_apples=$(awk '{print $2}' <<< $b)\n  local\
    \ total_fruits=$(awk '{print $2}' <<< $c)\n  \n  local total_mango=$((total_oranges-total_apples+total_fruits))\n\
    \n  echo $total_mango", "  local STRING=$1\n  local INTEGER=$2\n  local BASKET_FAVORITE=${STRING//$APPLES/$APPLES}\n\
    \  local BASKET_FAVORITE_COUNT=$(echo $BASKET_FAVORITE | wc -w)\n  local BASKET_MANGO=${STRING//$ORANGES/$ORANGES}\n\
    \  local BASKET_MANGO_COUNT=$(echo $BASKET_MANGO | wc -w)\n  local BASKET_COUNT=$((BASKET_FAVORITE_COUNT\
    \ + BASKET_MANGO_COUNT))\n  local BASKET_MANGO_FAVORITE=$((BASKET_COUNT * $MANGO_FAVORITE\
    \ / $BASKET_COUNT))\n  local BASKET_MANGO_TO_ADD=$((BASKET_MANGO_FAVORITE + $INTEGER))\n\
    \  local BASKET_MANGO_FAVORITE_COUNT=$(($BASKET_MANGO_FAVORITE/$MANGO_FAVORITE))\n\
    \  local BASKET_MANGO_TO_ADD_COUNT=$(($BASKET_MANGO_TO_ADD/$MANGO_FAVORITE))\n\
    \  local BASKET_MANGO_FAVORITE_ADD=$(($BASKET_MANGO_FAVORITE_COUNT + $BASKET_MANGO_TO_ADD_COUNT))\n\
    \  local BASKET_MANGO_FAVORITE_ADD_RESULT=$(($BASKET_COUNT + $BASKET_MANGO_FAVORITE_ADD))\n\
    \  local MANGO_FAVORITE_TO_ADD_COUNT=$(($BASKET_MANGO_FAVORITE_ADD * $ORANGES))\n\
    \  local MANGO_FAVORITE_TO_ADD=$(($MANGO_FAVORITE_TO_ADD_COUNT + $INTEGER))\n\
    \  local MANGO_FAVORITE_TO_ADD_RESULT=$(($MANGO_FAVORITE_TO_ADD_COUNT + $INTEGER))\n\
    \  echo $MANGO_FAVORITE_TO_ADD_RESULT", "    local apples=\"$1\"\n    local oranges=\"\
    $2\"\n    local numFruits=\"$3\"\n\n    local totalNumFruits=$((apples + oranges\
    \ + numFruits))\n    local apples_num=$(expr ${apples}\\* 3)\n    local oranges_num=$(expr\
    \ ${oranges}\\* 2)\n    local total_num=$(expr ${total_num}\\* 1)\n\n    local\
    \ mango_fruits=$(expr ${total_num}\\* 2)\n    echo $mango_fruits", "    local\
    \ apple_str=$1\n    local orange_str=$2\n    local apple_num=$3\n    local orange_num=$4\n\
    \    local apple_count=0\n    local orange_count=0\n    local mango_count=0;\n\
    \    local basket_length=${#apple_str}\n    local basket_length=${#orange_str}\n\
    \    local apple_number=0\n    local orange_number=0\n    local basket=\"\"\n\n\
    \    # If the apple string is larger than the orange string then the basket length\
    \ is equal\n    # to the apple string.\n    if [ $basket_length -gt $orange_length\
    \ ]; then\n        basket_length=$basket_length\n    else\n        basket_length=$orange_length\n\
    \    fi\n\n    for (( i=0; i<basket_length; i++ ));do\n        case \"${apple_str[$i]}\"\
    \ in\n            a)\n                if [ $apple_count -eq $apple_num ]; then\n\
    \                    apple_count=$((apple_count + 1))\n                    apple_number=$((apple_number\
    \ + 1))\n                else\n                    apple_count=$((apple_count\
    \ + 1))\n                fi\n            ;;\n            b)\n                if\
    \ [ $orange_count -eq $orange_num ]; then\n                    orange_count=$((orange_count\
    \ + 1))\n                    orange_number=$((orange_number + 1))\n          \
    \      else\n                    orange_count=$((orange_count + 1))\n        \
    \        fi\n            ;;\n            m)\n                if [ $apple_count\
    \ -eq $apple_num ]; then\n                    apple_count=$((apple_count + 1))\n\
    \                    apple_number=$((apple_number + 1))\n                else\n\
    \                    apple_count=$((apple_count + 1))\n                fi\n  \
    \              if [ $orange_count -eq $orange_num ]; then\n                  \
    \  orange_count=$((orange_count + 1))\n                    orange_number=$((orange_number\
    \ + 1))\n                else\n                    orange_count=$((orange_count\
    \ + 1))\n                fi\n            ;;\n            *)\n                if\
    \ [ $orange_count -eq $orange_num ]; then\n                    orange_count=$((orange_count\
    \ + 1))\n                    orange_number=$((orange_number + 1))\n          \
    \      else\n                    orange_count=$((orange_count + 1))\n        \
    \        fi\n                if [ $apple_count -eq $apple_num ]; then\n      \
    \              apple_count=$((apple_count + 1))\n                    apple_number=$((apple_number\
    \ + 1))\n                else\n", "  # Write your code here\n  local total_apples=$1\n\
    \  local total_oranges=$2\n  local total_fruits=$((total_apples + total_oranges))\n\
    \  local mangos=$(echo $total_fruits | grep -o \"apples[0-9]\\+|oranges[0-9]\\\
    +\" | wc -l)\n  echo $mangos", "  local total=$(echo \"$1\" | awk '{print $1}')\n\
    \  local apples=$(echo \"$1\" | awk '{print $2}')\n  local oranges=$(echo \"$1\"\
    \ | awk '{print $3}')\n  local mango=$(echo \"$1\" | awk '{print $4}')\n  local\
    \ total_mango=0\n  local total_oranges=0\n\n  if [ \"$apples\" -gt \"$oranges\"\
    \ ]; then\n    local apples_oranges=$(echo \"$apples*$oranges\" | bc -l)\n   \
    \ local apples_oranges_mango=$(echo \"$apples_oranges/$mango\" | bc -l)\n    local\
    \ mango_oranges_apple=$(echo \"$mango*$oranges/$apples\" | bc -l)\n    local mango_oranges=$(echo\
    \ \"$mango_oranges_apple*$mango\" | bc -l)\n    local total_mango=$(echo \"$mango_oranges\
    \ + $mango_oranges_apple\" | bc -l)\n  else\n    local oranges_apples=$(echo \"\
    $oranges*$apples\" | bc -l)\n    local oranges_apples_mango=$(echo \"$oranges_apples/$mango\"\
    \ | bc -l)\n    local mango_oranges_apple=$(echo \"$mango*$oranges/$apples\" |\
    \ bc -l)\n    local mango_oranges=$(echo \"$mango_oranges_apple*$mango\" | bc\
    \ -l)\n    local total_mango=$(echo \"$mango_oranges + $mango_oranges_apple\"\
    \ | bc -l)\n  fi\n\n  echo $total_mango", "  local str=\"$1\" num=\"$2\" fruits=\"\
    \"\n  \n  num=${num//,/ }\n  fruits=$(sed 's/,/ /g;s/ apples/ 1/;s/ oranges/ 2/;s/\
    \ mango/3/' <<< $str)\n  \n  (( ${fruits:0:1} == 1 )) && fruits=\"${fruits}3\"\
    \ || fruits=\"${fruits}2\"\n  \n  echo ${fruits:0:$num}", "  local number_of_apples=\"\
    ${1}\"\n  local number_of_oranges=\"${2}\"\n  # Your code goes here\n  local number_of_mangos=0\n\
    \  for ((i = 1; i <= number_of_oranges; i++ )) ; do\n    ((number_of_mangos=number_of_mangos+2))\n\
    \  done\n  for ((i = 1; i <= number_of_apples; i++ )) ; do\n    ((number_of_mangos=number_of_mangos+1))\n\
    \  done\n  ((number_of_mangos=number_of_mangos-number_of_apples-1))\n  echo \"\
    ${number_of_mangos}\"", "    local a=\"$(echo $1 | sed -e 's/[^0-9]//g')\" #remove\
    \ all non-numbers\n    local b=\"$(echo $2 | sed -e 's/[^0-9]//g')\" #remove all\
    \ non-numbers\n    local c=\"$(echo $a | sed -e 's/\\([a-zA-Z]*\\)\\([a-zA-Z]*\\\
    )\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\\
    ([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\\
    )\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\\
    ([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\\
    )\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\\
    ([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\\
    )\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\\
    ([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\\
    )\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\\
    ([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\\
    )\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\\
    ([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\\
    )\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\\
    ([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\\
    )\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\\
    ([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\)\\([a-zA-Z]*\\\
    )\\", "    local var1=$1\n    local var2=$2\n    local var3=$3\n    local var4=$4\n\
    \    local var5=$5\n    local var6=$6\n    local var7=$7\n    local var8=$8\n\
    \    local var9=$9\n    local var10=$10\n    local var11=$11\n    local var12=$12\n\
    \    local var13=$13\n    local var14=$14\n    local var15=$15\n    local var16=$16\n\
    \    local var17=$17\n    local var18=$18\n    local var19=$19\n    local var20=$20\n\
    \    local var21=$21\n    local var22=$22\n    local var23=$23\n    local var24=$24\n\
    \    local var25=$25\n    local var26=$26\n    local var27=$27\n    local var28=$28\n\
    \    local var29=$29\n    local var30=$30\n    local var31=$31\n    local var32=$32\n\
    \    local var33=$33\n    local var34=$34\n    local var35=$35\n    local var36=$36\n\
    \    local var37=$37\n    local var38=$38\n    local var39=$39\n    local var40=$40\n\
    \    local var41=$41\n    local var42=$42\n    local var43=$43\n    local var44=$44\n\
    \    local var45=$45\n    local var46=$46\n    local var47=$47\n    local var48=$48\n\
    \    local var49=$49\n    local var50=$50\n    local var51=$51\n    local var52=$52\n\
    \    local var53=$53\n    local var54=$54\n    local var55=$55\n    local var56=$56\n\
    \    local var57=$57\n    local var58=$58\n    local var59=$59\n    local var60=$60\n\
    \    local var61=$61\n    local var62=$62\n    local var63=$63\n    local var64=$64\n\
    \    local var65=$65\n    local var66=$66\n    local var67=$67\n    local var68=$68\n\
    \    local var69=$69\n    local var70=$70\n    local var71=$71\n    local var72=$72\n\
    \    local var73=$73\n    ", "  local fruit count\n  fruit=$(echo \"$1\" | cut\
    \ -d \" \" -f 1)\n  count=$(echo \"$1\" | cut -d \" \" -f 2)\n  if [ $fruit -gt\
    \ $count ]\n  then\n    echo \"$count $fruit\"\n  else\n    echo \"$count $fruit\"\
    \n  fi", "    local -n APPLES=\"$1\"\n    local -n ORANGES=\"$2\"\n    local -n\
    \ MANGO=\"$3\"\n\n    local MANGOFRANTS=0\n    local APPLESLEFT=0\n    local ORANGESLEFT=0\n\
    \    local APPLESCOUNT=0\n    local ORANGESCOUNT=0\n    while [[ $APPLES =~ ^[0-9]+$\
    \ ]] ; do\n        APPLESLEFT=$((APPLESLEFT+1))\n        APPLESCOUNT=$((APPLESCOUNT+1))\n\
    \    done\n    while [[ $ORANGES =~ ^[0-9]+$ ]] ; do\n        ORANGESLEFT=$((ORANGESLEFT+1))\n\
    \        ORANGESCOUNT=$((ORANGESCOUNT+1))\n    done\n    APPLESLEFT=$((APPLESLEFT+APPLESCOUNT))\n\
    \    ORANGESLEFT=$((ORANGESLEFT+ORANGESCOUNT))\n    while [[ \"$APPLESLEFT\" -gt\
    \ 0 ]] ; do\n        APPLESLEFT=$((APPLESLEFT-1))\n        APPLESCOUNT=$((APPLESCOUNT-1))\n\
    \        if [[ $APPLESLEFT -ge $MANGO ]] ; then\n            MANGOFRANTS=$((MANGOFRANTS+1))\n\
    \        fi\n    done\n    while [[ \"$ORANGESLEFT\" -gt 0 ]] ; do\n        ORANGESLEFT=$((ORANGESLEFT-1))\n\
    \        ORANGESCOUNT=$((ORANGESCOUNT-1))\n        if [[ $ORANGESLEFT -ge $MANGO\
    \ ]] ; then\n            MANGOFRANTS=$((MANGOFRANTS+1))\n        fi\n    done\n\
    \    echo \"$MANGOFRANTS\"", "\tlocal string=$1\n\tlocal num_fruits=$2\n\tlocal\
    \ mango_count=0\n\tlocal apples_count=$(echo \"$string\" | grep -o \"apples[[:digit:]]*$\"\
    )\n\tlocal oranges_count=$(echo \"$string\" | grep -o \"oranges[[:digit:]]*$\"\
    )\n\tif [ -z \"$apples_count\" ] ; then\n\t\techo \"invalid apples count\"\n\t\
    else\n\t\tif [ \"$apples_count\" -le \"$num_fruits\" ] ; then\n\t\t\tmango_count=$apples_count\n\
    \t\tfi\n\tfi\n\tif [ -z \"$oranges_count\" ] ; then\n\t\techo \"invalid oranges\
    \ count\"\n\telse\n\t\tif [ \"$oranges_count\" -le \"$num_fruits\" ] ; then\n\t\
    \t\tmango_count=$oranges_count\n\t\tfi\n\tfi\n\techo \"$mango_count\"", "    #\
    \ write your code here\n    fruits=$2\n    oranges=\"$1\"\n    apples=\"$(fruit_distribution\
    \ $orang $apples) - $(fruit_distribution $orang $apples)\"\n    apples=\"$(fruit_distribution\
    \ $orang $apples)\"\n    mango=\"$(fruit_distribution $orang $apples)\"\n    oranges=\"\
    $(fruit_distribution $orang $oranges)\"\n    echo \"\"\n    echo \"\"\n    echo\
    \ \"apples=$apples\"\n    echo \"oranges=$oranges\"\n    echo \"mango=$mango\"",
  "    local -r string=$1\n    local -r integer=$2\n    local -r number=0\n    local\
    \ -r counter=0\n    local -r mango=0\n    local -r string2=\"0\"\n\n    IFS='\
    \ ' read -ra array <<< \"$string\"\n\n    for element in \"${array[@]}\"; do\n\
    \        if [ \"$element\" = \"oranges\" ] || [ \"$element\" = \"mango\" ]; then\n\
    \            ((counter++))\n        elif [ \"$element\" = \"apples\" ]; then\n\
    \            if [ \"$counter\" -lt \"$integer\" ]; then\n                ((number++))\n\
    \            else\n                ((mango++))\n            fi\n        else\n\
    \            ((counter++))\n        fi\n    done\n\n    local -r count=$(( mango\
    \ + number + counter ))\n\n    if [ \"$count\" -gt \"$integer\" ]; then\n    \
    \    string2=\"$string2\"$(( number + 1 ))\"-\"\n    fi\n    if [ \"$string2\"\
    \ = \"0\" ]; then\n        echo \"$mango\"\n    else\n        echo \"$string2\"\
    \n    fi", "  local num_apples=${1}\n  local num_oranges=${2}\n  local numfruits=$((num_apples\
    \ + num_oranges))\n  local result=0\n\n  for i in $(seq 1 $numfruits); do\n  \
    \  local index=$((numfruits - $i))\n    local num_fruit_in_basket=$((num_apples\
    \ + num_oranges - index))\n    local num_fruit_in_basket_sum=$((num_fruit_in_basket\
    \ + 1))\n    if ((num_fruit_in_basket_sum <= $numfruits)); then\n      result=$((result\
    \ + num_fruit_in_basket_sum))\n    fi\n  done\n  echo $result", "  local apples_sum=$1\n\
    \  local oranges_sum=$2\n  local number_of_fruits\n  number_of_fruits=$(echo \"\
    $apples_sum + $oranges_sum\" | bc)\n  local number_of_mango_fruits\n  number_of_mango_fruits=$(echo\
    \ \"$number_of_fruits - 2\" | bc)\n  echo $number_of_mango_fruits", "    local\
    \ num_apples=$1\n    local num_oranges=$2\n    local num_fruits=$((num_apples+num_oranges))\n\
    \    local num_apples_left=$((num_fruits - num_apples))\n    local num_oranges_left=$((num_apples-num_apples))\n\
    \n    (( num_apples_left <= num_apples ))\n    (( num_oranges_left <= num_oranges\
    \ ))\n\n    echo \"$((num_fruits-(num_apples+num_oranges))-(num_apples-num_apples))\"",
  "  local total=${2:-$#};\n  local apples=${1:-0};\n  local oranges=${total:-0};\n\
    \  local mangoes=${total:-0};\n  while [ \"$total\" -gt 0 ]; do\n    local num_fruits=$((\
    \ $total % 3 ))\n    local num_mangoes=$(( $total / 3 ))\n    if [ \"$num_fruits\"\
    \ -eq 1 ]; then\n      local num_oranges=$(( $total / 2 ))\n      local mangoes=$((\
    \ $mangoes + $num_mangoes ));\n      total=$(( $total - $num_oranges ))\n    elif\
    \ [ \"$num_fruits\" -gt 0 ]; then\n      local mangoes=$(( $mangoes + $num_mangoes\
    \ ))\n      total=$(( $total - $num_fruits ))\n    fi\n  done\n  echo \"$mangoes\"",
  "\tlocal -i count_oranges=$2\n\tlocal -i count_apples=$1\n\tlocal -i total_fruits=$3\n\
    \tlocal -i count\n\tlocal -i tmp\n\t\n\t# convert strings to integers\n\tcount_oranges=$((count_oranges\
    \ / count_apples))\n\tcount_apples=$((count_apples - count_oranges * count_apples))\n\
    \n\t# check if count_apples and count_oranges are positive\n\tif ((count_apples\
    \ < 1) || (count_oranges < 1)); then\n\t\treturn $count_oranges\n\tfi\n\n\t# find\
    \ number of fruits in basket\n\tcount=$(\n\t\t# find number of oranges and number\
    \ of apples in basket\n\t\twhile ((count_oranges > 0)); do\n\t\t\tcount=$(expr\
    \ $count + 1)\n\t\t\tcount_oranges=$(expr $count_oranges - 1)\n\t\tdone\n\n\t\t\
    while ((count_apples > 0)); do\n\t\t\tcount=$(expr $count + 1)\n\t\t\tcount_apples=$(expr\
    \ $count_apples - 1)\n\t\tdone\n\n\t\techo $((count * total_fruits))\n\t)\n\n\t\
    # check if the result is an integer\n\ttmp=$(echo $count | grep -o '^0*[1-9][0-9]*$')\n\
    \tif (( ! $tmp )) ; then\n\t\treturn $count\n\tfi", "  # BEGIN PROMPT\n  read\
    \ -p \"Enter the number of the apples then oranges in the basket: \" \"$1\"\n\
    \  read -p \"Enter the total number of the apples and oranges: \" \"$2\"\n  read\
    \ -p \"Enter the total number of the fruits in the basket: \" \"$3\"\n  echo \"\
    $(($3 - $(($2 * $3))))\"", "    read num1 fruit1 num2 fruit2\n    fruit1=${fruit1/apples/}\n\
    \    fruit2=${fruit2/apples/}\n    fruit1=${fruit1/oranges/}\n    fruit2=${fruit2/oranges/}\n\
    \    fruit1=${fruit1/mangoes/}\n    fruit2=${fruit2/mangoes/}\n    echo $(( ${fruit1}\
    \ + ${fruit2} ))", "  local string=\"$1\"\n  local number=\"$2\"\n  echo \"${number}\
    \ apples and ${number} oranges\"\n  local count=0\n  local string1=$(echo \"$string\"\
    \ | sed 's/ apples,$//')\n  local string2=$(echo \"$string\" | sed 's/ oranges,$//')\n\
    \  local string3=$(echo \"$string\" | sed 's/ mango,$//')\n  for ((i=0;i<${#string1};i++));\n\
    \  do\n    count+=$((${count}+${#string2}))\n  done\n  echo \"${count} mango fruits\"",
  "    local string=$1\n    local number=$2\n    local string2=$(echo \"$string\"\
    \ | sed -n 's/^\\(.*\\)\\sapples.*\\(.*\\)\\soranges.*$/\\1\\2/p')\n    local\
    \ number2=$(echo \"$number\" | sed -n 's/^\\(.*\\)\\sapples.*\\(.*\\)\\soranges.*$/\\\
    1\\2/p')\n    local string3=$(echo \"$string\" | sed -n 's/^\\(.*\\)\\sapples.*\\\
    (.*\\)\\soranges.*\\(.*\\)\\smango.*$/\\1\\2/p')\n    local number3=$(echo \"\
    $number\" | sed -n 's/^\\(.*\\)\\sapples.*\\(.*\\)\\soranges.*\\(.*\\)\\smango.*$/\\\
    1\\2/p')\n    echo \"$number2\"", "  local count=\"$1\"\n  local num=\"$2\"\n\
    \  local mango=\n  \n  # convert the number into an array\n  IFS=', '; read -r\
    \ -a array <<< \"$num\"\n\n  # loop through the array to find all the fruit\n\
    \  for fruit in \"${array[@]}\"; do\n    # if the array contains the fruit, mango\
    \ will incremented by 1\n    if [[ $fruit == mango ]]; then\n      mango=\n  \
    \  else\n      # mango is 0 when all the fruit has been found\n      mango=$((mango\
    \ + 1))\n    fi\n  done\n  # return the mango value\n  echo \"$mango\"", "  #\
    \ split the input string to get the amount of apples and oranges\n  apples=$(echo\
    \ $1 | awk '{print $1}' | tr '\\n' ' ')\n  oranges=$(echo $1 | awk '{print $2}'\
    \ | tr '\\n' ' ')\n  # calculate number of fruits in the basket\n  total_fruits=$(echo\
    \ $2 | awk '{print $1}')\n  # calculate number of oranges\n  oranges=$(echo $2\
    \ | awk '{print $2}')\n  # calculate the number of mango fruits\n  mango_fruits=$((\
    \ $total_fruits - $oranges ))\n  # return the number of mango fruits\n  echo $mango_fruits",
  "  local apples=\"${1}\"\n  local oranges=\"${2}\"\n  local apples_needed=\"${3}\"\
    \n  local oranges_needed=\"${4}\"\n  local apples_total=\"${5}\"\n  local oranges_total=\"\
    ${6}\"\n  local mangos=${7}\n\n  local count=0\n  local mango_count=0\n  for ((i=1;\
    \ i <= ${mangos}; i++))\n  do\n    if [ \"${apples_needed}\" -eq 0 ]\n    then\n\
    \      if [ \"${oranges_needed}\" -eq 0 ]\n      then\n          let count++\n\
    \      else\n          let count+=${oranges_total}\n      fi\n    else\n     \
    \ if [ \"${apples_needed}\" -eq 0 ]\n      then\n          let count+=${apples_total}\n\
    \      else\n          let count+=${apples_needed}\n          let mango_count+=${oranges_needed}\n\
    \      fi\n    fi\n  done\n\n  echo \"$mango_count\"", "    local total\n    local\
    \ basket\n    local mangoes\n    \n    total=$1\n    basket=$2\n    mangoes=0\n\
    \    \n    for (( i=0; i <= $( ${#basket} ); i++ ));\n    do\n        if [ $(echo\
    \ $( echo ${basket:$i:1})) = 'a' ]; then\n            mangoes+=$(( ${total} /\
    \ 4))\n        fi\n    done\n    \n    echo \"${mangoes}\"", "  local total_apples=$1\n\
    \  local total_oranges=$2\n  local mango_fruits=$(echo $(( $total_apples - $total_oranges\
    \ ))) * 2\n  echo $mango_fruits", "   local x=\"$1\"\n   local y=\"$2\"\n   local\
    \ a\n   local b\n   local c\n   local d\n   local e\n   a=${x%apples}\n   b=${x%oranges}\n\
    \   c=${x%mango}\n   d=$((a*(b+c)))\n   e=$(echo \"$d*10\" | bc)\n   echo \"$e\"",
  "  local a=\"$1\"\n  local b=\"$2\"\n\n  local apples=\"${a%apples}\" # extracts\
    \ the apples\n  local oranges=\"${a##*oranges}\" # extracts the oranges\n  local\
    \ mango=\"${a##*mango}\" # extracts the mango\n  \n  echo \"${b}${mango}\"", " \
    \   local BASKET=$1\n    local NUMBER_OF_APPLES=$2\n    local NUMBER_OF_ORANGES=$3\n\
    \    local NUMBER_OF_MANGOS=0\n    local RESULT=0\n    while read -r LINE; do\n\
    \        local NUMBER=$(echo $LINE | awk '{print $1}')\n        if [[ \"$NUMBER\"\
    \ == \"oranges\" ]]; then\n            let \"NUMBER_OF_ORANGES+=1\"\n        elif\
    \ [[ \"$NUMBER\" == \"apples\" ]]; then\n            let \"NUMBER_OF_APPLES+=1\"\
    \n        else\n            let \"NUMBER_OF_MANGOS+=1\"\n        fi\n    done\
    \ < \"$BASKET\"\n    if (( NUMBER_OF_MANGOS > NUMBER_OF_ORANGES )); then\n   \
    \     RESULT=$(($NUMBER_OF_MANGOS - NUMBER_OF_ORANGES))\n    else\n        RESULT=$(($NUMBER_OF_APPLES\
    \ - NUMBER_OF_MANGOS))\n    fi\n    echo \"$RESULT\"", "    local total=$1\n \
    \   local total2=$2\n    local total3=$((total*3))\n    local total4=$((total*4))\n\
    \    local total5=$((total*5))\n    local total6=$((total*6))\n    local total7=$((total*7))\n\
    \    local total8=$((total*8))\n    local total9=$((total*9))\n    local total10=$((total*10))\n\
    \    local total11=$((total*11))\n    local total12=$((total*12))\n    local total13=$((total*13))\n\
    \    local total14=$((total*14))\n    local total15=$((total*15))\n    local total16=$((total*16))\n\
    \    local total17=$((total*17))\n    local total18=$((total*18))\n    local total19=$((total*19))\n\
    \    local total20=$((total*20))\n    local total21=$((total*21))\n    local total22=$((total*22))\n\
    \    local total23=$((total*23))\n    local total24=$((total*24))\n    local total25=$((total*25))\n\
    \    local total26=$((total*26))\n    local total27=$((total*27))\n    local total28=$((total*28))\n\
    \    local total29=$((total*29))\n    local total30=$((total*30))\n    local total31=$((total*31))\n\
    \    local total32=$((total*32))\n    local total33=$((total*33))\n    local total34=$((total*34))\n\
    \    local total35=$((total*35))\n    local total36=$((total*36))\n    local total37=$((total*37))\n\
    \    local total38=$((total*38))\n    local total39=$((total*39))\n    local total40=$((total*40))\n\
    \    local total41=$((total*41))\n    local total42=$((total*42))\n    local total43=$((total*43))\n\
    \    local total44=$((total*44))\n    local total45=$((total*45))\n    local total46=$((total*46))\n\
    \    local total47=$((total*47))\n    local total48=$((total*48))\n    local ",
  "    local apples=$1\n    local oranges=$2\n    local fruits=$((oranges + apples))\n\
    \    local mangos=$fruits\n    while [[ $fruits -ge 100 ]] ; do\n        local\
    \ mangos=$(($mangos * 100))\n        local fruits=$(($fruits - 100))\n    done\n\
    \    echo $mangos", "  local apples=\"$1\"\n  local oranges=\"$2\"\n  local basket=`echo\
    \ \"$apples $oranges\" | awk -F\"apples and|oranges\" '{print $2}'`\n  local number_of_basket_fruits=\
    \ `echo \"$apples $oranges\" | awk -F\"apples and|oranges\" '{print $2}'`\n  local\
    \ number_of_mango_fruits=0\n  local number_of_mango=0\n  for (( i=0; i < ${#basket};\
    \ i++ )); do\n    if [ ${basket:i:1} == \"m\" ] && [ $i -eq 0 ]; then\n      number_of_mango_fruits=$((number_of_mango_fruits+1))\n\
    \      number_of_mango=$((number_of_mango+1))\n    elif [ ${basket:i:1} == \"\
    m\" ]; then\n      number_of_mango_fruits=$((number_of_mango_fruits+1))\n    elif\
    \ [ ${basket:i:1} == \"o\" ] && [ $i -eq 0 ]; then\n      number_of_mango_fruits=$((number_of_mango_fruits+1))\n\
    \    elif [ ${basket:i:1} == \"o\" ]; then\n      number_of_mango_fruits=$((number_of_mango_fruits+1))\n\
    \    elif [ ${basket:i:1} == \"a\" ] && [ $i -eq 0 ]; then\n      number_of_mango_fruits=$((number_of_mango_fruits+1))\n\
    \    elif [ ${basket:i:1} == \"a\" ]; then\n      number_of_mango_fruits=$((number_of_mango_fruits+1))\n\
    \    elif [ ${basket:i:1} == \"o\" ] || [ ${basket:i:1} == \"a\" ] || [ ${basket:i:1}\
    \ == \"m\" ]; then\n      number_of_mango_fruits=$((number_of_mango_fruits+1))\n\
    \    fi\n  done\n  echo \"$number_of_mango_fruits\"", "\tlocal IFS=' '\n\tlocal\
    \ apples=${1//[^0-9]}\n\tlocal oranges=${2//[^0-9]}\n\tlocal total=$((apples +\
    \ oranges))\n\tlocal fruits=$((total * 2))\n\tlocal total=${fruits/[^0-9]}\n\t\
    echo \"$total\"", "    local string=$1\n    local apples=$2\n    local oranges=$(echo\
    \ $string | awk '{print ($1+$2)}' | cut -d \" \" -f 1)\n    local mango=$(echo\
    \ $string | awk '{print ($1+$2)}' | cut -d \" \" -f 2)\n    local total_fruits\n\
    \    total_fruits=$((apples+oranges))\n    echo $total_fruits\n    echo $mango",
  "  local total=\"$1\"\n  local count=\"$2\"\n  local apples=\"$3\"\n  local oranges=\"\
    $4\"\n\n  echo $((total * count / apples)) +\n    $(echo $((total * count / oranges))\
    \ - $((apples * oranges / total)))", "  local str=$1\n  local num=$2\n  local\
    \ num_in_basket\n\n  if [ $num -eq 0 ]\n  then\n    num_in_basket=`echo $str |\
    \ awk '{print $1}'`\n  else\n    num_in_basket=`echo $str | awk '{print $1}'`\n\
    \  fi\n\n  local num_in_fruits=`echo $num_in_basket | awk '{print $2}'`\n\n  if\
    \ [ $num_in_fruits -gt $num ]\n  then\n    num_fruits= $num_in_fruits - $num\n\
    \  else\n    num_fruits=$num\n  fi\n\n  echo $num_fruits", "    local number=$1\n\
    \    local total=$2\n\n    # convert apples and oranges to an int\n    local apples=\"\
    $number\" \n    local oranges=\"$((apples % 3))\"\n    local mangos=$((apples\
    \ - oranges))\n\n    # convert to a string for printing\n    local apples_str=\"\
    $apples\"\n    local oranges_str=\"$oranges\"\n    local mangos_str=\"$mangos\"\
    \n\n    # print out result\n    echo \"$mangos_str\"", "  local total=$1\n  local\
    \ number=$2\n  local mango_count=$(echo $total | grep -o \"apples|oranges|mango\"\
    \ | wc -w)\n  echo $mango_count", "  local num_apples=$1\n  local num_oranges=$2\n\
    \n  local fruits=`echo \"$num_apples $num_oranges\" | bc`\n  local mango_fruits=$((\
    \ $fruits % 3 ))\n\n  echo \"$mango_fruits\"", "  local a=${1%\"apples and \"\
    }\n  local b=${1#\"$a \"}\n  local c=${2%\"apples and \"}\n  local d=${2#\"$c\
    \ \"}\n  local e=${2%\"oranges and \"}\n  local f=${2#\"$e \"}\n  local g=${2%\"\
    oranges and \"}\n  local h=${2#\"$g \"}\n  local i=${2%\"mango fruits \"}\n  local\
    \ j=${2#\"$i \"}\n  local k=$(($b + $g + $j))\n  echo \"$k\"", "    local x=\"\
    ${1}\"\n    local y=\"${2}\"\n    echo \"${y/apples/oranges} oranges and ${y/apples/oranges}\
    \ apples\"", "    local apples=\"${1:-}\"\n    local oranges=\"${2:-}\"\n    local\
    \ mangos=${3:-}\n    local basket=\"${apples}${oranges}${mangos}\"\n    local\
    \ mango_count=$(echo \"${basket}\" | sed -n -e 's/.*\\([0-9]*\\)apples.*\\([0-9]*\\\
    )oranges.*/\\1\\2/p' | sort -n | uniq -c | awk '{print $2}' | head -n 1)\n   \
    \ echo \"${mango_count}\"", "    local num_apples\n    local num_oranges\n   \
    \ local num_fruits\n\n    local num_mango\n\n    num_apples=$1\n    num_oranges=$2\n\
    \n    num_fruits=$(expr ${num_oranges} \\* ${num_apples})\n\n    if [[ ${num_fruits}\
    \ -le 100 ]]; then\n        num_mango=$(expr $((${num_oranges} - ${num_fruits}\
    \ * ${num_apples})) \\* ${num_apples})\n    elif [[ ${num_fruits} -ge 200 ]];\
    \ then\n        num_mango=$(expr $((${num_oranges} * ${num_apples} * ${num_apples}))\
    \ \\* ${num_apples})\n    elif [[ ${num_fruits} -eq 200 ]]; then\n        num_mango=$(expr\
    \ $((${num_oranges} * ${num_apples} * ${num_apples})) \\* ${num_apples})\n   \
    \ fi\n\n    echo \"$num_mango\"", "local apple_and_oranges=$1\nlocal total_fruits=$2\n\
    \napple_and_oranges_num=$(echo $apple_and_oranges | cut -d ' ' -f 1)\ntotal_fruits_num=$(echo\
    \ $total_fruits | cut -d ' ' -f 1)\n\nif (( $apple_and_oranges_num != $total_fruits_num\
    \ )); then\n  echo \"ERROR: apples and oranges are not the same\"\n  return\n\
    fi\n  \napple_and_oranges_num=$(echo $apple_and_oranges | cut -d ' ' -f 2)\ntotal_fruits_num=$(echo\
    \ $total_fruits | cut -d ' ' -f 2)\n\nif (( $apple_and_oranges_num != $total_fruits_num\
    \ )); then\n  echo \"ERROR: apples and oranges are not the same\"\n  return\n\
    fi\n  \napple_and_oranges_num=$(echo $apple_and_oranges | cut -d ' ' -f 3)\ntotal_fruits_num=$(echo\
    \ $total_fruits | cut -d ' ' -f 3)\n\nif (( $apple_and_oranges_num != $total_fruits_num\
    \ )); then\n  echo \"ERROR: apples and oranges are not the same\"\n  return\n\
    fi\n  \napple_and_oranges_num=$(echo $apple_and_oranges | cut -d ' ' -f 4)\ntotal_fruits_num=$(echo\
    \ $total_fruits | cut -d ' ' -f 4)\n\nif (( $apple_and_oranges_num != $total_fruits_num\
    \ )); then\n  echo \"ERROR: apples and oranges are not the same\"\n  return\n\
    fi\n\necho \"${#apple_and_oranges}\" #return the number of apples and oranges\n\
    echo \"${#total_fruits}\" #return the total number of fruits", '  # Your code
    here', "    local apples=$1\n    local oranges=$2\n    local total_fruits=$((${oranges}+${apples}))\n\
    \    local mangos=0\n    while [ ${total_fruits} -gt 0 ]; do\n        local apples_count=$(expr\
    \ ${total_fruits} - 1)\n        local oranges_count=$(expr ${apples} - ${apples_count})\n\
    \        local mangos_count=$(expr ${oranges} - ${oranges_count})\n        local\
    \ apples_string=$(expr ${apples_count} * \"apples\")\n        local oranges_string=$(expr\
    \ ${oranges_count} * \"oranges\")\n        local mangos_string=$(expr ${mangos_count}\
    \ * \"mango\")\n        \n        if [[ ${apples_count} -eq ${apples}  && ${oranges_count}\
    \ -eq ${oranges}  && ${mangos_count} -eq 0 ]]; then\n            local mangos=$((${mangos}+${mangos_count}))\n\
    \            echo \"${mangos}\"\n            break;\n        else\n          \
    \  local apples_string=$(expr ${apples_count} * \"apples\")\n            local\
    \ oranges_string=$(expr ${oranges_count} * \"oranges\")\n            local mangos_string=$(expr\
    \ ${mangos_count} * \"mango\")\n            local total_fruits=$((${total_fruits}-${apples_count}-${oranges_count}-${mangos_count}))\n\
    \            echo \"${mangos}${apples_string}${oranges_string}\"\n        fi\n\
    \    done", "  local -r apples=\"$1\"\n  local -r oranges=\"$2\"\n  local -r total_fruits=\"\
    $3\"\n\n  local -r mango=\"$((total_fruits - $oranges))\"\n\n  printf \"%02d\"\
    \ \"$mango\"", "  local number_of_apples=\"$1\"\n  local number_of_oranges=\"\
    $2\"\n  local number_of_fruits=\"$3\"\n  local number_of_mango_apples=\"${number_of_apples}\
    \ * ${number_of_fruits}\"\n  local number_of_mango_oranges=\"${number_of_oranges}\
    \ * ${number_of_fruits}\"\n  local number_of_mango_fruits=\"${number_of_mango_apples}\
    \ + ${number_of_mango_oranges}\"\n  echo \"${number_of_mango_fruits}\"", "   \
    \ local total_apples=\"$1\"\n    local total_oranges=\"$2\"\n    local number_of_fruits=\"\
    $3\"\n    \n    local mango_oranges=\"0\"\n    \n    # remove any leading whitespace\n\
    \    total_apples=\"${total_apples:1}\"\n    total_oranges=\"${total_oranges:1}\"\
    \n    \n    # count how many apples, oranges, mango fruits\n    while (( $total_apples\
    \ != 0)); do\n        (( total_apples -= 1 ))\n        (( total_oranges -= 1 ))\n\
    \        if (( $number_of_fruits == 0 )); then\n            break\n        fi\n\
    \    done\n    \n    # calculate the mango fruits\n    local mango_oranges=\"\
    $(( $number_of_fruits - $total_oranges))\"\n    \n    echo \"$mango_oranges\"",
  "    local num_apples=\"$1\"\n    local num_oranges=\"$2\"\n    local num_fruits=$(echo\
    \ \"$num_oranges\" \"$num_apples\" | tr ' ' '+')\n    echo \"${num_fruits#+}\"\
    ;", "  local string=\"$1\"\n  local total=\"$2\"\n  local mango_fruits=0\n  #\
    \ iterate through the string and count the number of fruits\n  for (( i=0; i<${#string};\
    \ i++ )); do\n    local c=\"${string:$i:1}\"\n    if [[ \"$c\" == \"a\" || \"\
    $c\" == \"e\" || \"$c\" == \"i\" || \"$c\" == \"o\" || \"$c\" == \"u\" || \"$c\"\
    \ == \"y\" ]];then\n      ((mango_fruits++))\n    fi\n  done\n\n  # if the number\
    \ is less than total subtract 1 from the total\n  if (( total < mango_fruits ));\
    \ then\n    ((total-=mango_fruits))\n  fi\n  echo \"$mango_fruits\"", "    local\
    \ STRING=$1\n    local COUNTER=$2\n    local APPLE\n    local ORANGE\n    local\
    \ MANGO\n    local MANGOFROUNDS\n    local APPLES\n    local ORANGES\n    local\
    \ MANGOFRUITS\n    local MANGOFRUITSCOUNT\n    local MANGOFROUNDSCOUNT\n    local\
    \ MANGOFRUITSCOUNT2\n    local APPLESCOUNT\n    local ORANGESCOUNT\n    local\
    \ MANGOFRUITSCOUNT3\n    local APPLESCOUNT3\n    local ORANGESCOUNT3\n    local\
    \ MANGOFRUITSCOUNT4\n    local APPLESCOUNT4\n    local ORANGESCOUNT4\n    local\
    \ MANGOFRUITSCOUNT5\n    local APPLESCOUNT5\n    local ORANGESCOUNT5\n    local\
    \ MANGOFRUITSCOUNT6\n    local APPLESCOUNT6\n    local ORANGESCOUNT6\n\n    if\
    \ [[ \"${STRING}\" == *\"apples\"* ]]; then\n        APPLE=$((${STRING//apples/}+1))\n\
    \    fi\n    if [[ \"${STRING}\" == *\"oranges\"* ]]; then\n        ORANGE=$((${STRING//oranges/}+1))\n\
    \    fi\n    if [[ \"${STRING}\" == *\"mango\"* ]]; then\n        MANGO=$((${STRING//mango/}+1))\n\
    \    fi\n\n    APPLESCOUNT=$((${APPLE}+${MANGO}))\n    ORANGESCOUNT=$((${ORANGE}+${APPLE}))\n\
    \    MANGOFRUITSCOUNT=$((${MANGO}+${APPLE}))\n\n    MANGOFRUITSCOUNT2=$(expr $MANGOFRUITSCOUNT\
    \ \\* 2)\n    MANGOFRUITSCOUNT3=$(expr $MANGOFRUITSCOUNT + ${MANGOFRUITSCOUNT2})\n\
    \    MANGOFRUITSCOUNT4=$(expr $MANGOFRUITSCOUNT \\* 4)\n    MANGOFRUITSCOUNT5=$(expr\
    \ $MANGOFRUITSCOUNT + ${MANGOFRUITSCOUNT2})\n    MANGOFRUITSCOUNT6=$(expr $MANGOFRUITSCOUNT\
    \ \\* 6)\n\n    APPLESCOUNT3=$(expr $APPLESCOUNT \\* 2)\n    APPLESCOUNT4=$(expr\
    \ $APPLESCOUNT + ${APPLESCOUNT3})\n    APPLESCOUNT5=$(expr $", "    local n_apples=$1\n\
    \    local n_oranges=$2\n    local n_fruits=$((n_apples+n_oranges))\n    if [\
    \ $n_fruits-$n_oranges -gt 0 ]\n    then\n        echo $((n_fruits - $n_oranges))\n\
    \    else\n        echo 0\n    fi", "  local num_apples=\"${1}\"\n  local num_oranges=\"\
    ${2}\"\n  local num_basket=\"5\"\n  local max_basket=\"5\"\n  local mango=\"6\"\
    \n  local count=\"-1\"\n  local mango_fruits=\"\"\n\n  while test $num_basket\
    \ -lt \"$max_basket\" ;\n    do\n      if [[ \"$num_basket\" -eq 1 ]] ; then\n\
    \        ((num_basket++))\n      elif [[ \"$num_basket\" -eq 2 ]] ; then\n   \
    \     ((num_basket+=2))\n      elif [[ \"$num_basket\" -eq 3 ]] ; then\n     \
    \   ((num_basket+=3))\n      else\n        ((num_basket+=4))\n      fi\n    done\n\
    \n  for ((i = 0; i < $num_basket; i++)); do\n    if [[ \"$num_apples\" -ge 1 ]]\
    \ ; then\n      if [[ \"$num_apples\" -eq 1 ]] ; then\n        ((count++))\n \
    \     elif [[ \"$num_apples\" -eq 2 ]] ; then\n        ((count+=2))\n      elif\
    \ [[ \"$num_apples\" -eq 3 ]] ; then\n        ((count+=3))\n      elif [[ \"$num_apples\"\
    \ -eq 4 ]] ; then\n        ((count+=4))\n      else\n        ((count+=5))\n  \
    \    fi\n    fi\n    if [[ \"$num_oranges\" -ge 1 ]] ; then\n      if [[ \"$num_oranges\"\
    \ -eq 1 ]] ; then\n        ((count++))\n      elif [[ \"$num_oranges\" -eq 2 ]]\
    \ ; then\n        ((count+=2))\n      elif [[ \"$num_oranges\" -eq 3 ]] ; then\n\
    \        ((count+=3))\n      elif [[ \"$num_oranges\" -eq 4 ]] ; then\n      \
    \  ((count+=4))\n      else\n        ((count+=5))\n      fi\n    fi\n    if [[\
    \ \"$mango\" -ge 1 ]] ; then\n      if [[ \"$mango\" -eq 1 ]] ; then\n       \
    \ ((count++))\n      elif [[ \"$mango\" -eq 2 ]] ; then\n        ((count+=2))\n\
    \      elif [[ \"$mango\" -eq 3 ]] ; then\n        ((count+=3))\n      elif [[\
    \ \"$mango\" -eq 4 ]] ; then\n        ((count+=4))\n      else\n        ((count+=5))\n\
    \      fi\n    fi\n    if [[ \"$count\" -ge 1 ]] ; then\n      ((mango", "  local\
    \ a=\"$(echo $1 |sed -r 's/(^[0-9]+(\\s+apples|\\s+oranges)$)|(^[0-9]+(\\s+mango\\\
    s+fruits)$)/\\1/g')\"\n  local b=\"$(echo $2 |sed -r 's/(^[0-9]+(\\s+apples|\\\
    s+oranges)$)|(^[0-9]+(\\s+mango\\s+fruits)$)/\\1/g')\"\n  echo $((${#a} + ${#b}))",
  "    local apples=\"$1\"\n    local oranges=\"$2\"\n    local mangos=\"$(($apples+$oranges))\"\
    \n    local numberofmango=\"$(($mangos%2))\"\n    local mangostring=\"$mangos\"\
    \n    mangostring=\"$mangostring\" \n    mangostring=\"$mangostring\" \n    mangostring=\"\
    $mangostring\" \n    mangostring=\"$mangostring\" \n    mangostring=\"$mangostring\"\
    \ \n    mangostring=\"$mangostring\" \n    mangostring=\"$mangostring\" \n   \
    \ mangostring=\"$mangostring\" \n    mangostring=\"$mangostring\" \n    mangostring=\"\
    $mangostring\" \n    mangostring=\"$mangostring\" \n    mangostring=\"$mangostring\"\
    \ \n    mangostring=\"$mangostring\" \n    mangostring=\"$mangostring\" \n   \
    \ mangostring=\"$mangostring\" \n    mangostring=\"$mangostring\" \n    mangostring=\"\
    $mangostring\" \n    mangostring=\"$mangostring\" \n    mangostring=\"$mangostring\"\
    \ \n    mangostring=\"$mangostring\" \n    mangostring=\"$mangostring\" \n   \
    \ mangostring=\"$mangostring\" \n    mangostring=\"$mangostring\" \n    mangostring=\"\
    $mangostring\" \n    mangostring=\"$mangostring\" \n    mangostring=\"$mangostring\"\
    \ \n    mangostring=\"$mangostring\" \n    mangostring=\"$mangostring\" \n   \
    \ mangostring=\"$mangostring\" \n    mangostring=\"$mangostring\" \n    mangostring=\"\
    $mangostring\" \n    mangostring=\"$mangostring\" \n    mangostring=\"$mangostring\"\
    \ \n    mangostring=\"$mangostring\" \n    mangostring=\"$mangostring\" \n   \
    \ mangostring=\"$mangostring\" \n    mangostring=\"$mangostring\" \n    mangostring=\"\
    $mangostring\" \n    mangostring=\"$mangostring\" \n    mangostring=\"$mangostring\"\
    \ \n    mangostring=\"$mangostring\" \n    mangostring=\"$mangostring\" \n   \
    \ mangostring=\"$mangostring\" \n    mangostring=\"$mangostring\" \n    mangostring=\"\
    $mangostring\" \n    mangostring=\"$mangostring\" \n", "  local total_apples=\"\
    ${1}\"\n  local total_oranges=\"${2}\"\n  local total_fruits=\"${3}\"\n  local\
    \ total_mangoes=\"${total_apples}${total_oranges}\"\n  local mango_mangoes=0\n\
    \  local apples_count=0;\n  local oranges_count=0;\n\n  for ((i=0;i<${total_fruits}+${total_mangoes};i++))\n\
    \  do\n    if [[ \"${total_apples}\" != \"\" ]] && [[ \"${total_oranges}\" !=\
    \ \"\" ]] &&\n        [[ \"${total_apples}\" -eq \"${total_oranges}\" ]] &&\n\
    \        [[ \"${total_mangoes}\" -eq \"${total_fruits}\" ]]; then\n      if [[\
    \ \"${total_apples}\" -eq ${i} ]] || [[ \"${total_oranges}\" -eq ${i} ]]; then\n\
    \        if [[ \"${total_apples}\" -eq ${i} ]]; then\n          apples_count=${i}\n\
    \        fi\n        if [[ \"${total_oranges}\" -eq ${i} ]]; then\n          oranges_count=${i}\n\
    \        fi\n      fi\n    fi\n  done\n  if [[ \"${total_apples}\" -eq ${total_oranges}\
    \ ]]; then\n    mango_mangoes=\"${total_oranges}\"\n  fi\n  echo \"${mango_mangoes}\"",
  "    local i\n    local fruits=$1\n    local apples=$2\n    local oranges=$(echo\
    \ $apples | awk '{print $1}')\n    if [ $apples -eq 0 ] && [ $oranges -eq 0 ];\
    \ then\n        return 0\n    fi\n    \n    if [ $apples -eq $oranges ]; then\n\
    \        echo \"$apples\"\n        return 0\n    fi\n    \n    for ((i = 0; i\
    \ < oranges; i++)); do\n        local orange_count=$(echo $fruits | awk -F 'o'\
    \ '{print $1}')\n        if [ $i -eq 0 ]; then\n            local apple_count=$(echo\
    \ $fruits | awk '{print $2}')\n            local mango_count=$(echo $orange_count\
    \ | awk '{print $1}') - $(echo $apple_count | awk '{print $1}')\n            echo\
    \ \"$mango_count\"\n            return 0\n        fi\n        fruits=$(echo $fruits\
    \ | awk -F 'o' '{print $1}')\n        local apple_count=$(echo $fruits | awk '{print\
    \ $2}')\n        local orange_count=$(echo $fruits | awk -F 'o' '{print $1}')\n\
    \        local mango_count=$(echo $orange_count | awk '{print $1}') - $(echo $apple_count\
    \ | awk '{print $1}')\n        fruits=$(echo $fruits | awk -F 'o' '{print $1}')\n\
    \        apples=$(echo $apples | awk -F 'a' '{print $1}')\n        oranges=$(echo\
    \ $oranges | awk -F 'o' '{print $1}')\n        apples=$(echo $apples | awk -F\
    \ 'a' '{print $1}')\n        oranges=$(echo $oranges | awk -F 'a' '{print $1}')\n\
    \        if [ $mango_count -eq 0 ]; then\n            return 0\n        fi\n \
    \       echo \"$mango_count\"\n        return 0\n    done", "    apples=$1 \n\
    \    oranges=$2 \n    fruits=$3 \n    \n    declare -i num_fruits\n    num_fruits=$((oranges\
    \ + apples + fruits)) \n    \n    if [[ \"$num_fruits\" -gt \"1\" ]]; then\n \
    \       echo \"$num_fruits\" >&2\n    elif [[ \"$num_fruits\" -eq \"1\" ]]; then\n\
    \        echo \"1\"\n    elif [[ \"$num_fruits\" -ge \"0\" ]]; then\n        echo\
    \ \"0\"\n    else\n        echo \"$num_fruits\"\n    fi", "  local IFS=' '\n \
    \ local BASH_SOURCE=$1\n  local BASH_LINENO=$2\n  local BASH_SOURCE=$(readlink\
    \ -f \"$BASH_SOURCE\")\n  local BASH_LINENO=$(readlink -f \"$BASH_LINENO\")\n\
    \  local string=$1\n  local number=$2\n  local total=${#string}\n  local number_of_bananas=0\n\
    \  local number_of_apples\n  local number_of_oranges\n  local number_of_mangos\n\
    \  local number_of_fruits=0\n  local i\n  \n  while [ $i -lt $total ]; do\n  \
    \  case \"${string:$i:1}\" in\n      a) number_of_apples+=$((number_of_bananas+=1))\n\
    \          ;;\n      o) number_of_oranges+=$((number_of_bananas+=1))\n       \
    \   ;;\n      m) number_of_mangos+=$((number_of_bananas+=1))\n          ;;\n \
    \   esac\n  done\n  echo $number_of_mangos", "  # write code here\n  local apples=\"\
    $1\"\n  local oranges=\"$2\"\n  local mangos=$(echo \"$apples + $oranges-1\" |\
    \ bc)\n  echo \"$mangos\"", "    local apples=\"${1:-}\"\n    local oranges=\"\
    ${2:-}\"\n    local fruits=$(echo $apples $oranges | tr \" \" \"\\n\")\n    local\
    \ apples_count=$(echo $apples | wc -c)\n    local oranges_count=$(echo $oranges\
    \ | wc -c)\n    local mangos=$(echo \"$apples\" \"$oranges\" | awk -F \"and\"\
    \ '{print $1}' | sort | uniq -c | sort -nr | head -1)\n    echo \"$mangos\"",
  "    local string=$1\n    local number=$2\n    local apples=0\n    local oranges=0\n\
    \    local mangoes=0\n    local total=0\n    while [[ $string =~ ^[0-9]+\\ ([0-9]+)\\\
    \ (apples|oranges|mangoes)\\ (.*) ]]; do\n        local name=${BASH_REMATCH[3]}\n\
    \        total=$((${BASH_REMATCH[2]}+${total}))\n        local number=${BASH_REMATCH[1]}\n\
    \        local value=${BASH_REMATCH[2]}\n        if [[ ${name} == \"apples\" ]];\
    \ then\n            apples+=$value\n        elif [[ ${name} == \"oranges\" ]];\
    \ then\n            oranges+=$value\n        elif [[ ${name} == \"mangoes\" ]];\
    \ then\n            mangoes+=$value\n        fi\n    done\n    local percent=${mangoes}/${total}\n\
    \    local mangoes=$((${mangoes}/(100-${percent})))\n    if [[ $number -gt 100\
    \ ]]; then\n        echo 0\n    else\n        echo $mangoes\n    fi", "  local\
    \ apples=$1\n  local oranges=$2\n  local basket=$((apples + oranges))\n  local\
    \ mangos=$(echo \"$(basket / $3)\" | bc)\n  echo \"$mangos\"", "    local string=\"\
    $1\"\n    local total=\"$2\"\n    local apples=$(echo \"$string\" | cut -d\" \"\
    \ -f1)\n    local oranges=$(echo \"$string\" | cut -d\" \" -f2)\n    local mangos=$((oranges-apples))\n\
    \    echo \"$mangos\"", "    local number_of_apples=$1\n    local number_of_oranges=$2\n\
    \    local number_of_fruits=${number_of_oranges}+${number_of_apples}\n    local\
    \ number_of_mangoes=${number_of_fruits%?}\n    echo $number_of_mangoes", "   \
    \ # initialize variables\n    total=0\n    orange=0\n    apple=0\n    mango=0\n\
    \n    # get arguments\n    while [ $# -gt 0 ]; do\n        case $1 in\n      \
    \      -a )\n                apple=\"$2\"\n                shift\n           \
    \     ;;\n            -o )\n                orange=\"$2\"\n                shift\n\
    \                ;;\n            -m )\n                mango=\"$2\"\n        \
    \        shift\n                ;;\n            -* )\n                shift\n\
    \                ;;\n            * )\n                break\n                ;;\n\
    \        esac\n        shift\n    done\n\n    # get total number\n    total=${apple}+${orange}+${mango}\n\
    \    echo \"total: $total\"\n\n    # calculate mango number\n    mango=${orange}\n\
    \    echo \"mango: $mango\"\n\n    # return mango number\n    echo \"$mango\"",
  "  local input=\"$1\"\n  local num=\"$2\"\n  local num_fruits=$(expr $(echo \"$num\"\
    |tr '[a-z]' '[A-Z]')-2)\n  local num_apples=$(($(echo \"$input\" |grep -i apple)\
    \ -count 1))\n  local num_oranges=$(($(echo \"$input\" |grep -i orange) -count\
    \ 1))\n  local num_mangos=$(($(echo \"$input\" |grep -i mango) -count 1))\n  local\
    \ mango_fruits=$((num_fruits - num_mangos))\n  echo $mango_fruits", "  # Complete\
    \ the function body here\n  ", "    local -r apples=\"${1}\"\n    local -r oranges=\"\
    ${2}\"\n\n    local -r total=\"${oranges}${apples}\"\n\n    local -r apples_1=\"\
    (( ${apples} - 1 ))\"\n    local -r oranges_1=\"(( ${oranges} - 1 ))\"\n    local\
    \ -r mango=\"${total}\"\n\n    local -r mango_fruit=\"(( ${mango} - ${apples_1}\
    \ + ${oranges_1} ))\"\n\n    echo ${mango_fruit}", "    local string=$1\n    local\
    \ numOfApples=$2\n    local numOfOranges=0\n    local numOfMango=0\n    local\
    \ numOf\n    local intNumOf\n    local numOfOrange\n    local numOfApples\n  \
    \  local numOf\n    local i\n    local j\n    local numOfOrange\n    local numOfApples\n\
    \    local numOf\n\n    numOfOranges=$(echo \"$string\" | cut -d'o' -f1)\n   \
    \ numOfApples=$(echo \"$string\" | cut -d'a' -f1)\n    intNumOf=$(echo \"$string\"\
    \ | cut -d'a' -f2)\n    numOfOrange=$(echo \"$string\" | cut -d'o' -f2)\n    numOfApples=$(echo\
    \ \"$string\" | cut -d'a' -f3)\n    intNumOf=$(echo \"$string\" | cut -d'a' -f4)\n\
    \n    # numOfOranges=$(echo \"$string\" | cut -d'o' -f1)\n    # numOfApples=$(echo\
    \ \"$string\" | cut -d'a' -f1)\n    # numOfMango=$(echo \"$string\" | cut -d'm'\
    \ -f1)\n\n    for((i=0;i<=$numOfOranges;i++)); do\n        ((numOfOrange+=$numOfOrange))\n\
    \    done\n\n    for((i=0;i<=$numOfApples;i++)); do\n        ((numOfApples+=$numOfApples))\n\
    \    done\n\n    for((i=0;i<=$intNumOf;i++)); do\n        ((numOf+=i))\n    done\n\
    \n    for((i=0;i<=$numOfOrange;i++)); do\n        ((numOf+=i))\n    done\n\n \
    \   for((i=0;i<=$numOfApples;i++)); do\n        ((numOf+=i))\n    done\n\n   \
    \ echo \"$numOf\"", "  local Fruits=\"${1}\"\n  local Oranges=\"${2}\"\n  local\
    \ APPLES=\"apples\"\n  local ORANGES=\"oranges\"\n  local MANGO=\"mango\"\n  local\
    \ NUMBER=`expr ${Oranges} + ${APPLES}`\n  local MANGO_NUMBER=`expr ${MANGO} +\
    \ ${NUMBER}`\n  echo \"${MANGO_NUMBER}\"", "  local IFS=\" \"\n  local n_apple\
    \ n_orange n_mango\n  n_apple=$1\n  n_orange=$2\n  n_mango=$(echo $n_apple $n_orange|gawk\
    \ '{print $1 + $2}')\n  echo $n_mango", "  local str_apples=\"$1\"\n  local int_apples=\"\
    $2\"\n  local str_oranges=\"$3\"\n  local int_oranges=\"$4\"\n  local str_mango=\"\
    $5\"\n  local int_mango=\"$6\"\n  local int_fruits_in_basket=`python -c \"print\
    \ (\\\"$int_apples + $int_oranges + $int_mango\\\").split(' ')[0]\"`\n  local\
    \ int_mango_fruits=`python -c \"print \\\"$int_mango\\\" / $int_fruits_in_basket\"\
    `\n  echo \"$int_mango_fruits\"", "    local a=\"$1\"\n    local b=\"$2\"\n  \
    \  local c\n    # check input variables\n    if [ \"$a\" == \"0\" ] || [ \"$a\"\
    \ == \"1\" ] || [ \"$a\" == \"2\" ] || [ \"$a\" == \"3\" ] || [ \"$a\" == \"4\"\
    \ ] || [ \"$a\" == \"5\" ] || [ \"$a\" == \"6\" ] || [ \"$a\" == \"7\" ] || [\
    \ \"$a\" == \"8\" ] || [ \"$a\" == \"9\" ] || [ \"$a\" == \"10\" ] || [ \"$a\"\
    \ == \"11\" ] || [ \"$a\" == \"12\" ] || [ \"$a\" == \"13\" ] || [ \"$a\" == \"\
    14\" ] || [ \"$a\" == \"15\" ] || [ \"$a\" == \"16\" ] || [ \"$a\" == \"17\" ]\
    \ || [ \"$a\" == \"18\" ] || [ \"$a\" == \"19\" ] || [ \"$a\" == \"20\" ] || [\
    \ \"$a\" == \"21\" ] || [ \"$a\" == \"22\" ] || [ \"$a\" == \"23\" ] || [ \"$a\"\
    \ == \"24\" ] || [ \"$a\" == \"25\" ] || [ \"$a\" == \"26\" ] || [ \"$a\" == \"\
    27\" ] || [ \"$a\" == \"28\" ] || [ \"$a\" == \"29\" ] || [ \"$a\" == \"30\" ]\
    \ || [ \"$a\" == \"31\" ] || [ \"$a\" == \"32\" ] || [ \"$a\" == \"33\" ] || [\
    \ \"$a\" == \"34\" ] || [ \"$a\" == \"35\" ] || [ \"$a\" == \"36\" ] || [ \"$a\"\
    \ == \"37\" ] || [ \"$a\" == \"38\" ] || [ \"$a\" == \"39\" ] || [ \"$a\" == \"\
    40\" ] || [ \"$a\" == \"41\" ] || [ \"$a\" == \"42\" ] || [ \"$a\" == \"43\" ]\
    \ || [ \"$a\" == \"44\" ] || [ \"$a\" == \"45\" ] || [ \"$a\" == \"46\" ] || [\
    \ \"$a\" == \"47\" ] || [ \"$a\" == \"48\" ] || [ \"$a\" == \"49\" ] || [ \"$a\"\
    \ == \"50\" ] || [ \"$a\" == \"51\" ] || [ \"$a\" == \"52\" ] || [ \"$a\" == \"\
    53\" ] || [ \"$a\" == \"54\" ] || [ \"$a\" == \"55\" ] || [ \"$a\" == \"56\" ]\
    \ || [ \"$a\" == \"57\" ] || [ \"$a\" == \"58\" ] || [ \"$a\" == \"59\" ] || [\
    \ \"$a\" == \"60\" ] || [ \"$a\" == \"61\" ] || [ \"$a\" == \"62\" ] || [ \"$a\"\
    \ == \"63\" ] || [ \"$a\" == \"64\" ] || [ \"$a\" == \"65\" ] || [ \"$a\" == \"\
    66\" ] || [ \"$a\" == \"67\" ] || [ \"$a\" == \"68\" ] || [ \"$a\" == \"69\" ]\
    \ || [ \"$a\" ", "  local str=\"$1\"\n  local count=\"$2\"\n  # get the number\
    \ of \"apple\"\n  local numA=\"$(sed 's/[^ ]*apple\\([0-9]\\)[^ ]*/\\1/' <<< \"\
    $str\")\"\n  # get the number of \"orange\"\n  local numO=\"$(sed 's/[^ ]*orange\\\
    ([0-9]\\)[^ ]*/\\1/' <<< \"$str\")\"\n  # get the number of \"mango\"\n  local\
    \ numM=\"$(sed 's/[^ ]*mango\\([0-9]\\)[^ ]*/\\1/' <<< \"$str\")\"\n  # get the\
    \ number of \"apple\"\n  local numF=\"$(sed 's/[^ ]*apple\\([0-9]\\)[^ ]*/\\1/'\
    \ <<< \"$str\")\"\n  # get the number of \"orange\"\n  local numF=\"$(sed 's/[^\
    \ ]*orange\\([0-9]\\)[^ ]*/\\1/' <<< \"$str\")\"\n  # count the number of \"mango\"\
    \n  local numM=\"$(sed 's/[^ ]*mango\\([0-9]\\)[^ ]*/\\1/' <<< \"$str\")\"\n\n\
    \  # the total number of \"apple\"\n  local apple=\"$(echo \"$apples\")\"\n  #\
    \ the total number of \"orange\"\n  local orange=\"$(echo \"$oranges\")\"\n  #\
    \ the total number of \"mango\"\n  local mango=\"$(echo \"$mangos\")\"\n  # get\
    \ the total number of \"apple\"\n  local apple=\"$(echo \"$apples\")\"\n  # get\
    \ the total number of \"orange\"\n  local orange=\"$(echo \"$oranges\")\"\n  #\
    \ get the total number of \"mango\"\n  local mango=\"$(echo \"$mangos\")\"\n \
    \ # get the total number of \"apple\"\n  local apple=\"$(echo \"$apples\")\"\n\
    \  # get the total number of \"orange\"\n  local orange=\"$(echo \"$oranges\"\
    )\"\n  # get the total number of \"mango\"\n  local mango=\"$(echo \"$mangos\"\
    )\"\n  # count the number of \"mango\"\n  local numM=\"$(echo \"$mango\")\"\n\
    \  # count the number of \"mango\"\n  local numM=\"$(echo \"$mango\")\"\n  # count\
    \ the number of \"mango\"\n  local numM=\"$(echo \"$mango\")\"\n\n  # return the\
    \ number of \"mango\"\n  echo \"$numM\"", "  local a=${1//[!0-9]}\n  local b=${2//[!0-9]}\n\
    \  local c=${3//[!0-9]}\n  local total=`expr $a + $b + $c`\n  echo $(($total -\
    \ $c))", "  local var1=$1\n  local var2=$2\n  local var3=$(( $2 ))\n  local var4=$((\
    \ $var3 - 1 ))\n  local var5=$(( $2 ))\n  local var6=$(( $var2 ))\n  local var7=$((\
    \ $var2 * 2 ))\n  local var8=$(( $var2 ))\n  local var9=$(( $var2 * 3 ))\n  local\
    \ var10=$(( $var2 + 1 ))\n  local var11=$(( $var2 * 2 ))\n  local var12=$(( $var2\
    \ * 3 ))\n  local var13=$(( $var2 * 4 ))\n  local var14=$(( $var2 * 5 ))\n  local\
    \ var15=$(( $var2 * 6 ))\n  local var16=$(( $var2 * 7 ))\n  local var17=$(( $var2\
    \ * 8 ))\n  local var18=$(( $var2 * 9 ))\n  local var19=$(( $var2 * 10 ))\n  local\
    \ var20=$(( $var2 * 11 ))\n  local var21=$(( $var2 * 12 ))\n  local var22=$((\
    \ $var2 * 13 ))\n  local var23=$(( $var2 * 14 ))\n  local var24=$(( $var2 * 15\
    \ ))\n  local var25=$(( $var2 * 16 ))\n  local var26=$(( $var2 * 17 ))\n  local\
    \ var27=$(( $var2 * 18 ))\n  local var28=$(( $var2 * 19 ))\n  local var29=$((\
    \ $var2 * 20 ))\n  local var30=$(( $var2 * 21 ))\n  local var31=$(( $var2 * 22\
    \ ))\n  local var32=$(( $var2 * 23 ))\n  local var33=$(( $var2 * 24 ))\n  local\
    \ var34=$(( $var2 * 25 ))\n  local var35=$(( $var2 * 26 ))\n  local var36=$((\
    \ $var2 * 27 ))\n  local var37=$(( $var2 * 28 ))\n  local var38=$(( $var2 * 29\
    \ ))\n  local var39=$(( $var2 * 30 ))\n  local var40=$(( $var2 * 31 ))\n  local\
    \ var41=$(( $var2 * 32 ))\n  local var42=$(( $var2 * 33 ))\n  local var43=$((\
    \ $var2 * 34 ))\n  local var44=$(( $var2 * 35 ))", "    local number_of_apples=$1\n\
    \    local number_of_oranges=$2\n    local number_of_fruits=0\n    local number_of_mangoes=0\n\
    \    while [[ $number_of_apples -gt 0 && $number_of_oranges -gt 0 && $number_of_fruits\
    \ -lt $number_of_apples + $number_of_oranges ]]\n    do\n        number_of_fruits=$((number_of_fruits+1))\n\
    \        if [[ \"$number_of_apples\" -gt \"$number_of_oranges\" ]]\n        then\n\
    \            number_of_apples=$((number_of_apples-$number_of_oranges))\n     \
    \       number_of_oranges=0\n        else\n            number_of_oranges=$((number_of_oranges-$number_of_apples))\n\
    \            number_of_apples=0\n        fi\n    done\n    while [[ $number_of_oranges\
    \ -gt 0 ]]\n    do\n        number_of_mangoes=$((number_of_mangoes+1))\n     \
    \   number_of_oranges=$((number_of_oranges-1))\n    done\n    echo \"$number_of_mangoes\"",
  "\ttotal_fruit=$1\n\ttotal_apples=$2\n\ttotal_oranges=$(($total_fruit - $total_apples))\n\
    \tapples=$(echo $total_apples | cut -d ' ' -f1)\n\toranges=$(echo $total_oranges\
    \ | cut -d ' ' -f1)\n\tmango=$(($total_fruit - $apples - $oranges))\n\techo \"\
    $mango\"", "    local APPLES=\"$1\"\n    local ORANGES=\"$2\"\n    local FRUITS=`expr\
    \ $APPLES + $ORANGES - \\\n            $((2 * $APPLES + $ORANGES))`\n    local\
    \ FRUITS_IN_ORANGES=$((2 * $APPLES + $ORANGES))\n    local FRUITS_IN_MANGO=$((2\
    \ * $APPLES))\n    local FRUITS_IN_APPLES=$((2 * $ORANGES))\n    \n    echo $FRUITS",
  "  local apples=\"$1\"\n  local oranges=\"$2\"\n  local total=\"$3\"\n  local mango=0\n\
    \  local count=0\n  local count1=0\n\n  echo $apples | grep \"^[0-9]\" > /dev/null\
    \ 2>&1\n  if [ $? = 0 ] ; then\n     mango=$(( apples / total ))\n     echo $mango\
    \ | bc\n  fi", "    local apples oranges mangoes $(( ${2:-0} - ${1:-0} )) remainder\
    \ \n    (( ${2:-0} > ${1:-0} )) && { printf \"error: invalid input\\n\"; exit\
    \ 99; }\n    local count=0\n    local total=0\n    while [ \"$apples\" -lt \"\
    $oranges\" ]; do\n        total=$(( ${total:-0} + 1 ))\n        remainder=$((\
    \ ${apples:-0} + ${oranges:-0} ))\n        apples=$(( $remainder ))\n        oranges=$((\
    \ ${remainder:-0} - 1 ))\n        count=$(( $count + 1 ))\n    done\n    apples=$((\
    \ ${apples:-0} + 1 ))\n    oranges=$(( ${oranges:-0} + 1 ))\n    mangoes=$(( $apples\
    \ - $oranges ))\n    echo ${mangoes:-0}", "  local total_apples=$1 # total apples\
    \ in the basket\n  local total_oranges=$2 # total oranges in the basket\n  local\
    \ total=$((total_apples + total_oranges))\n  local mangos=$((total - $2))\n  echo\
    \ $mangos", "  local total_oranges=\"$1\"\n  local total_apples=\"$2\"\n\n  local\
    \ orange_count=$(echo \"$total_oranges\" | cut -f1 -d\" \")\n  local apple_count=$(echo\
    \ \"$total_apples\" | cut -f1 -d\" \")\n\n  local orange_mango=$(echo \"$total_oranges\"\
    \ | cut -f2 -d\" \")\n  local apple_mango=$(echo \"$total_apples\" | cut -f2 -d\"\
    \ \")\n\n  echo \"$((total_oranges - $orange_mango))\"", "    local num=\"$1\"\
    \n    local fruit=\"$2\"\n    local count=0\n\n    fruit=$(echo $fruit | sed 's/\
    \ /+/g')\n    for (( i=1; i<${fruit//+/ }; i++)); do\n        if [[ ${fruit:$i:1}\
    \ == 'm' || ${fruit:$i:1} == 'M' ]]; then\n            (( count += i ))\n    \
    \    fi\n    done\n    echo $count", "  # initialize variables\n  local apples=\"\
    $1\"\n  local oranges=\"$2\"\n\n  # validate inputs\n  if [ ! \"$apples\" ] ||\
    \ [ ! \"$oranges\" ]; then\n    echo \"invalid inputs. apples and oranges must\
    \ be a valid string\"\n    exit 1\n  fi\n\n  if [ ! \"$oranges\" -gt \"$apples\"\
    \ ]; then\n    echo \"invalid inputs. oranges must be greater than apples\"\n\
    \    exit 1\n  fi\n\n  # count the number of oranges in the basket\n  oranges=\"\
    $(echo \"$oranges\" | awk '{print $1}')\"\n\n  # count the number of apples\n\
    \  apples=\"$(echo \"$apples\" | awk '{print $1}')\"\n\n  # count the number of\
    \ mango fruits\n  mango=\"$(echo \"$apples\" - \"$oranges\")\"\n\n  echo \"$mango\"",
  "  local numberofapples=$1\n  local numberoforanges=$2\n  local count=0\n  local\
    \ maxcount=0\n  local numcount=0\n  local fruitcount=0\n\n  while read line; do\n\
    \    if [ \"$line\" == \"apples\" ]; then\n      count=$((count+1))\n    elif\
    \ [ \"$line\" == \"oranges\" ]; then\n      count=$((count+1))\n    elif [ \"\
    $line\" == \"mango\" ]; then\n      count=$((count+1))\n    fi\n    if [ \"$count\"\
    \ == \"$numberoforanges\" ]; then\n      maxcount=$((maxcount+1))\n    fi\n  \
    \  if [ \"$count\" == \"$numberofapples\" ]; then\n      numcount=$((numcount+1))\n\
    \    fi\n    if [ \"$count\" == \"0\" ]; then\n      fruitcount=$((fruitcount+1))\n\
    \    fi\n  done < \"$1\"\n  echo \"$maxcount\"", "    local num_apples=$1\n  \
    \  local num_oranges=$2\n    local num_breads=$((num_apples + num_oranges))\n\
    \    local num_mango=$((num_breads - num_oranges - num_apples))\n    if [ $num_apples\
    \ -gt $num_oranges ]; then\n        echo $num_mango\n    elif [ $num_oranges -gt\
    \ $num_apples ]; then\n        echo $num_mango\n    else\n        echo $num_mango\n\
    \    fi", "  local num_apples=\"$1\"\n  local num_oranges=\"$2\"\n  local num_fruits=\"\
    $3\"\n\n  # Your code here...\n\n  echo $num_fruits", "  local apple_count=${1:-0}\n\
    \  local orange_count=${2:-0}\n  local mango=0\n  local mangos=0\n  local mango_fruit_amount=0\n\
    \  local apple_count2=0\n  local orange_count2=0\n  local apple_str=$1\n  local\
    \ orange_str=$2\n  local mango_fruit_amount2=0\n  local mango_str=\"\"\n  local\
    \ mango_fruit_amount3=0\n  local apple_count3=0\n  local orange_count3=0\n  local\
    \ apple_str3=$1\n  local orange_str3=$2\n  local mango_fruit_amount4=0\n  local\
    \ mango_str3=\"\"\n  local mango_fruit_amount5=0\n  local apple_count4=0\n  local\
    \ orange_count5=0\n  local apple_str4=$1\n  local orange_str4=$2\n  local mango_fruit_amount6=0\n\
    \  local mango_str4=\"\"\n  local mango_fruit_amount7=0\n  local apple_count5=0\n\
    \  local orange_count6=0\n  local apple_str5=$1\n  local orange_str5=$2\n  local\
    \ mango_fruit_amount8=0\n  local mango_str5=\"\"\n  local mango_fruit_amount9=0\n\
    \  local apple_count6=0\n  local orange_count7=0\n  local apple_str6=$1\n  local\
    \ orange_str6=$2\n  local mango_fruit_amount10=0\n  local mango_str6=\"\"\n  local\
    \ mango_fruit_amount11=0\n  local apple_count7=0\n  local orange_count8=0\n  local\
    \ apple_str7=$1\n  local orange_str7=$2\n  local mango_fruit_amount12=0\n  local\
    \ mango_str7=\"\"\n  local mango_fruit_amount13=0\n  local apple_count8=0\n  local\
    \ orange_count9=0\n  local apple_str8=$1\n  local orange_str8=$2\n  local mango_fruit_amount14=0\n\
    \  local mango_str8=\"\"\n  local mango_fruit_amount15=0\n  local apple_count9=0\n\
    \  local orange_count10=0\n  local apple_str9=$1\n  local orange_str9=$2", " \
    \   echo \"$1\" | awk -F\" apples and \" -v oranges=\"$2\" '{sum+=oranges; count++}\
    \ END {print count}'", "    local string=$1\n    local number=$2\n    local count=0\n\
    \n    while [[ $string =~ (apple|mango|orange)\\s* ]]\n    do\n        (( count++\
    \ ))\n        string=${BASH_REMATCH[1]}\n    done\n\n    echo $((count - number))",
  "  # split string by space or comma\n  local apples=\"${1:-}\"\n  local oranges=\"\
    ${2:-}\"\n  # remove spaces and brackets\n  apples=\"${apples:-}\";\n  oranges=\"\
    ${oranges:-}\";\n  # initialize a counter\n  local num=\"-1\"\n  local apple_count=\"\
    -1\"\n  local orange_count=\"-1\"\n  local mango_count=\"-1\"\n  # split string\
    \ by space or comma\n  local fruits=( ${apples:,} )\n  apple_count=${#fruits[@]}\n\
    \  fruits=( ${oranges:,} )\n  orange_count=${#fruits[@]}\n  # count the mango\
    \ fruits\n  for i in $(seq ${apple_count} ${orange_count} ); do\n    case \"${fruits[i]}\"\
    \ in\n      \"mango\") \n        mango_count=$(( ${mango_count} + 1 ))\n     \
    \   break\n        ;;\n    esac\n  done\n  # return the mango count\n  echo \"\
    ${mango_count}\"", "    local apples=\"$1\"\n    local oranges=\"$2\"\n    local\
    \ fruits=$((apples + oranges))\n    local mango=$((apples + oranges + fruits))\n\
    \    echo $mango", "  local fruits\n  fruits=\"$1\"\n  apples=\"${fruits:1:-1}\"\
    \n  oranges=\"${fruits:0:-1}\"\n\n  mango_count=$(( $apples  + $oranges -  ( $apples\
    \  + $oranges * ( $apples  / $oranges ) ) ))\n  echo \"$mango_count\"", "    local\
    \ apples=\"${1}\"\n    local oranges=\"${2}\"\n    local apples_count=${apples/[[:space:]]/}\n\
    \    local oranges_count=${oranges/[[:space:]]/}\n    local mangos=$(echo \"$oranges_count+$apples_count\"\
    \ | bc)\n    echo \"$mangos\"", "  local var1=$1 var2=$2 count=$3\n  while [ \"\
    $var1\" != \"\" ]; do\n    if [ \"$var2\" -gt \"$count\" ]; then\n      count=$var2\n\
    \    fi\n    var1=$(echo $var1 | awk -F\"and\" '{print $1}')\n    var2=$(echo\
    \ $var2 | awk -F\"and\" '{print $1}')\n  done\n  echo $count", "    local numberoffruits=$1\n\
    \    local numberofapples=$2\n    local apples=\"0\"\n    local oranges=\"0\"\n\
    \    local mango=\"0\"\n    local totalfruits=$((numberofapples+numberoforanges+mango))\n\
    \    while [ \"$apples\" -lt \"$numberofapples\" ] || [ \"$oranges\" -lt \"$numberoforanges\"\
    \ ] || [ \"$mango\" -lt \"$mango\" ]; do\n        case \"$apples\" in\n      \
    \      *) ((apples++)) ;;\n        esac\n        case \"$oranges\" in\n      \
    \      *) ((oranges++)) ;;\n        esac\n        case \"$mango\" in\n       \
    \     *) ((mango++)) ;;\n        esac\n    done\n    ((mango))\n    ((totalfruits))",
  "  local apples oranges mango\n  apples=$(echo $1 | cut -d '-' -f 1)\n  oranges=$(echo\
    \ $1 | cut -d '-' -f 2)\n  mango=$((${#1} - ${#mango}))\n  echo \"${apples}${oranges}${mango}\"",
  "    local num_apples=\"${1}\"\n    local num_oranges=\"${2}\"\n    local apples=\"\
    ${num_apples/apple/}\" # $1 is a string so we need this to remove apple\n    local\
    \ oranges=\"${num_oranges/orange/}\" # $2 is a string so we need to remove orange\n\
    \    local mangos=\"${apples}${oranges}\"\n    local total=\"$(echo $mangos |\
    \ wc -l)\"\n    local mango_fruits=$(echo \"$mangos\" | bc)\n    echo $mango_fruits",
  "  local fruits\n  local total\n  local result\n  local number_of_fruits\n  local\
    \ i\n  \n  # read in a string\n  read -r fruits \n  \n  # split into a list\n\
    \  IFS=' ' read -ra fruits <<< \"$fruits\"\n\n  # calculate total of numbers\n\
    \  total=0\n  for ((i=0; i<${#fruits[@]}; i++)); do\n    total=$((${fruits[i]}+total))\n\
    \  done\n\n  # if total=0\n  if [ \"${total}\" -eq \"0\" ]; then\n    # return\
    \ 0\n    result=0\n  else\n    # return number of fruits with $2 apples and $2\
    \ oranges\n    result=$((${fruits[0]}+${fruits[1]}+${total}-2))\n  fi\n  \n  echo\
    \ \"${result}\"", "    local apples=\"$1\"\n    local oranges=\"$2\"\n\n    if\
    \ [ \"$apples\" -gt \"$oranges\" ] ; then\n        echo 1\n    elif [ \"$apples\"\
    \ -eq \"$oranges\" ] ; then\n        echo 0\n    elif [ \"$oranges\" -gt \"$apples\"\
    \ ] ; then\n        echo 0\n    elif [ \"$oranges\" -eq \"$apples\" ] ; then\n\
    \        echo 1\n    else\n        echo \"Wrong input! apples and oranges values\
    \ should be different\"\n        exit 1\n    fi", "    local number_of_apples=$1\n\
    \    local number_of_oranges=$2\n    local number_of_fruits=$((number_of_apples\
    \ + number_of_oranges))\n    if [ $number_of_fruits -eq 0 ]\n    then\n      \
    \  echo \"0\"\n    elif [ $number_of_fruits -eq 1 ]\n    then\n        echo \"\
    1\"\n    elif [ $number_of_fruits -eq 2 ]\n    then\n        echo \"2\"\n    elif\
    \ [ $number_of_fruits -eq 3 ]\n    then\n        echo \"3\"\n    elif [ $number_of_fruits\
    \ -eq 4 ]\n    then\n        echo \"4\"\n    elif [ $number_of_fruits -eq 5 ]\n\
    \    then\n        echo \"5\"\n    elif [ $number_of_fruits -eq 6 ]\n    then\n\
    \        echo \"6\"\n    elif [ $number_of_fruits -eq 7 ]\n    then\n        echo\
    \ \"7\"\n    elif [ $number_of_fruits -eq 8 ]\n    then\n        echo \"8\"\n\
    \    elif [ $number_of_fruits -eq 9 ]\n    then\n        echo \"9\"\n    elif\
    \ [ $number_of_fruits -eq 10 ]\n    then\n        echo \"10\"\n    elif [ $number_of_fruits\
    \ -eq 11 ]\n    then\n        echo \"11\"\n    elif [ $number_of_fruits -eq 12\
    \ ]\n    then\n        echo \"12\"\n    elif [ $number_of_fruits -eq 13 ]\n  \
    \  then\n        echo \"13\"\n    elif [ $number_of_fruits -eq 14 ]\n    then\n\
    \        echo \"14\"\n    elif [ $number_of_fruits -eq 15 ]\n    then\n      \
    \  echo \"15\"\n    elif [ $number_of_fruits -eq 16 ]\n    then\n        echo\
    \ \"16\"\n    elif [ $number_of_fruits -eq 17 ]\n    then\n        echo \"17\"\
    \n    elif [ $number_of_fruits -eq 18 ]\n    then\n        echo \"18\"\n    elif\
    \ [ $number_of_fruits -eq 19 ]\n    then\n        echo \"19\"\n    elif [ $number_of_fruits\
    \ -eq 20 ]\n    then\n        echo \"20\"\n    elif [ $number_of_fruits -eq 21\
    \ ]\n    then\n        echo \"21\"\n    elif [ $number_of_fruits -eq 22 ]\n  \
    \  then\n        echo \"22\"\n    elif [ $number_of_fruits -eq 23 ]\n    then\n\
    \        echo \"23\"\n    elif [ $number_of_fruits -eq 24 ]\n    then\n      \
    \  echo \"24\"\n    elif [ $number_of_fruits -eq 25 ]\n    then\n        ", " \
    \ local i\n  local j\n  local total\n  local count\n  local temp\n  local fruits\n\
    \  total=$2\n  count=1\n  fruits=$1\n  while [ $total -gt 0 ]; do\n    temp=$(echo\
    \ $fruits | awk '{print $2}')\n    ((total-=temp))\n    count=$((count+1))\n \
    \ done\n  \n  echo $((count-1))", "    local count=$1\n    local total=$2\n  \
    \  if [[ $total == \"\" ]]; then\n        echo \"Please input a correct number\"\
    \n        return 1\n    elif [[ $count =~ \"^[0-9]+$\" ]]; then\n        echo\
    \ \"The number of apples and oranges is invalid\"\n        return 1\n    elif\
    \ [[ $total -lt 1 ]]; then\n        echo \"The total number of apples and oranges\
    \ is invalid\"\n        return 1\n    elif [[ $total -gt 100 ]]; then\n      \
    \  echo \"The total number of apples and oranges is invalid\"\n        return\
    \ 1\n    elif [[ $total -gt 100 ]]; then\n        echo \"The number of apples\
    \ and oranges is invalid\"\n        return 1\n    elif [[ $count =~ \"^[0-9]+$\"\
    \ ]]; then\n        echo \"The number of apples and oranges is invalid\"\n   \
    \     return 1\n    elif [[ $total -lt 1 ]]; then\n        echo \"The total number\
    \ of apples and oranges is invalid\"\n        return 1\n    fi\n    local mango=$(echo\
    \ \"scale=2; $total*$count/100\" | bc)\n    echo \"$mango\"", "    local total=\"\
    $1\"\n    local apples=\"$2\"\n    local oranges=\"$apples\"\n    local mangos=$(echo\
    \ $total | awk '{print $1 - $2}')\n    echo \"$mangos\"", "    local total_apples=\"\
    $1\"\n    local total_oranges=\"$2\"\n    local total_fruits=\"$3\"\n\n    local\
    \ apples=\"$total_apples\"\n    local oranges=\"$total_oranges\"\n\n    local\
    \ mango_fruits=$(( total_fruits - (apples+oranges) ))\n\n    echo \"$mango_fruits\"",
  "  local apples_and_oranges=$1\n  local number_of_fruits=$2\n  local result=0\n\
    \  local number_of_fruits_in_basket=$(echo $apples_and_oranges | awk '{print $1}')\n\
    \  local number_of_oranges_in_basket=$(echo $apples_and_oranges | awk '{print\
    \ $2}')\n  if (( number_of_fruits == 0 )); then\n    echo \"$number_of_fruits_in_basket\"\
    \n  else\n    local number_of_mangos_in_basket=0\n    while (( number_of_oranges_in_basket\
    \ > 0 )); do\n      number_of_oranges_in_basket=$(($number_of_oranges_in_basket\
    \ - 1))\n      ((number_of_mangos_in_basket = number_of_mangos_in_basket + 1))\n\
    \    done\n  fi", "    local num=$1\n    local fruits=$2\n    local numOfOranges=0\n\
    \    local numOfApples=0\n    local numOfMangos=0\n    local orangeCount=0\n \
    \   local appleCount=0\n    local mangoCount=0\n    local totalOranges=0\n   \
    \ local totalApples=0\n    local totalMangos=0\n    local currNumOfMangos=0\n\
    \    local totalNumOfFruits=0\n    local numberOfMangoFruits=0\n    local totalFruits=0\n\
    \n    while [[ ${fruits} == *apple* ]] || [[ ${fruits} == *mango* ]] || [[ ${fruits}\
    \ == *orange* ]]\n    do\n        if [[ ${fruits} == *apple* ]]\n        then\n\
    \            appleCount=$((appleCount+1))\n        elif [[ ${fruits} == *orange*\
    \ ]]\n        then\n            orangeCount=$((orangeCount+1))\n        fi\n \
    \       fruits=$(fruit $fruits)\n    done\n\n    totalNumOfFruits=$((orangeCount+appleCount))\n\
    \    totalFruits=$((totalNumOfFruits + num))\n    numberOfMangoFruits=$((totalNumOfFruits\
    \ - num))\n\n    while [[ ${numberOfMangoFruits} == 0 ]]\n    do\n        orangeCount=$((orangeCount+1))\n\
    \        fruits=$(fruit $fruits)\n        totalNumOfFruits=$((orangeCount+appleCount))\n\
    \        numberOfMangoFruits=$((totalNumOfFruits - num))\n    done\n\n    while\
    \ [[ ${numberOfMangoFruits} == 1 ]]\n    do\n        orangeCount=$((orangeCount+1))\n\
    \        fruits=$(fruit $fruits)\n        totalNumOfFruits=$((orangeCount+appleCount))\n\
    \        numberOfMangoFruits=$((totalNumOfFruits - num))\n    done\n\n    while\
    \ [[ ${numberOfMangoFruits} == 2 ]]\n    do\n        orangeCount=$((orangeCount+1))\n\
    \        fruits=$(fruit $fruits)\n        totalNumOfFruits=$((orangeCount+appleCount))\n\
    \        numberOfMangoFruits=$((total", "  local NUMBER=$1\n  local FRUIT_COUNT=$2\n\
    \n  local FRUIT_LIST=\"apples oranges mango\"\n  local FRUIT_COUNT=`echo $FRUIT_COUNT\
    \ | sed 's/ \\+/ /g'`\n\n  local FRUIT_INDEX=-1\n  local FRUIT_COUNT=`echo $FRUIT_COUNT\
    \ | sed 's/^[^0-9]*\\([0-9]*\\) .*/\\1/g'`\n  local FRUIT_COUNT=`echo $FRUIT_COUNT\
    \ | sed 's/^[^0-9]*\\([0-9]*\\)$/\\1/g'`\n\n  while [ $FRUIT_INDEX -lt ${#FRUIT_LIST[@]}\
    \ ]\n  do\n    FRUIT_INDEX=`echo $FRUIT_INDEX+1 | bc`\n    local COUNT=`echo $FRUIT_COUNT\
    \ | awk '{print $1*$2}'`\n    local FRUIT=${FRUIT_LIST[$FRUIT_INDEX]}\n    local\
    \ COUNT_OF_FRUITS=`echo $COUNT | awk '{print $1*$2}'`\n\n    if [ $FRUIT_INDEX\
    \ -eq 0 ] && [ $COUNT_OF_FRUITS -gt $FRUIT_COUNT ]; then\n      echo $FRUIT_COUNT\n\
    \      break\n    fi\n  done", "    local apples_oranges number_of_fruits\n\n\
    \    apples_oranges=\"${1}\"\n    number_of_fruits=\"${2}\"\n    \n    local fruits\n\
    \    local number_of_fruits\n    local apples_oranges\n    local apples_and_oranges\n\
    \    local number_of_apples\n    local number_of_oranges\n    local number_of_fruits\n\
    \    \n    apples_and_oranges=$(echo \"$apples_oranges\" | sed 's/ apples and\
    \ /\\napples \\nand /g' | sed 's/ oranges and /\\noranges \\nand /g' | sed 's/\
    \ apples and /\\napples \\nand /g' | sed 's/ oranges and /\\noranges \\nand /g')\n\
    \    number_of_apples=$(echo \"$apples_and_oranges\" | sed 's/ apples/ /g' | sed\
    \ 's/ oranges/ /g' | sed 's/ apples/ /g' | sed 's/ oranges/ /g' | wc -l)\n   \
    \ number_of_oranges=$(echo \"$apples_and_oranges\" | sed 's/ oranges/ /g' | sed\
    \ 's/ apples/ /g' | sed 's/ oranges/ /g' | wc -l)\n    number_of_fruits=$(echo\
    \ \"$apples_and_oranges\" | wc -l)\n    \n    fruits=$(cat <<EOF\napples apples\
    \ apples apples apples apples apples apples \napples apples apples apples apples\
    \ apples apples apples \napples apples apples apples apples apples apples apples\
    \ \napples apples apples apples apples apples apples apples \napples apples apples\
    \ apples apples apples apples apples \napples apples apples apples apples apples\
    \ apples apples \napples apples apples apples apples apples apples apples \napples\
    \ apples apples apples apples apples apples apples \napples apples apples apples\
    \ apples apples apples apples \napples apples apples apples apples apples apples\
    \ apples \napples apples apples apples apples apples apples apples \napples apples\
    \ apples apples apples apples apples apples \napples apples apples apples apples\
    \ apples apples apples \napples apples apples apples apples apples apples apples\
    \ \napples apples apple", "    local -n apples=\"$1\"\n    local -n oranges=\"\
    $2\"\n    local -n fruits=$(echo \"${apples}${oranges}\" | grep -o '[0-9]*')\n\
    \    local -n fruits_in_basket=${#fruits}\n    local -n mangos=$(echo $((fruits_in_basket-1)*2))\n\
    \    echo ${mangos}", "    local string=\"$1\"\n    local number=\"$2\"\n    local\
    \ count\n    local apples_count oranges_count\n    local mango_count\n    \n \
    \   apples_count=$(echo $string | awk '{print $1}')\n    oranges_count=$(echo\
    \ $string | awk '{print $2}')\n    \n    while [ \"$apples_count\" -le \"$number\"\
    \ ];do\n        count=$(echo $apples_count | awk '{print $1}')\n        ((apples_count=apples_count+count))\n\
    \    done\n    \n    while [ \"$oranges_count\" -le \"$number\" ];do\n       \
    \ count=$(echo $oranges_count | awk '{print $1}')\n        ((oranges_count=oranges_count+count))\n\
    \    done\n    \n    mango_count=$(echo $apples_count + $oranges_count | awk '{print\
    \ $1}')\n    \n    return $mango_count", "    local apples=\"$1\"\n    local oranges=\"\
    $2\"\n    local total=\"$3\"\n    local mangos=$((${total} % 2))\n    local apples_count=$(expr\
    \ ${total}%2)\n    local oranges_count=$(expr ${total} / 2)\n    local mangos_count=$(expr\
    \ ${total} / 2)\n    local sum=0\n    local apples_sum=0\n    local oranges_sum=0\n\
    \    local mangos_sum=0\n    for (( i = 0; i < ${#apples}\"; i++ )); do\n    \
    \    sum=$(( sum + ${apples:$i:1} * ${apples} ))\n        apples_sum=$(( apples_sum\
    \ + ${apples:$i:1} ))\n    done\n    for (( i = 0; i < ${#oranges}\"; i++ ));\
    \ do\n        oranges_sum=$(( oranges_sum + ${oranges:$i:1} ))\n    done\n   \
    \ for (( i = 0; i < ${#mangos}\"; i++ )); do\n        mangos_sum=$(( mangos_sum\
    \ + ${mangos:$i:1} ))\n    done\n    local total=$(( sum + oranges_sum + apples_sum\
    \ + mangos_sum))\n    local apples_sum=$(( apples_sum / ${apples_count} ))\n \
    \   local oranges_sum=$(( oranges_sum / ${oranges_count} ))\n    local mangos_sum=$((\
    \ mangos_sum / ${mangos_count} ))\n    local sum=$(( sum + apples_sum + oranges_sum\
    \ + mangos_sum))\n    echo $sum", "    read a b <&0\n    declare -a aa bb\n  \
    \  bb=$(($b))\n    aa=(${a//,/ })\n    for i in \"${aa[@]}\"\n    do\n       \
    \ if [ $(( $i+1 )) -gt $bb ]\n        then\n            (( b=$b ))\n        else\n\
    \            a+=($i)\n            b=0\n        fi\n    done\n    echo ${a[@]}",
  "  local a=${1}; a=$(awk '{print $1}' <<< \"$a\")\n  local b=${2}; b=$(awk '{print\
    \ $1}' <<< \"$b\")\n  local c=${3}; c=$(awk '{print $1}' <<< \"$c\")\n  local\
    \ i=${4}; i=$(awk '{print $1}' <<< \"$i\")\n\n  # initialize variables\n  local\
    \ apples=${a}\n  local oranges=${b}\n  local mangos=${c}\n  local fruits=${i}\n\
    \n  # loop to find the number of mangoes \n  while [ \"$apples\" -ge \"0\" ] &&\
    \ [ \"$apples\" -le \"$oranges\" ] && [ \"$oranges\" -ge \"0\" ] && [ \"$oranges\"\
    \ -le \"$mangos\" ] ; do\n    local apples=${apples}-1\n    local oranges=${oranges}-1\n\
    \    local mangos=${mangos}+1\n    local fruits=${fruits}+1\n  done\n  \n  # print\
    \ the final result \n  echo $mangos", "  local apples=$1\n  local oranges=$2\n\
    \  local total_fruits=$(( $apples + $oranges))\n  local apples_percentage=$((\
    \ $apples / $total_fruits * 100 ))\n  local oranges_percentage=$(( $oranges /\
    \ $total_fruits * 100 ))\n  local total_percentage=$(( $apples_percentage + $oranges_percentage\
    \ ))\n\n  if [ $total_fruits -eq 0 ]; then\n    echo $0\n  else\n    echo $(($total_fruits\
    \ - $(( $total_percentage % $apples ))+1))\n  fi", "    local number=$1\n    local\
    \ number_of_fruits=$2\n    local mango_count=0\n    \n    while [[ $number -gt\
    \ 0 ]]; do\n        local next_number=$(awk -F \"and\" '{ print $2 }' <<< \"$number\"\
    )\n        local number_of_fruits=$(( $number_of_fruits - $next_number ))\n  \
    \      number=$(($number - $next_number))\n        mango_count=$(($mango_count\
    \ + $next_number))\n    done\n\n    echo \"$mango_count\"", "  local apples=\"\
    $1\"\n  local oranges=\"$2\"\n  local total=\"$3\"\n  local result\n  if [[ ${total}\
    \ -lt 1 ]] ; then\n    result=\"${apples}${oranges}\"\n  else\n    if [[ ${total}\
    \ -le ${oranges} ]] ; then\n      if [[ ${total} -le ${apples} ]] ; then\n   \
    \     result=\"${apples}${oranges}\"\n      else\n        result=\"${oranges}${apples}\"\
    \ \n      fi\n    else\n      result=\"${apples}${oranges}\" \n    fi\n  fi\n\
    \  printf \"%s\\n\" $result", "    local apple oranges total\n    IFS=\" \" read\
    \ apple oranges total <<< \"$1\"\n    local mango_fruits\n    if [ \"$total\"\
    \ -eq \"$2\" ] ; then\n        mango_fruits=$((total - apple - oranges + 1))\n\
    \    fi\n    echo \"$mango_fruits\"", "local total_apples=$1\nlocal total_oranges=$2\n\
    local total_fruits=$(($total_apples+$total_oranges))\nlocal mango_fruits=$(($total_fruits\
    \ - $(($total_fruits % $2))))\n\necho $mango_fruits", "    local NUMBEROFAPPLES=$1\n\
    \    local NUMBEROFORANGES=$2\n    local NUMBEROFFRUITS=0\n\n    for i in $(seq\
    \ 1 $NUMBEROFAPPLES)\n    do\n        ((NUMBEROFFRUITS++))\n    done\n    for\
    \ i in $(seq 1 $NUMBEROFORANGES)\n    do\n        ((NUMBEROFFRUITS++))\n    done\n\
    \    if [ $NUMBEROFFRUITS -gt $NUMBEROFORANGES ]\n    then\n        echo \"$NUMBEROFFRUITS\"\
    \n    else\n        echo \"$NUMBEROFORANGES\"\n    fi"]
stop_tokens:
- "\n}"

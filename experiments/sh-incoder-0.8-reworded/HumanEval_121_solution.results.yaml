language: sh
name: HumanEval_121_solution
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local list=\"$1\"\n    local answer=0\n    local i\n    local j\n    for\
    \ ((i=1; i<${#list}; i++)); do\n        if [[ ${list[$i]%2} -eq 0 ]]; then\n \
    \           for ((j=$i; j<${#list}; j++)); do\n                if [[ ${list[j]%2}\
    \ -eq 0 ]]; then\n                    answer=$((answer+${list[i]}))\n        \
    \            break\n                fi\n            done\n            break\n\
    \        fi\n    done\n    echo \"${answer}\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprbs1co1c.sh: line 21: answer+: syntax error: operand expected (error
    token is "+")

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local IFS=' '\n    local numbers=$1\n    local sum=0\n    for num in $numbers\n\
    \    do\n        (( $(( sum+$(( num % 2 )) )) % 2 )) || echo $sum\n    done\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=\"$1\"\n  local sum=0\n  local i=0\n  while read number; do\n\
    \    (( i++ ))\n    (( i % 2 != 0 )) && continue\n    (( sum += number ))\n  done\
    \ <<< \"$numbers\"\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local i sum oddSum\n    for ((i=0; i<$#; i++)); do\n        sum=0\n     \
    \   if [ $(($(expr match \"$i\" '\\([0-9]*\\)\\(.*\\)')-1)) -lt $(($(expr match\
    \ \"$i\" '\\([0-9]*\\)\\(.*\\)')/2)) ]; then\n            oddSum=$((oddSum+$(expr\
    \ match \"$i\" '\\([0-9]*\\)\\(.*\\)')+sum))\n        elif [ $(($(expr match \"\
    $i\" '\\([0-9]*\\)\\(.*\\)')-1)) -eq $(($(expr match \"$i\" '\\([0-9]*\\)\\(.*\\\
    )')/2)) ]; then\n            oddSum=$((oddSum+$(expr match \"$i\" '\\([0-9]*\\\
    )\\(.*\\)')+sum))\n        fi\n    done\n    echo $oddSum\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -n arr=$1\n    local sum=0\n\n    for (( i=0; i<${#arr[@]} && i<${#arr[@]}-1;\
    \ i++ )); do\n        (( arr[${i}]%2 != 0 )) && sum+=$(( arr[${i}]/2 ))\n    done\n\
    \n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmplrtvjf1j.sh: line 13: local: `5 8 7 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1 output=0\n  for i in $numbers; do\n    (( output+=( $(($i%2\
    \ ? 1 : 0))) ))\n  done\n  echo \"$output\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers result\n  numbers=$( echo \"$1\" | tr ' ' '+' )\n  result=$(\n\
    \    sort -n -k 2\n      | uniq -u\n      | sed -E 's/^([^+]+) +([^+]+) +([^+]+)\
    \ +([^+]+) +(.+)$/\\1+\\2+\\3/;s/^([^+]+) +([^+]+) +(.+)$/\\1+\\2/'\n      | cut\
    \ -d '+' -f2\n  )\n  echo \"$result\"\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3mrpg2a5.sh: command substitution: line 23: syntax error near unexpected
    token `|''

    /tmp/tmp3mrpg2a5.sh: command substitution: line 23: `      | uniq -u''

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    set -e\n    IFS=$'\\t' read -a array <<< \"$1\"\n    sum=$(echo \"${array[*]}\"\
    \ | awk '{\n        for (i=1; i<NF; i++) {\n            if ($(i) % 2 == 0) {\n\
    \                sum += $(i);\n            }\n        }\n    }')\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    numbers=$(printf \"%s\\n\" $numbers)\n    numbers=$(echo\
    \ \"$numbers\" | tr -s ' ')\n    numbers=$(echo \"$numbers\" | sed -e 's/ /\\\
    n/g')\n    numbers=$(echo \"$numbers\" | sed -e 's/ /\\n/g' | sed -e 's/^/0/')\n\
    \    numbers=$(echo \"$numbers\" | sed -e 's/^/0/' | sed -e 's/$/0/')\n    echo\
    \ \"$numbers\" | awk '{if(NR % 2 == 0) sum += $1} END {print sum}'\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local i j sum\n    while (( \"${#1}\" > 0 )); do\n        sum=0\n       \
    \ for (( i = 0; i < \"${#1}\"; i++ )); do\n            if [[ ${#1} -eq 1 ]]; then\n\
    \                (( \"${i}\" == 0 )) && continue\n            fi\n           \
    \ j=$(( i + 1 ))\n            if (( \"${j}\" > \"${#1}\" )) || [[ ${#1} -eq 1\
    \ ]]; then\n                (( \"${i}\" == 0 )) && break\n            fi\n   \
    \         (( \"${sum}\" < \"${#1}\" )) && break\n            (( \"${#1}\" == 1\
    \ )) && continue\n            if (( \"${#1}\" == 2 )); then\n                ((\
    \ \"${#1}\" == 1 )) && break\n            fi\n            if [[ ${#1} -eq 3 ]];\
    \ then\n                (( \"${j}\" == 1 )) && break\n            fi\n       \
    \     if (( \"${#1}\" == 0 )); then\n                (( \"${j}\" == 1 )) && break\n\
    \            fi\n            (( \"${#1}\" == 2 )) && continue\n            ((\
    \ \"${#1}\" == 3 )) && break\n            (( \"${#1}\" == 4 )) && continue\n \
    \           (( \"${#1}\" == 5 )) && break\n            (( \"${#1}\" == 6 )) &&\
    \ continue\n            (( \"${#1}\" == 7 )) && break\n            (( \"${#1}\"\
    \ == 8 )) && continue\n            (( \"${#1}\" == 9 )) && break\n           \
    \ (( \"${#1}\" == 10 )) && continue\n            (( \"${#1}\" == 11 )) && break\n\
    \            (( \"${#1}\" == 12 )) && continue\n            (( \"${#1}\" == 13\
    \ )) && break\n            (( \"${#1}\" == 14 )) && continue\n            (( \"\
    ${#1}\" == 15 )) && break\n            (( \"${#1}\" == 16 )) && continue\n   \
    \         (( \"${#1}\" == 17 )) && break\n            (( \"${#1}\" == 18 )) &&\
    \ continue\n            (( \"${#1}\" == 19 )) && break\n            (( \"${#1}\"\
    \ == 20 )) && continue\n            (( \"${#1}\" == 21 )) && break\n         \
    \   (( \"${#1}\" == 22 )) && continue\n            (( \"${#1}\" == 23 )) && break\n\
    \            (( \"${#1}\" == 24 )) && continue\n            (( \"${#1}\" == 25\
    \ )) && break\n            (( \"${#1}\" == 26 )) && continue\n            (( \"\
    ${\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"\
    9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"\
    5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdqhpii9z.sh: line 75: unexpected EOF while looking for matching
    `"''

    /tmp/tmpdqhpii9z.sh: line 79: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -r list=\"$1\"\n    local total=0\n    local i\n    for i in $(seq\
    \ 0 $((${#list}-1)/2)); do\n        if [[ $((${list::${i}:1}%2)) -eq 1 ]]; then\n\
    \            (( total += ${list::${i}:1} ))\n        fi\n    done\n    echo \"\
    $total\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppcpw6nml.sh: command substitution: line 16: syntax error near unexpected
    token `/2''

    /tmp/tmppcpw6nml.sh: command substitution: line 16: `(${#list}-1)/2''

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local IFS=\" $1\"\n  local sum=0\n  local input\n  for input in \"${@:2}\"\
    ; do\n    sum=$((sum + $((input % 2))))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \tlocal -i n=0\n\tlocal sum=0\n\n\tfor n in $1; do\n\t\tif [ $(($n % 2)) -eq 0\
    \ ]; then\n\t\t\tsum=$(( $sum + $n ))\n\t\tfi\n\tdone\n\n\techo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local list=\"$1\"\n    local sum=0\n    for element in $list; do\n      \
    \  (( $element % 2 == 1 )) && sum=$(($sum + $element))\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local xs i j\n  xs=$1\n  for (( i=0; i<${#xs}; i++ )); do\n    for (( j=0;\
    \ j<${#xs}; j++ )); do\n      [[ (($j+2)%${#xs} == 0) ]] && printf \"%s\" \"${xs[$i]}\"\
    \n    done\n  done\n  printf \"%s\" \"\"\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp94ebtbsn.sh: line 17: expected `)''

    /tmp/tmp94ebtbsn.sh: line 17: syntax error near `(($j+2)%${#xs}''

    /tmp/tmp94ebtbsn.sh: line 17: `      [[ (($j+2)%${#xs} == 0) ]] && printf "%s"
    "${xs[$i]}"''

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list_str=$1\n\n  IFS=' ' read -a list <<< \"$list_str\"\n\n  # Loop through\
    \ the array backwards to check positions of odd elements\n  local sum=0\n  for\
    \ i in \"${list[@]:(-1)}\"; do\n    ((sum+=i)); done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -i a=\"$1\"; shift\n  local i=0 j=1\n  local sum\n  while [ \"$i\" -lt\
    \ \"${#a}\" ]; do\n    if [ \"$j\" -eq 2 ]; then\n      if [ \"$i\" -eq 1 ]; then\n\
    \        sum=$(( $a + $b ))\n      else\n        sum=$(( $a + $( echo \"${a[$i\
    \ - 1]}\" - ${b} )))\n      fi\n      break\n    fi\n    (( i++ ))\n    (( j++\
    \ ))\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpisomld27.sh: line 13: local: 5 8 7 1: syntax error in expression
    (error token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local input\n    read -a input < <(echo $1)\n    local sum i\n    for i in\
    \ \"${input[@]}\"; do\n        if ((i % 2 == 0)); then\n            ((sum += i))\n\
    \        fi\n    done\n    echo \"${sum}\"\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$(echo \"$1\" | tr \"\\n\" \" \")\n\n  local sum=0\n  for i in\
    \ $numbers; do\n    local j=$(( i + 1 ))\n\n    # skip all multiples of 2\n  \
    \  if [ \"$i\" == \"$j\" ] && [ \"$i\" -eq \"2\" ]; then\n      continue\n   \
    \ fi\n\n    # skip all multiples of 3\n    if [ \"$i\" == \"$j\" ] && [ \"$i\"\
    \ -eq \"3\" ]; then\n      continue\n    fi\n\n    # skip all multiples of 5\n\
    \    if [ \"$i\" == \"$j\" ] && [ \"$i\" -eq \"5\" ]; then\n      continue\n \
    \   fi\n\n    local sum=$(( sum + i ))\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \tlocal numbers=\"${1:-}\"\n\tlocal sum=0\n\tlocal odd=0\n\tfor number in $numbers;\
    \ do\n\t\tif [ \"$number\" -eq \"1\" ]; then\n\t\t\t((odd++))\n\t\telse\n\t\t\t\
    ((sum+=number))\n\t\tfi\n\tdone\n\tif [ \"$odd\" -eq 0 ]; then\n\t\techo \"0\"\
    \n\telse\n\t\techo \"$sum\"\n\tfi\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local list_nums=$1\n    local sum=0\n\n    for num in $list_nums; do\n  \
    \      if (( num % 2 == 1 )); then\n            sum=$(( $sum + $num ))\n     \
    \   fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local IFS=$1\n    local numbers=()\n    local sum\n    local i\n\n    for\
    \ i in \"${!@}\"; do\n        if (( i % 2 == 0 )); then\n            numbers+=(\"\
    ${!i}\")\n        fi\n    done\n\n    sum=0\n\n    for i in \"${!numbers[@]}\"\
    ; do\n        if (( numbers[$i] % 2 == 1 )); then\n            sum=$(($sum + numbers[$i]))\n\
    \        fi\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpidwkjwm9.sh: line 18: 5 8 7 1: invalid variable name

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local num_list=\"$1\"\n  local sum=0\n  local i num\n  while IFS=' ' read -r\
    \ i num; do\n    if [[ $(($i % 2)) == 1 ]]; then\n      sum=$((sum + $num))\n\
    \    fi\n  done <<< \"$num_list\"\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_j2gkrce.sh: line 18: sum + 8 7 1: syntax error in expression (error
    token is "7 1")

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local IFS\n    local i\n    local sum\n\n    IFS=$' \\t\\n'\n    sum=0\n\
    \    for i in $*; do\n        if [ $((i % 2)) == 0 ]; then\n            sum=$((sum+i))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  declare -i a sum=0\n  while IFS= read -r line\n  do\n    a=${line%???}\n  \
    \  sum=$((sum+a))\n  done <<< \"$1\"\n  echo \"$sum\"\n}\n\ncandidate() {\n  \
    \  solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn3dl7p2j.sh: line 16: 5 8 : syntax error in expression (error token
    is "8 ")

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local string=\"$1\"\n    local result=0\n    local i\n\n    while read -a\
    \ numbers; do\n        for ((i = 0; i < ${#numbers[@]}; i++)); do\n          \
    \  # Every time we find a number that isn't in even positions, add it to the result\n\
    \            if [ ${numbers[i]} -ne ${numbers[(($i-1)%${#numbers[@]})]} ]; then\n\
    \                result=$(( ${result} + ${numbers[i]} ))\n            fi\n   \
    \     done\n    done <<< \"$string\"\n\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  declare -a nums\n  IFS=\" \"\n  nums=($(echo \"$1\" | tr \" \" \",\"))\n  nums=($(nums))\n\
    \  num=${nums[0]}\n  sum=0\n  for i in \"${nums[@]:1}\" ; do\n    (( sum+=i ))\n\
    \    (( num=num-2 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpj_q5t_dn.sh: line 16: nums: command not found

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \tmapfile -t input < \"$1\"\n\tlocal sum=0\n\tfor i in \"${input[@]}\"; do\n\t\
    \t(( i % 2 )) && let sum+=i\n\tdone\n\techo \"$sum\"\n}\n\ncandidate() {\n   \
    \ solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\")\
    \ = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmplwz347h8.sh: line 13: 5 8 7 1: No such file or directory

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local sum=0\n  mapfile -t array <<< \"$1\"\n  for element in \"${array[@]:2}\"\
    ; do\n    [[ \"${element:0:1}\" == \"$\" ]] && sum=$((${sum} + ${element:1}))\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \tlocal i sum\n\tsum=0\n\tfor ((i=1; i<=$#; i=i+2)); do\n\t\t((sum+=${#1}))\n\t\
    done\n\techo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local x\n    local total=0\n    while read -r x; do\n        if [[ \"$x\"\
    \ =~ ^[0-9]+$ && \"$x\" -gt 0 ]]; then\n            if [[ $(( $1 % 2 )) -eq 1\
    \ ]]; then\n                total+=\"$x\"\n            fi\n        fi\n    done\
    \ <<< \"$1\"\n    echo \"$total\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local i sum sum2\n    sum=0\n    for i in $(echo $1 | sed 's/ /\\n/g'); do\n\
    \        (( i % 2 )) && sum=sum+$i\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local odds even\n    odds=$(echo \"$1\" | tr -d '[[:space:]]')\n    even=$(echo\
    \ $odds | tr -d '[[:space:]]')\n    even=$(( $even + $(($odd % 2)) ))\n    echo\
    \ $even\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4hahp5l9.sh: line 16: % 2: syntax error: operand expected (error
    token is "% 2")

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input=\"${1:-}\"\n  local output=\"\"\n\n  local i=0\n  local j=0\n \
    \ while [[ $i -lt ${#input} ]]; do\n    local val=\"${input[$i]}\"\n    if [[\
    \ \"$val\" == \"1\" ]]; then\n      output=\"$output$val\"\n    elif [[ \"$val\"\
    \ == \"2\" ]]; then\n      output=\"$output$val\"\n    elif [[ \"$val\" == \"\
    3\" ]]; then\n      output=\"$output$val\"\n    elif [[ \"$val\" == \"4\" ]];\
    \ then\n      output=\"$output$val\"\n    elif [[ \"$val\" == \"5\" ]]; then\n\
    \      output=\"$output$val\"\n    elif [[ \"$val\" == \"6\" ]]; then\n      output=\"\
    $output$val\"\n    elif [[ \"$val\" == \"7\" ]]; then\n      output=\"$output$val\"\
    \n    elif [[ \"$val\" == \"8\" ]]; then\n      output=\"$output$val\"\n    elif\
    \ [[ \"$val\" == \"9\" ]]; then\n      output=\"$output$val\"\n    elif [[ \"\
    $val\" == \"10\" ]]; then\n      output=\"$output$val\"\n    elif [[ \"$val\"\
    \ == \"11\" ]]; then\n      output=\"$output$val\"\n    elif [[ \"$val\" == \"\
    12\" ]]; then\n      output=\"$output$val\"\n    elif [[ \"$val\" == \"13\" ]];\
    \ then\n      output=\"$output$val\"\n    elif [[ \"$val\" == \"14\" ]]; then\n\
    \      output=\"$output$val\"\n    elif [[ \"$val\" == \"15\" ]]; then\n     \
    \ output=\"$output$val\"\n    elif [[ \"$val\" == \"16\" ]]; then\n      output=\"\
    $output$val\"\n    elif [[ \"$val\" == \"17\" ]]; then\n      output=\"$output$val\"\
    \n    elif [[ \"$val\" == \"18\" ]]; then\n      output=\"$output$val\"\n    elif\
    \ [[ \"$val\" == \"19\" ]]; then\n      output=\"$output$val\"\n    elif [[ \"\
    $val\" == \"20\" ]]; then\n      output=\"$output$val\"\n    elif [[ \"$val\"\
    \ == \"21\" ]]; then\n      output=\"$output$val\"\n    elif [[ \"$val\" == \"\
    22\" ]]; then\n      output=\"$output$val\"\n    elif [[ \"$val\" == \"23\" ]];\
    \ then\n      output=\"$output$val\"\n    elif [[ \"$val\" == \"24\" ]]; then\n\
    \      output=\"$output$val\"\n    elif [[ \"$val\" == \"25\" ]]; then\n     \
    \ output=\"$output$val\"\n    elif [[ \"$val\" == \"26\" ]]; then\n      output=\"\
    $output$val\"\n\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpveve7_5z.sh: line 73: syntax error near unexpected token `}''

    /tmp/tmpveve7_5z.sh: line 73: `}''

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local i value=0\n    for i in $(cat $1)\n    do\n        if [[ $(($i & 1))\
    \ == 0 ]]\n        then\n            ((value+=i))\n        fi\n    done\n    echo\
    \ \"$value\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp87ujmw7j.sh: line 16: 100100100"" & 1: syntax error: invalid arithmetic
    operator (error token is """ & 1")

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local input_array=$1\n    local sum=0\n    local i=0\n\n    while [ $i -lt\
    \ ${#input_array[@]} ]; do\n        if [ ${input_array[$i]} -eq ${input_array[$((\
    \ i + 1 ))]} ]; then\n            sum=$(( sum + ${input_array[$(( i + 1 ))]} ))\n\
    \        fi\n\n        i=$(( i + 1 ))\n    done\n\n    printf \"%d\" ${sum}\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpk55ihw54.sh: line 18: [: too many arguments

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  for i in $numbers; do\n    if (( ${#numbers}\
    \ > 0 )); then\n      local number=${numbers}\n      local j=1\n      for j in\
    \ ${numbers}; do\n        if (( ${j} % 2 == 1 )); then\n          sum=$(( $sum\
    \ + $number ))\n        fi\n      done\n      numbers=${numbers:$j:1}\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk8_uoxfu.sh: line 21: 0 + 5 8 7 1 : syntax error in expression
    (error token is "8 7 1 ")

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n\n    for i in \"${numbers[@]}\"\
    ; do\n        if [[ ${i:0:1} -eq 0 ]]; then\n            ((sum+=${i}))\n     \
    \   else\n            ((sum+=${i%2}))\n        fi\n    done\n\n    echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg_5oslhg.sh: line 21: ((: sum+=5 8 7 1: syntax error in expression
    (error token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i\n    for ((i=1; i<${#numbers};\
    \ i++)); do\n        if [[ ${numbers[i]} == 2 ]]; then\n            sum=$(( sum\
    \ + numbers[i] ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list=$1\n  local sum=0\n  local i\n  for i in $(echo $list | tr \" \"\
    \ \"\\n\") ; do\n    (( i % 2 == 0 )) && sum=$((sum + i))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    awk 'BEGIN { n = split($1, a, \" \") } { b[n] = $1 } END { for (i = 1; i\
    \ <= n; i++) { print b[i] - (i - 1); } }' \"${@:2}\"\n}\n\ncandidate() {\n   \
    \ solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\")\
    \ = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=40 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=19 encoding='utf-8'>
  timestamp: 1660059191
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local integers=$1\n    local sum=0\n    IFS=\" \" read -a integers <<<\"\
    $integers\"\n    for i in \"${integers[@]}\"; do\n        [[ $((i % 2)) -eq 0\
    \ ]] && sum=$((sum+i))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local integers=$1\n  local sum=0\n  local len=$((${#integers}-1))\n  for ((i=0;\
    \ i < $len; i++)); do\n    (( sum += ${integers[i]} % 2 ))\n  done\n  echo \"\
    $sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmparvqjxqg.sh: line 17: ((: sum += 5 8 7 1 % 2 : syntax error in
    expression (error token is "8 7 1 % 2 ")

    /tmp/tmparvqjxqg.sh: line 17: ((: sum +=  % 2 : syntax error: operand expected
    (error token is "% 2 ")

    /tmp/tmparvqjxqg.sh: line 17: ((: sum +=  % 2 : syntax error: operand expected
    (error token is "% 2 ")

    /tmp/tmparvqjxqg.sh: line 17: ((: sum +=  % 2 : syntax error: operand expected
    (error token is "% 2 ")

    /tmp/tmparvqjxqg.sh: line 17: ((: sum +=  % 2 : syntax error: operand expected
    (error token is "% 2 ")

    /tmp/tmparvqjxqg.sh: line 17: ((: sum +=  % 2 : syntax error: operand expected
    (error token is "% 2 ")

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local sum=0 i=0 nums=( $1 )\n    for num in ${nums[@]:1}; do\n        if\
    \ [ $(($i % 2)) -eq 0 ]; then\n            sum=$(($sum+$num))\n        fi\n  \
    \      i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  if [ -z \"$1\" ]; then\n    echo \"Invalid input: please provide a non-empty\
    \ list of integers to sum.\"\n  else\n    sum=$(echo $1 | sed 's/ /+/g' | sed\
    \ 's/ /-/g' | tr '[:upper:]' '[:lower:]' | sed 's/^/+/g' | sed 's/$/-/g')\n  \
    \  echo $(( $sum ))\n  fi\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5jdum2y1.sh: line 17: +5+8+7+1- : syntax error: operand expected
    (error token is "- ")

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local arr=()\n  local sum=0\n\n  for ((i=0; i<$1; i++)); do\n    arr[$i]=(\
    \ $(echo $1 | sed -n $i\"p\") )\n  done\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n\
    \    sum=$((${sum}+arr[$i][1]))\n  done\n\n  echo \"$sum\"\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpejk798x1.sh: line 16: ((: i<5 8 7 1: syntax error in expression
    (error token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local IFS=' ' sum=0\n  for ((i=0; i < ${#1}; i+=2)); do\n    if [ \"${1:$i:1}\"\
    \ -eq \"2\" ]; then\n      sum=$((sum+$((${1:$i+1}))))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -n arr=$1\n  local sum=0\n  local even=0\n  for i in $(seq 0 $((${#arr[@]}\
    \ - 1))); do\n    if [ \"$i\" -gt 0 ] && [ \"$i\" -lt \"$((${#arr[@]} - 1))\"\
    \ ]; then\n      local value=${arr[$i]}\n      if [ \"$i\" -eq \"0\" ]; then\n\
    \        if [ \"$value\" = \"$((${#arr[@]} - 1))\" ]; then\n          even+=2\n\
    \        else\n          even+=${value}\n        fi\n      else\n        if [\
    \ \"$value\" = \"$((${#arr[@]} - 1))\" ]; then\n          even+=1\n        else\n\
    \          odd+=${value}\n        fi\n      fi\n    fi\n  done\n  echo \"$((even+odd))\"\
    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6k9y5w4o.sh: line 13: local: `5 8 7 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local nums\n  read -a nums <<< \"$1\"\n  local sum\n  (( sum = 0))\n  for i\
    \ in \"${nums[@]}\"; do\n    (( i % 2 == 1 ? sum+=$i : sum+=0))\n  done\n  echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpadh2sps6.sh: line 18: ((: i % 2 == 1 ? sum+=5 : sum+=0: attempted
    assignment to non-variable (error token is "+=0")

    /tmp/tmpadh2sps6.sh: line 18: ((: i % 2 == 1 ? sum+=8 : sum+=0: attempted assignment
    to non-variable (error token is "+=0")

    /tmp/tmpadh2sps6.sh: line 18: ((: i % 2 == 1 ? sum+=7 : sum+=0: attempted assignment
    to non-variable (error token is "+=0")

    /tmp/tmpadh2sps6.sh: line 18: ((: i % 2 == 1 ? sum+=1 : sum+=0: attempted assignment
    to non-variable (error token is "+=0")

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local num_list=$1\n  local sum=0\n  local i=0\n  local j=0\n\n  while [ $i\
    \ -lt ${#num_list[@]} ]; do\n    i=$((i+2))\n    if [ $i -eq ${#num_list[@]} ];\
    \ then\n      sum=$((sum+${num_list[$j]}))\n      j=$((j+1))\n    else\n     \
    \ sum=$((sum+${num_list[$i]}))\n    fi\n  done\n\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvajqnc5e.sh: line 24: sum+: syntax error: operand expected (error
    token is "+")

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local line\n  local sum\n  sum=0\n  for line in $(eval \"$@\"); do\n    if\
    \ [ $((line%2)) -eq 0 ]; then\n      sum=$(($sum+$line))\n    fi\n  done\n  echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_atdcje0.sh: line 16: 5: command not found

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -n input=$1\n    local -i len=${#input}\n\n    for i in $(seq 0 $(($len\
    \ - 1)))\n    do\n        if [[ ${input[$i]} == $((${input[$(($i - 1))]} + ${input[$i]}))\
    \ ]]; then\n            # $((${input[$(($i - 1))]} + ${input[$i]})) --> The result\
    \ of this line is 0\n            ((oddIndexes+=1))\n        fi\n    done\n\n \
    \   echo \"$oddIndexes\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp46whjvr_.sh: line 13: local: `5 8 7 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  cat <<EOF\n  $(echo ${1} | tr \" \" \"\\n\" | sed 's/^/ /' | sort -n | cut\
    \ -d \" \" -f 3 | sed 's/$/ /' | paste -d \" \" - | bc)\nEOF\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -n args=$1\n    local sum=0\n    local -a a\n    read -ra a\n\n   \
    \ for ((i=0; i<${#a[@]}; i++))\n    do\n        sum=$(( $sum + ${#a[@]}*$(a[i+1])\
    \ ))\n    done\n\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=41 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=13 encoding='utf-8'>
  timestamp: 1660059191
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local input=\"${1}\"\n    local output=\"$(grep -Po \"(?<=\\d)(^|\\s)(\\\
    d)(?=\\s|$)\" <<< \"${input}\" | sort -n | uniq -u)\"\n    echo \"$output\"\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n\n  local sum=0\n  local count=0\n\n  for i in $numbers\n\
    \  do\n    if [ \"$i\" -eq \"$((i%2))\" ]\n    then\n      ((count++))\n     \
    \ if [ \"$count\" -gt \"1\" ]\n      then\n        sum=$((sum + i))\n      fi\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local i\n  local sum=0\n  for i in $(echo \"$1\" | tr ' ' ','); do\n    if\
    \ [[ $(echo $i | cut -d ' ' -f 3) != 0 ]]; then\n      sum=$((sum + i))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local i sum\n  local input\n  input=$1\n  sum=0\n  for i in $(echo $input |\
    \ tr ' ' ',' | sed 's/ //g'); do\n    if [ $(echo $i | cut -c2-)%2 -gt 0 ]; then\n\
    \      sum=$((sum+i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3we6hs57.sh: line 18: [: ,8,7,1%2: integer expression expected

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list_str=$1\n  local result=0\n  local odd_num\n  for odd_num in $list_str;\
    \ do\n    ((odd_num % 2 == 0)) && result=$((result + odd_num))\n  done\n  echo\
    \ $result\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local i=0\n    while [ \"$numbers\"\
    \ != \"\" ]; do\n        (( i++ ))\n        if [ $i -eq 2 ] ; then\n         \
    \   sum=$(( sum + $numbers[i] ))\n        elif [ $i -eq 3 ] ; then\n         \
    \   sum=$(( sum + $numbers[i] ))\n        else\n            sum=$(( sum + $numbers[i]\
    \ ))\n        fi\n        numbers=$( echo \"$numbers\" | sed -n -e '2,$p' -e '3,$p'\
    \ -e '$p' )\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqpxhw0ys.sh: line 23: sum + 5 8 7 1[i] : syntax error in expression
    (error token is "8 7 1[i] ")

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    numbers=$1\n    odd=0\n    even=0\n    for number in $numbers; do\n     \
    \   if [ \"$number\" -eq \"$((number%2))\" ]; then\n            odd=$((odd+number))\n\
    \        else\n            even=$((even+number))\n        fi\n    done\n    odd=$((odd+even))\n\
    \    echo \"$odd\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local items=\"$1\"\n  echo \"${items//[^0-9]/}\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    mapfile -t arr < <(echo \"$1\")\n    echo \"${arr[@]}\" | sed -E 's/^[0-9]+//g'\
    \ | grep -o \"[23]\" | sed 's/^/+/g' | sed 's/[23]$//' | sed 's/^+/-/g' | sed\
    \ 's/^-/+/g' | sed 's/^\\+//g' | sed 's/^\\-//g' | sed 's/\\+/+/g' | sed 's/\\\
    -/-/g' | sed 's/\\+/-/g' | sed 's/^/+/g' | sed 's/[23]\\+//g' | awk '{s=$0;gsub(/[23]+/,\"\
    \",s);print s}'\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n\n  for (( i=0; i<${#numbers}; i++ )); do\n\
    \    (( i % 2 == 1 )) && sum+=$numbers[i]\n  done\n\n  echo -n $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -n numbers=$1\n\n    # Loop through the list\n    for i in ${numbers[*]};\
    \ do\n        # Grab the even index\n        even_num=$(expr $i \\% 2)\n     \
    \   # If the even index is odd, print the odd index otherwise print the sum of\
    \ both the even and odd index\n        if [ $even_num -eq 0 ]; then\n        \
    \    odd_num=$(expr $i \\+ 1)\n        else\n            odd_num=$(expr $i \\\
    * 2)\n        fi\n        echo $(( ${numbers[$i]} + ${odd_num} ))\n    done\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2rejw7tf.sh: line 13: local: `5 8 7 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \tlocal i sum\n\tread -a arr <<< \"$1\"\n\tsum=0\n\tfor ((i=0; i<${#arr[@]}; i++))\n\
    \tdo\n\t\tif [ \"${arr[i]}\" = \"${arr[i+1]}\" ] ; then\n\t\t\tsum=$((${sum}+2))\n\
    \t\tfi\n\tdone\n\techo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -n arr=$1\n    local sum=0\n    local -n odd=$2\n    for e in \"${arr[@]}\"\
    ; do\n        if [ $(( ${e} % 2 )) == 0 ] ; then\n            sum=$(( $sum + ${odd[$((\
    \ ${e} - 1 ))]} ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkitx0y1c.sh: line 13: local: `5 8 7 1'': invalid variable name
    for name reference

    /tmp/tmpkitx0y1c.sh: line 15: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  echo \"$(($numbers | sed -n 's/^\\(\\([0-9]*\\)\\s\\)\\\
    {2\\}\\([0-9]*\\)\\s\\(\\([0-9]*\\)\\s\\)\\{2\\}\\([0-9]*\\).*$/\\1\\2\\3/p'))\"\
    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp94o1_k3d.sh: line 14: 5 8 7 1 | sed -n ''s/^\(\([0-9]*\)\s\)\{2\}\([0-9]*\)\s\(\([0-9]*\)\s\)\{2\}\([0-9]*\).*$/\1\2\3/p'':
    syntax error in expression (error token is "8 7 1 | sed -n ''s/^\(\([0-9]*\)\s\)\{2\}\([0-9]*\)\s\(\([0-9]*\)\s\)\{2\}\([0-9]*\).*$/\1\2\3/p''")

    '
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n\n  local odds=()\n  local evens=()\n\n  for number in $numbers;\
    \ do\n    if (( $(echo $number | cut -c1) % 2 )); then\n      evens+=( \"$number\"\
    \ )\n    else\n      odds+=( \"$number\" )\n    fi\n  done\n\n  local sum=$(echo\
    \ $((${#odds[@]} + ${#evens[@]}))) ## Count total odd numbers and add 1.\n\n \
    \ echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local n=$1 even\n    local sum\n    local even=0\n    local odd=1\n    local\
    \ total\n    for (( i=1; i<= n; i++ )); do\n      odd=$(( odd * 2 ))\n      if\
    \ (( i % 2 )); then\n          even=$(( even + $(( odd - 1 )) ))\n      else\n\
    \          even=$(( even + odd ))\n      fi\n    done\n    sum=$(( even * 2 +\
    \ 1 ))\n    total=$(( sum - $(( sum % ( 2 )) )) )\n    echo $total\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=33 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660059191
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    mapfile -t nums < <(echo \"$1\")\n    odd=0\n    for i in \"${nums[@]:2:2}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            odd=0\n        elif [[ $i -gt\
    \ 0 ]]; then\n            odd=$((odd+i))\n        fi\n    done\n    echo \"$odd\"\
    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local ns=\"$1\"\n  local sum=0\n  local -a odd=()\n  local -a even=()\n\n \
    \ for n in $ns; do\n    even+=( $(( n % 2 )) )\n    odd+=( $(( n / 2 )) )\n  done\n\
    \n  for i in \"${!odd[@]}\"; do\n    if [[ \"$even[$i]\" == 1 ]]; then\n     \
    \ sum=$(( $sum + $odd[i] ))\n    fi\n  done\n\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local i ret=0\n    local i prev=-1\n    for (( i=0; i < ${#1}; i++ )); do\n\
    \        if [[ ${1:i:2} -gt 0 ]]; then\n            if [[ $((i+1)) == $((i+2))\
    \ ]]; then\n                ret=$((ret+${1:i:2}))\n            else\n        \
    \        prev=$((i+2))\n            fi\n        fi\n    done\n    echo $ret\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input=$1\n  local sum=0\n\n  for i in $input; do\n    if [ $((i % 2))\
    \ == 0 ]; then\n      sum=$((sum+i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059186
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local elements=${1:-$(echo \"${1}\" | sed -n 's/ /\\n/gp')}\n  echo \"${elements}\
    \ | awk '{ if (NR%2==1) print \\$2+\\$3 }'\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local elements=${1}\n\n  if [[ \"${#elements}\" -eq \"0\" ]]; then\n    echo\
    \ \"0\"\n  else\n    local sum=0\n\n    for element in \"${elements[@]}\"; do\n\
    \      # Check if $element is in even position\n      if [ ${element%?} -eq 0\
    \ ]; then\n        # Add $element to sum\n        (( sum += element ))\n     \
    \ fi\n    done\n\n    echo \"${sum}\"\n  fi\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6g9ei5l6.sh: line 22: [: too many arguments

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local arg=\"$1\"\n    local -a arr=( $arg )\n    local sum\n    local -a\
    \ odd_arr=()\n\n    sum=0\n\n    local i\n    for (( i=0; i < ${#arr[@]} - 1 ));\
    \ do\n        (( i % 2 != 0 )) && odd_arr+=( ${arr[i]} )\n    done\n\n    for\
    \ (( i=0; i < ${#arr[@]} - 1 )); do\n        if [[ ${odd_arr[i]} == 2 ]]; then\n\
    \            (( sum += ${arr[i]} ))\n        fi\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpacu3zdjw.sh: line 21: syntax error: arithmetic expression required

    /tmp/tmpacu3zdjw.sh: line 21: syntax error: `(( i=0; i < ${#arr[@]} - 1 ))''

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -n list=\"$1\"\n    local sum\n\n    sum=0\n    for i in \"${!list[@]}\"\
    ; do\n        if [ \"${i}\" -eq 1 ]; then\n            (( sum += list[$i] ))\n\
    \        fi\n    done\n\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpsyhxynvl.sh: line 13: local: `5 8 7 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list=$(echo \"$1\" | tr \" \" \"\\n\");\n  local sum=0;\n  for i in $list;\
    \ do\n    if [ \"$i\" = \"$list\" ] 2>/dev/null; then\n      echo \"0\";\n   \
    \ else\n      if [ ($(echo \"$i & 1\"  | bc -l)) = 0 ]; then\n        sum=$((sum+$i));\n\
    \      fi\n    fi\n  done\n  echo \"$sum\";\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6nbrwyl7.sh: line 19: syntax error near unexpected token `$(echo
    "$i & 1"  | bc -l)''

    /tmp/tmp6nbrwyl7.sh: line 19: `      if [ ($(echo "$i & 1"  | bc -l)) = 0 ]; then''

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=\"$1\"\n  local sum=$(echo \"$numbers\" | sed 's/ //g' | awk\
    \ '{for(i=1;i<NF;i++){if(i%2==0){sum+=$i}}}END{print sum}')\n  echo \"$sum\"\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local input_arr=($1)\n    local sum=0\n    local flag=0\n    for (( i=0;\
    \ i < ${#input_arr[*]} ; i++)); do\n        if [ ${input_arr[$i]} -eq ${input_arr[$((i\
    \ + 2))]} ]; then\n            sum=$((sum + ${input_arr[$i]}))\n            flag=1\n\
    \        else\n            if [ $flag -eq 1 ]; then\n                sum=$((sum\
    \ + ${input_arr[$i]}))\n            fi\n        fi\n    done\n    echo \"${sum}\"\
    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpeqby_avq.sh: line 17: [: 7: unary operator expected

    /tmp/tmpeqby_avq.sh: line 17: [: 1: unary operator expected

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local i\n  for i in $(seq 0 $((${#numbers}\
    \ / 2))); do\n    local odd=`echo $numbers | awk \"{print \\$${i*2+1}}\" `\n \
    \   if [[ ${#odd} -gt 0 ]]; then\n      local even=`echo $numbers | awk \"{print\
    \ \\$${i*2}}\"`\n      ((sum+=$(( ${even} * 2 ))))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'awk: cmd. line:1: {print 1234158{i*2+1}}

    awk: cmd. line:1:               ^ syntax error

    awk: cmd. line:1: {print 1234158{i*2+1}}

    awk: cmd. line:1:                      ^ syntax error

    awk: cmd. line:1: {print 1234158{i*2+1}}

    awk: cmd. line:1:               ^ syntax error

    awk: cmd. line:1: {print 1234158{i*2+1}}

    awk: cmd. line:1:                      ^ syntax error

    awk: cmd. line:1: {print 1234158{i*2+1}}

    awk: cmd. line:1:               ^ syntax error

    awk: cmd. line:1: {print 1234158{i*2+1}}

    awk: cmd. line:1:                      ^ syntax error

    awk: cmd. line:1: {print 1234158{i*2+1}}

    awk: cmd. line:1:               ^ syntax error

    awk: cmd. line:1: {print 1234158{i*2+1}}

    awk: cmd. line:1:                      ^ syntax error

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -a arr=( $1 )\n    echo \"${arr[@]:1:2}\" | grep -Ev \"^$\" | tr \"\
    \ \" \"+\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \tlocal -n arr=$1\n\tlocal sum=0\n\n\tarr=(${arr[@]})\n\tfor i in $(seq 0 ${#arr[@]})\n\
    \tdo\n\t\t((${#arr[@]} - 1))\n\t\t((i % 2))\n\t\t((sum+=${arr[i]}))\n\tdone\n\t\
    echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdt342oco.sh: line 13: local: `5 8 7 1'': invalid variable name
    for name reference

    /tmp/tmpdt342oco.sh: line 21: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  if [ -z \"$1\" ]\n  then\n    return 0\n  fi\n\n  sum=0\n  for i in $(echo\
    \ $1 | sed 's/ /\\n/g')\n  do\n    if [ $(( $i % 2 )) -eq 0 ]\n    then\n    \
    \  sum=$(($sum + $i))\n    fi\n  done\n\n  echo $sum\n}\n\ncandidate() {\n   \
    \ solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\")\
    \ = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local arr=($1)\n    local i j\n    for i in $(seq 1 ${#arr[@]}); do\n   \
    \     for j in $(seq 0 $(($i-1))); do\n            if [[ \"$i\" -ge \"2\" ]] &&\
    \ [[ \"$i\" -le \"$((i+1))\" ]]; then\n                (( j+=2 ))\n          \
    \  else\n                break\n            fi\n        done\n        if [[ $((j%2))\
    \ == 0 ]]; then\n            echo -n $(($i+${arr[i]}))\n        fi\n    done\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -i n=\"$#\" sum\n    sum=0\n    for i in $(seq 0 \"$n\"); do\n    \
    \    # Check to see if i is even\n        if ((i%2==0)); then\n            # If\
    \ it is, add i's value\n            sum=$(($sum+$i))\n        fi\n    done\n \
    \   echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local list=\"$1\"\n    sum=0\n    for i in $list; do\n        if [ \"$i\"\
    \ -eq \"$((i + 2))\" ]; then\n            ((sum += i))\n        fi\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    for i in `echo $numbers |grep -o \"\
    \ \" |grep -o \"[^ ]*\"`; do\n        ((sum+=$(expr \"$i\" +$1)))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \tlocal -n arr=$1\n\tlocal answer=0\n\tfor i in ${arr[@]};\n\tdo\n\t\tif [[ ${i%%2}\
    \ -eq 0 ]]; then\n\t\t\tanswer=$(($answer + $i))\n\t\tfi\n\tdone\n\techo $answer\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpf5sgclv0.sh: line 13: local: `5 8 7 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local array=$1\n  local sum=0\n  local numOfEven=0\n\n  for number in $array;\
    \ do\n    if [ \"$number\" -eq \"0\" ]; then\n      numOfEven=$((numOfEven + 1))\n\
    \    else\n      if [ $((number%2)) -eq 0 ]; then\n        sum=$((sum + number))\n\
    \      fi\n    fi\n  done\n\n  if [ \"$numOfEven\" -eq \"$((numOfEven + 1))\"\
    \ ]; then\n    sum=$((sum+1))\n  fi\n\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list_=$1\n  local sum=0\n  local i=0\n  for i in $(seq 1 $list_); do\n\
    \    ((i % 2 == 0)) && sum+=$i\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "seq: extra operand \u20187\u2019\nTry 'seq --help' for more information.\n"
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers sum=0\n  local number\n  for number in $*; do\n    (( number\
    \ % 2 )) && sum+=\"$number\" || echo \"${sum} $number\"\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local i sum=0\n  for i in $(echo $1 | sed 's/ /\\t/g')\n  do\n    if [ $((i\
    \ % 2)) -eq 0 ]\n    then\n      sum=$((sum+i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # Split list into integer and odd elements\n  local integer=\"${1}\"\n  local\
    \ odd=\"${integer//[! 0-9]/}\"\n  local even=\"${integer//[^ 0-9]/}\"\n\n  # Calculate\
    \ sum of all odd elements\n  local oddsum=$((odd+even))\n\n  # Return sum of all\
    \ odd elements in the even positions\n  for (( i=0; i <= $#; i++ )); do\n    ((\
    \ i % 2 ))\n    oddsum=$((oddsum + $((${integers[i]}+${integers[((i+1)%$#)]}))\
    \ ))\n  done\n\n  echo \"$oddsum\"\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0wq4o5n9.sh: line 19: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -n arr=$1\n  local sum=0\n\n  for i in \"${arr[@]}\"; do\n    if [[ $((\
    \ $i % 2 )) == 0 ]]; then\n      (( sum += i ))\n    fi\n  done\n\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpp9qf8rt9.sh: line 13: local: `5 8 7 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input=$1\n  local sum=$(echo $input | tr -s ' ' ' ' | tr ' ' ',' | cut\
    \ -d ',' -f 2 | sort -n | uniq -u | wc -l)\n  echo $sum\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local n=\"$1\"\n    echo \"$(( ${n//,/ }%2 ))\"\n}\n\ncandidate() {\n   \
    \ solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\")\
    \ = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpobrjqjgv.sh: line 14: 5 8 7 1%2 : syntax error in expression (error
    token is "8 7 1%2 ")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    awk -F '[ ]' '{ for (i = 2; i <= NF; ++i) { sum[i/2] += $i; } } END { for\
    \ (i = 1; i <= NF; ++i) { if (sum[i] % 2 == 0) print sum[i]; } }'\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=16 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=7 encoding='utf-8'>
  timestamp: 1660059192
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local n=$1 i=0 val\n    while [ \"$n\" -gt 0 ]; do\n        val=$(( $(nth\
    \ \"$n\" $1) ))\n        n=$(( $(nth \"$n\" $(( $n - 1 ))) ))\n        if (( val\
    \ % 2 == 1 )); then\n            (( val += $(( $(( $n - 1 )) )) ))\n        fi\n\
    \        (( $n = $(( $n - 1 )) ))\n    done\n    echo \"$val\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmps2mv85cb.sh: line 14: [: 5 8 7 1: integer expression expected

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=\"$1\"\n  local sum=0\n  local num\n  while read -r num; do\n\
    \    (( num % 2 == 0)) && sum+=num\n  done <<< \"$numbers\"\n  echo \"$sum\"\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpywo7sdc5.sh: line 17: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # Split string on spaces\n  local -a nums\n  IFS=$'\\n' read -r -a nums <<<\
    \ \"$1\"\n  local sum=0\n  for (( i=0; i<${#nums[@]} ); do\n    (( i % 2 == 0\
    \ )) && sum+=\"${nums[$i]}\"\n  done\n  echo \"${sum}\"\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbm_5p3xe.sh: line 17: syntax error near `;''

    /tmp/tmpbm_5p3xe.sh: line 17: `  for (( i=0; i<${#nums[@]} ); do''

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local IFS=\"$(printf '\\t')\"\n    local sum=0\n    local nums=$@\n    for\
    \ num in $nums; do\n        if [ \"$num\" -eq \"0\" ]; then\n            continue\n\
    \        fi\n        (( sum += 2 * $num ))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7h55885j.sh: line 17: [: 5 8 7 1: integer expression expected

    /tmp/tmp7h55885j.sh: line 20: ((: sum += 2 * 5 8 7 1 : syntax error in expression
    (error token is "8 7 1 ")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    local num=0\n    local odd=0\n\n \
    \   for ((i=0; i<${#numbers[@]}; i++)); do\n        if (( ${numbers[$i]} % 2 ));\
    \ then\n            num=$((num + ${numbers[$i]}))\n        else\n            odd=$((odd+${numbers[$i]}))\n\
    \        fi\n    done\n\n    sum=$(( ${num} + ${odd} ))\n    echo $sum\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnlq8ofw5.sh: line 19: ((: 5 8 7 1 % 2 : syntax error in expression
    (error token is "8 7 1 % 2 ")

    /tmp/tmpnlq8ofw5.sh: line 22: odd+5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    # Your code here\n    for el in $(echo $1 | tr ' ' ','); do\n        if [[\
    \ $(( ${#1} % 2 )) == 0 ]]\n        then\n            if [[ $(( $el % 2 )) ==\
    \ 0 ]]\n            then\n                echo -n $el\n            fi\n      \
    \  fi\n    done\n    echo -n \"0\"\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list=$1\n  # Sum up the evens\n  sum=$(echo $list | awk '{print ($2+$3)}')\n\
    \  # Filter out the odds\n  echo $list | awk '{print $1}' | while read line; do\n\
    \    if [ \"$line\" -eq \"$sum\" ] ; then\n      echo $line\n    fi\n  done\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local lines=($1)\n  local even=0\n  local odd=0\n  local num\n\n  local sum=0\n\
    \n  for ((i=0; i<${#lines[@]}; i+=2)); do\n    ((${even} < ${#lines[@]})) && {\n\
    \      ((${num}=${lines[i]}%2)) && {\n        ((even++)) && {\n          ((odd++))\
    \ && {\n            ((sum+=${num}))\n          }\n        }\n      }\n    }\n\
    \  }\n\n  echo \"${sum}\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3jx1k3a2.sh: line 30: syntax error near unexpected token `}''

    /tmp/tmp3jx1k3a2.sh: line 30: `  }''

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    declare -n arr=(\"$1\")\n    declare -i i\n    for (( i=0; i < \"${#arr[@]}\"\
    ; i++ )); do\n        if [[ \"${arr[i]}\" -gt 0 && \"${arr[i]}\" -le 3 ]]; then\n\
    \            echo \"${arr[i]}\"\n        fi\n    done\n}\n\ncandidate() {\n  \
    \  solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpu24s8i9v.sh: line 13: declare: arr: reference variable cannot be
    an array

    /tmp/tmpu24s8i9v.sh: line 16: [[: 5 8 7 1: syntax error in expression (error token
    is "8 7 1")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  echo $(( $(echo $1 | tr ' ' '+' | tr ',' '+') - $(echo $1 | tr ' ' '+' | awk\
    \ '{print $2}' | grep '^[02468]$' ))\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpge0u24i0.sh: line 13: unexpected EOF while looking for matching
    `)''

    /tmp/tmpge0u24i0.sh: line 32: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \tlocal input=\"$1\"\n\n\tlocal sum=\"${input#* }\"\n\n\t# If input starts with\
    \ \"-\", assume negative.\n\tif [[ \"${input:0:1}\" == \"-\" ]]; then\n\t\tinput=\"\
    $(echo \"${input}\" | sed 's/^-/-/g')\"\n\t\tsum=\"$(echo \"${sum}\" | sed 's/^-/-/g')\"\
    \n\tfi\n\n\t# Split the numbers on spaces, convert to integers, filter out odd\
    \ values, add and return.\n\techo \"$sum\" | sed \"s/ /+ /g\" | awk '{for (i=1;\
    \ i<NF; i++) if ($i % 2 == 1) print $i}'\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local IFS=$'\\n'\n  echo $(( $( echo \"$1\" | sed -e 's/^/0,/' -e 's/ /,/g'\
    \ | tr \",\" \"\\n\" | awk '{sum += $1 * $2}END {print sum}') ))\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local n=$1\n\n  echo \"$n\" | awk '{sum=0;for(i=1;i<=NF;i++){sum+=$i%2;}print\
    \ $sum}'\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input=\"$1\"\n  local sum\n  sum=0\n  for element in $input; do\n   \
    \ ((element%2)) && sum+=$element\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local array\n    IFS=$'\\n' array=\"$1\"\n    local result\n    result=0\n\
    \    for ((i=0; i < ${#array[@]}; i+=2)); do\n        if [[ $((${array[$i]}%2))\
    \ -eq 0 ]]; then\n            result+=\"${array[$i]}\"\n        fi\n    done\n\
    \    echo \"$result\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg61765_c.sh: line 18: 5 8 7 1%2: syntax error in expression (error
    token is "8 7 1%2")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local IFS=$'\\n'\n    echo \"$1\" | sed \"s/ /+/g;/^$/d\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local items=( ${1//[!0-9]/} )\n  local sum=0\n  for i in \"${items[@]}\"; do\n\
    \    (( i % 2 == 1 )) && (( sum += i ))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local arr=( $1 )\n  arr=( ${arr[@]/ / } )\n  local sum=0\n  for (( i=0; i<${#arr[@]}-1;\
    \ i++ )); do\n    if [ \"${arr[$i]%2}\" = \"0\" ]; then\n      sum=$(( $sum +\
    \ $(( $arr[$i] )) ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -n arr=$1\n  local i j\n  sum=0\n  for ((i=0; i < ${#arr[@]}; i++));\
    \ do\n    ((j=0))\n    while ((j<${#arr[@]})); do\n      if [[ ${arr[$i]} -eq\
    \ ${arr[$j] %% 2} ]]; then\n        ((j++))\n      else\n        break\n     \
    \ fi\n    done\n    if [[ $j -eq ${#arr[@]} ]]; then\n      ((sum+=${arr[$i]}))\n\
    \    fi\n  done\n  echo \"${sum}\"\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmprxky4av4.sh: line 13: local: `5 8 7 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local sum=0\n    for i in $1 do\n        if [ \"$i\" -ge \"2\" ] && [ \"\
    $i\" -le \"4\" ]; then\n            sum=$((sum+$i))\n        fi\n    done\n  \
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_laxmnkx.sh: line 15: syntax error near unexpected token `if''

    /tmp/tmp_laxmnkx.sh: line 15: `        if [ "$i" -ge "2" ] && [ "$i" -le "4" ];
    then''

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers_string=$1\n  # Convert the string to an array of integers\n \
    \ local numbers=( $numbers_string )\n  local sum=0\n  local i\n  for ((i=0; i<${#numbers[@]};\
    \ i++)); do\n    (( i % 2 ))\n    (( sum+=numbers[i] ))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local input=\"$1\"\n\n    local odd\n    odd=\"0\"\n    local even\n    even=\"\
    0\"\n\n    local total\n    total=\"0\"\n\n    for ((i=1; i<${#input}; i++));\
    \ do\n        odd=\"${input[$i]}\"\n        even=\"${input[$(($i+1))]}\"\n   \
    \     if (( $(echo \"${odd}\" | sed 's/\\(.*\\)/\\1/') % 2 == 0)); then\n    \
    \        total=\"${total}${even}\"\n        else\n            total=\"${total}${odd}\"\
    \n        fi\n    done\n\n    echo \"$total\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbb4s21w3.sh: line 26: ((: % 2 == 0: syntax error: operand expected
    (error token is "% 2 == 0")

    /tmp/tmpbb4s21w3.sh: line 26: ((: % 2 == 0: syntax error: operand expected (error
    token is "% 2 == 0")

    /tmp/tmpbb4s21w3.sh: line 26: ((: % 2 == 0: syntax error: operand expected (error
    token is "% 2 == 0")

    /tmp/tmpbb4s21w3.sh: line 26: ((: % 2 == 0: syntax error: operand expected (error
    token is "% 2 == 0")

    /tmp/tmpbb4s21w3.sh: line 26: ((: % 2 == 0: syntax error: operand expected (error
    token is "% 2 == 0")

    /tmp/tmpbb4s21w3.sh: line 26: ((: % 2 == 0: syntax error: operand expected (error
    token is "% 2 == 0")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=0\n    while [[ ${numbers} ]]; do\n     \
    \   ((sum+=$((${numbers[0]}%2==1 ? ${numbers[1]} : ${numbers[0]}))));\n      \
    \  numbers=${numbers[@]:1}\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3kuk_72l.sh: line 16: 5 8 7 1%2==1 ?  : 5 8 7 1: syntax error in
    expression (error token is "8 7 1%2==1 ?  : 5 8 7 1")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input; read -a input <<< \"$1\"\n  local output=0\n  for index in \"\
    ${!input[@]}\"; do\n    local value=${input[$index]}\n    local odd=1\n    while\
    \ (( value < ${input[$((index+1)%${#input[@]})] }); do\n      odd=$((odd+1))\n\
    \      value=$((value+1))\n    done\n    output=$((output+odd))\n  done\n  echo\
    \ $output\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpywejegxd.sh: line 18: syntax error near unexpected token `do''

    /tmp/tmpywejegxd.sh: line 18: `    while (( value < ${input[$((index+1)%${#input[@]})]
    }); do''

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local num_array=$(echo $1 |tr ' ' '\\n' |grep -E '^[0-9]+$');\n  local sum=0\n\
    \  for i in $(seq 0 $((${#num_array[@]} - 1)/2))\n  do\n    sum=$((sum + ${num_array[$i]}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwinj_jp7.sh: command substitution: line 15: syntax error near unexpected
    token `/2''

    /tmp/tmpwinj_jp7.sh: command substitution: line 15: `(${#num_array[@]} - 1)/2''

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  # echo \"numbers:$numbers\"\n  local sum=0\n  local x\n\
    \  for x; do\n    # echo \"$x\"\n    # echo \"[[ $x =~ ([0-9])([1-9]) ]]\"\n \
    \   # echo \"$x\"\n    if [[ $x =~ ([0-9])([1-9]) ]]; then\n      (( sum += ${BASH_REMATCH[2]}\
    \ ))\n    elif [[ $x =~ ([1-9]) ]]; then\n      (( sum += x ))\n    else\n   \
    \   echo \"$x\"\n      echo \"$sum\"\n      echo \"$numbers\"\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6kpmcitf.sh: line 24: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # Split each argument into an array of numbers\n  local numbers=( \"$1\" )\n\
    \  # Filter out all even positions by comparing against the modulus of 2\n  local\
    \ filtered=( $( echo \"${numbers[@]} % 2\" | sed \"s/ /\\n/g\" ) )\n  # Return\
    \ the sum of the elements that are in even positions\n  echo \"${filtered[@]}\"\
    \ | tr -d \"\\n\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list=\"$1\"\n  echo \"${list#* }\"\n  echo \"${list#* }\" | tr -d ' '\
    \ | cut -d\\  -f3\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # Your code here\n  numbers=$1\n  for i in $numbers; do\n    ((i %% 2)) &&\
    \ echo $i\n  done\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpljgfxw_k.sh: line 16: ((: i %% 2: syntax error: operand expected
    (error token is "% 2")

    /tmp/tmpljgfxw_k.sh: line 16: ((: i %% 2: syntax error: operand expected (error
    token is "% 2")

    /tmp/tmpljgfxw_k.sh: line 16: ((: i %% 2: syntax error: operand expected (error
    token is "% 2")

    /tmp/tmpljgfxw_k.sh: line 16: ((: i %% 2: syntax error: operand expected (error
    token is "% 2")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  while read -r number; do\n    (( (sum+=number)\
    \ ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=35 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=32 encoding='utf-8'>
  timestamp: 1660059192
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \tlocal arr=($1)\n\tarr=(${arr[*]} ${arr[@]:1})\n\tarr=( \"${arr[@]:1}\" \"${arr[*]}\"\
    \ )\n\tarr=(${arr[@]:1} ${arr[@]:1} ${arr[@]:1} ${arr[@]:1} )\n\tarr=(${arr[@]:2:1}\
    \ ${arr[@]:1:2} )\n\tarr=(${arr[@]:2:1} ${arr[@]:2:1} )\n\tarr=(${arr[@]:3:3:1}\
    \ ${arr[@]:3:2:1} )\n\tarr=(${arr[@]:3:3:1} ${arr[@]:3:3:1} ${arr[@]:3:3:1} )\n\
    \tarr=(${arr[@]:4:3:1:1} ${arr[@]:4:3:2:1} ${arr[@]:4:3:3:1} ${arr[@]:4:3:4:3:1}\
    \ )\n\tarr=(${arr[@]:5:3:1:1:1} ${arr[@]:5:3:2:1:2} ${arr[@]:5:3:3:1:2} ${arr[@]:5:3:4:3:1:2}\
    \ ${arr[@]:5:3:5:3:1:2} )\n\tarr=(${arr[@]:6:1:1:1:1} ${arr[@]:6:1:2:1:2} ${arr[@]:6:1:3:1:2}\
    \ ${arr[@]:6:1:4:1:2} ${arr[@]:6:1:5:1:2} ${arr[@]:6:1:6:1:2} ${arr[@]:6:1:7:1:2}\
    \ ${arr[@]:6:1:8:1:2} ${arr[@]:6:1:9:1:2} ${arr[@]:6:1:10:1:2} ${arr[@]:6:1:11:1:2}\
    \ ${arr[@]:6:1:12:1:2} ${arr[@]:6:1:13:1:2} ${arr[@]:6:1:14:1:2} ${arr[@]:6:1:15:1:2}\
    \ ${arr[@]:6:1:16:1:2} ${arr[@]:6:1:17:1:2} ${arr[@]:6:1:18:1:2} ${arr[@]:6:1:19:1:2}\
    \ ${arr[@]:6:1:20:1:2} ${arr[@]:6:1:21:1:2} ${arr[@]:6:1:22:1:2} ${arr[@]:6:1:23:1:2}\
    \ ${arr[@]:6:1:24:1:2} ${arr[@]:6:1:25:1:2} ${arr[@]:6:1:26:1:2} ${arr[@]:6:1:27:1:2}\
    \ ${arr[@]:6:1:28:1:2} ${arr[@]:6:1:29\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpm_18vlpc.sh: line 26: syntax error near unexpected token `(''

    /tmp/tmpm_18vlpc.sh: line 26: `candidate() {''

    /tmp/tmpm_18vlpc.sh: line 27: solution: command not found

    /tmp/tmpm_18vlpc.sh: line 28: syntax error near unexpected token `}''

    /tmp/tmpm_18vlpc.sh: line 28: `}''

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local i\n  local sum\n  local n\n  local x\n\n  n=${1:-1}\n  sum=0\n  for ((\
    \ i=0; i < ${#n}; i++ )); do\n    x=${n:$i:1}\n    if [[ ${x:-0} == 2 ]]; then\n\
    \      sum=$(( sum + x ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n \
    \   solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local i j\n    local sum\n    local nums\n    read -a nums <<<\"$1\"\n  \
    \  for ((i = 0; i < \"${#nums[@]}\"; i=i+2)); do\n        ((sum += nums[i]))\n\
    \    done\n    echo \"${sum}\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local L=\"$1\"\n  local ODD=0\n  for i in $L; do\n    ODD=$((ODD+i))\n    [\
    \ $((ODD%2)) -eq 0 ] && echo \"$ODD\"\n  done\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -n arr=$1\n  local -n sum=$2\n  local -i n=${#arr[@]}\n  for ((i=1; i<=$n;\
    \ i++)) ; do\n    sum+=${arr[i - 1]}\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp976om06x.sh: line 13: local: `5 8 7 1'': invalid variable name
    for name reference

    /tmp/tmp976om06x.sh: line 14: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \tlocal IFS=' ' sum=0\n\tfor word in $@; do\n\t\t(( sum += ${word:0:2} ))\n\t\
    done\n\techo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local IFS=$'\\n';\n  local sum=0\n  for i in $(echo $1 |sed 's/ /\" \"/g');\
    \ do\n    if [[ $(($i % 2)) -eq 0 ]]; then\n      sum=$((sum + $i))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8rri5ro3.sh: line 16: 5" "8" "7" "1 % 2: syntax error: invalid
    arithmetic operator (error token is "" "8" "7" "1 % 2")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    mapfile -t a <<< \"$1\"\n    for i in \"${a[@]:2}\"; do\n        (( odd_sum+=$i\
    \ )); done\n    echo \"$odd_sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  numbers=$1\n\n  local odds=()\n  for i in $numbers; do\n    odds+=($((i + 2)))\n\
    \  done\n  echo \"${odds[@]}\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local oddsum=0\n  while [[ ${#numbers} -gt 0 ]]; do\n \
    \   local index=`expr index \"$numbers\" 2`\n    local oddindex=`expr index \"\
    $numbers\" \"$index\"`\n    oddsum=$((oddsum + $numbers[$oddindex]))\n    numbers=${numbers/$index/$oddindex}\n\
    \  done\n  echo $oddsum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbi5gqhxn.sh: line 18: oddsum + 5 8 7 1[0]: syntax error in expression
    (error token is "8 7 1[0]")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -n list=$1\n    local sum=0\n    for i in ${!list[@]}; do\n       \
    \ if [[ ${list[i]} -eq $((i%2)) ]]; then\n            sum=$((sum + ${list[i]}))\n\
    \        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpauz9b5e2.sh: line 13: local: `5 8 7 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input=\"$1\"\n\n  local odds=\"${input:2:#}\"\n  local evens=\"${input:1:#}\"\
    \n\n  echo \"$(($evens + $odds))\"\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpc53lnamh.sh: line 15: input: #: syntax error: operand expected
    (error token is "#")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  echo $1 | grep -o '\\<\\(.*\\)\\>' | sed 's/ .*//' | sort -u | wc -l\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local nums=$( echo \"$1\" | sed -e \"s/ /, /g\" )\n  local i=$( echo \"${nums//\
    \ / }\" | sed -e \"s/ /, /g\" | awk '{ print ($1+$2+$3+$4+$5+$6+$7+$8+$9+$10)\
    \ }' | sed 's/,//' )\n  echo $i\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local sum=0\n    local nums\n    IFS=$'\\n' read -a nums <<< \"$1\"\n   \
    \ local i=0\n    while [ \"$i\" -lt \"${#nums[@]}\" ]; do\n        if [ \"${nums[$i]}\"\
    \ -eq \"${nums[$(($i - 1))]}\" ]; then\n            ((sum+=nums[$i]))\n      \
    \  fi\n        ((i++))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmjzbcnql.sh: line 18: [: 5 8 7 1: integer expression expected

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local arg=\"$1\"\n    local -n arr=\"$arg\"\n    local sum=0\n    for ((\
    \ i=1; i<${#arr[@]}; i++ )); do\n        if [ ${arr[$i]} -eq ${arr[$((i-1))]}\
    \ ]; then\n            sum=$((sum+2))\n        else\n            sum=$((sum+1))\n\
    \        fi\n    done\n    echo \"${sum}\"\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3fti0d13.sh: line 14: local: `5 8 7 1'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list=\"$1\"\n  local sum=\"${list::-1}\"\n\n  for i in $list; do\n  \
    \  if [[ ${i} -ge ${#list} ]]; then\n      sum=$((sum + $i))\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsj7oa3et.sh: line 18: 5 8 7 : syntax error in expression (error
    token is "8 7 ")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local input=\"$1\"\n    local sum=0\n\n    for e in $input; do\n        ((\
    \ sum+=e ))\n    done\n\n    (( sum+=1 ))\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local x=\"$1\"\n    local sum=0\n    while read num; do\n        [[ ${num}%2\
    \ = 0 ]] && sum=$((sum + num))\n    done\n    echo \"${sum}\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=50 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=34 encoding='utf-8'>
  timestamp: 1660059192
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local x; local sum\n  x=\"${1//[^ ]}\"; echo \"${x}\" | while read -r x; do\
    \ sum=$(( sum + $x )); done; echo \"$sum\"\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmps0r4c839.sh: line 14: sum +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local xs xs0 result\n    xs0=\"$1\"\n    [[ $xs0 =~ ([0-9]+)( )($((${BASH_REMATCH[1]%%\
    \ *}))( )([0-9]+)( )($((${BASH_REMATCH[3]%% *}))( )([0-9]+)( )($((${BASH_REMATCH[4]%%\
    \ *})))( *) ]]; then\n        xs=\"${BASH_REMATCH[5]}${BASH_REMATCH[6]}\"\n  \
    \  else\n        xs=\"$xs0\"\n    fi\n    result=$((${xs//[!0-9]} + (${xs//[0-9]}%2)))\n\
    \    echo \"$result\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphmk_7p50.sh: line 15: unexpected EOF while looking for matching
    `)''

    /tmp/tmphmk_7p50.sh: line 40: unexpected argument to conditional binary operator

    /tmp/tmphmk_7p50.sh: line 40: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local a b\n    a=\"${1% *}\" # remove everything up to and including the\
    \ first space\n    b=\"${a// }\" # remove everything up through the first space\n\
    \    local c\n    for ((c=0; c<${#b}; c++)); do\n        if [[ \"${b:$c:1}\" ==\
    \ \"1\" ]]; then\n            a=\"$a\"$((b+1))\n        fi\n    done\n    echo\
    \ \"$a\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n\n    # Convert list of numbers into space-separated string.\n\
    \    numbers=\"${numbers}\";\n\n    # Loop through space-separated string and\
    \ store odd positions inside array.\n    for i in $(seq 0 $((${#numbers} - 1)))\n\
    \    do\n        # Store even positions inside array.\n        if [[ \"${numbers:$i:2}\"\
    \ == \"0\" ]]\n        then\n            even+=(\"$((i + 1))\")\n        fi\n\
    \    done\n\n    # Print sum array elements.\n    echo \"${even[@]}\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    # your code here\n    numbers=$( echo \"$1\" | cut -d \" \" -f 1-2 )\n  \
    \  sum=0\n    for i in $numbers; do\n        if [ $(( $i % 2 )) -eq 0 ]; then\n\
    \            sum=$(( $sum + $i ))\n        fi\n    done\n    echo \"$sum\"\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    IFS=$'\\n' read -r -a array <<< \"$1\"\n    sum=0\n    for i in \"${array[@]}\"\
    ; do\n        if [[ \"$i\" == 3 ]]; then\n            ((sum+=i)) || break\n  \
    \      elif [[ \"$i\" == 5 ]]; then\n            ((sum+=i)) || break\n       \
    \ fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list=\"$1\"\n\n  echo \"$(sed 's/ //g' <<<\"$list\")\" |\n    awk '\n\
    \        BEGIN {\n          sum = 0;\n        }\n\n        /^[0-9]+$/ {\n    \
    \      n = split($0,a,\" \");\n          for (i=1; i<=n; i++) {\n            if\
    \ (a[i] % 2 != 0) {\n              sum += a[i];\n            }\n          }\n\
    \        }\n\n        END {\n          print sum;\n        }'\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \tlocal list=\"${1}\"\n\tlocal -n result=0\n\tlocal i\n\twhile read -r i; do\n\
    \t\t(( result = result + i ))\n\tdone < <(echo \"$list\" |grep -oP '\\d+(?= \\\
    d)' | grep -v \"^$\" | sort -n)\n\techo \"$result\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp7anjk4bw.sh: line 14: local: `0'': invalid variable name for name
    reference

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    sum=0\n    for i in $1; do\n        if [ $i -lt $(( i + 1 )) ]; then\n  \
    \          (( sum += $i ))\n        else\n            (( sum += 2 * $i ))\n  \
    \      fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \tlocal integers\n\tintegers=( \"$1\" )\n\tlocal sum=0\n\tlocal odds\n\todds=()\n\
    \tlocal position\n\tposition=( \"${integers[@]:0:3}\" )\n\tfor (( i=0; i<${#integers[@]};\
    \ i++ )); do\n\t\t(( i == ${#integers[@]} )) && break\n\t\t(( i % 2 == 0 )) &&\
    \ continue\n\t\t(( odds+=(position[i]) ))\n\tdone\n\t(( odds != ${#integers[@]}\
    \ )) && {\n\t\tlocal odds_string\n\t\todds_string=( \"${odds[@]}\" )\n\t\tprintf\
    \ \"%s\" \"${odds_string[@]}\" | tr \" \" \"-\"\n\t} | bc -l\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input=\"$(echo \"$1\" | sed 's/ //g')\"\n  local odd_sum=0\n  local max_odd=0\n\
    \  local max_even=0\n  local position\n\n  echo \"$input\" | while read -r line\n\
    \  do\n    position=\"$(echo $line | cut -d\\\" -f1)\"\n    ((position % 2==0))\
    \ && odd_sum+=$(echo $line | cut -d\\\" -f2)\n    ((position % 2==1)) && max_odd=1\
    \ && max_even=1 || max_odd=0 && max_even=0\n  done\n\n  echo $odd_sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  declare -a nums=(\"${@: -1}\")\n  declare numsum=0\n  local num\n  for num\
    \ in \"${nums[@]}\"; do\n    if (( (num % 2) == 0 ))\n    then\n      numsum=\"\
    $numsum + $num\"\n    fi\n  done\n  echo $numsum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo1h3ja77.sh: line 17: ((: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    numbers=$(echo $1 | tr \" \" \"\\n\")\n    echo \"${numbers[0]} + ${numbers[1]}\
    \ * ${numbers[2]} * ${numbers[3]} * ${numbers[4]}\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    # initialize total to 0\n    local total=0\n    # split the input on whitespace\
    \ into a local array\n    local IFS=' ' read -r -a array <<< \"$1\"\n    # iterate\
    \ over the array, counting up odd numbers at even positions\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        if [[ ${array[$i]} % 2 ]]; then\n            total=$((${total}\
    \ + ${array[$i]}))\n        fi\n    done\n    echo \"$total\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd7cnxvqo.sh: line 19: conditional binary operator expected

    /tmp/tmpd7cnxvqo.sh: line 19: syntax error near `%''

    /tmp/tmpd7cnxvqo.sh: line 19: `        if [[ ${array[$i]} % 2 ]]; then''

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # Your code goes here\n  local IFS= read -r -a array <<< $1\n  local sum=0\n\
    \  for i in \"${array[@]}\"; do\n    if (( ${i%2} )); then\n      ((sum+=i))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkm0jszz4.sh: line 14: local: `-r'': not a valid identifier

    /tmp/tmpkm0jszz4.sh: line 14: local: `-a'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local input=\"$1\"\n    local i=0\n    local odd\n    local sum\n\n    while\
    \ [ -n \"${input:$i}\" ] ; do\n        odd=${input:$i:2}\n        (( i+=2 ))\n\
    \        if [ \"$odd\" == \"0\" ] ; then\n            sum=$(( sum + $odd ))\n\
    \        fi\n    done\n\n    return $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local i\n    # Iterate through the list only once and save in memory\n  \
    \  local sum=0\n    for i in $@; do\n        if [[ $((i%2)) -eq 0 ]]; then\n \
    \           ((sum+=i))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local IFS=\"$(printf '%s ' \"$1\")\"\n  local -i n=\"${#IFS}\"\n  local sum=0\n\
    \  local i=0 j=0 k=0\n  local input\n  for input in \"$@\"; do\n    i=$((i+1))\n\
    \    if [[ $i -eq $n ]]; then\n      sum=$((sum+input))\n      continue\n    fi\n\
    \    k=$((j+1))\n    while [[ $k -ge $n && $((k+2)) -le $i ]]; do\n      if [[\
    \ $((k%2)) -eq 0 ]]; then\n        input=$((input + $IFS[j]))\n      fi\n    \
    \  j=$((j+1))\n      k=$((k+1))\n    done\n    sum=$((sum+input))\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpflpbqwuh.sh: line 32: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local list=\"$1\"\n    local sum\n    for (( i = 0; $i -lt ${#list[*]} &&\
    \ $i -gt 0; )); do\n        if [[ \"${list[$i]}\" == *\"1\"* ]]; then\n      \
    \      (( sum +=\"${list[$i]}\" ))\n            (( i++ ))\n        else\n    \
    \        (( sum -=\"${list[$i]}\" ))\n        fi\n    done\n    echo \"${sum}\"\
    \n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpntce2lmy.sh: line 15: ((: 0 -lt 1 && 0 -gt 0: syntax error in expression
    (error token is "1 && 0 -gt 0")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=\"${1}\"\n\n    local number\n    local sum=0\n\n    # Loop\
    \ through the list of numbers.\n    for number in $numbers; do\n        (( sum\
    \ += $number % 2 ))\n    done\n\n    echo \"${sum}\"\n}\n\ncandidate() {\n   \
    \ solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\")\
    \ = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    declare -a array\n    local sum=0\n    IFS=$'\\n' read -rd '' -a array <<<\
    \ \"$1\"\n    for idx in \"${!array[@]}\"; do\n        if [ ${array[idx]} -eq\
    \ ${array[idx]} ] && [[ ${array[idx]} -eq ${array[idx-1]} ]]; then\n         \
    \   sum=$((sum + array[idx]))\n        fi\n    done\n    echo \"$sum\"\n}\n\n\
    candidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2bgeziff.sh: line 17: [: too many arguments

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local odds even\n  for (( i = 0; i < ${#1}; ++i )); do\n    (( odds[i] = ${1[i]}\
    \ ))\n    (( even[i] = ${1[(2 * i) + 1]} ))\n  done\n  local sum\n  for i in $(seq\
    \ 1 ${#odds}); do\n    (( sum += ${odds[$i]} + ${even[$i]} ))\n  done\n  echo\
    \ \"${sum}\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4l9xwsxi.sh: line 15:  odds[i] = ${1[i]} : bad substitution

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  echo \"$(printf \"%.0f\" $((${1//[!0-9]} % 2)))\"\n}\n\ncandidate() {\n   \
    \ solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\")\
    \ = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n\n  echo \"$(grep -E -o '[0-9]+' <<< \"${numbers}\")\"\n\
    \  echo \"$(grep -E -o '[0-9]+' <<< \"${numbers//[#]/ }\")\"\n\n  echo \"$(grep\
    \ -E -o '[0-9]+' <<< \"${numbers//[#]/ }\" | grep -E -o '[0-9]+')\"\n  echo \"\
    $(grep -E -o '[0-9]+' <<< \"${numbers//[#]/ }\" | grep -E -o '[0-9]+' | grep -E\
    \ -o '[0-9]+')\"\n  echo \"$(grep -E -o '[0-9]+' <<< \"${numbers//[#]/ }\" | grep\
    \ -E -o '[0-9]+' | grep -E -o '[0-9]+' | grep -E -o '[0-9]+')\"\n  echo \"$(grep\
    \ -E -o '[0-9]+' <<< \"${numbers//[#]/ }\" | grep -E -o '[0-9]+' | grep -E -o\
    \ '[0-9]+' | grep -E -o '[0-9]+' | grep -E -o '[0-9]+')\"\n  echo \"$(grep -E\
    \ -o '[0-9]+' <<< \"${numbers//[#]/ }\" | grep -E -o '[0-9]+' | grep -E -o '[0-9]+'\
    \ | grep -E -o '[0-9]+' | grep -E -o '[0-9]+' | grep -E -o '[0-9]+')\"\n  echo\
    \ \"$(grep -E -o '[0-9]+' <<< \"${numbers//[#]/ }\" | grep -E -o '[0-9]+' | grep\
    \ -E -o '[0-9]+' | grep -E -o '[0-9]+' | grep -E -o '[0-9]+' | grep -E -o '[0-9]+'\
    \ | grep -E -o '[0-9]+')\"\n  echo \"$(grep -E -o '[0-9]+' <<< \"${numbers//[#]/\
    \ }\" | grep -E -o '[0-9]+' | grep -E -o '[0-9]+' | grep -E -o '[0-9]+' | grep\
    \ -E -o '[0-9]+' | grep -E -o '[0-9]+' | grep -E -o '[0-9]+')\"\n  echo \"$(grep\
    \ -E -o '[0-9]+' <<< \"${numbers//[#]/ }\" | grep -E -o '[0-9]+' | grep -E -o\
    \ '[0-9]+' | grep -E -o '[0-9]+' | grep -E -o '[0-9]+' | grep -E -o '[0-9]+' |\
    \ grep -E -o '[0-9]+')\"\n  echo \"$(grep -E -o '[0-9]+' <<< \"${numbers//[#]/\
    \ }\" | grep -E -o '[0-9]+' | grep -E -o '[0-9]+' | grep -E -o '[0-9]+' | grep\
    \ -E -o '[0-9]+' | grep -E -o '[0-9]+' | grep -E -o '\n}\n\ncandidate() {\n  \
    \  solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqlthge26.sh: line 26: unexpected EOF while looking for matching
    `''''

    /tmp/tmpqlthge26.sh: line 45: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local NUMBERS=\"$1\"\n  shift\n  local ODD_ELEMENTS\n  local EVEN ELEMENTS\n\
    \  local SUM\n  local COUNTER\n\n  ODD_ELEMENTS=()\n  COUNT=0\n  SUM=0\n\n  for\
    \ NUMBER in $NUMBERS; do\n    ((COUNTER+=NUMBER))\n    ((COUNTER%2==0)) && ODD_ELEMENTS+=(\"\
    $NUMBER\")\n  done\n\n  for ELEMENT in $ODD_ELEMENTS; do\n    ((COUNTER%2!=0))\
    \ && SUM+=\"$ELEMENT\"\n  done\n\n  echo \"$SUM\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local IFS=' ' arr=$1\n\n    IFS=$'\\n' arr=( $arr )\n    sum=0\n    for i\
    \ in \"${arr[@]}\"; do\n        if [[ $i -ge 2 ]]; then\n            ((sum+=i))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqqq4jtk5.sh: line 18: [[: 5 8 7 1: syntax error in expression (error
    token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local nums sum\n  read -r -a nums <<< \"$1\"\n  sum=0\n\n  for num in \"${nums[@]:2}\"\
    ; do\n    (( sum += num % 2 ))\n  done\n\n  echo \"$sum\"\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numlist=\"$1\"\n  local sum=0\n  local i\n  for i in $numlist; do\n \
    \   (( sum += $i ))\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local arr=$1\n  local sum=0\n  for i in $(seq 0 $((${#arr[@]} - 1))); do\n\
    \    sum=$((sum + ${arr[$i]}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7buo6unz.sh: line 16: sum + 5 8 7 1: syntax error in expression
    (error token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local x=\"$1\"\n    local odds=$(x=\"${x}\" sed -n -e 's/^\\(^\\|$\\)/\\\
    1\\n/g' | tr '\\n' '|' | cut -d '|' -f 2-)\n    echo \"${x}\" | grep -Eo \"($(echo\
    \ \"$odds\")\\[[^]]+\\])\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=48 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=44 encoding='utf-8'>
  timestamp: 1660059192
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local -n arr=() IFS=$'\\n' arr=($1) # split each argument on newlines, store\
    \ in array\n    # check each position in the array and add any odd elements to\
    \ the sum\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [ $((i\
    \ % 2)) -eq 0 ]; then\n            sum=$((sum+i))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0ph9a9d2.sh: line 13: local: arr: reference variable cannot be
    an array

    /tmp/tmp0ph9a9d2.sh: line 13: local: `

    '': invalid variable name for name reference

    /tmp/tmp0ph9a9d2.sh: line 13: local: arr: reference variable cannot be an array

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local -a numbers=( $1 )\n  local sum=0\n\n  for (( i = 0; i < ${#numbers[@]};\
    \ ++i )); do\n    (( i % 2 == 0 )) && sum+=${numbers[$i]}\n  done\n\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numList\n    local sum\n\n    numList=$1\n    sum=0\n    for i in $numList;\
    \ do\n        if (( $i % 2 )); then\n            sum=$(($sum + $i))\n        fi\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: -1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local list=$1\n  local result=0\n\n  while read -r val; do\n    local idx=0\n\
    \    while ((idx < ${#list[*]}) && (\"${list[idx]}\" != \"$val\")); do\n     \
    \ idx=$((idx+1))\n    done\n    ((idx < ${#list[*]}))\n    ((idx % 2)) && result+=\"\
    $val\"\n  done\n  echo $result\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=25 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=3 encoding='utf-8'>
  timestamp: 1660059192
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local i sum\n  IFS=' ' read -a array <<< \"$1\"\n  for ((i=0; i < ${#array[@]};\
    \ ++i)); do\n    if (( ${array[$i]} % 2 == 0 )); then\n      sum=$((sum + ${array[$i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=\"${1}\"\n    local sum=0\n\n    for i in $(echo \"${numbers}\"\
    |grep -v \"^$\"|sed -e 's/\\([0-9]*\\)/ \\1 /'|sort -n -k2|sed 's/ / + /g')\n\
    \    do\n        if [[ $i =~ ^0 ]]\n        then\n            continue\n     \
    \   fi\n\n        if [[ $i -eq $((${i}+1)) ]]\n        then\n            continue\n\
    \        fi\n\n        if [[ $((i%2)) -ne 0 ]]\n        then\n            sum=$((sum+i))\n\
    \        fi\n    done\n\n    echo \"$sum\"\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp80cn31yf.sh: line 23: [[: +: syntax error: operand expected (error
    token is "+")

    /tmp/tmp80cn31yf.sh: line 28: +: syntax error: operand expected (error token is
    "+")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    declare -i n total=0\n    \n    mapfile -t lines < <(grep -n \"^[[:blank:]]*$1\"\
    \ <<< \"$1\")\n    \n    for ((i=${lines[0]}; i<${#lines[@]}; i++)); do\n    \
    \    [[ ${lines[$i]}%2 ]] && total+=$((${lines[$i]} + ${total}))\n    done\n \
    \   echo \"$total\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxc2qcl9r.sh: line 17: ((: i=1:5 8 7 1: syntax error in expression
    (error token is ":5 8 7 1")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local sum=0\n    for ((i=0; i<${#1}; i++)); do\n        # Check if in even\
    \ position\n        if (( i % 2 )); then\n            # Add only if in even position\n\
    \            ((sum+=${1:$i:1}))\n        fi\n    done\n    echo \"${sum}\"\n}\n\
    \ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpomhmc5io.sh: line 18: ((: sum+= : syntax error: operand expected
    (error token is "+= ")

    /tmp/tmpomhmc5io.sh: line 18: ((: sum+= : syntax error: operand expected (error
    token is "+= ")

    /tmp/tmpomhmc5io.sh: line 18: ((: sum+= : syntax error: operand expected (error
    token is "+= ")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  # Split into words to simplify logic\n  local numbers=$1\n\n  # Start by making\
    \ a list of the odd numbers that are in even positions\n  local odds=$(cat numbers\
    \ | grep -o \"[0-9][0-9]*\" | grep -o \"[0-9]*\" | grep -v \"^$\" | grep -v \"\
    ^$\" | grep -v \"^$\" | grep -v \"^$\" | grep -o \"[0-9]*$\")\n\n  # Now calculate\
    \ the sum of the odd numbers and return it\n  local sum=$(echo $odds | tr \" \"\
    \ \"+\")\n  echo -n \"$sum\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate\
    \ \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n\
    \    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\"\
    \ ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3\
    \ 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'cat: numbers: No such file or directory

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local pos=0\n  while [ $pos -lt ${#numbers}\
    \ ]; do\n    local num=\"${numbers[$pos]}\"\n    sum=$(( ${sum} + ${num%%2} ));\
    \ pos=$(( pos + 1 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n\
    \    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxv2mvc_2.sh: line 18: 0 + 5 8 7 1 : syntax error in expression
    (error token is "8 7 1 ")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local n=\"$1\"\n  local odd=0\n  local even=0\n  local sum=0\n  for item in\
    \ $n; do\n    ((odd += ((item % 2) != 0)? 1: 0))\n    ((even += ((item % 2) ==\
    \ 0)? 1: 0))\n    sum+=item\n  done\n  echo $((odd * 2))\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n  local sum=0\n  local even=0\n  local odd=1\n  while [ $#\
    \ -gt 0 ]; do\n    local element=${numbers}\n    local index=0\n    while [ $index\
    \ -le $(($element#$odd)) ]; do\n      if [ $(($index%2)) -ne 0 ]; then\n     \
    \   sum=$(($sum+$element))\n      fi\n      (( index++ ))\n    done\n    odd=$(($odd+1))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3\
    \ 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp93i2iic6.sh: line 20: 5 8 7 1#1: syntax error in expression (error
    token is "8 7 1#1")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local LIST=\"$1\"\n    echo \"$(($( echo \"$LIST\" | cut -d' ' -f2 | cut\
    \ -d':' -f2 | sed 's/,/+/g' | bc ))\"\n}\n\ncandidate() {\n    solution \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n   \
    \ [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\"\
    ) = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuqkie6bw.sh: line 29: unexpected EOF while looking for matching
    `"''

    /tmp/tmpuqkie6bw.sh: line 33: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  mapfile -t arr < <(echo \"$1\")\n  echo \"${arr[@]}\"\n}\n\ncandidate() {\n\
    \    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local arr1=( $1 )\n  local sum=0\n  for i in ${arr1[@]};do\n    if [[ ${i}\
    \ -eq $(( i % 2 )) ]];then\n      sum=$(( sum + i ))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n   \
    \ [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"\
    5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23\
    \ 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local n a b c sum evens odds\n  read -a n <<< \"$1\"\n  a=$(( ${n[0]} + ${n[1]}\
    \ ))\n  b=$(( ${n[0]} - 1 ))\n  c=$(( ${n[1]} - 1 ))\n  sum=$(( a + b ))\n  evens=\"\
    $( printf '%s,' \"${n[@]:$c}\" )\"\n  odds=\"$( printf '%s,' \"${n[@]:$a}\" )\"\
    \n  echo \"$sum\"\n  echo \"$evens\"\n  echo \"$odds\"\n}\n\ncandidate() {\n \
    \   solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\"\
    ) = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    set -- $1\n    while [ $# -gt 0 ]; do\n        odd=$(( $2 % 2 ))\n      \
    \  if [ $odd -eq 0 ]; then\n            even=$(( $2 % 2 ))\n            echo -n\
    \ $even\n        fi\n        shift\n    done\n}\n\ncandidate() {\n    solution\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\"\
    \ ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13\
    \ 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate\
    \ \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n   \
    \ [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpywqszoho.sh: line 15: % 2 : syntax error: operand expected (error
    token is "% 2 ")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  awk '{\n    for (i=1; i<=NF; i++) {\n      sum += $i\n      if ($i%2==0) {\n\
    \        nums[++k] = $i\n      }\n    }\n  }\n  END {\n    print sum+k\n  }' <<<\
    \ \"$1\"\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \    local numbers=$1\n    local sum=$(echo $numbers \\\n        | awk '{sum+=$1}\
    \ END {print sum}')\n    echo $sum\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local str=$1\n  local sum=0\n  local even\n  local i\n  local elem\n\n  for\
    \ i; do\n    elem=${str:i:1}\n    even=$((i%2))\n    if [ \"$even\" == \"0\" ];\
    \ then\n      sum=$((sum + elem))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8\
    \ 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate\
    \ \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[\
    \ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"\
    23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph0wjurda.sh: line 20: str: 5 8 7 1: syntax error in expression
    (error token is "8 7 1")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local input=$1\n\n  local total=0\n  for i in $(seq 0 $((${#input} - 1)));\
    \ do\n    (( (i % 2) == 0 )) && total=$(( total+$(input[$i]) ))\n  done\n  echo\
    \ $total\n}\n\ncandidate() {\n    solution \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[ $(candidate \"3 3 3 3 3\"\
    ) = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4 8\") = \"0\" ]]\n    [[ $(candidate\
    \ \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate \"3 13 2 9\") = \"3\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0jchj8jd.sh: line 17: input[0]: command not found

    /tmp/tmp0jchj8jd.sh: line 17: total+ : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660059187
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers, return the sum of all\
    \ of the odd elements that are in even positions.\n# Examples\n# >>> $(solution\
    \ \"5 8 7 1\")\n# \"12\"\n# >>> $(solution \"3 3 3 3 3\")\n# \"9\"\n# >>> $(solution\
    \ \"30 13 24 321\")\n# \"0\"\n#\n# $1 is a space-separated list\nsolution() {\n\
    \  local numbers=$1\n\n  if [ -z \"${numbers}\" ]\n  then\n    echo \"You must\
    \ provide the list of numbers as space-separated numbers\"\n    return 1\n  fi\n\
    \n  local number\n  local sum=0\n  for number in \"${numbers[@]}\"\n  do\n   \
    \ if [ \"${number%2}\" == \"0\" ]\n    then\n      sum=$((${sum} + ${number}))\n\
    \    fi\n  done\n\n  echo \"${sum}\"\n}\n\ncandidate() {\n    solution \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"5 8 7 1\") = \"12\" ]]\n    [[\
    \ $(candidate \"3 3 3 3 3\") = \"9\" ]]\n    [[ $(candidate \"30 13 24 321\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5 9\") = \"5\" ]]\n    [[ $(candidate \"2 4\
    \ 8\") = \"0\" ]]\n    [[ $(candidate \"30 13 23 32\") = \"23\" ]]\n    [[ $(candidate\
    \ \"3 13 2 9\") = \"3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059187

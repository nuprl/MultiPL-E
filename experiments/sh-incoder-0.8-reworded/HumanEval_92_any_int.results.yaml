language: sh
name: HumanEval_92_any_int
results:
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    [ $# = 1 ] && return 1\n    [ $# =\
    \ 2 ] && return 0\n    [ $# = 3 ] && return 0\n\n    # Check if any of the numbers\
    \ are integers. Use float to ensure they are floats.\n    local var1=$1\n    local\
    \ var2=$2\n    local var3=$3\n    local num1=$((var1))\n    local num2=$((var2))\n\
    \    local num3=$((var3))\n    if [[ $num1 =~ ^[0-9]+$ ]] ; then\n        if [[\
    \ $num2 =~ ^[0-9]+$ ]] ; then\n            if [[ $num3 =~ ^[0-9]+$ ]] ; then\n\
    \                return 0\n            fi\n        fi\n    fi\n    if [[ $num2\
    \ =~ ^[0-9]+$ ]] ; then\n        return 0\n    fi\n    if [[ $num3 =~ ^[0-9]+$\
    \ ]] ; then\n        return 0\n    fi\n    if [[ $num1 -gt $num2 ]] ; then\n \
    \       return 1\n    fi\n    if [[ $num1 -lt $num3 ]] ; then\n        return\
    \ 1\n    fi\n    return 0\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    [[ $# -lt 3 ]] && echo \"Usage: $(basename\
    \ \"$0\") <num1> <num2> <num3>\" && return 1\n    local num1 num2 num3\n    num1=\"\
    $1\"\n    num2=\"$2\"\n    num3=\"$3\"\n    if [[ $num1 != *[!0-9]* ]]; then\n\
    \        echo \"$num1 is not a number. Try $(basename \"$0\") <num1> <num2> <num3>\"\
    \ && return 1\n    fi\n    if [[ $num2 != *[!0-9]* ]]; then\n        echo \"$num2\
    \ is not a number. Try $(basename \"$0\") <num1> <num2> <num3>\" && return 1\n\
    \    fi\n    if [[ $num3 != *[!0-9]* ]]; then\n        echo \"$num3 is not a number.\
    \ Try $(basename \"$0\") <num1> <num2> <num3>\" && return 1\n    fi\n    local\
    \ sum=$(echo \"$num1 + $num2 + $num3\" | bc)\n    [[ \"$sum\" -gt 0 ]] && echo\
    \ \"$num1 + $num2 + $num3\" && ((\n        num1=$(( num1 - $sum % $num1))\n  \
    \      num2=$(( num2 - $sum % $num2))\n        num3=$(( num3 - $sum % $num3))\n\
    \        any_int \"$num1\" \"$num2\" \"$num3\" ))\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\t(( ${#1} != 0 && ${#2} != 0 && ${#3}\
    \ != 0 )) || return 0\n\t(( $1 -gt 0 && $1 -lt 10 )) || return 0\n\t(( $2 -gt\
    \ 0 && $2 -lt 10 )) || return 0\n\t(( $3 -gt 0 && $3 -lt 10 )) || return 0\n\t\
    (( $(echo \"$1 + $2 + $3\" | bc -l) )); return $?\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppmqkhj7f.sh: line 20: ((: 2 -gt 0 && 2 -lt 10 : syntax error in
    expression (error token is "0 && 2 -lt 10 ")

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local float\n    float $1 $2 $3\n \
    \   if [ \"$float\" == \"$(($1*$2 + $3*$1))\" ]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpf09wpm7l.sh: line 20: float: command not found

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  IFS=.\n  read a b c <<< $1 $2 $3\n  local\
    \ sum=$((a + b + c))\n  [ $a == $sum ] && return 0\n  [ $b == $sum ] && return\
    \ 0\n  [ $c == $sum ] && return 0\n  return 1\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnl3j9c9i.sh: line 20: read: `3'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  (( $1 )) || (( $2 )) || (( $3 )) && [\
    \ \"$3\" -gt 0 ] && [ \"$3\" -lt 10 ] && [ \"$2\" -gt 0 ] && [ \"$2\" -lt 10 ]\
    \ && [ \"$1\" -gt 0 ] && [ \"$1\" -lt 10 ]\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\tIFS=$'\\n' read -ra array <<< \"$1\"\n\
    \t((${#array[@]} > 0)) || return 1\n\techo \"$3\" == \"${array[0]} + ${array[1]}\"\
    \ && return 0\n\treturn 1\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\tset $1 $2 $3\n\tif [ $(( $1 - $2 )) -ge\
    \ 0 ]; then\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\tdeclare -i n1 n2\n\tn1=$(eval \"echo\
    \ \\$${1}\")\n\tn2=$(eval \"echo \\$${2}\")\n\t(( n1 && n2 )) || return 1\n\t\
    (( n1 && $(( n1 + n2 )))) || return 0\n\t(( n2 && $(( n1 + n2 )))) || return 0\n\
    \t(( n1 && $(( n1 + n2 ))) && n1 && $(( n1 + n2 ))) || return 0\n\treturn 1\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmplyxt0_n0.sh: line 25: n1: command not found

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    declare -i sum=\"$1\"\n    declare\
    \ -i a=\"$2\"\n    declare -i b=\"$3\"\n\n    # make sure all are integers\n \
    \   [ \"$a\" -eq \"$a\" ] || ((a=\"$(awk '{print int($0)}')\" && a=\"${a:-0}\"\
    ))\n    [ \"$b\" -eq \"$b\" ] || ((b=\"${awk '{print int($0)}')\" && b=\"${b:-0}\"\
    )\n\n    # make sure the sum is an integer\n    [ \"$sum\" -eq \"$sum\" ] || ((sum=\"\
    ${awk '{print int($0)}'}\" && sum=\"${sum:-0}\"))\n\n    # Make sure the numbers\
    \ are non-zero\n    [ -n \"$a\" ] || return 1\n    [ -n \"$b\" ] || return 1\n\
    \    [ -n \"$sum\" ] || return 1\n\n    # Now see if the sum is equal to the sum\
    \ of two numbers\n    if [ \"$sum\" -eq \"$(( a + b ))\" ]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n   \
    \ any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpodafl8pz.sh: line 58: unexpected EOF while looking for matching
    `"''

    /tmp/tmpodafl8pz.sh: line 62: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  [ \"$1\" != \"-inf\" ] && [ \"$1\" !=\
    \ \"inf\" ] && [ \"$1\" != \"\" ]\n  [ \"$2\" != \"-inf\" ] && [ \"$2\" != \"\
    inf\" ] && [ \"$2\" != \"\" ]\n  [ \"$3\" != \"-inf\" ] && [ \"$3\" != \"inf\"\
    \ ] && [ \"$3\" != \"\" ]\n  (( $1 + $2 == $3 ))\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\tif [[ $1 == \"$2\" ]]; then\n\t\t[ \"\
    $3\" == \"$2\" ] && return 0\n\telse\n\t\t[ \"$1\" == \"$3\" ] && return 0\n\t\
    fi\n\t[ \"$1\" == \"\" ] && return 1\n\t[ \"$1\" == \"$2\" ] && return 0\n\t[\
    \ \"$1\" == \"$3\" ] && return 0\n\t[ \"$1\" == \"$2\" ] && return 1\n\t[ \"$1\"\
    \ < \"$2\" ] && return 1\n\t[ \"$1\" > \"$2\" ] && return 0\n\t[ \"$1\" < \"$3\"\
    \ ] && return 1\n\t[ \"$1\" > \"$3\" ] && return 0\n\t[ \"$1\" < \"$2\" ] && return\
    \ 1\n\t[ \"$1\" > \"$2\" ] && return 1\n\treturn 1\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    IFS=.\n    set -- $1 $2 $3\n    IFS=\n\
    \    if [[ \"$1\" == \"$2\" ]]\n    then\n        echo \"true\"\n    else\n  \
    \      echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local a b c\n  a=$1; b=$2; c=$3\n  if\
    \ [[ $a == \"-\" ]]; then a=$((-a)); fi\n  if [[ $b == \"-\" ]]; then b=$((-b));\
    \ fi\n  if [[ $c == \"-\" ]]; then c=$((-c)); fi\n  # This works with integers\
    \ too.\n  if [[ ${a} -eq ${b} ]]; then return 1; elif [[ ${a} -eq ${c} ]]; then\
    \ return 1; elif [[ ${b} -eq ${c} ]]; then return 1; fi\n  if [[ ${a} -eq ${c}\
    \ ]]; then return 1; elif [[ ${b} -eq ${c} ]]; then return 1; elif [[ ${a} -eq\
    \ ${b} ]]; then return 1; fi\n  echo 0\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\tlet sum=$(($1+$2+$3))\n\techo $(( $sum\
    \ == $1 )) && $(( $sum == $2 )) && $(( $sum == $3 ))\n}\n\ncandidate() {\n   \
    \ any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp7try9ky2.sh: line 20: 0: command not found

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local val1 val2 val3 val4\n    local\
    \ sum\n\n    # All variables must be integers\n    val1=$(echo \"$1\" | sed 's/[^0-9]//g')\n\
    \    val2=$(echo \"$2\" | sed 's/[^0-9]//g')\n    val3=$(echo \"$3\" | sed 's/[^0-9]//g')\n\
    \    val4=$(echo \"$1\" | sed 's/[^0-9]//g')\n\n    # If all three are equal,\
    \ return true\n    if [ \"$val1\" -eq \"$val2\" ] && [ \"$val1\" -eq \"$val3\"\
    \ ]; then\n        echo \"true\"\n        return 0\n    fi\n\n    if [ \"$val1\"\
    \ -gt \"$val2\" ] && [ \"$val1\" -gt \"$val3\" ]; then\n        echo \"true\"\n\
    \        return 0\n    fi\n\n    if [ \"$val1\" -le \"$val2\" ] && [ \"$val1\"\
    \ -le \"$val3\" ]; then\n        echo \"true\"\n        return 0\n    fi\n\n \
    \   # Not true or false\n    echo \"false\"\n    return 1\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local n1=$(eval \"echo ${1}\")\n  \
    \  local n2=$(eval \"echo ${2}\")\n    local n3=$(eval \"echo ${3}\")\n    [ \"\
    $n1\" -eq \"$n2\" ] && [ \"$n1\" -eq \"$n3\" ] || [ \"$n2\" -eq \"$n3\" ]\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local FA FB FC\n    FA=$(echo \"${1}*${1}\"\
    \ | bc)\n    FB=$(echo \"${2}*${2}\" | bc)\n    FC=$(echo \"${3}*${3}\" | bc)\n\
    \    # print all cases as strings\n    echo \"${FA}\" \"${FB}\" \"${FC}\"\n  \
    \  # then convert to a number\n    FA=$( echo \"${FA}\" | bc )\n    FB=$( echo\
    \ \"${FB}\" | bc )\n    FC=$( echo \"${FC}\" | bc )\n    # compare floats\n  \
    \  [[ \"${FA}\" -gt \"${FB}\" ]] && echo \"true\" || echo \"false\"\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if ! [ \"$1\" -eq \"$1\" ] || ! [ \"\
    $2\" -eq \"$2\" ] || ! [ \"$3\" -eq \"$3\" ]; then\n    return 1\n  fi\n  # check\
    \ if number 1 is equal to sum of number 2 and 3\n  if [ $(($1 + $2)) -eq $3 ];\
    \ then\n    return 0\n  else\n    return 1\n  fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local float1=`echo $1 | awk '{printf\
    \ \"%.4f\", $1}'`\n    local float2=`echo $2 | awk '{printf \"%.4f\", $1}'`\n\
    \    local float3=`echo $3 | awk '{printf \"%.4f\", $1}'`\n    if [[ \"$float1\"\
    \ == \"$float2\" ]]; then\n        if [[ \"$float1\" == \"$float3\" ]]; then\n\
    \            echo \"true\"\n        else\n            echo \"false\"\n       \
    \ fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local f1 f2 f3\n\n  # make sure all arguments\
    \ have integers\n  local arg1 arg2 arg3\n\n  for arg1; do\n    for arg2; do\n\
    \      for arg3; do\n        if (( $(( arg1 + arg2 != arg3 )) || \\\n        \
    \  ( $(( arg1 != arg2 )) && $(( arg1 != arg3 ))) && \\\n          ( $(( arg1 +\
    \ arg2 != arg3 )) || $(( arg1 != arg3 ))))\n        then\n          echo \"false\"\
    \n          exit 0\n        fi\n      done\n    done\n  done\n  echo \"true\"\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgaxa0lrg.sh: line 33: syntax error near unexpected token `fi''

    /tmp/tmpgaxa0lrg.sh: line 33: `        fi''

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local x=\"$1\"\n  local y=\"$2\"\n  local\
    \ z=\"$3\"\n  [[ \"$x\" =~ ^-?[0-9]+\\.?[0-9]*$ ]] || return 1\n  [[ \"$y\" =~\
    \ ^-?[0-9]+\\.?[0-9]*$ ]] || return 1\n  [[ \"$z\" =~ ^-?[0-9]+\\.?[0-9]*$ ]]\
    \ || return 1\n  [[ \"$x\" -eq \"$y\" ]] && [[ \"$x\" -eq \"$z\" ]] || return\
    \ 0\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local x=\"$1\"\n    local y=\"$2\"\n\
    \    local z=\"$3\"\n    local result\n    # First check if the arguments are\
    \ integers\n    if [[ \"$x\" =~ ^-?[0-9]+$ ]] ; then\n        if [[ \"$y\" =~\
    \ ^-?[0-9]+$ ]] ; then\n            if [[ \"$z\" =~ ^-?[0-9]+$ ]] ; then\n   \
    \             # If all three are integers, then return true.\n               \
    \ result=\"$(( $(echo \"$x $y $z\" | sort -n | head -1) == $(( $(echo \"$x $y\
    \ $z\" | sort -n | tail -1) + $x )) ))\"\n            else\n                #\
    \ If only one of the numbers are integers, then return true.\n               \
    \ result=\"$(( $(echo \"$x $y $z\" | sort -n | head -1) == $x ))\"\n         \
    \   fi\n        else\n            # If only one of the numbers are integers, then\
    \ return true.\n            result=\"$(( $(echo \"$x $y $z\" | sort -n | head\
    \ -1) == $y ))\"\n        fi\n    else\n        # If all three are integers, then\
    \ return true.\n        result=\"$(( $(echo \"$x $y $z\" | sort -n | head -1)\
    \ == $z ))\"\n    fi\n    # Return result\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw7nrpt1_.sh: line 28: 2 3 1 + 2 : syntax error in expression (error
    token is "3 1 + 2 ")

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [ \"$1\" -gt \"$2\" ] && [ \"$1\"\
    \ -gt \"$3\" ]; then\n    if (( $1 + $2 + $3 )); then\n      true\n    else\n\
    \      false\n    fi\n  else\n    if [ \"$2\" -gt \"$3\" ]; then\n      if ((\
    \ $1 + $2 + $3 )); then\n        true\n      else\n        false\n      fi\n \
    \   else\n      if [ \"$1\" -gt \"$2\" ]; then\n        if (( $1 + $2 + $3 ));\
    \ then\n          true\n        else\n          false\n        fi\n      else\n\
    \        if [ \"$2\" -gt \"$3\" ]; then\n          if (( $1 + $2 + $3 )); then\n\
    \            true\n          else\n            false\n          fi\n        else\n\
    \          if [ \"$1\" -gt \"$2\" ] && [ \"$2\" -gt \"$3\" ]; then\n         \
    \   if (( $1 + $2 + $3 )); then\n              true\n            else\n      \
    \        false\n            fi\n          else\n            if [ \"$1\" -gt \"\
    $2\" ] && [ \"$3\" -gt \"$2\" ]; then\n              if (( $1 + $2 + $3 )); then\n\
    \                true\n              else\n                false\n           \
    \   fi\n            else\n              if [ \"$2\" -gt \"$3\" ]; then\n     \
    \           if (( $1 + $2 + $3 )); then\n                  true\n            \
    \    else\n                  false\n                fi\n              else\n \
    \               if [ \"$3\" -gt \"$2\" ]; then\n                  if (( $1 + $2\
    \ + $3 )); then\n                    true\n                  else\n          \
    \          false\n                  fi\n                else\n               \
    \   if [ \"$1\" -gt \"$2\" ] && [ \"$2\" -gt \"$3\" ]; then\n                \
    \    if (( $1 + $2 + $3 )); then\n                      true\n               \
    \     else\n                      false\n                    fi\n            \
    \      else\n                    if [ \"$1\" -gt \"$2\" ]; then\n            \
    \          if (( $1 + $2 + $3 )); then\n                        true\n       \
    \               else\n                        false\n                      fi\n\
    \                    else\n                      if (( $1 + $2 + $3 )); then\n\
    \                        true\n                      else\n                  \
    \      false\n                      fi\n                    fi\n             \
    \     fi\n                fi\n              fi\n            fi\n          fi\n\
    \        fi\n      fi\n    fi\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  [[ \"$2\" =~ ^-?[0-9]+([.][0-9]+)?$ ]]\
    \ && \\\n    [[ \"$3\" =~ ^-?[0-9]+([.][0-9]+)?$ ]] && \\\n    [[ \"$1\" -eq $(echo\
    \ \"$1 + $2 + $3\" | bc -l) ]] && \\\n    echo \"true\" || \\\n    echo \"false\"\
    \n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  [[ \"$1\" =~ \"^[0-9]+\\.[0-9]+$\" ]]\
    \ && [[ \"$2\" =~ \"^[0-9]+\\.[0-9]+$\" ]] && [[ \"$3\" =~ \"^[0-9]+\\.[0-9]+$\"\
    \ ]] &&\n  [[ $(echo \"$1 + $2 + $3\" | bc -l) -gt 0 ]]\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    [ \"$#\" -eq 3 ] || return 1\n    #\
    \ Remove trailing zeroes for comparison.\n    local a=\"${1%.*}\"\n    local b=\"\
    ${2%.*}\"\n    local c=\"${3%.*}\"\n    if [ \"$a\" -eq \"$a\" ] || [ \"$b\" -eq\
    \ \"$b\" ] || [ \"$c\" -eq \"$c\" ]\n    then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  (( $1 == $3 )) && return 1 || return\
    \ 0\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\t[ $# -lt 3 ] || return 1\n\t[ $1 -eq\
    \ $2 ] && return 0\n\t[ $1 -gt $3 ] && return 0\n\t[ $1 -lt $3 ] && return 0\n\
    \t[ $(echo \"$1 $2 $3\" | bc -l | awk '{print $1}') -eq $(echo \"$1 + $2 + $3\"\
    \ | bc -l | awk '{print $1}') ]\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local sum=$(($1 + $2));\n  local int=$(($1$2\
    \ + $3));\n  [[ $int -eq $sum ]] && echo $true || echo $false;\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local i j\n    for i in $(seq 1 $#\
    \ ); do\n        j=$(expr $i + 1)\n        if [ \"$1\" -eq $j ]; then\n      \
    \      if [ \"$2\" -eq $j ]; then\n                if [ \"$3\" -eq $j ]; then\n\
    \                    return 0\n                fi\n            fi\n        fi\n\
    \    done\n    return 1\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local x=\"$1\"\n    local y=\"$2\"\n\
    \    local z=\"$3\"\n\n    if [ \"$x\" != \"$y\" ] || [ \"$y\" != \"$z\" ]; then\n\
    \        return 0\n    else\n        if [ \"$x\" -lt \"$y\" ]; then\n        \
    \    return 1\n        else\n            return 2\n        fi\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local a b c\n  a=\"${1}\"\n  b=\"${2}\"\
    \n  c=\"${3}\"\n  echo \"$a\" > /tmp/a\n  echo \"$b\" > /tmp/b\n  echo \"$c\"\
    \ > /tmp/c\n  test \"$((a + b))\" -ge \"$a\" && \\\n  test \"$((a + b))\" -ge\
    \ \"$b\" && \\\n  test \"$((a + c))\" -ge \"$a\" && \\\n  test \"$((b + c))\"\
    \ -ge \"$b\" && \\\n  test \"$((a + c + b))\" -ge \"$a\" && \\\n  test \"$((b\
    \ + c + a))\" -ge \"$b\" && \\\n  test \"$((a + b + c))\" -ge \"$a\" && \\\n \
    \ test \"$((b + a + c))\" -ge \"$b\" && \\\n  test \"$((a + c + b))\" -ge \"$a\"\
    \ && \\\n  test \"$((b + c + a))\" -ge \"$b\" && \\\n  test \"$((a + b + c + d))\"\
    \ -ge \"$a\" && \\\n  test \"$((b + a + c + d))\" -ge \"$b\" && \\\n  test \"\
    $((a + c + b + d))\" -ge \"$a\" && \\\n  test \"$((b + a + c + d))\" -ge \"$b\"\
    \ && \\\n  test \"$((a + b + c + d))\" -ge \"$a\" && \\\n  test \"$((b + a + c\
    \ + d))\" -ge \"$b\" && \\\n  test \"$((a + c + b + d))\" -ge \"$a\" && \\\n \
    \ test \"$((b + a + c + d))\" -ge \"$b\"\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    [[ ${1} = *-* ]] && echo \"false\"\
    \ || [[ ${#1} -eq 0 ]] && echo \"false\" || [[ ${#1} -eq 1 ]] && [[ ${#2} -eq\
    \ 0 ]] && echo \"false\" || [[ ${#2} -eq 1 ]] && [[ ${#3} -eq 0 ]] && echo \"\
    false\" || [[ ${#3} -eq 1 ]] && [[ $(echo ${1} + ${2} == ${1} + ${3}) ]] && echo\
    \ \"true\" || echo \"false\"\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  declare -i x y z\n  if [[ $1 != (((\"\
    $1\" < \"$2\") && \"$3\" > \"$2\") || ((\"$1\" > \"$2\") && \"$3\" < \"$2\"))\
    \ && $1 != (((\"$1\" < \"$3\") && \"$2\" > \"$3\") || ((\"$1\" > \"$3\") && \"\
    $2\" < \"$3\") ) ]] ; then\n    false\n  else\n    true\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcic6qy8_.sh: line 20: unexpected argument `('' to conditional binary
    operator

    /tmp/tmpcic6qy8_.sh: line 20: syntax error near `((''

    /tmp/tmpcic6qy8_.sh: line 20: `  if [[ $1 != ((("$1" < "$2") && "$3" > "$2") ||
    (("$1" > "$2") && "$3" < "$2")) && $1 != ((("$1" < "$3") && "$2" > "$3") || (("$1"
    > "$3") && "$2" < "$3") ) ]] ; then''

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\t# Set a local variable to hold our return\
    \ value.\n\tlocal retVal=\"false\"\n\t# Set a local variable to hold our sum.\n\
    \tlocal sum=0\n\t# Check that our arguments are not empty.\n\tif [ -z \"$1\" ]\
    \ || [ -z \"$2\" ] || [ -z \"$3\" ]\n\tthen\n\t\techo \"ERROR: This function takes\
    \ 3 arguments, all not empty.\"\n\t\techo \"Usage: $(basename $0) <number1> <number2>\
    \ <number3>\"\n\t\techo \"Example: $(basename $0) 5.3 -7.9 2.2\"\n\t\texit 1\n\
    \tfi\n\t# Loop through all arguments until we find a non-negative one.\n\tfor\
    \ ((i=1; i<3; i++)); do\n\t\teval \"let sum+=$(echo \"$i*\"|bc)\"\n\tdone\n\t\
    # If the sum is equal to the other two numbers, return true.\n\tif [ \"$sum\"\
    \ == \"$1\" ] || [ \"$sum\" == \"$2\" ] || [ \"$sum\" == \"$3\" ]\n\tthen\n\t\t\
    retVal=\"true\"\n\tfi\n\t# Otherwise return false.\n\techo \"$retVal\"\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 2: syntax error

    /tmp/tmpv_c1qtt4.sh: line 33: let: sum+=: syntax error: operand expected (error
    token is "+=")

    (standard_in) 2: syntax error

    /tmp/tmpv_c1qtt4.sh: line 33: let: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  declare -i _sum=\"$(( ${1}+$2+$3 ))\"\
    \n  [[ -z \"$_sum\" ]] || [ \"$_sum\" -gt 0 ] || [ \"$_sum\" -lt 0 ]\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  [[ $1 = \"-?\" ]] || return 1\n  \n \
    \ if [[ $2 = $3 ]] || [[ $2 = -$3 ]]; then\n    return 0\n  fi\n\n  is_integer\
    \ $1\n  is_integer $2\n  is_integer $3\n  \n  [[ ($1 == $2+$3) && $2 -eq 0 ]]\
    \ || return 0\n  return 1\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    [ $(echo \"$a + $b + $c\" | bc) -eq 0 ] && return 0\n    return\
    \ 1\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    [[ \"$2\" == -* ]] || return 1\n  \
    \  [[ \"$3\" == -* ]] || return 1\n    [[ \"$3\" == -* ]] || return 1\n    [[\
    \ \"$1\" == \"$2\" || \"$1\" == \"$3\" ]] && return 0 || return 1\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  echo \"$3\" \"$2\" | grep -q \"^-[0-9]\\\
    +$\" && echo \"true\" || echo \"false\"\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local _first=\"$1\"\n  local _second=\"\
    $2\"\n  local _third=\"$3\"\n\n  [[ $_first -gt 0 || $_first -eq _second ]] ||\
    \ return $?\n  [[ $_second -gt 0 || $_second -eq _third ]] || return $?\n  [[\
    \ $_third -eq 0 || $_third -gt _second ]] || return $?\n\n  (( _third == $_first\
    \ + _second ))\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local -n num1=$1\n  local -n num2=$2\n\
    \  local -n num3=$3\n  (( ((num1 =~ /^[+-]?[0-9]+\\.[0-9]+$/ || num1 =~ /^[+-]?[0-9]+$/\
    \ ) && \\\n         (num2 =~ /^[+-]?[0-9]+\\.[0-9]+$/ || num2 =~ /^[+-]?[0-9]+$/\
    \ ) && \\\n         (num3 =~ /^[+-]?[0-9]+\\.[0-9]+$/ || num3 =~ /^[+-]?[0-9]+$/\
    \ ) )) && \\\n    echo $(( $num1 + $num2 + $num3 )) || \\\n    echo $(( $num1\
    \ + $num2 - $num3 )) || \\\n    echo $(( $num1 - $num2 + $num3 )) || \\\n    echo\
    \ $(( $num1 - $num2 - $num3 ))\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg85irx2e.sh: line 29: syntax error near unexpected token `}''

    /tmp/tmpg85irx2e.sh: line 29: `}''

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\tlocal IFS= read -r -d '' _1 <<< \"$1\"\
    \n\tlocal IFS= read -r -d '' _2 <<< \"$2\"\n\tlocal IFS= read -r -d '' _3 <<<\
    \ \"$3\"\n\tif [[ \"$IFS\" != \"${IFS#-}\" ]]; then\n\t\treturn 1\n\telif [[ \"\
    $_1\" = \"$(( _2 + _3 ))\" ]]; then\n\t\treturn 0\n\tfi\n\treturn 1\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp36wofl2k.sh: line 19: local: `-r'': not a valid identifier

    /tmp/tmp36wofl2k.sh: line 19: local: `-d'': not a valid identifier

    /tmp/tmp36wofl2k.sh: line 19: local: `'': not a valid identifier

    /tmp/tmp36wofl2k.sh: line 20: local: `-r'': not a valid identifier

    /tmp/tmp36wofl2k.sh: line 20: local: `-d'': not a valid identifier

    /tmp/tmp36wofl2k.sh: line 20: local: `'': not a valid identifier

    /tmp/tmp36wofl2k.sh: line 21: local: `-r'': not a valid identifier

    /tmp/tmp36wofl2k.sh: line 21: local: `-d'': not a valid identifier

    /tmp/tmp36wofl2k.sh: line 21: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local number1=$1\n    local number2=$2\n\
    \    local number3=$3\n    local result\n    if [ ! -z \"$number1\" ] || [ ! -z\
    \ \"$number2\" ] || [ ! -z \"$number3\" ]; then\n        result=$(expr $number1\
    \ \\+ $number2 \\+ $number3 | bc);\n        if [ \"$result\" -eq 0 ]; then\n \
    \           echo \"true\"\n        else\n            echo \"false\"\n        fi\n\
    \    else\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local n1 n2\n    if [ $# -lt 3 ]; then\n\
    \        return 1\n    fi\n    n1=$1\n    n2=$2\n    if [ -z \"$n2\" ]; then\n\
    \        n2=0\n    fi\n    local n1int n2int\n    n1int=$(echo \"$n1\" | bc)\n\
    \    n2int=$(echo \"$n2\" | bc)\n    if [ \"$n1int\" = \"$n2int\" ]; then\n  \
    \      return 1\n    else\n        return 0\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local var1=${1:-1.0}\n    local var2=${2:-1.0}\n\
    \    local var3=${3:-1.0}\n\n    # Make sure all are integers\n    if [[ ${var1}\
    \ != ${var2} && ${var1} != ${var3} ]] ; then\n        return ${var1} > ${var2}\
    \ || ${var1} < ${var3} && ${var1} > ${var3}\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=( $( echo $1 | sed 's/^ *//g'\
    \ ) )\n    local b=( $( echo $2 | sed 's/^ *//g' ) )\n    local c=( $( echo $3\
    \ | sed 's/^ *//g' ) )\n\n    [ \"${a[0]}\" -eq \"${b[0]}\" ] && [ \"${a[0]}\"\
    \ -eq \"${c[0]}\" ] && [ \"${a[0]}\" -eq \"${a[1]}\" ] && [ \"${b[0]}\" -eq \"\
    ${b[1]}\" ] && [ \"${b[0]}\" -eq \"${c[1]}\" ] && [ \"${b[0]}\" -eq \"${b[2]}\"\
    \ ] && [ \"${c[0]}\" -eq \"${c[1]}\" ] && [ \"${c[0]}\" -eq \"${c[2]}\" ] && [\
    \ \"${a[1]}\" -eq \"${a[2]}\" ] && [ \"${b[1]}\" -eq \"${b[2]}\" ] && [ \"${c[1]}\"\
    \ -eq \"${c[2]}\" ] && [ \"${a[1]}\" -eq \"${b[1]}\" ] && [ \"${b[1]}\" -eq \"\
    ${c[1]}\" ] && [ \"${c[1]}\" -eq \"${c[1]}\" ] && [ \"${a[2]}\" -eq \"${a[2]}\"\
    \ ] && [ \"${b[2]}\" -eq \"${b[2]}\" ] && [ \"${c[2]}\" -eq \"${c[2]}\" ] && [\
    \ \"${a[2]}\" -eq \"${b[2]}\" ] && [ \"${b[2]}\" -eq \"${c[2]}\" ] && [ \"${c[2]}\"\
    \ -eq \"${c[2]}\" ] && [ \"${b[0]}\" -eq \"${b[1]}\" ] && [ \"${b[0]}\" -eq \"\
    ${b[2]}\" ] && [ \"${c[0]}\" -eq \"${c[1]}\" ] && [ \"${c[0]}\" -eq \"${c[2]}\"\
    \ ] && [ \"${a[1]}\" -eq \"${a[2]}\" ] && [ \"${a[1]}\" -eq \"${b[1]}\" ] && [\
    \ \"${a[1]}\" -eq \"${c[1]}\" ] && [ \"${a[2]}\" -eq \"${a[2]}\" ] && [ \"${a[2]}\"\
    \ -eq \"${b[2]}\" ] && [ \"${a[2]}\" -eq \"${c[2]}\" ] && [ \"${b[0]}\" -eq \"\
    ${b[1]}\" ] && [ \"${b[0]}\" -eq \"${b[2]}\" ] && [ \"${b[0]}\" -eq \"${c[1]}\"\
    \ ] && [ \"${b[0]}\" -eq \"${c[2]}\" ] && [ \"${c[0]}\" -eq \"${c[1]}\" ] && [\
    \ \"${c[0]}\" -eq \"${c[2]}\" ] && [ \"${a[1]}\" -eq \"${a[2]}\" ] && [ \"${b[1]}\"\
    \ -eq \"${b[2]}\" ] && \n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbbdu8z7p.sh: line 24: syntax error near unexpected token `}''

    /tmp/tmpbbdu8z7p.sh: line 24: `}''

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  IFS=.\n  local a b c\n  # Convert to\
    \ integers\n  a=$1\n  b=$2\n  c=$3\n  # Test for equality\n  if [ \"$a\" = \"\
    $a+$b\" ]\n  then\n    # Found a match\n    echo \"true\"\n  else\n    # No match\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local sum=$(($1+$2+$3));\n    local\
    \ num1=$(echo $1 | sed 's/\\./\\./');\n    local num2=$(echo $2 | sed 's/\\./\\\
    ./');\n    local num3=$(echo $3 | sed 's/\\./\\./');\n    if [[ $num1 =~ ^[0-9]*$\
    \ ]]; then\n        local num1=$(echo $num1 | awk '{print $1*1}');\n    fi\n \
    \   if [[ $num2 =~ ^[0-9]*$ ]]; then\n        local num2=$(echo $num2 | awk '{print\
    \ $1*1}');\n    fi\n    if [[ $num3 =~ ^[0-9]*$ ]]; then\n        local num3=$(echo\
    \ $num3 | awk '{print $1*1}');\n    fi\n    if [[ \"$num1\" -eq \"$sum\" ]]; then\n\
    \        if [[ \"$num2\" -eq \"$sum\" ]]; then\n            if [[ \"$num3\" -eq\
    \ \"$sum\" ]]; then\n                return 0;\n            else\n           \
    \     return 1;\n            fi\n        else\n            return 1;\n       \
    \ fi\n    else\n        return 1;\n    fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\tif [ \"$1\" -eq \"$1\" ] || [ \"$2\"\
    \ -eq \"$2\" ] || [ \"$3\" -eq \"$3\" ]; then\n\t\tif [ $1 == $1 + $2 && $2 ==\
    \ $2 + $3 ]; then\n\t\t\treturn 0\n\t\tfi\n\telse\n\t\treturn 1\n\tfi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpir6s0mym.sh: line 20: [: missing `]''

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local n1 n2 n3\n    read -r -a n1 <<<\
    \ \"$1\"\n    read -r -a n2 <<< \"$2\"\n    read -r -a n3 <<< \"$3\"\n    (( ${n1[@]}\
    \ > $(( ${n2[@]} + ${n3[@]} )) )) && return 0\n    (( ${n1[@]} > $(( ${n2[@]}\
    \ + ${n3[@]} )) )) && return 0\n    (( ${n1[@]} > $(( ${n2[@]} + ${n3[@]} )) ))\
    \ && return 0\n    (( ${n1[@]} > $(( ${n2[@]} + ${n3[@]} )) )) && return 0\n \
    \   (( ${n1[@]} > $(( ${n2[@]} + ${n3[@]} )) )) && return 0\n    (( ${n1[@]} >\
    \ $(( ${n2[@]} + ${n3[@]} )) )) && return 0\n    (( ${n1[@]} > $(( ${n2[@]} +\
    \ ${n3[@]} )) )) && return 0\n    (( ${n1[@]} > $(( ${n2[@]} + ${n3[@]} )) ))\
    \ && return 0\n    (( ${n1[@]} > $(( ${n2[@]} + ${n3[@]} )) )) && return 0\n \
    \   (( ${n1[@]} > $(( ${n2[@]} + ${n3[@]} )) )) && return 0\n    (( ${n1[@]} >\
    \ $(( ${n2[@]} + ${n3[@]} )) )) && return 0\n    (( ${n1[@]} > $(( ${n2[@]} +\
    \ ${n3[@]} )) )) && return 0\n    (( ${n1[@]} > $(( ${n2[@]} + ${n3[@]} )) ))\
    \ && return 0\n    (( ${n1[@]} > $(( ${n2[@]} + ${n3[@]} )) )) && return 0\n \
    \   (( ${n1[@]} > $(( ${n2[@]} + ${n3[@]} )) )) && return 0\n    (( ${n1[@]} >\
    \ $(( ${n2[@]} \n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpohm54tz7.sh: line 38: unexpected EOF while looking for matching
    `)''

    /tmp/tmpohm54tz7.sh: line 60: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local sum=$(( $1 + $2 ))\n  [[ -z $3\
    \ ]] && return 0\n  [[ -z $sum ]] && return 1\n  [[ $sum -eq $3 ]] && return 0\n\
    \  return 1\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    [[ $1 = +([+-]?[0-9]+.[0-9]+)\
    \ ]] || return 1\n    [[ $2 = +([+-]?[0-9]+.[0-9]+) ]] || return 1\n    [[ $3\
    \ = +([+-]?[0-9]+.[0-9]+) ]] || return 1\n\n    a=$(( $1 * 10 ))\n    b=$(( $2\
    \ * 10 ))\n    c=$(( $3 * 10 ))\n\n    if [[ \"$a\" == \"$c\" || \"$b\" == \"\
    $c\" ]]; then\n        return 0\n    fi\n\n    if [ \"$a\" -eq \"$c\" ]; then\n\
    \        return 0\n    fi\n\n    if [ \"$b\" -eq \"$c\" ]; then\n        return\
    \ 0\n    fi\n\n    return 1\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local int_sum \"$1\"\n    local int_min1\
    \ \"$2\"\n    local int_min2\n    local int_max1 \"$3\"\n    local int_max2\n\n\
    \    # Check if all args are integers\n    if [ \"$(echo \"${int_sum} + ${int_min1}\
    \ + ${int_min2} + ${int_max1} + ${int_max2}\" | bc)\" -eq \"5\" ];then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp65pdkiem.sh: line 19: local: `2'': not a valid identifier

    /tmp/tmp65pdkiem.sh: line 20: local: `3'': not a valid identifier

    /tmp/tmp65pdkiem.sh: line 22: local: `1'': not a valid identifier

    (standard_in) 1: syntax error

    /tmp/tmp65pdkiem.sh: line 26: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local number1=$1\n    local number2=$2\n\
    \    local number3=$3\n\n    echo $((number1+number2+number3))\n    echo $((number1-number2+number3))\n\
    \    echo $((number1-number2-number3))\n    echo $((number1+number2-number3))\n\
    \    echo $((number1-number2+number3-number1))\n    echo $((number1+number2+number3-number1-number1))\n\
    \    echo $((number1+number2+number3-number1-number1-number1))\n    echo $((number1+number2+number3-number1-number1-number1-number1))\n\
    \    echo $((number1-number2+number3+number2))\n    echo $((number1-number2-number3+number2))\n\
    \    echo $((number1-number2+number3+number2-number1))\n    echo $((number1+number2-number3+number2+number1))\n\
    \    echo $((number1+number2-number3+number2+number1-number1))\n    echo $((number1+number2-number3+number2+number1-number1-number1))\n\
    \    echo $((number1+number2-number3+number2+number1-number1-number1-number1))\n\
    \    echo $((number1-number2+number3+number2-number3))\n    echo $((number1-number2-number3+number2-number3))\n\
    \    echo $((number1-number2+number3+number2-number3-number1))\n    echo $((number1+number2-number3+number2+number3))\n\
    \    echo $((number1+number2-number3+number2+number3-number1))\n    echo $((number1+number2-number3+number2+number3-number1-number1))\n\
    \    echo $((number1+number2-number3+number2+number3-number1-number1-number1))\n\
    \    echo $((number1+number2-number3+number2+number3-number1-number1-number1-number1))\n\
    \    echo $((number1-number2+number3+number2-number3-number3))\n    echo $((number1-number2-number3+number2-number3-number3))\n\
    \    echo $((number1-number2+number3+number2-number3-number3-number1))\n    echo\
    \ $((number1+number2-number3+number2+number3-number3))\n    echo $((number1+number2-number3+number2+number3-number3-number1))\n\
    \    echo $((number1+number2-number3+number2+number3-number3-number1-number1))\n\
    \    echo $((number1+number2-number3+number2+number3-number3-number1-number1-number1))\n\
    \    echo $((number1+number2-number3+number2+number3-number3-number1-number1-number1-number1))\n\
    \    \n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local a b c sum\n  a=$1\n  b=$2\n  c=$3\n\
    \  sum=$(echo \"$a + $b $c\" | bc)\n  if [ $a -eq $sum -a $b -eq $sum -a $c -eq\
    \ $sum ]; then\n    return 1\n  else\n    return 0\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    /tmp/tmpypprrav3.sh: line 24: [: -a: integer expression expected

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ \"$1\" = \"-\" ]]; then\n    echo\
    \ \"$3\"=\"$2\n  else\n    local x=\"$1\"\n    local y=\"$2\"\n    local z=\"\
    $3\"\n    if [[ \"$x\" -eq \"${y}\" && \"$x\" -eq \"${z}\" ]]; then\n      echo\
    \ \"true\"\n    else\n      echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7_mmg2i0.sh: line 48: unexpected EOF while looking for matching
    `"''

    /tmp/tmp7_mmg2i0.sh: line 52: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    IFS=\".\" read -a array <<< \"$1\"\n\
    \    shift\n    IFS=\".\" read -a array <<< \"$1\"\n    shift\n    IFS=\".\" read\
    \ -a array <<< \"$1\"\n    shift\n    sum=\"${array[0]}${array[1]}${array[2]}\"\
    \n    if [ \"$sum\" == \"$1\" ]\n    then\n        return 0;\n    else\n     \
    \   return 1;\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local float1=\"$1\"\n    local float2=\"\
    $2\"\n    local float3=\"$3\"\n    local bool1\n    local bool2\n    local bool3\n\
    \    if [[ $float1 == *[!0-9]* ]]; then\n        bool1=\"false\"\n    elif [[\
    \ $float2 == *[!0-9]* ]]; then\n        bool2=\"false\"\n    elif [[ $float3 ==\
    \ *[!0-9]* ]]; then\n        bool3=\"false\"\n    else\n        bool1=\"true\"\
    \n        bool2=\"true\"\n        bool3=\"true\"\n    fi\n    if [ \"$bool1\"\
    \ == \"true\" ] && [ \"$bool2\" == \"true\" ] && [ \"$bool3\" == \"true\" ]; then\n\
    \        if [ \"$float1\" -eq \"$float2\" ] && [ \"$float1\" -eq \"$float3\" ];\
    \ then\n            echo \"true\"\n        else\n            echo \"false\"\n\
    \        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local float1=$1\n    local float2=$2\n\
    \    local float3=$3\n    local result bool\n    if [[ \"$float1\" == *\".\"*\
    \ ]] || [[ \"$float1\" == *\",\"* ]] || [[ \"$float1\" == *\".\"* ]]; then\n \
    \       float1=\"${float1}\"\n        float1=\"${float1%.}\"\n    fi\n    if [[\
    \ \"$float2\" == *\".\"* ]] || [[ \"$float2\" == *\",\"* ]] || [[ \"$float2\"\
    \ == *\".\"* ]]; then\n        float2=\"${float2}\"\n        float2=\"${float2%.}\"\
    \n    fi\n    if [[ \"$float3\" == *\".\"* ]] || [[ \"$float3\" == *\",\"* ]]\
    \ || [[ \"$float3\" == *\".\"* ]]; then\n        float3=\"${float3}\"\n      \
    \  float3=\"${float3%.}\"\n    fi\n    result=$(( \"$float1\" + \"$float2\" ==\
    \ \"$float3\" ))\n    if [[ $result == 0 ]]; then\n        result=\"false\"\n\
    \    elif [[ $result -eq 1 ]]; then\n        result=\"true\"\n    else\n     \
    \   result=\"true\"\n    fi\n    echo $result\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local i i2 sum\n    for ((i=0; i <\
    \ $3; i++)); do\n        (( i2 += $2 ))\n    done\n    sum=$(( i2 ))\n    (( $1\
    \ == $sum ))\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local num1=$1\n    local num2=$2\n\
    \    local num3=$3\n    local num4=$(echo $num1 | awk '{print $1}')\n    local\
    \ num5=$(echo $num2 | awk '{print $1}')\n    local num6=$(echo $num3 | awk '{print\
    \ $1}')\n    local sum=$(echo $num4 + $num5 + $num6) # this should work, but bash\
    \ gives me a floating point number instead of a int\n    echo $(($sum == $num1+$num2+$num3))\
    \ # this should work, but bash gives me a floating point number instead of a int\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  # This function is designed to work with\
    \ floating point numbers.\n  # We have to make sure that the sum of the numbers\
    \ is an integer.\n  # This is because the `bc` command can add floating point\
    \ numbers.\n  # The sum of a float number and a integer will be an integer in\
    \ that case,\n  # but a float number with an integer value won't be an integer\
    \ in that case.\n  # If the sum is not an integer then we will return false anyway.\n\
    \  # If we have integers in $1, $2, $3, then we have at least two integers\n \
    \ # and will have to make our sum an integer.\n  local a=${1:-0}\n  local b=${2:-0}\n\
    \  local sum=$(echo \"$b + $a\" | bc)\n  \n  # We want to know if the sum is an\
    \ integer.\n  # If it is then we return true.\n  # If it is not then we return\
    \ false.\n  [[ \"$sum\" =~ ^[0-9]+$ ]] || return $?\n  return $?\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local x=\"$1\"\n    local y=\"$2\"\n\
    \    local z=\"$3\"\n    local sum=\"$((x+y+z))\"\n    (( (\"$x\" == \"$sum\"\
    ) || (\"$y\" == \"$sum\") || (\"$z\" == \"$sum\") ))\n}\n\ncandidate() {\n   \
    \ any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b\n    read a b <<< \"$@\"\n\
    \    [ \"$a\" == \"$(b+a)\" ] && return 0\n    return 1\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnp824ya0.sh: line 21: b+a: command not found

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\tlocal i\n\tlocal a\n\ta=${@:2:((${#@}\
    \ - 2))}\n\ti=1\n\twhile [ $i -le ${#a} ]; do\n\t\tif [[ ${a} -eq ${i} ]]; then\n\
    \t\t\techo \"true\"\n\t\t\texit 0\n\t\telse\n\t\t\techo \"false\"\n\t\t\texit\
    \ 1\n\t\tfi\n\t\tlet \"i++\"\n\tdone\n}\n\ncandidate() {\n    any_int \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\t# Check if all 3 numbers are integers\n\
    \t[ \"$1\" -gt 0 ] ||\n\t\t[ \"$1\" -eq \"-$2\" ] ||\n\t\t[ \"$1\" -eq \"-$3\"\
    \ ] ||\n\t\t[ \"$1\" -gt \"$3\" ]\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local IFS=.\n    local a=\"$1\" b=\"\
    $2\" c=\"$3\"\n    [ \"$a\" == \"$c\" ] || [ \"$a\" == \"$b\" ] || [ \"$b\" ==\
    \ \"$c\" ] || [ \"$b\" == \"$b\" ]\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local IFS=\n    local -n arr1=( \"\
    $@\" )\n    local IFS=\n    local -n arr2=( \"$@\" )\n    local IFS=\n    local\
    \ -n sum1=( \"$@\" )\n    local IFS=\n    local -n sum2=( \"$@\" )\n    local\
    \ IFS=\n    local -n diff1=( \"$@\" )\n    local IFS=\n    local -n diff2=( \"\
    $@\" )\n    local IFS=\n    local -n bool=( \"$@\" )\n    local IFS=\n    local\
    \ -n bool2=( \"$@\" )\n    local IFS=\n    local -n bool3=( \"$@\" )\n    local\
    \ IFS=\n    local -n bool4=( \"$@\" )\n\n    local -n num=( \"$@\" )\n    local\
    \ -n num2=( \"$@\" )\n    local -n num3=( \"$@\" )\n    local -n num4=( \"$@\"\
    \ )\n    local -n num5=( \"$@\" )\n\n    local -n numsum=( \"$@\" )\n    local\
    \ -n numsum2=( \"$@\" )\n    local -n numsum3=( \"$@\" )\n    local -n numsum4=(\
    \ \"$@\" )\n\n    local -n sumbool=( \"$@\" )\n    local -n sumbool2=( \"$@\"\
    \ )\n    local -n sumbool3=( \"$@\" )\n    local -n sumbool4=( \"$@\" )\n\n  \
    \  local -n diffbool=( \"$@\" )\n    local -n diffbool2=( \"$@\" )\n    local\
    \ -n diffbool3=( \"$@\" )\n    local -n diffbool4=( \"$@\" )\n\n    local -n boolsum=(\
    \ \"$@\" )\n    local -n boolsum2=( \"$@\" )\n    local -n boolsum3=( \"$@\" )\n\
    \    local -n boolsum4=( \"$@\" )\n\n    for n in \"${arr1[@]}\"; do\n       \
    \ sum1=( \"${arr1[@]}\" )\n        num1=( \"${arr1[@]}\" )\n        diff1=( \"\
    ${arr1[@]}\" )\n\n        sum2=( \"${arr2[@]}\" )\n        num2=( \"${arr2[@]}\"\
    \ )\n        diff2=( \"${arr2[@]}\" )\n\n        numsum=\"$(( ${num1[\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp0l_jsiz1.sh: line 75: unexpected EOF while looking for matching
    `)''

    /tmp/tmp0l_jsiz1.sh: line 97: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local number1=$1\n    local number2=$2\n\
    \    local number3=$3\n    if [ \"$number1\" -eq \"$number3\" ] && [ \"$number2\"\
    \ -eq \"$number3\" ] && [ \"$number1\" -ge 0 ] && [ \"$number2\" -ge 0 ] && [\
    \ \"$number1\" -le \"$number2\" ] && [ \"$number3\" -le \"$number2\" ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local first_int_arg=\"$1\"\n    local\
    \ second_int_arg=\"$2\"\n    local third_int_arg=\"$3\"\n    if [[ $(echo $first_int_arg\
    \ $second_int_arg $third_int_arg | sed 's/\\.//') =~ ^[0-9]+$ ]]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    # Make sure that the inputs are integers.\n\
    \    if [ $1 != $1 || $2 != $2 ] || [ $3 != $3 ] ; then\n        return 1\n  \
    \  fi\n    # Make sure the arguments are integers.\n    if [ \"${1%?}\" != \"\
    ${1//./}\" ] || [ \"${2%?}\" != \"${2//./}\" ] || [ \"${3%?}\" != \"${3//./}\"\
    \ ] ; then\n        return 1\n    fi\n    # Make sure the sum is equal to the\
    \ sum of the other two.\n    if [ $(( $1 + $2 )) -eq $(( $1 + $2 + $3 )) ] ; then\n\
    \        return 0\n    else\n        return 1\n    fi\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxsvkcnow.sh: line 20: [: missing `]''

    /tmp/tmpxsvkcnow.sh: line 20: 3: command not found

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local int_sum=$(($1 + $2 + $3))\n  if\
    \ [ \"$int_sum\" -gt \"0\" ] && [ \"$int_sum\" -le \"$(( 2**31 - 1 ))\" ]; then\n\
    \    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n   \
    \ any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe4klo_yp.sh: line 19: 2.5 + 2 + 3: syntax error: invalid arithmetic
    operator (error token is ".5 + 2 + 3")

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\tif [[ $(($1 + $2 + $3)) -gt $(( 10#$1\
    \ + 10#$2 + 10#$3)) ]];\n\tthen\n\t\treturn 0\n\telse\n\t\treturn 1\n\tfi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    # Bail if any of them are float.\n\
    \    if [ \"${1%?}\" = \"${2%?}\" ] || [ \"${2%?}\" = \"${3%?}\" ]\n    then\n\
    \        return\n    fi\n    # Bail if any of them are not integers.\n    if [\
    \ \"${1%?}\" = \"${2%?}\" ] || [ \"${1%?}\" != \"${2%?}\" ] || [ \"${2%?}\" =\
    \ \"${3%?}\" ]\n    then\n        return\n    fi\n    # Bail if all are integers.\
    \ \"5\" \"2\" \"7\" is \"true\" here.\n    if [ \"${1%?}\" = \"${2%?}\" ] || [\
    \ \"${1%?}\" != \"${2%?}\" ] || [ \"${2%?}\" != \"${3%?}\" ]\n    then\n     \
    \   return\n    fi\n    # Bail if any are negative. \"$3\" \"-2\" \"1\" is \"\
    true\" here.\n    if [ \"${1%?}\" != \"${2%?}\" ] || [ \"${1%?}\" != \"${2%?}\"\
    \ ] || [ \"${2%?}\" != \"${3%?}\" ]\n    then\n        return\n    fi\n    # Return\
    \ true.\n    true\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local IFS=\n    local num=${1:-}\n\
    \    local num2=${2:-}\n    local num3=${3:-}\n\n    [[ \"$num\" = \"$num2\" ]]\
    \ && echo \"true\" || echo \"false\"\n}\n\ncandidate() {\n    any_int \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\tif [[ $1 =~ ^-?[0-9]+$ ]]; then #if $1\
    \ is a number\n\t\tif [[ $2 =~ ^-?[0-9]+$ ]]; then #if $2 is a number\n\t\t\t\
    if [[ $3 =~ ^-?[0-9]+$ ]]; then #if $3 is a number\n\t\t\t\tif (( $1 + $2 -eq\
    \ $3 )); then\n\t\t\t\t\treturn true\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\
    \t\t\tfi\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tfi\n\t\telse\n\t\t\treturn false\n\
    \t\tfi\n\telse\n\t\treturn false\n\tfi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkyehiowk.sh: line 22: ((: 2 + 3 -eq 1 : syntax error in expression
    (error token is "1 ")

    /tmp/tmpkyehiowk.sh: line 25: return: false: numeric argument required

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [ -z \"$1\" ] || [ -z \"$2\" ] ||\
    \ [ -z \"$3\" ]; then\n    echo \"ERROR: Invalid input\"\n    return 1\n  fi\n\
    \  local a=$(echo \"$1\" | sed 's/\\.[0-9]*$//g')\n  local b=$(echo \"$2\" | sed\
    \ 's/\\.[0-9]*$//g')\n  local c=$(echo \"$3\" | sed 's/\\.[0-9]*$//g')\n  declare\
    \ -i x y z\n  x=$(( $a ))\n  y=$(( $b ))\n  z=$(( $c ))\n  if [ $x -eq $(expr\
    \ $x + $y) ] || [ $x -eq $(expr $x + $z) ] || [ $y -eq $(expr $y + $z) ]; then\n\
    \    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n   \
    \ any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\tlocal first=$1\n\tlocal second=$2\n\t\
    local third=$3\n\t\n\tif [[ $first == -* ]] || [[ $second == -* ]] || [[ $third\
    \ == -* ]]; then\n\t\treturn false\n\telse\n\t\tif [[ \"$first\" =~ ^[0-9]+\\\
    .[0-9]+$ ]] && [[ \"$second\" =~ ^[0-9]+\\.[0-9]+$ ]] && [[ \"$third\" =~ ^[0-9]+\\\
    .[0-9]+$ ]]; then\n\t\t\tif (( $1 + $2 + $3 == $(( first + second + third )) ))\
    \ ; then\n\t\t\t\treturn true\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tfi\n\t\t\
    else\n\t\t\treturn false\n\t\tfi\n\tfi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqdx0bm6_.sh: line 33: return: false: numeric argument required

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local first=\"$1\"\n    local second=\"\
    $2\"\n    local third=\"$3\"\n    # Check that all are integers\n    if [[ ${first}\
    \ =~ ^[0-9]+$ ]] || [[ ${second} =~ ^[0-9]+$ ]] || [[ ${third} =~ ^[0-9]+$ ]];\
    \ then\n        # If $1, $2, $3 are all integers\n        if [[ ${first} == ${second}\
    \ ]] && [[ ${second} == ${third} ]]; then\n            echo \"true\"\n       \
    \ else\n            echo \"false\"\n        fi\n    else\n        # Otherwise\
    \ return false\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  [[ \"$1\" == \"$2\" ]] && [[ \"$1\" ==\
    \ \"$3\" ]] && echo \"true\" || echo \"false\"\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local arg1=$1\n    local arg2=$2\n\
    \    local arg3=$3\n    echo \"$(( $(echo \"$arg1\" + \"$arg2\") | bc -l ))\"\
    \ == \"$arg3\"\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    [ $# -eq 3 ] && [ \"$1\" -gt 0 -a \"\
    $2\" -gt 0 -a \"$3\" -gt 0 ] && [ \"$1\" -gt \"$2\" ] && [ \"$2\" -gt \"$3\" ]\
    \ && [ \"$1\" -eq (( \"$1\" + \"$2\" )) ] && [ \"$2\" -eq (( \"$1\" + \"$3\" ))\
    \ ] && [ \"$3\" -eq (( \"$2\" + \"$3\" )) ]\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6kgbzinl.sh: line 19: syntax error near unexpected token `(''

    /tmp/tmp6kgbzinl.sh: line 19: `    [ $# -eq 3 ] && [ "$1" -gt 0 -a "$2" -gt 0
    -a "$3" -gt 0 ] && [ "$1" -gt "$2" ] && [ "$2" -gt "$3" ] && [ "$1" -eq (( "$1"
    + "$2" )) ] && [ "$2" -eq (( "$1" + "$3" )) ] && [ "$3" -eq (( "$2" + "$3" ))
    ]''

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1; shift\n    local b=$1;\
    \ shift\n    local c=$1; shift\n    [[ \"$a\" =~ ^-?[0-9]+\\.[0-9]*$ ]] || return\
    \ 1\n    [[ \"$b\" =~ ^-?[0-9]+\\.[0-9]*$ ]] || return 1\n    [[ \"$c\" =~ ^-?[0-9]+\\\
    .[0-9]*$ ]] || return 1\n    [[ \"$a\" -eq \"$b\" || \"$b\" -eq \"$c\" || \"$a\"\
    \ -eq \"$c\" ]] && return 1 || return 0\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local sum=\"$(( $1 + $2 ))\"\n  [[ \"\
    $1\" == \"$sum\" ]]\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    [ \"$2\" = \"$3\" ] || [ \"$3\" = \"\
    $4\" ] || [ \"$4\" = \"$5\" ] || [ \"$5\" = \"$6\" ] || [ \"$6\" = \"$7\" ] ||\
    \ [ \"$7\" = \"$8\" ] || [ \"$8\" = \"$9\" ] || [ \"$9\" = \"$10\" ] || [ \"$10\"\
    \ = \"$11\" ] || [ \"$11\" = \"$12\" ] || [ \"$12\" = \"$13\" ] || [ \"$13\" =\
    \ \"$14\" ] || [ \"$14\" = \"$15\" ] || [ \"$15\" = \"$16\" ] || [ \"$16\" = \"\
    $17\" ] || [ \"$17\" = \"$18\" ] || [ \"$18\" = \"$19\" ] || [ \"$19\" = \"$20\"\
    \ ] || [ \"$20\" = \"$21\" ] || [ \"$21\" = \"$22\" ] || [ \"$22\" = \"$23\" ]\
    \ || [ \"$23\" = \"$24\" ] || [ \"$24\" = \"$25\" ] || [ \"$25\" = \"$26\" ] ||\
    \ [ \"$26\" = \"$27\" ] || [ \"$27\" = \"$28\" ] || [ \"$28\" = \"$29\" ] || [\
    \ \"$29\" = \"$30\" ] || [ \"$30\" = \"$31\" ] || [ \"$31\" = \"$32\" ] || [ \"\
    $32\" = \"$33\" ] || [ \"$33\" = \"$34\" ] || [ \"$34\" = \"$35\" ] || [ \"$35\"\
    \ = \"$36\" ] || [ \"$36\" = \"$37\" ] || [ \"$37\" = \"$38\" ] || [ \"$38\" =\
    \ \"$39\" ] || [ \"$39\" = \"$40\" ] || [ \"$40\" = \"$41\" ] || [ \"$41\" = \"\
    $42\" ] || [ \"$42\" = \"$43\" ] || [ \"$43\" = \"$44\" ] || [ \"$44\" = \"$45\"\
    \ ] || [ \"$45\" = \"$46\" ] || [ \"$46\" = \"$47\" ] || [ \"$47\" = \"$48\" ]\
    \ || [ \"$48\" = \"$49\" ] || [ \"$49\" = \"$50\" ] || [ \"$50\" = \"$51\" ] ||\
    \ [ \"$51\" = \"$52\" ] || [ \"$52\" = \"$53\" ] || [ \"$53\" = \"$54\" ] || [\
    \ \"$54\" = \"$55\" ] || [ \"$55\" = \"$56\" ] || [ \"$56\" = \"$57\" ] || [ \"\
    $57\" = \"$58\" ] || [ \"$58\" = \"$59\" ] || [ \"$59\" = \"$60\" ] || [ \"$60\"\
    \ = \"$61\" ] || [ \"$61\" = \"$62\" ] || [ \"$62\" = \"$63\" ] || [ \"$63\" =\
    \ \"$64\" ] || [ \"$64\" = \"$65\" ] || [ \"$65\" = \"$66\" ] || [ \"$66\" = \"\
    $67\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmaei2zgf.sh: line 37: unexpected EOF while looking for matching
    `"''

    /tmp/tmpmaei2zgf.sh: line 41: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    expr $1 == $2 + $3 && expr $1 == $2\
    \ + $3 && expr $2 == $1 + $3\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  declare a=$1\n  declare b=$2\n  declare\
    \ c=$3\n  (( \"$a\" < \"$b\" )) && [ \"$a\" -lt \"$c\" ] && return 1\n  (( \"\
    $b\" < \"$c\" )) && [ \"$b\" -lt \"$a\" ] && return 1\n  (( \"$c\" < \"$a\" ))\
    \ && [ \"$c\" -lt \"$b\" ] && return 1\n  (( \"$a\" == \"$b\" && \"$a\" == \"\
    $c\" )) && return 0\n  (( \"$a\" == \"$c\" && \"$b\" == \"$c\" )) && return 0\n\
    \  return 1\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\tif [ $1 -eq $2 ] || [ $1 -eq $3 ] ||\
    \ [ $2 -eq $3 ]; then\n\t\ttrue\n\telse\n\t\tfalse\n\tfi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [ \"$1\" -gt \"$2\" ] || [ \"$1\"\
    \ -eq \"$2\" ]; then\n        if [ \"$3\" -gt \"$4\" ] || [ \"$3\" -eq \"$4\"\
    \ ]; then\n            if [ \"$2\" -eq \"$(( 1 + $3 ))\" ]; then\n           \
    \     echo \"true\"\n            else\n                echo \"false\"\n      \
    \      fi\n        fi\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b sum\n    a=$1\n    b=$2\n\
    \    sum=$((a + b))\n    [ $sum -eq $((a + b)) ] && return 0\n    [ $sum -eq $((a\
    \ - b)) ] && return 1\n    [ $sum -eq $((a - b)) ] && return 1\n    [ $sum -eq\
    \ $((b - a)) ] && return 2\n    [ $sum -eq $((b - a)) ] && return 2\n    return\
    \ 3\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    [ $# = 3 ] || return 1\n    [ $1 =\
    \ $2 ] && return 1\n    [ $1 = $3 ] && return 1\n    [ \"$1\" -gt \"$2\" ] &&\
    \ return 1\n    [ \"$1\" -le \"$2\" ] && return 1\n    [ \"$1\" -ge \"$3\" ] &&\
    \ return 1\n    return 0\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    echo $(($1 + $2 + $3 == $(( $1 + $2\
    \ )) ))\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local _retval_=\"$(( ( ( ( ${1}${2}\
    \ != ${3}${4} ) ) && ( $1 != $3 ) ) && ( $2 != $4 ) ))\"\n    if [[ $_retval_\
    \ == \"true\" ]] ; then echo true; else echo false; fi\n}\n\ncandidate() {\n \
    \   any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp828dsrc7.sh: line 19: ( ( ( 23 != 1 ) ) && ( 2 != 1 ) ) && ( 3
    !=  ) : syntax error: operand expected (error token is ") ")

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  [[ \"$1\" = \"$2\" ]] || [[ \"$2\" =\
    \ \"$3\" ]] || [[ \"$3\" = \"$4\" ]]\n}\n\ncandidate() {\n    any_int \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local sum=$(( $1 + $2 ))\n    local\
    \ max=$(( $1 > $3 ))\n    local min=$(( $1 < $3 ))\n\n    if (( $sum == $3 ));\
    \ then\n        if (( $max == 0 )); then\n            if (( $min == 0 )); then\n\
    \                return true\n            fi\n        fi\n    else\n        if\
    \ (( $min == 0 )); then\n            if (( $max == 1 )); then\n              \
    \  return true\n            fi\n        fi\n    fi\n    return false\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfq1wd9if.sh: line 32: return: true: numeric argument required

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\t# echo $2\n\t# echo $3\n\t# echo $4\n\
    \t# echo $5\n\t# echo $6\n\t# echo $7\n\t# echo $8\n\t# echo $9\n\t# echo $10\n\
    \t# echo $11\n\t# echo $12\n\t# echo $13\n\t# echo $14\n\t# echo $15\n\t# echo\
    \ $16\n\t# echo $17\n\t# echo $18\n\t# echo $19\n\t# echo $20\n\t# echo $21\n\t\
    # echo $22\n\t# echo $23\n\t# echo $24\n\t# echo $25\n\t# echo $26\n\t# echo $27\n\
    \t# echo $28\n\t# echo $29\n\t# echo $30\n\t# echo $31\n\t# echo $32\n\t# echo\
    \ $33\n\t# echo $34\n\t# echo $35\n\t# echo $36\n\t# echo $37\n\t# echo $38\n\t\
    # echo $39\n\t# echo $40\n\t# echo $41\n\t# echo $42\n\t# echo $43\n\t# echo $44\n\
    \t# echo $45\n\t# echo $46\n\t# echo $47\n\t# echo $48\n\t# echo $49\n\t# echo\
    \ $50\n\t# echo $51\n\t# echo $52\n\t# echo $53\n\t# echo $54\n\t# echo $55\n\t\
    # echo $56\n\t# echo $57\n\t# echo $58\n\t# echo $59\n\t# echo $60\n\t# echo $61\n\
    \t# echo $62\n\t# echo $63\n\t# echo $64\n\t# echo $65\n\t# echo $66\n\t# echo\
    \ $67\n\t# echo $68\n\t# echo $69\n\t# echo $70\n\t# echo $71\n\t# echo $72\n\t\
    # echo $73\n\t# echo $74\n\t# echo $75\n\t# echo $76\n\t# echo $77\n\t# echo $78\n\
    \t# echo $79\n\t# echo $80\n\t# echo $81\n\t# echo $82\n\t# echo $83\n\t# echo\
    \ $84\n\t# echo $85\n\t# echo $86\n\t# echo $87\n\t# echo $88\n\t# echo $89\n\t\
    # echo $90\n\t# echo $91\n\t# echo $92\n\t# echo $93\n\t# echo $94\n\t# echo $95\n\
    \t# echo $96\n\t# echo $97\n\t# echo $98\n\t# echo $99\n\t# echo $100\n\t# echo\
    \ $101\n\t# echo $102\n\t# echo $103\n\t# echo $104\n\t# echo $105\n\t# echo $106\n\
    \t# echo $107\n\t# echo $108\n\t# echo $109\n\t# echo $110\n\t# echo $111\n\t\
    # echo $112\n\t# echo $113\n\t# echo $114\n\t# echo $115\n\t# echo $116\n\t# echo\
    \ $117\n\t# echo $118\n\t# echo $119\n\t# echo $120\n\t# echo $121\n\t# echo $122\n\
    \t# echo $123\n\t# echo $124\n\t# echo $125\n\t# echo $126\n\t# echo $127\n\t\
    # echo $128\n\t# \n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp28x2wqup.sh: line 147: syntax error near unexpected token `}''

    /tmp/tmp28x2wqup.sh: line 147: `}''

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local IFS=.\n  local a b c\n  a=${1%-*}\n\
    \  b=${2%-*}\n  c=${3%-*}\n  # return early if any of them is empty\n  if [ -z\
    \ \"$a\" -o -z \"$b\" -o -z \"$c\" ] ; then\n    echo \"false - at least one is\
    \ empty\"\n    return 1\n  fi\n  if [ \"$a\" != \"$b\" -o \"$a\" != \"$c\" -o\
    \ \"$b\" != \"$c\" ] ; then\n    echo \"false - non-integer numbers\"\n    return\
    \ 1\n  fi\n  # return early if all the numbers are integers\n  if [ \"$a\" -eq\
    \ \"$b\" -a \"$a\" -eq \"$c\" ] ; then\n    echo \"true\"\n    return 0\n  fi\n\
    \  # otherwise, return false\n  echo \"false - at least one is not an integer\"\
    \n  return 1\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local x=\"$1\"\n    local y=\"$2\"\n\
    \    local z=\"$3\"\n    [[ \"$x\" == \"$y\" || \"$x\" == \"$z\" ]]\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=\"$1\"\n    local b=\"$2\"\n\
    \    local c=\"$3\"\n\n    declare -i aa bb cc sum\n    aa=\"${a%%.*}\"\n    bb=\"\
    ${b%%.*}\"\n    cc=\"${c%%.*}\"\n\n    case \"${aa,}${bb,}${cc,}\" in\n      \
    \  \"${aa,}${bb,}${cc,}\")\n            sum=\"${aa}+${bb}+${cc}\"\n        ;;\n\
    \        *)\n            sum=\"0\"\n        ;;\n    esac\n\n    case \"${sum,}\"\
    \ in\n        \"${aa}+${bb}+${cc}\")\n            echo \"true\"\n        ;;\n\
    \        *)\n            echo \"false\"\n        ;;\n    esac\n\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\techo $(( $(( ($1 + $2) * 10 )) )) | grep\
    \ -q \"^[0-9]+$\"\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [ $(($1*$1 + $2*$2)) == $3 ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local a b c\n  a=$(echo \"${1}*1\" |\
    \ bc)\n  b=$(echo \"${2}*1\" | bc)\n  c=$(echo \"${3}*1\" | bc)\n  echo \"${a}\
    \ + ${b} + ${c} == ${a} + ${b} + ${c}\"\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c d sum result\n\n    a=$1\n\
    \    b=$2\n    c=$3\n\n    sum=$((a+b+c))\n\n    if [ \"$sum\" -gt \"$c\" ] &&\
    \ [ \"$sum\" -le \"$a\" ] && [ \"$sum\" -ge \"$b\" ]; then\n        result=\"\
    true\"\n    else\n        result=\"false\"\n    fi\n\n    echo \"$result\"\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local _sum=0\n    local _num=${1:?Function\
    \ requires 3 parameters}\n    local _arg2=${2:?Function requires 3 parameters}\n\
    \    local _arg3=${3:?Function requires 3 parameters}\n\n    if [[ ${_arg2} =~\
    \ ^-?[0-9]+\\.[0-9]+$ ]]; then\n        local _arg1=\"${_arg3}\"\n        _sum=\"\
    ${_arg3}\"\n    elif [[ ${_arg3} =~ ^-?[0-9]+\\.[0-9]+$ ]]; then\n        local\
    \ _arg1=\"${_arg2}\"\n        _sum=\"${_arg2}\"\n    elif [[ ${_arg2} =~ ^-?[0-9]+$\
    \ ]]; then\n        local _arg1=\"${_arg3}\"\n        _sum=\"${_arg3}\"\n    elif\
    \ [[ ${_arg3} =~ ^-?[0-9]+$ ]]; then\n        local _arg1=\"${_arg2}\"\n     \
    \   _sum=\"${_arg2}\"\n    elif [[ ${_arg2} == ${_arg3} ]]; then\n        _sum=\"\
    ${_arg2}\"\n    else\n        echo \"false\"\n    fi\n\n    local _arg1=${_arg1}\n\
    \    local _arg2=${_arg2}\n    local _arg3=${_arg3}\n\n    if [[ ${_arg1} -ge\
    \ 1 -a ${_arg1} -le ${_arg2} ]]; then\n        local _arg1=${_arg1}\n        local\
    \ _arg2=${_arg2}\n        local _arg3=${_arg3}\n        while [[ ${_arg1} -le\
    \ ${_arg2} ]] && [[ ${_arg2} -ge 1 -a ${_arg2} -le ${_arg3} ]]; then\n       \
    \     _sum=\"${_arg1}${_arg2}${_arg3}\"\n            _arg2=\"${_arg2}\"\n    \
    \        _arg3=\"${_arg3}\"\n            local _arg1=\"${_arg1}\"\n        done\n\
    \    fi\n    echo ${_sum}\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdduxzlqz.sh: line 46: syntax error in conditional expression

    /tmp/tmpdduxzlqz.sh: line 46: syntax error near `-a''

    /tmp/tmpdduxzlqz.sh: line 46: `    if [[ ${_arg1} -ge 1 -a ${_arg1} -le ${_arg2}
    ]]; then''

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\t(( $1 == $2 + $3 )) && (( $1 -le $3 ))\
    \ && (( $3 -le $2 ))\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    declare -i num1=$1\n    declare -i\
    \ num2=$2\n    declare -i num3=$3\n    # Check if any of them are integers\n \
    \   # See if we actually have integers\n    if [[ $num1 = +([0-9]) ]]; then\n\
    \        declare -i num1int=$num1\n    elif [[ $num1 = -([0-9]) ]]; then\n   \
    \     declare -i num1int=-$num1\n    else\n        # Not integers\n        declare\
    \ -i num1int=\n    fi\n    if [[ $num2 = +([0-9]) ]]; then\n        declare -i\
    \ num2int=$num2\n    elif [[ $num2 = -([0-9]) ]]; then\n        declare -i num2int=-$num2\n\
    \    else\n        # Not integers\n        declare -i num2int=\n    fi\n    if\
    \ [[ $num3 = +([0-9]) ]]; then\n        declare -i num3int=$num3\n    elif [[\
    \ $num3 = -([0-9]) ]]; then\n        declare -i num3int=-$num3\n    else\n   \
    \     # Not integers\n        declare -i num3int=\n    fi\n\n    # Get the sum\
    \ of the first two\n    declare -i num4=$((num1int+num2int))\n    # Check if they\
    \ are integers\n    if [[ $num4 = +([0-9]) ]]; then\n        declare -i num4int=$num4\n\
    \    elif [[ $num4 = -([0-9]) ]]; then\n        declare -i num4int=-$num4\n  \
    \  else\n        # Not integers\n        declare -i num4int=\n    fi\n    # Check\
    \ if all are integers\n    if [[ $num4int = +([0-9]) ]]; then\n        declare\
    \ -i num4int=$num4int\n    elif [[ $num4int = -([0-9]) ]]; then\n        declare\
    \ -i num4int=-$num4int\n    else\n        # Not integers\n        declare -i num4int=\n\
    \    fi\n    # All are integers\n    if [[ $num4int =+ $num1int ]]; then\n   \
    \     # All integers, return true\n        declare -i anynint=true\n    elif [[\
    \ $num4int =+ $num2int ]]; then\n        # All integers, return true\n       \
    \ declare -i anynint=true\n    elif [[ $num4int =+ $num3int ]]; then\n       \
    \ # All integers, return true\n        declare -i anynint=true\n    else\n   \
    \     # Not all integers, return false\n        declare -i anynint=false\n   \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8vaztk24.sh: line 26: syntax error in conditional expression: unexpected
    token `(''

    /tmp/tmp8vaztk24.sh: line 26: syntax error near `-([''

    /tmp/tmp8vaztk24.sh: line 26: `    elif [[ $num1 = -([0-9]) ]]; then''

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [ \"$1\" -gt \"$2\" ] || [ \"$1\"\
    \ -eq \"$2\" ] || [ \"$1\" -le \"$2\" ]; then\n    if [ \"$1\" -eq \"$3\" ]; then\n\
    \      [ \"$3\" -eq \"$4\" ] && return 1 || return 0\n    fi\n  else\n    return\
    \ 0\n  fi\n  return 1\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  [[ \"$1\" =~ ^-?[0-9]+\\.?[0-9]*$ ]]\
    \ && \\\n  [[ \"$2\" =~ ^-?[0-9]+\\.?[0-9]*$ ]] && \\\n  [[ \"$3\" =~ ^-?[0-9]+\\\
    .?[0-9]*$ ]] &&\n  [[ $(echo \"($1+$2)+($3-$1)\" | bc -l | bc) -eq 0 ]]\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  echo $(( $1 == $3 || ( (( $1 >= $3 &&\
    \ $1 <= $2 ) || ( $3 >= $2 && $3 <= $1 ) ) && ( ( ! $( echo \"$1\" | bc ) ) )\
    \ ) ))\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  IFS='.' read -a a <<< \"$1\"\n  IFS='.'\
    \ read -a b <<< \"$2\"\n  IFS='.' read -a c <<< \"$3\"\n\n  if [ \"$a[0] + $a[1]\
    \ + $a[2]\" -eq \"$b[0] + $b[1] + $b[2]\" ]; then\n    if [ \"$a[0] + $a[1] +\
    \ $a[2]\" -eq \"$c[0] + $c[1] + $c[2]\" ]; then\n      return 0\n    else\n  \
    \    return 1\n    fi\n  else\n    return 1\n  fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphlyke0lf.sh: line 23: [: 2[0] + 2[1] + 2[2]: integer expression
    expected

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local var1 var2 var3 result=$(printf\
    \ %s \"$1\" \"$2\" \"$3\" | tr -d '[[:space:]]')\n    [[ ${var1} =~ ^-?([0-9]+|[0-9]*\\\
    .[0-9]+|[0-9]*\\.[0-9]*)$ ]] || return 1\n    [[ ${var2} =~ ^-?([0-9]+|[0-9]*\\\
    .[0-9]+|[0-9]*\\.[0-9]*)$ ]] || return 1\n    [[ ${var3} =~ ^-?([0-9]+|[0-9]*\\\
    .[0-9]+|[0-9]*\\.[0-9]*)$ ]] || return 1\n    # var1 == var1 + var2\n    # var1\
    \ == var1 + var2 - var3\n    # var1 == var1 + var2 - var3\n    var1=\"${BASH_REMATCH[1]}${BASH_REMATCH[2]}\"\
    \n    var2=\"${BASH_REMATCH[3]}${BASH_REMATCH[4]}\"\n    var3=\"${BASH_REMATCH[5]}${BASH_REMATCH[6]}\"\
    \n    [[ \"$var1\" == \"$(( var1 + var2 ))\" ]] && [[ \"$var1\" == \"$(( var1\
    \ + var2 - var3 ))\" ]] && return 0\n    return 1\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  # Set a default return value\n  any_int=false\n\
    \  # Get our parameters\n  IFS=\".\" read -r -a array <<< \"$1\"\n  IFS=\".\"\
    \ read -r -a array2 <<< \"$2\"\n  IFS=\".\" read -r -a array3 <<< \"$3\"\n  IFS=\"\
    .\" read -r -a array4 <<< \"$4\"\n  # Compare them\n  for num in \"${array[@]}\"\
    ; do\n    for num2 in \"${array2[@]}\"; do\n      if [[ ${num} -eq \"${num2}\"\
    \ ]]; then\n        any_int=true\n        break\n      fi\n    done\n  done\n\
    \  # If all are equal, return true\n  if [[ \"${any_int}\" == true ]]; then\n\
    \    return 0\n  fi\n  # Otherwise, return false\n  return 1\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  declare -i x=$1\n  declare -i y=$2\n\
    \  declare -i z=$3\n  ((x<y)) || return $z\n  ((y<z)) || return $z\n  ((x==y))\
    \ && return $z\n  ((x==z)) && return $z\n  ((y==z)) && return $z\n  return $z\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local a=\"$1\"\n  local b=\"$2\"\n  local\
    \ c=\"$3\"\n  if [ \"$a\" == \"$b\" ] || [ \"$a\" == \"$c\" ] || [ \"$b\" == \"\
    $c\" ] ; then\n    return 0\n  else\n    return 1\n  fi\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b\n    ((a=b=$1)) && (((a>0)&&(b>0)&&((a<b)||(b<0)))\
    \ || ((a<0)&&(b<0)&&((a>b)||(b>0))))\n}\n\ncandidate() {\n    any_int \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpp6ymchhv.sh: line 20: a: command not found

    /tmp/tmpp6ymchhv.sh: line 20: a: command not found

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local a b c\n  if [[ $1 == $2 ]]; then\n\
    \    if (( ${#1} > 0 )) && (( ${#2} > 0 )) && (( ${#3} > 0 )) {\n      a=$1\n\
    \      b=$2\n      c=$3\n      if (( a == b )); then\n        echo $a\n      elif\
    \ (( a == c )); then\n        echo $a\n      else\n        echo $a\n      fi\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcns6k6m4.sh: line 21: syntax error near unexpected token `{''

    /tmp/tmpcns6k6m4.sh: line 21: `    if (( ${#1} > 0 )) && (( ${#2} > 0 )) && ((
    ${#3} > 0 )) {''

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    [[ \"$1\" =~ ^[-+]?[0-9]*\\.?[0-9]+$\
    \ ]] || return 1\n    [[ \"$2\" =~ ^[-+]?[0-9]*\\.?[0-9]+$ ]] || return 1\n  \
    \  [[ \"$3\" =~ ^[-+]?[0-9]*\\.?[0-9]+$ ]] || return 1\n    [[ \"$1\" == \"$((\
    \ $(echo \"$1 + $2\" | bc -l) + $3)\" ]] || return 1\n    return 0\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmponioorsv.sh: line 41: unexpected EOF while looking for matching
    `"''

    /tmp/tmponioorsv.sh: line 45: unexpected argument to conditional binary operator

    /tmp/tmponioorsv.sh: line 45: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\t# echo $1 $2 $3\n\t[[ \"$1\" =~ ^-?[0-9]+\\\
    .[0-9]*$ ]] || return 1\n\t[[ \"$2\" =~ ^-?[0-9]+\\.[0-9]*$ ]] || return 1\n\t\
    [[ \"$3\" =~ ^-?[0-9]+\\.[0-9]*$ ]] || return 1\n\t[[ \"$1\" -eq \"$2\" ] || [\
    \ \"$1\" -eq \"$3\" ]] || return 0\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "/tmp/tmp05mkir38.sh: line 23: syntax error in conditional expression\n\
    /tmp/tmp05mkir38.sh: line 23: syntax error near `]'\n/tmp/tmp05mkir38.sh: line\
    \ 23: `\t[[ \"$1\" -eq \"$2\" ] || [ \"$1\" -eq \"$3\" ]] || return 0'\n"
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local IFS=.\n  local a b c d e\n  a=$1;\
    \ b=$2; c=$3\n  if ((a < 0)); then a=-a; fi\n  if ((b < 0)); then b=-a; fi\n \
    \ if ((c < 0)); then c=-c; fi\n  a=`echo $a | bc -l`\n  b=`echo $b | bc -l`\n\
    \  c=`echo $c | bc -l`\n  d=`echo $a $b $c | bc -l`\n  e=`echo $a $b $c $d | bc\
    \ -l`\n  # $e is true if the sum of the numbers is equal to the number itself\n\
    \  if (( e == $d )); then echo \"true\"; else echo \"false\"; fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    /tmp/tmp8avitein.sh: line 31: ((: e ==  : syntax error: operand expected (error
    token is "==  ")

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local _sum=\"$(( ${1}*${2} + ${2}*${3}\
    \ ))\"\n    [[ \"$_sum\" =~ ^[0-9]+$ ]] || return 1\n    [[ \"$_sum\" -eq \"$((\
    \ $1 + $2 ))\" ]] || return 0\n    return 1\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  sum=$(( $1 + $2 ))\n  a=0\n  if (( $3\
    \ >= 0 )); then\n    a=1\n  else\n    a=0\n  fi\n  (( $sum % 1 ))\n  [ $a -eq\
    \ 1 ]\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local FIRST_NUM=$(echo $1 | awk '{print\
    \ int($0)}')\n  local SECOND_NUM=$(echo $2 | awk '{print int($0)}')\n  local THIRD_NUM=$(echo\
    \ $3 | awk '{print int($0)}')\n  if [ $FIRST_NUM -eq 0 -o $FIRST_NUM -le 1 ];\
    \ then\n    # First number cannot be a negative number\n    return 1\n  fi\n \
    \ if [ $SECOND_NUM -eq 0 -o $SECOND_NUM -le 1 ]; then\n    # Second number cannot\
    \ be a negative number\n    return 1\n  fi\n  if [ $THIRD_NUM -eq 0 -o $THIRD_NUM\
    \ -le 1 ]; then\n    # Third number cannot be a negative number\n    return 1\n\
    \  fi\n\n  # Check if the first number is less than second number\n  if [ $FIRST_NUM\
    \ -gt $SECOND_NUM ]; then\n    # First number is greater than or equal than second\
    \ number\n    return 1\n  fi\n\n  # Check if the first number is less than third\
    \ number\n  if [ $FIRST_NUM -gt $THIRD_NUM ]; then\n    # First number is greater\
    \ than or equal than third number\n    return 1\n  fi\n\n  # Check if second number\
    \ is less than third number\n  if [ $SECOND_NUM -gt $THIRD_NUM ]; then\n    #\
    \ Second number is greater than or equal than third number\n    return 1\n  fi\n\
    \n  # All numbers are integers\n  return 0\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    IFS= read -r -d '' -a numbers <<<\"\
    $@\"\n    for i in \"${!numbers[@]}\"; do\n        (( ${numbers[i]} != $(( ${numbers[0]}+${numbers[1]}+${numbers[2]}\
    \ )) )) && return 0\n    done\n    return 1\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpteqsem5u.sh: line 21: 2 3 1

    ++ : syntax error in expression (error token is "3 1

    ++ ")

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local var1 var2 var3 sum\n    var1=\"\
    ${1}\"\n    var2=\"${2}\"\n    var3=\"${3}\"\n    sum=\"${var1}${var2}${var3}\"\
    \n    if [[ \"${var1}\" == \"${sum}\" ]] ; then\n        echo \"true\"\n    elif\
    \ [[ \"${var2}\" == \"${sum}\" ]] ; then\n        echo \"true\"\n    elif [[ \"\
    ${var3}\" == \"${sum}\" ]] ; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\tlocal x=\"$1\"\n\tlocal y=\"$2\"\n\t\
    local z=\"$3\"\n\t[[ \"$x\" =~ ^[+-]?[0-9]+\\.?[0-9]*$ ]] || return 1\n\t[[ \"\
    $y\" =~ ^[+-]?[0-9]+\\.?[0-9]*$ ]] || return 1\n\t[[ \"$z\" =~ ^[+-]?[0-9]+\\\
    .?[0-9]*$ ]] || return 1\n\t[[ $(echo \"$x + $y + $z\" | bc -l) -eq \"$(( x +\
    \ y + z ))\" ]]\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ \"$#\" -ne 3 ]]; then\n     \
    \   echo \"Usage: $0 <float1 float2 float3>\"\n        exit 1\n    fi\n    if\
    \ [[ \"$#\" -eq 3 ]]; then\n        if [[ \"$1\" -eq \"0.\" ]] || [[ \"$2\" -eq\
    \ \"0.\" ]] || [[ \"$3\" -eq \"0.\" ]]; then\n            echo \"0\"\n       \
    \ else\n            echo \"true\"\n        fi\n    else\n        echo \"true\"\
    \n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp97nund05.sh: line 24: [[: 0.: syntax error: invalid arithmetic
    operator (error token is ".")

    /tmp/tmp97nund05.sh: line 24: [[: 0.: syntax error: invalid arithmetic operator
    (error token is ".")

    /tmp/tmp97nund05.sh: line 24: [[: 0.: syntax error: invalid arithmetic operator
    (error token is ".")

    /tmp/tmp97nund05.sh: line 24: [[: 2.5: syntax error: invalid arithmetic operator
    (error token is ".5")

    /tmp/tmp97nund05.sh: line 24: [[: 0.: syntax error: invalid arithmetic operator
    (error token is ".")

    /tmp/tmp97nund05.sh: line 24: [[: 0.: syntax error: invalid arithmetic operator
    (error token is ".")

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  [[ $1 =~ ^[0-9]+\\.[0-9]+$ ]] || return\n\
    \  [[ $2 =~ ^[0-9]+\\.[0-9]+$ ]] || return\n  [[ $3 =~ ^[0-9]+\\.[0-9]+$ ]] ||\
    \ return\n\n  local SUM=$(( ${BASH_REMATCH[1]} + ${BASH_REMATCH[2]} ))\n  [[ $SUM\
    \ -eq $(( ${BASH_REMATCH[1]}+${BASH_REMATCH[2]} )) ]] || return\n  echo \"true\"\
    \n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  [ $# -eq 3 ] || return 1\n  \n  # Check\
    \ if the first number is integer or float\n  [ \"$1\" -eq \"$(printf \"%d\" $1)\"\
    \ ] || return 1\n  [ \"$2\" -eq \"$(printf \"%d\" $2)\" ] || return 1\n  [ \"\
    $3\" -eq \"$(printf \"%d\" $3)\" ] || return 1\n\n  # Check if the first two numbers\
    \ are integers\n  [ \"$1\" -eq \"$2\" ] || return 1\n\n  # Check if the first\
    \ and third numbers are integers\n  [ \"$1\" -eq \"$3\" ] || return 1\n\n  # Check\
    \ if the first and third numbers are integers\n  [ \"$2\" -eq \"$3\" ] || return\
    \ 1\n\n  # Check if the first and second numbers are integers\n  [ \"$1\" -eq\
    \ \"$2\" ] || return 1\n  \n  # Check if the first and third numbers are integers\n\
    \  [ \"$2\" -eq \"$3\" ] || return 1\n  \n  # All three numbers are integers\n\
    \  return 0\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local var1=\"${1:-0}\"\n    local var2=\"\
    ${2:-0}\"\n    local var3=\"${3:-0}\"\n\n    if [ \"${var1}\" -gt \"${var2}\"\
    \ ] || [ \"${var1}\" -eq \"${var2}\" ]\n    then\n        if [ \"${var1}\" -gt\
    \ \"${var3}\" ] || [ \"${var1}\" -eq \"${var3}\" ]\n        then\n           \
    \ echo \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    # read all args\n\
    \    for a do\n        for b do\n            for c do\n                [[ \"$a\"\
    \ == \"$a\" || \"$a\" == \"$b\" || \"$a\" == \"$c\" ]] && return 1 || return 0\n\
    \            done\n        done\n    done\n    return 0\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ ! \"$1\" =~ ^[0-9]\\.[0-9]$ ]];\
    \ then\n    echo \"error: first argument should be a floating point\"\n    return\
    \ 1\n  fi\n  if [[ ! \"$2\" =~ ^[0-9]\\.[0-9]$ ]]; then\n    echo \"error: second\
    \ argument should be a floating point\"\n    return 1\n  fi\n  if [[ ! \"$3\"\
    \ =~ ^[0-9]\\.[0-9]$ ]]; then\n    echo \"error: third argument should be a floating\
    \ point\"\n    return 1\n  fi\n\n  if [[ \"$1\" -gt \"$2\" ]] ; then\n    if [[\
    \ \"$2\" -gt \"$3\" ]] ; then\n      if (( (\"$1\" -eq (\"$2\" + \"$3\")) && (\"\
    $1\" -eq \"$3\") )); then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    if [[ \"\
    $3\" -gt \"$2\" ]] ; then\n      if [[ \"$2\" -gt \"$3\" ]] ; then\n        if\
    \ (( (\"$1\" -eq (\"$2\" + \"$3\")) && (\"$1\" -eq \"$3\") )); then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      else\n\
    \        echo \"false\"\n      fi\n    else\n      echo \"false\"\n    fi\n  fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\tif [[ \"$1\" -gt \"$3\" ]]; then\n\t\t\
    if [[ \"$2\" -gt \"$3\" ]]; then\n\t\t\tif [[ \"$1\" -gt \"$2\" ]]; then\n\t\t\
    \t\techo \"true\"\n\t\t\telse\n\t\t\t\techo \"false\"\n\t\t\tfi\n\t\telse\n\t\t\
    \techo \"false\"\n\t\tfi\n\telse\n\t\tif [[ \"$2\" -gt \"$3\" ]]; then\n\t\t\t\
    if [[ \"$1\" -gt \"$2\" ]]; then\n\t\t\t\techo \"true\"\n\t\t\telse\n\t\t\t\t\
    echo \"false\"\n\t\t\tfi\n\t\telse\n\t\t\techo \"false\"\n\t\tfi\n\tfi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    # Make sure all arguments are integers\n\
    \    for a in \"$@\"; do\n        if [[ ! ${a} =~ ^[0-9]+$ ]]; then\n        \
    \    echo \"Invalid arguments\"\n            exit 1\n        fi\n    done\n  \
    \  sum=$(($1 + $2))\n    if [ $sum -eq $3 ] ; then\n        echo \"true\"\n  \
    \  else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    IFS=.\n    local numbers=$(IFS=$'\\\
    n'; echo \"$1\" \"$2\" \"$3\")\n    local sum=$(IFS=$'\\n'; echo \"$numbers\"\
    \ | sed 's/[^0-9.]//g' | sort -n | head -1)\n    IFS=\n    [ -z \"$sum\" ] &&\
    \ return 1\n    local diff=$(IFS=$'\\n'; echo \"$sum\" | sed 's/[^0-9.]//g' |\
    \ sort -n)\n    local diff=${diff#0}\n    (( diff > 0 )) && return 1 || return\
    \ 0\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    a=$1\n    b=$2\n \
    \   c=$3\n    if [ $a -eq $b ] && [ $a -eq $c ]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\t[[ $2 -gt $3 ]] && [[ $2 -le $1 ]] ||\
    \ [[ $3 -le $1 ]]\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    if [ $a == $b ] && [ $a == $c ] ; then\n        echo true\n    else\n\
    \        echo false\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    local result=\"false\"\
    \n\n    # Convert each parameter to an integer type\n    a=$1\n    b=$2\n    c=$3\n\
    \n    # Check if there is anything left in the parameters\n    if [ $a -eq \"\"\
    \ ] || [ $b -eq \"\" ] || [ $c -eq \"\" ]; then\n        return\n    fi\n\n  \
    \  # Check if all parameters are integers\n    if [ \"$a\" != $a ] || [ \"$b\"\
    \ != $b ] || [ \"$c\" != $c ] || [ \"$a\" != $b ] || [ \"$b\" != $c ] || [ \"\
    $a\" != $c ]; then\n        return\n    fi\n\n    # Check if $a + $b + $c equals\
    \ the sum of all the previous parameters\n    if [ $(a+b+c) == $a ] || [ $(b+c+a)\
    \ == $b ] || [ $(c+a+b) == $c ] || [ $(a+c+b) == $c ] || [ $(b+a+c) == $b ] ||\
    \ [ $(c+a+b) == $c ] || [ $(a+b+c) == $c ]; then\n        result=\"true\"\n  \
    \  fi\n\n    echo $result\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbflpef83.sh: line 28: [: : integer expression expected

    /tmp/tmpbflpef83.sh: line 28: [: : integer expression expected

    /tmp/tmpbflpef83.sh: line 28: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    # Read the first two numbers as strings.\n\
    \    local x1 x2\n    x1=$(echo \"$1\" | tr -d \"-\")\n    x2=$(echo \"$2\" |\
    \ tr -d \"-\")\n    # Convert to integers\n    x1=$(echo \"$x1\" | cut -d \"-\"\
    \ -f 1)\n    x2=$(echo \"$x2\" | cut -d \"-\" -f 1)\n    if [[ $x1 == *[!0-9]*\
    \ ]]; then\n        echo \"false\"\n    else\n        if [[ $x1 == *[0-9]* ]];\
    \ then\n            echo \"true\"\n        elif [[ $x2 == *[0-9]* ]]; then\n \
    \           echo \"true\"\n        else\n            echo \"false\"\n        fi\n\
    \    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local x1 x2 x3\n  x1 x2 x3=$(echo \"\
    $1\" | awk '{print $1}')\n  x1 x2 x3=$(echo \"$2\" | awk '{print $1}')\n  x1 x2\
    \ x3=$(echo \"$3\" | awk '{print $1}')\n  ((x1 + x2 + x3) == $((x1 + x2 + x3)))\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfcalm3yo.sh: line 23: syntax error near unexpected token `==''

    /tmp/tmpfcalm3yo.sh: line 23: `  ((x1 + x2 + x3) == $((x1 + x2 + x3)))''

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local var1=$1\n    local var2=$2\n\
    \    local var3=$3\n    [ $var1 -lt $var2 ] && [ $var2 -lt $var3 ]\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local float1 float2 float3 sum\n  case\
    \ \"$1\" in\n  -?[0-9]*)\n    float1=$1\n    ;;\n  -?[0-9]*)\n    float2=$1\n\
    \    ;;\n  -?[0-9]*)\n    float3=$1\n    ;;\n  *)\n    echo \"invalid input\"\n\
    \    exit 0\n    ;;\n  esac\n  case \"$2\" in\n  -?[0-9]*)\n    sum=$((float1+float2+float3))\n\
    \    ;;\n  -?[0-9]*)\n    sum=$((float1+float2+float3))\n    ;;\n  -?[0-9]*)\n\
    \    sum=$((float1+float2+float3))\n    ;;\n  *)\n    echo \"invalid input\"\n\
    \    exit 0\n    ;;\n  esac\n  case \"$3\" in\n  -?[0-9]*)\n    sum=$((float1+float2+float3))\n\
    \    ;;\n  -?[0-9]*)\n    sum=$((float1+float2+float3))\n    ;;\n  -?[0-9]*)\n\
    \    sum=$((float1+float2+float3))\n    ;;\n  *)\n    echo \"invalid input\"\n\
    \    exit 0\n    ;;\n  esac\n  echo \"$sum\" > $5\n  echo \"$sum\" > $6\n  echo\
    \ \"$sum\" > $7\n  echo \"$sum\" > $8\n  echo \"$sum\" > $9\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local i1=$1\n  local i2=$2\n  local i3=$3\n\
    \  local sum=0\n\n  if (( $(( i1 == i2 + i3 )) )); then\n    echo \"true\"\n \
    \ else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\tlocal num1=$1\n\tlocal num2=$2\n\tlocal\
    \ num3=$3\n\tif ! [ $num1 -eq $num2 -a $num2 -eq $num3 ]\n\tthen\n\t\techo \"\
    false\"\n\telse\n\t\techo \"true\"\n\tfi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [ -z \"$1\" -o -z \"$2\" -o -z \"\
    $3\" ]\n  then\n    echo \"$0: invalid syntax. Usage $0 float float float\"\n\
    \    return 1\n  fi\n  echo \"$(( $1 * $2 + $2 * $3 + $3 ))\" | bc -l\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  [[ \"$1\" =~ ^[0-9]+\\.?[0-9]* ]] ||\
    \ return 1\n  [[ \"$2\" =~ ^[0-9]+\\.?[0-9]* ]] || return 1\n  [[ \"$3\" =~ ^[0-9]+\\\
    .?[0-9]* ]] || return 1\n  if [[ \"$1\" -gt \"$2\" ]]\n  then\n    return 1\n\
    \  elif [[ \"$1\" -eq \"$2\" ]]\n  then\n    if [[ \"$1\" -gt \"$3\" ]]\n    then\n\
    \      return 1\n    elif [[ \"$2\" -gt \"$3\" ]]\n    then\n      return 1\n\
    \    else\n      return 0\n    fi\n  else\n    return 0\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local float1=\"$1\"\n  local float2=\"\
    $2\"\n  local float3=\"$3\"\n  local float_result=\"\"\n\n  if [[ $float1 == *\"\
    .\"* ]]; then\n    float1=\"${float1%%.*}\"\n  fi\n  if [[ $float2 == *\".\"*\
    \ ]]; then\n    float2=\"${float2%%.*}\"\n  fi\n  if [[ $float3 == *\".\"* ]];\
    \ then\n    float3=\"${float3%%.*}\"\n  fi\n  if [[ $float1 -ge 0 ]]; then\n \
    \   if [[ $float1 -le $float2 ]]; then\n      if [[ $float2 -ge $float3 ]]; then\n\
    \        float_result=\"true\"\n      else\n        float_result=\"false\"\n \
    \     fi\n    else\n      float_result=\"false\"\n    fi\n  else\n    if [[ $float1\
    \ -le $float2 ]]; then\n      float_result=\"false\"\n    else\n      float_result=\"\
    true\"\n    fi\n  fi\n  if [[ $float_result == \"false\" ]]; then\n    float_result=\"\
    false\"\n  fi\n  echo \"$float_result\"\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    [[ \"$1\" == *[!0-9]* ]] && return\
    \ 0\n    [[ \"$2\" == *[!0-9]* ]] && return 0\n    [[ \"$3\" == *[!0-9]* ]] &&\
    \ return 0\n\n    local i j k\n    local sum\n\n    i=$(( $1 ))\n    j=$(( $2\
    \ ))\n    k=$((\"$3\"))\n\n    sum=$((\"$i\" \"$j\" \"$k\"))\n\n    if [[ $sum\
    \ == $(( $i + $j + $k )) ]]; then\n        return 0;\n    else\n        return\
    \ 1;\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2ohgk5oy.sh: line 30: 2 3 1: syntax error in expression (error
    token is "3 1")

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    [ \"$2\" == \"-\" ] && [ \"$3\" !=\
    \ \"-\" ] && [ \"$3\" != \"0\" ] && [ \"$3\" != \"+\" ] && return 1\n    local\
    \ sum=$(($2 + $3))\n    [ \"$sum\" == \"$2\" ] || [ \"$sum\" == \"$3\" ] || return\
    \ 0\n    return 1\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local num_1 num_2 num_3\n\n    num_1=$(echo\
    \ \"${@:3}\" | awk '{print $1}')\n    num_2=$(echo \"${@:3}\" | awk '{print $2}')\n\
    \    num_3=$(echo \"${@:3}\" | awk '{print $3}')\n\n    declare -i num1=${num_1}\n\
    \    declare -i num2=${num_2}\n    declare -i num3=${num_3}\n    declare -i num4=$((num1\
    \ + num2))\n\n    declare -i num5=$((num1 + num3))\n    declare -i num6=$((num2\
    \ + num3))\n\n    if ((num4 == num5) || (num4 == num6) || (num5 == num6))\n  \
    \  then\n        return 0\n    else\n        return 1\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphkyc1pm9.sh: line 33: num4: command not found

    /tmp/tmphkyc1pm9.sh: line 33: num4: command not found

    /tmp/tmphkyc1pm9.sh: line 33: num5: command not found

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if (( $1 == $2 + $3 )); then\n    return\
    \ 0\n  else\n    return 1\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ $1 == $2 + $3 ]]; then\n    \
    \    echo true\n    else\n        echo false\n    fi\n}\n\ncandidate() {\n   \
    \ any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpasg0to37.sh: line 19: syntax error in conditional expression

    /tmp/tmpasg0to37.sh: line 19: syntax error near `+''

    /tmp/tmpasg0to37.sh: line 19: `    if [[ $1 == $2 + $3 ]]; then''

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local IFS=.\n  local a=$1\n  local b=$2\n\
    \  local c=$3\n  echo \"$a\" == \"$((a+b+c))\" && echo \"$a\" == \"$((a*b*c))\"\
    \ && echo \"$a\" == \"$((a+b+c*b))\" && echo \"$a\" == \"$((a*b*c*b))\"\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    test \"$1\" = \"$2\" && test \"$3\"\
    \ = \"$4\" || return 0;\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  # Split arguments and check they each\
    \ are integers\n  if [ $# -eq 0 ] || [[ $1 == -* ]]; then\n    # Check if only\
    \ one argument, i.e. \"$1\" is -\n    [[ -z $1 ]] && return 0\n    return 0\n\
    \  elif ! [[ $1 =~ ^-?[0-9]+$ ]]; then\n    return 1\n  elif ! [[ $2 =~ ^-?[0-9]+$\
    \ ]]; then\n    return 1\n  elif ! [[ $3 =~ ^-?[0-9]+$ ]]; then\n    return 1\n\
    \  fi\n  # If we have 3 numbers, add them, and check they are integers\n  (( $1\
    \ + $2 != $3 )) && return 1\n  return 0\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    test \"$1\" -gt \"$3\" && test \"$2\"\
    \ -gt \"$3\" && [ \"$1\" -eq \"$3\" ]\n}\n\ncandidate() {\n    any_int \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local first=\"$1\"\n    local second=\"\
    $2\"\n    local third=\"$3\"\n    if [[ $first == *\"E\"* ]]; then\n        first=\"\
    $(echo \"$first\" | sed -e 's/E\\+$//g')\"\n    fi\n    if [[ $second == *\"E\"\
    * ]]; then\n        second=\"$(echo \"$second\" | sed -e 's/E\\+$//g')\"\n   \
    \ fi\n    if [[ $third == *\"E\"* ]]; then\n        third=\"$(echo \"$third\"\
    \ | sed -e 's/E\\+$//g')\"\n    fi\n    local sum=\"$(($first + $second + $third))\"\
    \n    if [[ $sum == *\"E\"* ]]; then\n        sum=\"$(echo \"$sum\" | sed -e 's/E\\\
    +$//g')\"\n    fi\n    if [[ $sum == \"\" ]]; then\n        return false\n   \
    \ else\n        return true\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpsgwgoej8.sh: line 38: return: true: numeric argument required

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local var1=$1\n    local var2=$2\n\
    \    local var3=$3\n    local sum=$(( var1 + var2 ))\n    [ $(( sum % 1 )) -eq\
    \ 0 ] && return 0\n    [ $(( sum % 1 )) -eq 1 ] && return 0\n    [ $(( sum % 1\
    \ )) -eq 2 ] && return 0\n    [ $(( sum % 1 )) -eq 3 ] && return 0\n    [ $((\
    \ sum % 1 )) -eq 4 ] || return 1\n    [ $(( sum % 1 )) -eq 5 ] || return 1\n \
    \   [ $(( sum % 1 )) -eq 6 ] || return 1\n    [ $(( sum % 1 )) -eq 7 ] || return\
    \ 1\n    [ $(( sum % 1 )) -eq 8 ] || return 1\n    [ $(( sum % 1 )) -eq 9 ] ||\
    \ return 1\n    [ $(( sum % 1 )) -eq 10 ] || return 1\n    [ $(( sum % 1 )) -eq\
    \ 11 ] || return 1\n    [ $(( sum % 1 )) -eq 12 ] || return 1\n    [ $(( sum %\
    \ 1 )) -eq 13 ] || return 1\n    [ $(( sum % 1 )) -eq 14 ] || return 1\n    [\
    \ $(( sum % 1 )) -eq 15 ] || return 1\n    [ $(( sum % 1 )) -eq 16 ] || return\
    \ 1\n    [ $(( sum % 1 )) -eq 17 ] || return 1\n    [ $(( sum % 1 )) -eq 18 ]\
    \ || return 1\n    [ $(( sum % 1 )) -eq 19 ] || return 1\n    [ $(( sum % 1 ))\
    \ -eq 20 ] || return 1\n    [ $(( sum % 1 )) -eq 21 ] || return 1\n    [ $(( sum\
    \ % 1 )) -eq 22 ] || return 1\n    [ $(( sum % 1 )) -eq 23 ] || return 1\n   \
    \ [ $(( sum % 1 )) -eq 24 ] || return 1\n    [ $(( sum % 1 )) -eq 25 ] || return\
    \ 1\n    [ $(( sum % 1 )) -eq 26 ] || return 1\n    [ $(( sum % 1 )) -eq 27 ]\
    \ || return 1\n    [ $(( sum % 1 )) -eq 28 ] || return 1\n    [ $(( sum % 1 ))\
    \ -eq 29 ] || return 1\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local _sum=$(( $1 + $2 ))\n    if [[\
    \ $_sum -eq $3 ]]; then\n        echo true\n    else\n        echo false\n   \
    \ fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local result=1\n    local sum=$(( $1\
    \ + $2 ))\n    [ \"$sum\" -lt \"$3\" ] && result=0 ||\n    [ \"$sum\" -gt \"$3\"\
    \ ] && result=0 ||\n    [ \"$sum\" -eq \"$3\" ] && result=1 ||\n    result=1\n\
    \    echo \"$result\"\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local float=\"$1\"\n  local float2=\"\
    $2\"\n  local float3=\"$3\"\n\n  # echo \"float=$float\"\n  # echo \"float2=$float2\"\
    \n  # echo \"float3=$float3\"\n  # echo \"$float$float2$float3\"\n  if [ $float\
    \ -gt $float3 ]; then\n    # echo \"$float is greater\"\n    return 0\n  elif\
    \ [ $float -eq $float3 ]; then\n    # echo \"$float equals\"\n    return 1\n \
    \ elif [ $float2 -gt $float3 ]; then\n    # echo \"$float2 is greater\"\n    return\
    \ 1\n  elif [ $float2 -eq $float3 ]; then\n    # echo \"$float2 equals\"\n   \
    \ return 1\n  elif [ $float2 -eq $float ]; then\n    # echo \"$float2 equals $float\
    \ and $float3 equals $float3\"\n    return 1\n  else\n    return 0\n  fi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c\n    read a b c <<< \"\
    $1\"\n    [[ \"$a\" =~ ^-?[0-9]+.?[0-9]$ ]] || exit 1\n    [[ \"$b\" =~ ^-?[0-9]+.?[0-9]$\
    \ ]] || exit 1\n    [[ \"$c\" =~ ^-?[0-9]+.?[0-9]$ ]] || exit 1\n    if (( ${a:-}\
    \ >= $(( ${b:-}+${c:-} )) )) &&\n        (( ${a:-} >= ${b:-} )) &&\n        ((\
    \ ${a:-} >= ${c:-} )) &&\n        (( ${b:-} > ${c:-} )) &&\n        (( ${b:-}\
    \ > ${a:-} )) &&\n        (( ${c:-} > ${a:-} )) &&\n        (( ${c:-} > ${b:-}\
    \ ))\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [[ \"$1\" =~ ^-?[0-9]+\\.[0-9]+$\
    \ ]]; then\n        if [[ \"$1\" -eq \"$2\" ]]; then\n            if [[ \"$2\"\
    \ -eq \"$3\" ]]; then\n                if [[ \"$1\" -gt \"$2\" ]]; then\n    \
    \                return 0\n                else\n                    return 1\n\
    \                fi\n            else\n                return 0\n            fi\n\
    \        else\n            return 0\n        fi\n    else\n        return 0\n\
    \    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b\n    local sum\n    local\
    \ str1=$1; shift\n    local str2=$2; shift\n    local str3=$3; shift\n    while\
    \ [[ \"$str1\" =~ ^-?([0-9]*|([0-9]*\\.[0-9]+))([eE][-+]?[0-9]+)?$ ]]\n    do\n\
    \        a=${BASH_REMATCH[1]}\n        b=${BASH_REMATCH[2]}\n        if [[ $a\
    \ == $b ]] ; then\n            sum=$a\n        else\n            sum=$sum\n  \
    \      fi\n        str1=$BASH_REMATCH[3]\n    done\n    if [[ $str1 == $sum ]]\
    \ ; then\n        return 0\n    else\n        return 1\n    fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local IFS=\n    local sum=$(( $1 +\
    \ $2 ))\n    local sum2=$(( $3 + $2 ))\n    if [[ $sum == $sum2 ]]; then\n   \
    \     return 0\n    else\n        return 1\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local IFS='.'\n  local n1=$(eval \"echo\
    \ $1\");\n  local n2=$(eval \"echo ${2#*[!-]}\")\n  local n3=$(eval \"echo ${3#*[!-]}\"\
    )\n  # All numbers must be integers\n  if [[ \"${n1}\" != \"${n1%[!-]}\" || \"\
    ${n2}\" != \"${n2%[!-]}\" || \"${n3}\" != \"${n3%[!-]}\" ]]; then\n    echo \"\
    false\"\n    return\n  fi\n  # All numbers must be positive\n  if [[ \"$n1\" -lt\
    \ 0 || \"$n2\" -lt 0 || \"$n3\" -lt 0 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  # All numbers must be unique\n  if [[ \"$n1\" -eq \"${n2}\" ] || [ \"\
    $n1\" -eq \"${n3}\" ]]; then\n    echo \"false\"\n    return\n  fi\n  # The numbers\
    \ must be the same sign\n  if [[ ${n1} -eq -${n2} || ${n1} -eq -${n3} ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  # The numbers must be equal\n  if [[\
    \ ${n1} -eq ${n2} || ${n1} -eq ${n3} ]]; then\n    echo \"true\"\n    return\n\
    \  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpas14b5je.sh: line 34: syntax error in conditional expression

    /tmp/tmpas14b5je.sh: line 34: syntax error near `]''

    /tmp/tmpas14b5je.sh: line 34: `  if [[ "$n1" -eq "${n2}" ] || [ "$n1" -eq "${n3}"
    ]]; then''

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    # Convert to an integer\n    local\
    \ IFS=\n    local number1=\"${1}\"\n    local number2=\"${2}\"\n    local number3=\"\
    ${3}\"\n\n    if [ \"${number1}\" -ge \"0\" ] && [ \"${number1}\" -le \"10\" ]\
    \ ; then\n        if [ \"${number2}\" -ge \"0\" ] && [ \"${number2}\" -le \"10\"\
    \ ] ; then\n            if [ \"${number3}\" -ge \"0\" ] && [ \"${number3}\" -le\
    \ \"10\" ] ; then\n                # Convert to integer\n                number1=${number1}\n\
    \                number2=${number2}\n                number3=${number3}\n    \
    \        else\n                # If any number is negative, return false\n   \
    \             return 1\n            fi\n        else\n            if [ \"${number3}\"\
    \ -ge \"0\" ] && [ \"${number3}\" -le \"10\" ] ; then\n                # If any\
    \ number is negative, return false\n                return 1\n            else\n\
    \                # If any number is negative, return false\n                return\
    \ 1\n            fi\n        fi\n    else\n        return 1\n    fi\n    if [\
    \ \"${number1}\" -eq \"${number2}\" ] ; then\n        if [ \"${number1}\" -eq\
    \ \"${number3}\" ] ; then\n            return 0\n        else\n            return\
    \ 1\n        fi\n    else\n        return 1\n    fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local number1=$1\n    local number2=$2\n\
    \    local number3=$3\n    local result=0\n    if [[ $number1 == $number2 ]] ;\
    \ then\n        result=$((number1 + number2))\n    elif [[ $number1 == $number3\
    \ ]] ; then\n        result=$((number1 + number3))\n    elif [[ $number2 == $number3\
    \ ]] ; then\n        result=$((number2 + number3))\n    else\n        echo \"\
    ${number1} + ${number2} != ${number3}\"\n        return -1\n    fi\n    echo \"\
    ${result}\"\n    return $result\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n  \
    \  [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local float_1 float_2 float_3 string_1\
    \ string_2 string_3\n  # shellcheck disable=SC2154\n  float_1=$1\n  float_2=$2\n\
    \  float_3=$3\n  string_1=$(\"${float_1}\" '.' \"${float_2}\" | tr -d '[[:digit:]]')\n\
    \  string_2=$(\"${float_2}\" '.' \"${float_3}\" | tr -d '[[:digit:]]')\n  string_3=$(\"\
    ${float_3}\" '.' \"${float_1}\" | tr -d '[[:digit:]]')\n  # shellcheck disable=SC2154\n\
    \  [ \"${string_1}\" == \"${string_2}\" && \"${string_1}\" == \"${string_3}\"\
    \ ]\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpsdluniga.sh: line 24: 2: command not found

    /tmp/tmpsdluniga.sh: line 25: 3: command not found

    /tmp/tmpsdluniga.sh: line 26: 1: command not found

    /tmp/tmpsdluniga.sh: line 28: [: missing `]''

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ $((($1 + $2) % $3)) -eq $((($1\
    \ + $2) / $3)) ]]; then\n    return 1\n  else\n    return 0\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    IFS=.; set -- $3; shift\n    sum=$(($1+$2+$3))\n\
    \    echo $(( $1 < ($sum * -1) && $1 -eq $sum )); # negate the sum to allow the\
    \ two values be subtracted without changing the result\n}\n\ncandidate() {\n \
    \   any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbrocz99g.sh: line 20: ++: syntax error: operand expected (error
    token is "+")

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\tif [[ $1 == -* ]]; then\n\t\tlocal num1=$1\n\
    \t\tlocal num2=$2\n\t\tlocal num3=$3\n\telif [[ $1 == [0-9] ]]; then\n\t\tlocal\
    \ num1=$1\n\t\tlocal num2=$2\n\t\tlocal num3=$3\n\telse\n\t\treturn false\n\t\
    fi\n\tlocal sum=$((num1 + num2 + num3))\n\tlocal result=$((num1 -eq sum && num2\
    \ -eq sum && num3 -eq sum))\n\techo $result\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpktnaz8ye.sh: line 31: num1 -eq sum && num2 -eq sum && num3 -eq
    sum: syntax error in expression (error token is "sum && num2 -eq sum && num3 -eq
    sum")

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  declare -i a=$1\n  declare -i b=$2\n\
    \  declare -i c=$3\n  # If any of the three are integers, the sum will be an integer\n\
    \  [ \"$(( a + b ))\" -eq \"${a}${b}\" ] && a=\"${a}\" && b=\"${b}\" && echo \"\
    true\" || echo \"false\"\n  [ \"$(( a + c ))\" -eq \"${a}${c}\" ] && a=\"${a}\"\
    \ && c=\"${c}\" && echo \"true\" || echo \"false\"\n  [ \"$(( b + c ))\" -eq \"\
    ${b}${c}\" ] &&b=\"${b}\" && c=\"${c}\" && echo \"true\" || echo \"false\"\n \
    \ # If any of the three are floats, the sum will be a float\n  [ \"$(( a + b ))\"\
    \ -eq \"$(echo \"${a}${b}\" | bc -l)\" ] && a=\"${a}\" && b=\"${b}\" && echo \"\
    true\" || echo \"false\"\n  [ \"$(( a + c ))\" -eq \"$(echo \"${a}${c}\" | bc\
    \ -l)\" ] && a=\"${a}\" && c=\"${c}\" && echo \"true\" || echo \"false\"\n  [\
    \ \"$(( b + c ))\" -eq \"$(echo \"${b}${c}\" | bc -l)\" ] &&b=\"${b}\" && c=\"\
    ${c}\" && echo \"true\" || echo \"false\"\n  # The sum will be a float, but one\
    \ of them is an integer\n  [ \"$(( a + b ))\" -eq \"$(echo \"${a}${b}\" | bc -l)\"\
    \ ] && a=\"${a}\" && b=\"${b}\" && echo \"true\" || echo \"false\"\n  [ \"$((\
    \ a + c ))\" -eq \"$(echo \"${a}${c}\" | bc -l)\" ] && a=\"${a}\" && c=\"${c}\"\
    \ && echo \"true\" || echo \"false\"\n  [ \"$(( b + c ))\" -eq \"$(echo \"${b}${c}\"\
    \ | bc -l)\" ] &&b=\"${b}\" && c=\"${c}\" && echo \"true\" || echo \"false\"\n\
    \  [ \"$(( a + b ))\" -eq \"$(echo \"${a}${b}\" | bc -l)\" ] && a=\"${a}\" &&\
    \ b=\"${b}\" && echo \"true\" || echo \"false\"\n  [ \"$(( a + c ))\" -eq \"$(echo\
    \ \"${a}${c}\" | bc -l)\" ] && a=\"${a}\" && c=\"${c}\" && echo \"true\" || echo\
    \ \"false\"\n  [\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjt6aluj2.sh: line 36: [: missing `]''

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local a b c d e\n  a=${1#*.}\n  b=${2#*.}\n\
    \  c=${3#*.}\n  d=$(echo $a | bc -l)\n  e=$(echo $b | bc -l)\n  [[ \"$d\" = \"\
    $e\" ]] && a==\"$a\" || [[ \"$d\" = \"$e\" ]]\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [ \"${1:0:1}\" != \"${1:0:1}\" ];\
    \ then\n    echo \"true\"\n  else\n    if [ \"${1:0:1}\" = \"-\" ]; then\n   \
    \   echo \"true\"\n    else\n      if [ \"${1:0:1}\" = \".\" ]; then\n       \
    \ if [ \"${1:1}\" == \"e\" ]; then\n          echo \"true\"\n        else\n  \
    \        echo \"false\"\n        fi\n      else\n        IFS=. read a b c <<<\
    \ $1;\n        if [ \"${a:0:1}\" = \"-\" ]; then\n          if [ \"${b:0:1}\"\
    \ = \"-\" ]; then\n            if [ \"${c:0:1}\" = \"-\" ]; then\n           \
    \   echo \"true\"\n            else\n              echo \"false\"\n          \
    \  fi\n          else\n            echo \"false\"\n          fi\n        else\n\
    \          echo \"false\"\n        fi\n      fi\n    fi\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local a=$1\n  local b=$2\n  local c=$3\n\
    \  if [[ $a == *[0-9] ]] ; then\n    if [[ $b == *[0-9] ]] ; then\n      if [[\
    \ $c == *[0-9] ]] ; then\n        (( $a + $b + $c ))\n      else\n        false\n\
    \      fi\n    else\n      false\n    fi\n  else\n    false\n  fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\tint_test=$((($1<$3) || ($3>=$1)));\n\t\
    ((int_test && $2 > $3)) || return\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n\
    \    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"\
    1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local sum=\"$(( ${1} + ${2} ))\"\n  [[\
    \ \"$sum\" -eq ${1} ]] && return 0 || return 1\n  [[ \"$sum\" -eq ${2} ]] && return\
    \ 0 || return 1\n  [[ \"$sum\" -eq ${3} ]] && return 0 || return 1\n  return 0\n\
    }\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local first_int=${1//[^0-9]}\n    local\
    \ second_int=${2//[^0-9]}\n    local third_int=${3//[^0-9]}\n    local sum=$((first_int\
    \ + second_int + third_int))\n    [[ -z \"${sum}\" ]]\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\t# First check for floats\n\tif [[ $1\
    \ =~ ^-?[0-9]*\\\\.?[0-9]+$ ]]; then\n\t\t# Check to make sure all three are integers\n\
    \t\tif [[ $2 =~ ^-?[0-9]*\\\\.?[0-9]+$ ]] && [[ $3 =~ ^-?[0-9]*\\\\.?[0-9]+$ ]];\
    \ then\n\t\t\t# Check if any of the three is equal to the sum of the other two\n\
    \t\t\t[[ $( (($1 + $2) == $3) || (($1 + $2) == $3) || (($1 + $2) == $3 || ($2\
    \ + $3) == $3) ) = \"true\" ]]\n\t\telse\n\t\t\t# Something else is wrong\n\t\t\
    \tfalse\n\t\tfi\n\telse\n\t\t# Something else is wrong\n\t\tfalse\n\tfi\n}\n\n\
    candidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") =\
    \ \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n   \
    \ [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"\
    2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"\
    true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a b c d e\n    a=$1\n    b=$2\n\
    \    c=$3\n    d=${a} + ${b} + ${c}\n    e=$(echo \"${a} + ${b} + ${c}\"|bc)\n\
    \    echo $(( $e == ${a} && $e == ${b} && $e == ${c} ))\n}\n\ncandidate() {\n\
    \    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n\
    \    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpos3i5lmv.sh: line 23: +: command not found

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if [ $# -ne 3 ]\n    then\n       \
    \ echo \"Bad number of arguments\"\n        return $(false)\n    fi\n    if [\
    \ $1 -gt $3 ] || [ $1 -le 0 ]\n    then\n        echo \"The first argument must\
    \ be >= 0 and < the third argument (exclusive)\"\n        return $(false)\n  \
    \  fi\n    if [ $2 -gt $3 ] || [ $2 -le 0 ]\n    then\n        echo \"The second\
    \ argument must be >= 0 and < the third argument (exclusive)\"\n        return\
    \ $(false)\n    fi\n    if [ $3 -gt $1 ] || [ $3 -le 0 ]\n    then\n        echo\
    \ \"The third argument must be >= 0 and < the first argument (exclusive)\"\n \
    \       return $(false)\n    fi\n    sum=$(( $1 + $2 ))\n    sum=$(( $sum - $3\
    \ ))\n    if [ $sum -gt $1 ] || [ $sum -le 0 ]\n    then\n        echo \"All arguments\
    \ are integers\"\n        return $(true)\n    fi\n    sum=$(( $sum - $1 ))\n \
    \   if [ $sum -gt $2 ] || [ $sum -le 0 ]\n    then\n        echo \"All arguments\
    \ are integers\"\n        return $(true)\n    fi\n    sum=$(( $sum - $2 ))\n \
    \   if [ $sum -gt $3 ] || [ $sum -le 0 ]\n    then\n        echo \"All arguments\
    \ are integers\"\n        return $(true)\n    fi\n    sum=$(( $sum + $3 ))\n \
    \   if [ $sum -gt $1 ] || [ $sum -le 0 ]\n    then\n        echo \"All arguments\
    \ are integers\"\n        return $(true)\n    fi\n    sum=$(( $sum + $1 ))\n \
    \   if [ $sum -gt $2 ] || [ $sum -le 0 ]\n    then\n        echo \"All arguments\
    \ are integers\"\n        return $(true)\n    fi\n    sum=$(( $sum + $2 ))\n \
    \   if [ $sum -gt $3 ] || [ $sum -le 0 ]\n    then\n        echo \"All arguments\
    \ are integers\"\n        return $(true)\n    fi\n    sum=$(( $sum - $3 ))\n \
    \   if [ $sum -gt $1 ] || [ $sum -le 0 ]\n    then\n        echo \"All arguments\
    \ are integers\"\n        return $(true)\n    fi\n    sum=$(( $sum - $1 ))\n \
    \   if [ $sum -gt $2 ] || [ $sum -le 0 ]\n    then\n        echo \"All arguments\
    \ are integers\"\n        return $(true)\n    fi\n    sum=$(( $sum - $2 ))\n \
    \   if [ $sum -gt $3 ] || \n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpa5kx45js.sh: line 90: syntax error near unexpected token `}''

    /tmp/tmpa5kx45js.sh: line 90: `}''

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\tif [ $# -ne 3 ]; then\n\t\techo \"ERROR:\
    \ Wrong number of arguments\"\n\t\treturn\n\tfi\n\tnum1=$1\n\tnum2=$2\n\tnum3=$3\n\
    \tsum=$((num1 + num2 + num3))\n\tif [ $sum -ne $((num1 * num2 * num3)) ]; then\n\
    \t\techo \"ERROR: Wrong argument values\"\n\t\treturn\n\tfi\n\t[ \"$sum\" -eq\
    \ \"$((num1 * num2 * num3))\" ] || return 1\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\tlocal float1=$(echo \"$1\" | sed -e 's/\\\
    ./\\\\./g' -e 's/^0*//g' -e 's/^0+$//g')\n\tlocal float2=$(echo \"$3\" | sed -e\
    \ 's/\\./\\\\./g' -e 's/^0*//g' -e 's/^0+$//g')\n\t\n\tif [ \"$float1\" -eq \"\
    1\" ] || [ \"$float2\" -eq \"1\" ]; then return 1; else return 0; fi\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\t[ \"$#\" -ne 3 ] && return 1\n\t[ \"\
    $1\" -eq \"$1\" ] && return 0\n\t[ \"$2\" -eq \"$2\" ] && return 0\n\t[ \"$3\"\
    \ -eq \"$3\" ] && return 0\n\t[ \"$1\" -gt \"$2\" ] && return 1\n\t[ \"$2\" -gt\
    \ \"$3\" ] && return 1\n\t[ \"$3\" -gt \"$1\" ] && return 1\n\t[ \"$1\" -eq \"\
    $3\" ] && return 1\n\t[ \"$1\" -eq \"$2\" ] && return 1\n\t[ \"$2\" -eq \"$3\"\
    \ ] && return 1\n\t[ \"$1\" -lt \"$3\" ] && return 1\n\t[ \"$2\" -lt \"$3\" ]\
    \ && return 1\n\t[ \"$3\" -lt \"$1\" ] && return 1\n\treturn 0\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ \"$1\" =~ ^-?[0-9]+\\.?[0-9]*$\
    \ ]] || [[ $1 == \"$3\" ]] || [[ $1 == \"$2\" ]]; then\n    echo \"true\"\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[\
    \ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"\
    2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") =\
    \ \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    [ -z \"$1\" ] && return 1\n    [ -z\
    \ \"$2\" ] && return 1\n    [ -z \"$3\" ] && return 1\n\n    echo -n \"[[ $1 -eq\
    \ 0 ]]\" && return 1\n    echo -n \"[[ $1 -eq $2 ]]\" && return 1\n    echo -n\
    \ \"[[ $1 -eq $(expr \"$1\" \"+$2\") ]]\" && return 1\n    echo -n \"[[ $1 -gt\
    \ $(expr \"$1\" \"+$2\") ]]\" && return 1\n    echo -n \"[[ $1 -lt $(expr \"$1\"\
    \ \"+$2\") ]]\" && return 1\n    return 0\n}\n\ncandidate() {\n    any_int \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    [[ \"$a\" =~ ^[+-]?([0-9]+)\\.?[0-9]*$ && \"$b\" =~ ^[+-]?([0-9]+)\\\
    .?[0-9]*$ && \"$c\" =~ ^[+-]?([0-9]+)\\.?[0-9]*$ ]] || return 1\n    [[ \"$a\"\
    \ == \"$(( $a + $b ))\" && \"$b\" == \"$(( $b + $c ))\" && \"$c\" == \"$(( $c\
    \ + $a ))\" ]]\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local a=$1\n    local b=$2\n    local\
    \ c=$3\n    if [[ $a == +([0-9])([.]([0-9])*([eE][+-]?([0-9])*)) ]]; then\n  \
    \      local x$1$2$3\n        local a=${BASH_REMATCH[1]}\n        local b=${BASH_REMATCH[2]}\n\
    \        local c=${BASH_REMATCH[3]}\n        x$1$2$3=$(echo \"$a+$b+$c\" | bc\
    \ -l)\n    else\n        x$1$2$3=\n    fi\n    if [[ \"$x$1$2$3\" == [0-9]* ]];\
    \ then\n        if [[ \"$a\" -eq \"$x$1$2$3\" ]]; then\n            return 0\n\
    \        else\n            return 1\n        fi\n    else\n        return 0\n\
    \    fi\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsvwqwoy3.sh: line 22: syntax error in conditional expression: unexpected
    token `(''

    /tmp/tmpsvwqwoy3.sh: line 22: syntax error near `+([0-9])([''

    /tmp/tmpsvwqwoy3.sh: line 22: `    if [[ $a == +([0-9])([.]([0-9])*([eE][+-]?([0-9])*))
    ]]; then''

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  if [[ \"$1\" == \"$2\" ]]; then\n   \
    \ if [[ \"$1\" == \"$3\" ]]; then\n      echo \"true\"\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    any_int\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local f1 f2\n    local ans=\"true\"\
    \n    f1=$(echo $1 | sed \"s/\\./\\$((10#))/\")\n    f2=$(echo $2 | sed \"s/\\\
    ./\\$((10#))/\")\n    if [ \"$f1\" -lt \"$f2\" ]; then\n        ans=\"false\"\n\
    \    elif [ \"$f1\" -gt \"$f2\" ]; then\n        ans=\"false\"\n    elif [ \"\
    $f1\" -eq \"$f2\" ]; then\n        ans=\"true\"\n    else\n        ans=\"false\"\
    \n    fi\n    echo \"$ans\"\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local result=1\n  local float1=$1\n \
    \ local float2=$2\n  local float3=$3\n  [ $float1 -eq $float2 -a $float1 -eq $float3\
    \ ]\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 2
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  ((${1}+${2}+${3}) -eq \"${1}${2}${3}\"\
    \ && ${1} -ge 0 && ${1} -le 9 && ${2} -ge 0 && ${2} -le 9 && ${3} -ge 0 && ${3}\
    \ -le 9)\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"\
    false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppazeroow.sh: line 19: syntax error near unexpected token `-eq''

    /tmp/tmppazeroow.sh: line 19: `  ((${1}+${2}+${3}) -eq "${1}${2}${3}" && ${1}
    -ge 0 && ${1} -le 9 && ${2} -ge 0 && ${2} -le 9 && ${3} -ge 0 && ${3} -le 9)''

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    local float1=$1\n    local float2=$2\n\
    \    local float3=$3\n    local sum=$(expr $float1 + $float2 + $float3)\n    if\
    \ [ $sum -eq $float1 ]; then\n        return 1\n    elif [ $sum -eq $float2 ];\
    \ then\n        return 1\n    elif [ $sum -eq $float3 ]; then\n        return\
    \ 1\n    else\n        return 0\n    fi\n}\n\ncandidate() {\n    any_int \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\"\
    \ \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\"\
    \ ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n    if (( ${#1} != ${#2} || ${#1} != ${#3}\
    \ ))\n    then\n        echo \"${#1} != ${#2} or ${#1} != ${#3}\"\n        exit\
    \ 1\n    fi\n    declare -i i\n    declare -r sum\n    for i in ${!1}\n    do\n\
    \        declare -ri a=\"${i}\"\n        sum=$(( ${a[${#1}]} + ${a[${#2}]} + ${a[${#3}]}\
    \ ))\n        if (( \"${sum}\" != ${a[${#1}]} || \"${sum}\" != ${a[${#2}]} ||\
    \ \"${sum}\" != ${a[${#3}]} ))\n        then\n            echo \"${sum} != ${a[${#1}]}\
    \ or ${sum} != ${a[${#2}]} or ${sum} != ${a[${#3}]}\"\n            exit 1\n  \
    \      fi\n    done\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"\
    2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\"\
    ) = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[\
    \ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\"\
    \ \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7uxqvyl1.sh: line 29: +  +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  # Trim all non-numeric characters.\n\
    \  # This allows us to compare 2 values like 5.0 to \"5.0\", 5.00 to \"5.0\",\
    \ etc.\n  # Note that this requires bash to have \"set -o pipefail\"\n  # Note\
    \ that this also trims the trailing decimal places.\n  local int_1\n  int_1=\"\
    ${1%.*}\"\n\n  local int_2\n  int_2=\"${2%.*}\"\n\n  local int_3\n  int_3=\"${3%.*}\"\
    \n\n  echo \"${int_1} + ${int_2} + ${int_3}\" | bc -l\n}\n\ncandidate() {\n  \
    \  any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"\
    1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n \
    \   [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"\
    2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"\
    true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate\
    \ \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n\tif [ $1 != $2 ]; then\n\t\treturn 1\n\
    \tfi\n\tif [ $3 != $4 ]; then\n\t\treturn 1\n\tfi\n\tif [ $1 != $3 ]; then\n\t\
    \treturn 1\n\tfi\n\treturn 0\n}\n\ncandidate() {\n    any_int \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"2.5\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"1.5\"\
    \ \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate \"2\" \"6\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[ $(candidate \"-4\" \"6\" \"\
    2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\" \"1\") = \"true\" ]]\n    [[\
    \ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n    [[ $(candidate \"3.0\" \"\
    4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487
- exit_code: 1
  program: "#!/bin/bash\n# Create a function that takes 3 numbers.\n# Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n# Returns false in any other cases.\n# Examples\n# >>> $(any_int\
    \ \"5\" \"2\" \"7\")\n# \"true\"\n# >>> $(any_int \"3\" \"2\" \"2\")\n# \"false\"\
    \n# >>> $(any_int \"3\" \"-2\" \"1\")\n# \"true\"\n# >>> $(any_int \"3.6\" \"\
    -2.2\" \"2\")\n# \"false\"\n#\n# $1 is a floating point\n# $2 is a floating point\n\
    # $3 is a floating point\nany_int() {\n  local n1=$(echo $1 | awk '{print $1*$1}')\n\
    \  local n2=$(echo $2 | awk '{print $2*$2}')\n  local n3=$(echo $3 | awk '{print\
    \ $3*$3}')\n\n  [ $n1 -gt $n2 ] && [ $n1 -gt $n3 ] || [ $n2 -gt $n3 ]\n}\n\ncandidate()\
    \ {\n    any_int \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"\
    3\" \"1\") = \"true\" ]]\n    [[ $(candidate \"2.5\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"1.5\" \"5\" \"3.5\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2\" \"6\" \"2\") = \"false\" ]]\n    [[ $(candidate \"4\" \"2\" \"2\") = \"\
    true\" ]]\n    [[ $(candidate \"2.2\" \"2.2\" \"2.2\") = \"false\" ]]\n    [[\
    \ $(candidate \"-4\" \"6\" \"2\") = \"true\" ]]\n    [[ $(candidate \"2\" \"1\"\
    \ \"1\") = \"true\" ]]\n    [[ $(candidate \"3\" \"4\" \"7\") = \"true\" ]]\n\
    \    [[ $(candidate \"3.0\" \"4\" \"7\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660055487

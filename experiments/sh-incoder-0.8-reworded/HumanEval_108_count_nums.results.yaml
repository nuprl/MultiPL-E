language: sh
name: HumanEval_108_count_nums
results:
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local digits=${1//-/}\n    local\
    \ nums=$(echo ${digits} |\n        sed -e 's/^ *\\([0-9]\\+\\)\\ *\\+\\([0-9]\\\
    +\\)\\ *$/\\1+\\2/')\n    echo ${#nums}\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056357
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local IFS=' '\n    local count=0\n\
    \    for n in $*; do\n        if [ \"$n\" == \"0\" ]; then\n            continue\n\
    \        fi\n        local x\n        x=$((10#$n))\n        if [ \"$x\" -gt \"\
    0\" ]; then\n            (( count++ ))\n        fi\n    done\n    echo \"$count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056357
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums\n    nums=\"${1// / }\"\
    \n    nums=\"${nums// / }\"\n    nums=$(echo \"$nums\" | sed 's/,/, /g')\n   \
    \ nums=$(echo \"$nums\" | sed 's/^[ \\t]*//')\n    nums=$(echo \"$nums\" | sed\
    \ 's/[ \\t]*$//')\n    nums=$(echo \"$nums\" | sed 's/^[ \\t]*//')\n    nums=$(echo\
    \ \"$nums\" | sed 's/[ \\t]*$//')\n    nums=$(echo \"$nums\" | sed 's/^[ \\t]*//')\n\
    \    nums=$(echo \"$nums\" | sed 's/[ \\t]*$//')\n    nums=$(echo \"$nums\" |\
    \ sed 's/^[ \\t]*//')\n    nums=$(echo \"$nums\" | sed 's/[ \\t]*$//')\n    nums=$(echo\
    \ \"$nums\" | sed 's/^[ \\t]*//')\n    nums=$(echo \"$nums\" | sed 's/[ \\t]*$//')\n\
    \    nums=$(echo \"$nums\" | sed 's/^[ \\t]*//')\n    nums=$(echo \"$nums\" |\
    \ sed 's/[ \\t]*$//')\n    nums=$(echo \"$nums\" | sed 's/^[ \\t]*//')\n    nums=$(echo\
    \ \"$nums\" | sed 's/[ \\t]*$//')\n    nums=$(echo \"$nums\" | sed 's/^[ \\t]*//')\n\
    \    nums=$(echo \"$nums\" | sed 's/[ \\t]*$//')\n    nums=$(echo \"$nums\" |\
    \ sed 's/^[ \\t]*//')\n    nums=$(echo \"$nums\" | sed 's/[ \\t]*$//')\n    nums=$(echo\
    \ \"$nums\" | sed 's/^[ \\t]*//')\n    nums=$(echo \"$nums\" | sed 's/[ \\t]*$//')\n\
    \    nums=$(echo \"$nums\" | sed 's/^[ \\t]*//')\n    nums=$(echo \"$nums\" |\
    \ sed 's/[ \\t]*$//')\n    nums=$(echo \"$nums\" | sed 's/^[ \\t]*//')\n    nums=$(echo\
    \ \"$nums\" | sed 's/[ \\t]*$//')\n    nums=$(echo \"$nums\" | sed 's/^[ \\t]*//')\n\
    \    nums=$(echo \"$nums\" | sed 's/[ \\t]*$//')\n    nums=$(echo \"$\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphk8pee1f.sh: line 61: unexpected EOF while looking for matching
    `"''

    /tmp/tmphk8pee1f.sh: line 65: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    # Initialize counter to zero\n \
    \   local n=0\n    # Iterate through the arguments\n    local -i i=0\n    local\
    \ x\n    local j\n    while [ $# -gt 0 ]\n    do\n        # Strip whitespace from\
    \ argument\n        x=\"${1//[[:space:]]/}\"\n        # Loop through each argument\
    \ element\n        while (( $# > i ))\n        do\n            # Dereference argument\n\
    \            local j=\"${!i}\"\n            # Add argument to counter\n      \
    \      n=$(( $n + $j ))\n            # Increment argument\n            (( i++\
    \ ))\n        done\n    done\n    # Return counter\n    echo $n\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmmri50gs.sh: line 31: 0 + /tmp/tmpmmri50gs.sh : syntax error: operand
    expected (error token is "/tmp/tmpmmri50gs.sh ")

    '
  stdout: ''
  timestamp: 1660056357
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local num_str=\"$1\"\n  local nums\
    \ nums_count i\n  read -a nums <<< \"$num_str\"\n  for ((i=0; i<\"${#nums[@]}\"\
    ; i++)); do\n    ((nums_count+=nums[i]))\n  done\n  printf \"$nums_count\"\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056357
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( \"${@}\" )\n    local\
    \ i num=0\n    for i in \"${arr[@]}\"; do\n        if [ \"${i%+([[:digit:]])}\"\
    \ = \"${i}\" ]; then\n            ((num++))\n        fi\n    done\n    echo \"\
    ${num}\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056357
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    count_nums_helper\n    local digits=$1\
    \ nums=$2\n    local count=0\n    for num in ${nums}; do\n        count=$(( $(count_nums_helper\
    \ $num) ))\n        if [[ $count -eq 0 ]]; then\n            echo \"0\"\n    \
    \    elif [[ $count -gt 0 ]]; then\n            echo $count\n        fi\n    done\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmptdhswv2s.sh: line 15: count_nums_helper: command not found

    '
  stdout: ''
  timestamp: 1660056357
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local array=$1\n  local sum=0\n  while\
    \ read -r val; do\n    sum=$(expr \"$val\" + \"$sum\")\n  done <<<\"$array\"\n\
    \  if [[ $sum > 0 ]]; then\n    echo \"$sum\"\n  else\n    echo \"0\"\n  fi\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'expr: non-integer argument

    expr: non-integer argument

    expr: non-integer argument

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local IFS=' ' # split on spaces\n\
    \    local -n a=$1 count=0\n\n    for (( i=0 ; i<${#a[@]} ; i++ )); do\n     \
    \   (( count+=${a[i]} * (10#${a[$i]} )) ))\n    done\n\n    echo \"${count}\"\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp40n39zl3.sh: line 19: syntax error near unexpected token `(''

    /tmp/tmp40n39zl3.sh: line 19: `( count+=${a[i]} * (10#${a[$i]} )) ''

    '
  stdout: ''
  timestamp: 1660056357
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers len\n    numbers=(\"\
    $@\")\n\n    local nums=$(echo \"${numbers[*]}\" | sort -u | wc -w)\n    echo\
    \ \"$nums\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local -a numbers\n    IFS=$' ' read\
    \ -a numbers <<<\"$1\"\n    local -a count\n    local i\n    for ((i = 0; i <\
    \ ${#numbers[@]}; i++)); do\n        ((count[${numbers[i]}]++))\n    done\n  \
    \  echo \"${#count[@]}\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpn_d88y5n.sh: line 20: count: bad array subscript

    /tmp/tmpn_d88y5n.sh: line 20: count[-1]: bad array subscript

    /tmp/tmpn_d88y5n.sh: line 20: count: bad array subscript

    /tmp/tmpn_d88y5n.sh: line 20: count[-2]: bad array subscript

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=\"$1\"\n  [[ \"$arr\" =~\
    \ (-?[0-9]+(\\.[0-9]+)?)([[:space:]]+(-?[0-9]+(\\.[0-9]+)?)*) ]] && \\\n    echo\
    \ \"$((${BASH_REMATCH[1]}+${BASH_REMATCH[2]}+${BASH_REMATCH[3]}+1))\" || \\\n\
    \    echo \"0\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=\"$1\"\n  local digit=0\n\
    \  local i=0\n  local result=0\n  while [ $i -lt ${#arr} ]\n  do\n    ((digit+=$((arr[i]%(10#${arr[i]/#*-}))))))\n\
    \    ((i++))\n  done\n  ((digit-=$((arr[0]%(10#${arr[0]/#*-}))))))\n  while [\
    \ $i -lt ${#arr} ]\n  do\n    if ((digit-$((arr[i]%(10#${arr[i]/#*-}))))) -gt\
    \ 0)\n    then\n      ((result++))\n    fi\n    ((i++))\n  done\n  return \"$result\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppz09c51j.sh: line 21: syntax error near unexpected token `)''

    /tmp/tmppz09c51j.sh: line 21: `    ((digit+=$((arr[i]%(10#${arr[i]/#*-}))))))''

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  awk '{\n    # Get the number to be\
    \ counted\n    num = substr($0, 0, 1);\n    # Get the digits to be counted\n \
    \   digs = substr($0, 1, 1);\n    # Count the number\n    num = num + digs - 0;\n\
    \    # Handle negative numbers\n    if (num < 0) {\n      num = num + 97;\n  \
    \    num = num - 1;\n      digs = \"-\";\n    }\n    # Return it\n    print num;\n\
    \  }'\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=22 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=14 encoding='utf-8'>
  timestamp: 1660056363
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local num_string=\"${1}\"\n\n  local\
    \ -a num_arr=($num_string)\n  local nums=\"${num_arr[@]}\"\n\n  local len=${#nums[@]}\n\
    \  local i\n  local num\n\n  # If there's no positive digit, return 0\n  if [[\
    \ ${len} -eq 0 ]]; then\n    echo \"0\"\n    return 0\n  fi\n\n  # If there's\
    \ no negative digit, return 0\n  if [[ ${len} -eq 1 ]]; then\n    echo \"0\"\n\
    \    return 0\n  fi\n\n  # If there's just one negative digit, return 1\n  if\
    \ [[ ${len} -eq 2 ]]; then\n    echo \"1\"\n    return 1\n  fi\n\n  # Otherwise,\
    \ find first negative digit, starting at second position\n  # (first is -1)\n\
    \  for ((i=1; i<${len}; i++)) {\n    # Skip the first element, which is -1\n \
    \   num=${nums[$i]}\n    if [[ ${num} -lt 0 ]]; then\n      num=${num}#-\n   \
    \ fi\n    sum=$(echo \"${num}\" | awk '{s+=$1} END {print s}')\n    if [[ ${sum}\
    \ -gt 0 ]]; then\n      echo \"${i}\"\n      break\n    fi\n  }\n\n  return 0\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=$*\n  local n\n  n=0\n\
    \  for i in $nums; do\n    case \"$i\" in\n      *[!0-9]*)\n        (( n += 1\
    \ ))\n        ;;\n      *)\n        (( n += $(count_digits $i) ))\n        ;;\n\
    \    esac\n  done\n  echo \"$n\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbg_ab17o.sh: line 24: count_digits: command not found

    /tmp/tmpbg_ab17o.sh: line 24: ((: n +=  : syntax error: operand expected (error
    token is "+=  ")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local num_sum=$1\n  local num_str=\"\
    \"\n  for i in ${num_sum}; do\n    if test $i -gt 0; then\n      num_str=$((num_str+$i))\n\
    \    fi\n  done\n  echo $num_str\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local LAST_DIGIT=0\n  local NUMS=(\
    \ $1 )\n  # Turn the list of numbers into an array which can then be processed\n\
    \  for (( i=0; i<${#NUMS[@]}; i++ )); do\n    local NUM=${NUMS[$i]}\n    if [[\
    \ \"$NUM\" =~ ^-?[0-9]+$ ]]; then\n      NUMS[$i]=$(( ${NUM#-} + LAST_DIGIT ))\n\
    \      LAST_DIGIT=0\n    else\n      (( LAST_DIGIT += $(( 10#$NUM % 10 )) ))\n\
    \    fi\n  done\n  echo ${#NUMS[@]}\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( $1 )\n  local sum=0\n\
    \  for i in ${arr[@]}; do\n    (( sum+=i ))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local -r nums=\"$1\"\n    # shellcheck\
    \ disable=SC2016\n    local -r sums=($(nums))\n    # shellcheck disable=SC2016\n\
    \    local -r nums=${nums/ /}\n    # shellcheck disable=SC2016\n    local -r nums=${nums/\
    \ +/-}\n    # shellcheck disable=SC2016\n    local -r nums=${nums/^-}\n    # shellcheck\
    \ disable=SC2016\n    local -r nums=${nums//[!0-9]}\n    # shellcheck disable=SC2016\n\
    \    local -r nums=${nums/+/-}\n    # shellcheck disable=SC2016\n    local -r\
    \ nums=$(echo \"$nums\" | sed 's/ //g')\n    # shellcheck disable=SC2016\n   \
    \ local -r nums=$(echo \"$nums\" | sed 's/[^-0-9]//g')\n    # shellcheck disable=SC2016\n\
    \    local -r count=$(( $(echo \"$sums\" | awk '{ s+=$1 } END { print s }') >\
    \ 0 ))\n    echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpsoota2m6.sh: line 17: nums: command not found

    /tmp/tmpsoota2m6.sh: line 19: local: nums: readonly variable

    /tmp/tmpsoota2m6.sh: line 21: local: nums: readonly variable

    /tmp/tmpsoota2m6.sh: line 23: local: nums: readonly variable

    /tmp/tmpsoota2m6.sh: line 25: local: nums: readonly variable

    /tmp/tmpsoota2m6.sh: line 27: local: nums: readonly variable

    /tmp/tmpsoota2m6.sh: line 29: local: nums: readonly variable

    /tmp/tmpsoota2m6.sh: line 31: local: nums: readonly variable

    /tmp/tmpsoota2m6.sh: line 17: nums: command not found

    /tmp/tmpsoota2m6.sh: line 19: local: nums: readonly variable

    /tmp/tmpsoota2m6.sh: line 21: local: nums: readonly variable

    /tmp/tmpsoota2m6.sh: line 23: local: nums: readonly variable

    /tmp/tmpsoota2m6.sh: line 25: local: nums: readonly variable

    /tmp/tmpsoota2m6.sh: line 27: local: nums: readonly variable

    /tmp/tmpsoota2m6.sh: line 29: local: nums: readonly variable

    /tmp/tmpsoota2m6.sh: line 31: local: nums: readonly variable

    /tmp/tmpsoota2m6.sh: line 17: nums: command not found

    /tmp/tmpsoota2m6.sh: line 19: local: nums: readonly variable

    /tmp/tmpsoota2m6.sh: line 21: local: nums: readonly variable

    /tmp/tmpsoota2m6.sh: line 23: local: nums: readonly variable

    /tmp/tmpsoota2m6.sh: line 25: local: nums: readonly variable

    /tmp/tmpsoota2m6.sh: line 27: local: nums: readonly variable

    /tmp/tmpsoota2m6.sh: line 29: local: nums: readonly variable

    /tmp/tmpsoota2m6.sh: line 31: local: nums: readonly variable

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local n=$(($(echo \"$1\" | tr \"\
    \ \" \"\\n\") - $(echo \"$1\" | tr \" \" \"+\" | tr \" +\" \"\\n\" | grep -Ev\
    \ '^ *-$')));\n    if [[ -n \"$n\" ]]; then\n        echo \"$n\"\n    else\n \
    \       echo \"0\"\n    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzx1swn6c.sh: line 15: - : syntax error: operand expected (error
    token is "- ")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local i\n    local sum\n    local\
    \ count\n\n    sum=0\n    IFS=$' \\t\\n'\n    for i in $@; do\n        ((sum +=\
    \ $i))\n    done\n\n    IFS=$' \\t\\n'\n    for i in $@; do\n        if (( ${#i}\
    \ == 1 )); then\n            if (( -n $i )); then\n                if (( ${i}\
    \ == 0 ));\n                then\n                    ((count = 0))\n        \
    \        else\n                    ((count = 1))\n                fi\n       \
    \     else\n                ((count = 0))\n            fi\n        else\n    \
    \        if (( ${i} < 0 )); then\n                if (( $i < 0 )); then\n    \
    \                if (( $i < 0 )); then\n                        ((count = 1))\n\
    \                    else\n                        ((count = 1))\n           \
    \         fi\n                else\n                    ((count = 0))\n      \
    \          fi\n            else\n                if (( $i < 0 )); then\n     \
    \               ((count = 1))\n                else\n                    ((count\
    \ = 1))\n                fi\n            fi\n        fi\n    done\n    IFS=$'\
    \ \\t\\n'\n    if (( $sum > 0 ));\n    then\n        echo \"$count\"\n    else\n\
    \        echo \"0\"\n    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpon1gba48.sh: line 28: ((: -n 0 : syntax error in expression (error
    token is "0 ")

    /tmp/tmpon1gba48.sh: line 28: ((: -n 1 : syntax error in expression (error token
    is "1 ")

    /tmp/tmpon1gba48.sh: line 28: ((: -n 1 : syntax error in expression (error token
    is "1 ")

    /tmp/tmpon1gba48.sh: line 28: ((: -n 2 : syntax error in expression (error token
    is "2 ")

    /tmp/tmpon1gba48.sh: line 28: ((: -n 3 : syntax error in expression (error token
    is "3 ")

    /tmp/tmpon1gba48.sh: line 28: ((: -n 4 : syntax error in expression (error token
    is "4 ")

    /tmp/tmpon1gba48.sh: line 28: ((: -n 5 : syntax error in expression (error token
    is "5 ")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    IFS=' '\n    declare -a strArray=(\
    \ $1 )\n    declare -i i\n    declare -i num=0\n    for ((i=0; i < ${#strArray[@]};\
    \ i++)); do\n        if (( ${strArray[i]} <= 0 )); then\n            ((num+=$(count_digits\
    \ ${strArray[i]} < 0))))\n        elif (( ${strArray[i]} > 0 )); then\n      \
    \      ((num+=$(count_digits ${strArray[i]})))\n        fi\n    done\n    echo\
    \ \"$num\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3g6pd5o2.sh: line 21: syntax error near unexpected token `)''

    /tmp/tmp3g6pd5o2.sh: line 21: `            ((num+=$(count_digits ${strArray[i]}
    < 0))))''

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local len=${#arr[@]}\n\
    \    local res=0\n    local n=0\n    local digits=0\n\n    for (( i=0; i<len;\
    \ i++ )); do\n        digits=${arr[i]}\n        if (( digits )); then\n      \
    \      (( res+=(digits%10)) )\n            n=$(( n/10 ))\n        fi\n    done\n\
    \n    # add sign if first\n    if [ -n \"$n\" ]; then\n        (( n++ ))\n   \
    \ fi\n\n    echo \"$n\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers\n    local length\n\
    \    local digits\n    local sum\n    local i\n    local count\n    numbers=\"\
    ${@// /-}\"\n    length=\"${#numbers}\"\n    digits=\"${numbers//-}\"\n    sum=$(printf\
    \ '%s' \"${digits}\" | paste -sd+ | bc) # convert to sum\n    count=0\n    for\
    \ (( i=0; i < length; i++ )); do\n        if [[ ${digits:i:1} == 0 ]]; then\n\
    \            count=$(( count+1 ))\n        elif [[ ${digits:i:1} > 0 ]]; then\n\
    \            count=$(( count+1 ))\n        fi\n    done\n    echo \"$sum $count\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local array=$1\n  local sum=$2\n \
    \ local sign=${3:+1}\n  local nums=$((${#array}-1))\n  local i\n  for i in $(seq\
    \ 0 $((${#array}-1))); do\n    if [[ $i -ge 0 ]]; then\n      ((nums+=i))\n  \
    \  elif [[ $array =~ ^-[0-9]+$ ]]; then\n      ((nums+=${i#$sign}))\n    else\n\
    \      ((nums+=${i#1}))\n    fi\n  done\n  echo $((nums))\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=\"$1\"\n    local num=\"\
    \"\n    local i=0\n    while (( $# > 0 )); do\n        local num=\"$1\"\n    \
    \    if [ \"$num\" != \"0\" ]; then\n            local nums=\"$nums $num\"\n \
    \       fi\n        ((i++))\n        shift\n    done\n    echo \"$nums\"\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local i sum=$1 count=0\n\n    for\
    \ ((i=1; i<${#1}; i++))\n    do\n        if (( $( echo \"$sum\" | bc -l ) > 0\
    \ ))\n        then\n            (( sum -= $( echo \"${1:$i:1}\" \" \" ))) \n \
    \           (( count++ ))\n        fi\n    done\n    echo $count\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    /tmp/tmp26sfdyz2.sh: line 19: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    (standard_in) 1: syntax error

    /tmp/tmp26sfdyz2.sh: line 19: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    (standard_in) 1: syntax error

    /tmp/tmp26sfdyz2.sh: line 19: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    (standard_in) 1: syntax error

    /tmp/tmp26sfdyz2.sh: line 19: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    (standard_in) 1: syntax error

    /tmp/tmp26sfdyz2.sh: line 19: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    (standard_in) 1: syntax error

    /tmp/tmp26sfdyz2.sh: line 19: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    /tmp/tmp26sfdyz2.sh: line 19: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    /tmp/tmp26sfdyz2.sh: line 19: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    /tmp/tmp26sfdyz2.sh: line 19: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    /tmp/tmp26sfdyz2.sh: line 19: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    /tmp/tmp26sfdyz2.sh: line 19: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    /tmp/tmp26sfdyz2.sh: line 19: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    /tmp/tmp26sfdyz2.sh: line 19: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    /tmp/tmp26sfdyz2.sh: line 19: ((: > 0 : syntax error: operand expected (error
    token is "> 0 ")

    (standard_in) 1: syntax error

    (standard_in) 1: syntax erro'
  stdout: ''
  timestamp: 1660056358
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  awk '\n    BEGIN {\n      x = 0;\n\
    \      while ($1 != \"\") {\n        x++;\n        $1 = $1\"\";\n      }\n   \
    \ }\n    { if ($1 + 0 > 0) x++; }\n    END { print x }'\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=18 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=7 encoding='utf-8'>
  timestamp: 1660056363
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=( \"$@\" )\n    local\
    \ sum=0\n    local digits=()\n    local num=$1 i=1\n    while [[ -n \"${numbers[$i]}\"\
    \ ]]; do\n        if (( $(echo \"${numbers[$i]}\" | grep -E -o '[+-]?\\d+') ));\
    \ then\n            digits=( \"${digits[@]}\" )\n            sum=$(( ${sum} +\
    \ ${numbers[$i]} ))\n        fi\n        i=$(( i + 1 ))\n    done\n    if (( ${#digits[*]}\
    \ > 0 )); then\n        sum=$(( ${sum} + ${#digits[@]} - 1 ))\n    fi\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local n=0\n    for x in $@; do\n\
    \        if (( ${x} < 0 )) && (( ${#x} > 0 )) ; then\n            x=$(printf \"\
    %d\" ${x})\n        fi\n        ((n+=x))\n    done\n    echo \"$n\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local nums\n\
    \    local count\n    nums=$(echo \"$numbers\" | sed -e 's/^-\\([0-9]\\+\\)-$/\\\
    1/')\n    count=$(( ${nums//,/ } )); nums=$(echo \"$nums\" | sed -e 's/^-\\([0-9]\\\
    +\\)-$/\\1/')\n    count=$(( $count + ${nums//-/ } ))\n    echo $(( $count ))\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2bqu_0l0.sh: line 20: 0 +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    declare -a arr=(\"$@\")\n    local\
    \ len=${#arr[@]}\n    for ((i=0; i < len; i++)); do\n        sum=0\n        for\
    \ ((j=0; j < 10; j++)); do\n            (( sum+=(${arr[i]} * ${arr[i]} > 9) ))\
    \ &&\n                arr[i]=$(expr ${arr[i]} - $((10 * ${arr[i]})))\n       \
    \ done\n        [[ $sum -gt 0 ]] && return $((i+1))\n    done\n    return 0\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphcvek7nd.sh: line 20: ((: sum+=( *  > 9) : syntax error: operand
    expected (error token is "*  > 9) ")

    /tmp/tmphcvek7nd.sh: line 20: ((: sum+=( *  > 9) : syntax error: operand expected
    (error token is "*  > 9) ")

    /tmp/tmphcvek7nd.sh: line 20: ((: sum+=( *  > 9) : syntax error: operand expected
    (error token is "*  > 9) ")

    /tmp/tmphcvek7nd.sh: line 20: ((: sum+=( *  > 9) : syntax error: operand expected
    (error token is "*  > 9) ")

    /tmp/tmphcvek7nd.sh: line 20: ((: sum+=( *  > 9) : syntax error: operand expected
    (error token is "*  > 9) ")

    /tmp/tmphcvek7nd.sh: line 20: ((: sum+=( *  > 9) : syntax error: operand expected
    (error token is "*  > 9) ")

    /tmp/tmphcvek7nd.sh: line 20: ((: sum+=( *  > 9) : syntax error: operand expected
    (error token is "*  > 9) ")

    /tmp/tmphcvek7nd.sh: line 20: ((: sum+=( *  > 9) : syntax error: operand expected
    (error token is "*  > 9) ")

    /tmp/tmphcvek7nd.sh: line 20: ((: sum+=( *  > 9) : syntax error: operand expected
    (error token is "*  > 9) ")

    /tmp/tmphcvek7nd.sh: line 20: ((: sum+=( *  > 9) : syntax error: operand expected
    (error token is "*  > 9) ")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local result=0 i\n\n    for i in\
    \ $(echo $1 | sed -e 's/ /+/g'); do\n        [[ $i -ge 0 ]] && result=$((result+1))\
    \ || result=$((result))\n    done\n\n    echo \"$result\"\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums\n    read -a nums <<<\
    \ \"$1\"\n    nums=($(nums))\n    num_to_sum=0\n    while read -a num; do\n  \
    \      ((num_to_sum+=${num[0]}))\n    done <<< \"${nums[@]}\"\n    echo \"${num_to_sum}\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe126tatt.sh: line 17: nums: command not found

    /tmp/tmpe126tatt.sh: line 20: ((: num_to_sum+=: syntax error: operand expected
    (error token is "+=")

    /tmp/tmpe126tatt.sh: line 17: nums: command not found

    /tmp/tmpe126tatt.sh: line 20: ((: num_to_sum+=: syntax error: operand expected
    (error token is "+=")

    /tmp/tmpe126tatt.sh: line 17: nums: command not found

    /tmp/tmpe126tatt.sh: line 20: ((: num_to_sum+=: syntax error: operand expected
    (error token is "+=")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=($1)\n    local num=0\n\
    \    local i n\n    for ((i=0; i < ${#arr[@]}; i++)); do\n        n=$(echo \"\
    ${arr[$i]}\" | grep -v \"^-?[0-9]*$\" | grep -v \"^-?[0-9]*\\.*[0-9]*$\" | wc\
    \ -l)\n        if (( n )); then\n            num=$(( num + n ))\n        fi\n\
    \    done\n    echo \"$num\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  IFS=' ' read -r -a array <<< \"$1\"\
    \n  local -n count=\"${array[0]}\"\n  for number in \"${array[@]:1}\"\n  do\n\
    \    (( count++ ))\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp12_2q18e.sh: line 16: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local -a numbers\n  for n in \"$1\"\
    ; do\n    if [ \"${n}\" = \"-\" ]; then\n      numbers=(${n//-/ })\n      negative=\"\
    ${numbers[0]}\"\n      numbers[0]=\"${numbers[1]}\"\n      numbers[1]=\"${numbers[2]}\"\
    \n      numbers[2]=\"${negative}\"\n      echo ${#numbers[@]}\n      continue\n\
    \    fi\n    numbers=(${n//-/ })\n    count=0\n    for (( i=0; i<${#numbers[@]};\
    \ i++ )); do\n      (( count += numbers[i] ))\n      if (( ${count} > 0 )); then\n\
    \        break\n      fi\n    done\n    echo ${count}\n  done\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local num\n  local sum\n  sum=$(echo\
    \ $1 |\n          sed 's/^\\([^-]\\)\\(-\\+\\)\\?/\\1/'  |\n          awk '{sum+=$1}\
    \ END {print sum}')\n  num=$1\n  if [[ -n $num ]]; then\n    num=$(echo $num|cut\
    \ -d ' ' -f 1)\n    if [[ $num -gt 0 ]]; then\n      if [[ -n $sum ]]; then\n\
    \        echo $sum\n      fi\n      echo -n \"$num\"\n    fi\n  fi\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local IFS=$1\n    local result\n\
    \    local nums\n    local i\n    # Split $1 into an array using the first character\
    \ as the separator\n    nums=($(echo \"$1\" | cut -c1-1))\n    # If there is only\
    \ one element, return it as it is\n    [[ ${#nums[@]} -eq 1 ]] && echo \"${nums[0]}\"\
    \ && return\n    # Count the number of elements whose sum is greater than zero\n\
    \    for ((i=0; i<${#nums[@]}; i++)); do\n        result=$((nums[i] + nums[i+1]))\n\
    \        if [[ ${result} -gt 0 ]]; then\n            break\n        fi\n    done\n\
    \    # Return the number of elements or zero if no such element\n    echo ${result}\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local count=0\n  local string=$1\n\
    \  while read -a number\n  do\n    (( count+=${#number} ))\n  done <<< \"$string\"\
    \n  echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local ns=\"\"\n    local tmp n\n\
    \    for n in $1 ; do\n        (( n > 0 )) && continue\n        tmp=$(echo $n\
    \ | sed -e 's/^-//')\n        [ -z \"$ns\" ] && ns=\"$tmp\" || ns=\"$ns$tmp\"\n\
    \    done\n    echo \"$ns\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local array=( $1 )\n  local sum=0\n\
    \  local nums=\"\"\n  for i in ${array[@]}; do\n    (( sum += i ))\n    if ((\
    \ sum > 0 )) && [[ $sum != 0 ]]; then\n      nums=\"$nums $i\"\n    fi\n  done\n\
    \  echo \"$nums\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local sum=0\n    for num in $1;\
    \ do\n        if [[ $num =~ ^(-?)[0-9]+$ ]]; then\n            sum=$(( ${BASH_REMATCH[1]}\
    \ + num | bc ))\n        else\n            sum=$(( $sum + num | bc ))\n      \
    \  fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local ns=\"${1}\"\n  local sum=\"\
    0\"\n  local i\n  for (( i=0; i < ${#ns}; i++ )); do\n    local n=\"${ns[i]}\"\
    \n    if [[ -n \"$n\" ]] && [[ \"$n\" =~ ^-?[0-9]+$ ]]; then\n      local nsum=\"\
    $(echo \"$n\" | bc)\"\n      [[ \"$sum\" -lt \"$nsum\" ]] && sum=\"$nsum\"\n \
    \   fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local numbers=\"$1\"\n  local sum=0\n\
    \  local len=0\n\n  for number in $numbers\n  do\n    len=$(( len + ${#number}\
    \ ))\n    sum=$(( sum + $(eval \"echo ${number/\\+/ }\" ) ))\n  done\n\n  echo\
    \ \"$(( $len - $sum ))\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local -n arr=$1\n    local n\n \
    \   local len\n    len=${#arr[@]}\n    if [ ${len} -eq 0 ]; then\n        return\
    \ 0\n    fi\n    for ((n = 0; n < len; n++)); do\n        if (( ${arr[$n]} < 0\
    \ )); then\n            arr[$n]=$(expr ${arr[$n]} + 10)\n        fi\n    done\n\
    \    echo $(expr $(nub ${arr[@]} ))\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnx7ca_b_.sh: line 15: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums\n    # A negative sign\
    \ at the end of a number means it has\n    # a leading negative sign to indicate\
    \ its sign\n    if [[ $1 =~ (-[0-9]+)([-+].*)?$ ]]; then\n        nums=$(echo\
    \ \"$1\" | sed -e 's/^-/ /g' -e 's/ /\\ /g' | tr '[:upper:]' '[:lower:]')\n  \
    \  else\n        nums=\"$1\"\n    fi\n    local count\n    for num in $nums; do\n\
    \        count=$(echo $num | tr ' ' '\\n' | sort | uniq | wc -l)\n        if [\
    \ \"$count\" -gt 0 ]; then\n            break\n        fi\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local total=0\n\
    \    local first\n    for number in $numbers\n    do\n        first=$(echo $number\
    \ | cut -d ' ' -f 1)\n        if [[ -z \"$first\" ]]\n        then\n         \
    \   first=0\n        fi\n        total=$(($total + $((${first}+${first%?}))))\n\
    \    done\n    echo \"$total\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzds6wc6k.sh: line 25: -1+-: syntax error: operand expected (error
    token is "-")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  echo \"$1\" | awk '{ sum = 0; for\
    \ (i = 1; i <= NF; i++) if ($i < 0) sum += $i * 10; else sum += $i; if (sum >\
    \ 0) print NR }'\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local -n numbers=$1\n    local n\n\
    \    local sum\n    local i\n    sum=0\n    for n in $numbers\n    do\n      \
    \  (( sum += (n % 10 )     ))\n        (( sum += (( n % 10 )      ) ))\n     \
    \   (( sum += (( n % 10 ) *     ) ))\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmps40o2r4u.sh: line 15: local: `'': not a valid identifier

    /tmp/tmps40o2r4u.sh: line 15: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmps40o2r4u.sh: line 15: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local count=0\n    local num=$(eval\
    \ echo '$($1)')\n    local array=(\"$num\")\n    for num in \"${array[@]}\"; do\n\
    \        local digit=${num}\n        if [ \"$digit\" -ge 0 ]; then\n         \
    \   ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n \
    \   count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmps_j1tf7s.sh: line 20: [: : integer expression expected

    /tmp/tmps_j1tf7s.sh: line 16: -1: command not found

    /tmp/tmps_j1tf7s.sh: line 20: [: : integer expression expected

    /tmp/tmps_j1tf7s.sh: line 16: 1: command not found

    /tmp/tmps_j1tf7s.sh: line 20: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local array=( \"${@}\" )\n  local\
    \ sum=0\n  for (( i = 0; i < ${#array[@]}; i++ )); do\n    (( sum += ${array[i]}\
    \ ))\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpaq2jcg6k.sh: line 18: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    /tmp/tmpaq2jcg6k.sh: line 18: ((: sum += -1 -2 0 : syntax error in expression
    (error token is "0 ")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local array num_sum\n    local str=$1\n\
    \    while read -r; do\n        # shellcheck disable=SC2086\n        array+=(\"\
    $REPLY\")\n    done <<< \"$str\"\n    num_sum=0\n    for element in \"${array[@]}\"\
    ; do\n        # shellcheck disable=SC2086\n        if [[ \"$element\" =~ ^-([0-9]+|+[0-9]+)$\
    \ ]]; then\n            num_sum=$((num_sum + $(echo \"$element\" | awk '{print\
    \ $1}')))\n        fi\n    done\n    echo \"$num_sum\"\n}\n\ncandidate() {\n \
    \   count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local i n\n    local count\n   \
    \ local -a numbers=( $1 )\n    local zeros=( $(count_nums \"\" ) )\n    for ((\
    \ i=0; i<${#numbers[@]}; ++i )); do\n        n=${numbers[i]}\n        if (( zeros\
    \ > n )); then\n            count=$(( zeros - n ))\n        else\n           \
    \ count=0\n        fi\n        (( count++ ))\n        (( zeros = n ))\n    done\n\
    \    echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=47 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=37 encoding='utf-8'>
  timestamp: 1660056363
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local num_str=\"$1\"\n  local -i num_array=(\
    \ $num_str  )\n  local -i num_count=0\n  local i\n  for i in ${num_array[@]};\
    \ do\n    (( num_count += ( $(expr \"$i\" + \"$num_array\" )[$(( num_count + 1\
    \ ))] ) ))\n  done\n  echo $num_count\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2qr2i11v.sh: line 20: ((: num_count += ( -2[1] ) : syntax error:
    invalid arithmetic operator (error token is "[1] ) ")

    /tmp/tmp2qr2i11v.sh: line 20: ((: num_count += ( -3[1] ) : syntax error: invalid
    arithmetic operator (error token is "[1] ) ")

    /tmp/tmp2qr2i11v.sh: line 20: ((: num_count += ( -1[1] ) : syntax error: invalid
    arithmetic operator (error token is "[1] ) ")

    /tmp/tmp2qr2i11v.sh: line 20: ((: num_count += ( 2[1] ) : syntax error: invalid
    arithmetic operator (error token is "[1] ) ")

    /tmp/tmp2qr2i11v.sh: line 20: ((: num_count += ( 2[1] ) : syntax error: invalid
    arithmetic operator (error token is "[1] ) ")

    /tmp/tmp2qr2i11v.sh: line 20: ((: num_count += ( 3[1] ) : syntax error: invalid
    arithmetic operator (error token is "[1] ) ")

    /tmp/tmp2qr2i11v.sh: line 20: ((: num_count += ( -1[1] ) : syntax error: invalid
    arithmetic operator (error token is "[1] ) ")

    /tmp/tmp2qr2i11v.sh: line 20: ((: num_count += ( 4[1] ) : syntax error: invalid
    arithmetic operator (error token is "[1] ) ")

    /tmp/tmp2qr2i11v.sh: line 20: ((: num_count += ( 5[1] ) : syntax error: invalid
    arithmetic operator (error token is "[1] ) ")

    /tmp/tmp2qr2i11v.sh: line 20: ((: num_count += ( 6[1] ) : syntax error: invalid
    arithmetic operator (error token is "[1] ) ")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local sum=0\n    local n\n    #\
    \ Iterate through the input string\n    for n in \"$1\"; do\n        # Increment\
    \ the sum by a digit\n        ((sum+=n%10)); n /= 10\n    done\n    # If the sum\
    \ is positive, then its total is greater than 0\n    if [ -n \"$sum\" ]; then\n\
    \        echo \"$sum\"\n    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp583qxpm0.sh: line 20: n: command not found

    /tmp/tmp583qxpm0.sh: line 20: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmp583qxpm0.sh: line 20: n: command not found

    /tmp/tmp583qxpm0.sh: line 20: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmp583qxpm0.sh: line 20: n: command not found

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=\"$1\"\n  local sum=0\n\
    \n  for num in $nums; do\n    ((sum+=num))\n  done\n\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local list=\"$1\"\n  local nums=0\n\
    \  local i\n  for ((i=0;i<${#list};i++)); do\n    local j\n    (( num=${list:$i:1}))\n\
    \    if (( num < 0 )); then\n      num=`echo $num | awk '{print $1}'`\n      ((\
    \ num=num * -1 ))\n    fi\n    local d\n    for ((j=0;j<${#num};j++)); do\n  \
    \    d=`echo ${num:$j:1}`\n      (( num-=d ))\n      if (( num == 0 )); then\n\
    \        break\n      fi\n    done\n    (( nums+=$j ))\n  done\n  echo \"$nums\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwm0ryc39.sh: line 20: ((: num=-: syntax error: operand expected
    (error token is "-")

    /tmp/tmpwm0ryc39.sh: line 20: ((: num= : syntax error: operand expected (error
    token is "= ")

    /tmp/tmpwm0ryc39.sh: line 20: ((: num=-: syntax error: operand expected (error
    token is "-")

    /tmp/tmpwm0ryc39.sh: line 20: ((: num= : syntax error: operand expected (error
    token is "= ")

    /tmp/tmpwm0ryc39.sh: line 20: ((: num= : syntax error: operand expected (error
    token is "= ")

    /tmp/tmpwm0ryc39.sh: line 20: ((: num= : syntax error: operand expected (error
    token is "= ")

    /tmp/tmpwm0ryc39.sh: line 20: ((: num= : syntax error: operand expected (error
    token is "= ")

    /tmp/tmpwm0ryc39.sh: line 20: ((: num=-: syntax error: operand expected (error
    token is "-")

    /tmp/tmpwm0ryc39.sh: line 20: ((: num= : syntax error: operand expected (error
    token is "= ")

    /tmp/tmpwm0ryc39.sh: line 20: ((: num= : syntax error: operand expected (error
    token is "= ")

    /tmp/tmpwm0ryc39.sh: line 20: ((: num= : syntax error: operand expected (error
    token is "= ")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1\n    local i num\n\
    \    num=$(echo $nums | tr ' ' '\\n' | sort -nr | head -1)\n    i=$((${#nums}\
    \ - 1))\n    while [ $i -ge 0 ] && [ $num -gt 0 ]\n    do\n        if [ $i -eq\
    \ 0 ]; then\n            echo 0\n        else\n            if [[ ${num:0:1} -lt\
    \ 0 ]]; then\n                echo -$((${num:0:1}+1))\n            else\n    \
    \            echo -$((${num:0:1}-1))\n            fi\n        fi\n        ((i-=1))\n\
    \        num=$(echo $nums | tr ' ' '\\n' | sort -nr | head -1)\n    done\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  echo \"$1\" | cut -d\\ -f1 |\n   \
    \ grep -Ei '[+-]?[0-9]+'| cut -d\\ -f2 |\n    sort -u | wc -l\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'cut: the delimiter must be a single character

    Try ''cut --help'' for more information.

    cut: the delimiter must be a single character

    Try ''cut --help'' for more information.

    cut: the delimiter must be a single character

    Try ''cut --help'' for more information.

    cut: the delimiter must be a single character

    Try ''cut --help'' for more information.

    cut: the delimiter must be a single character

    Try ''cut --help'' for more information.

    cut: the delimiter must be a single character

    Try ''cut --help'' for more information.

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local array\n    array=${1//-/}\n\
    \    local nums\n    nums=${array//,/ }\n    local result\n    for n in $nums;\
    \ do\n        if [ $n -gt 0 ]; then\n            result=$(( 10#\"$n\" + $result\
    \ ))\n        fi\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local -r n=$1\n    local -r ret=$(expr\
    \ $(echo $n | tr \" \" \"\\n\") \\\n    | awk '{ if ($0 < 0) print -($0); else\
    \ print $1; exit; }')\n    echo \"$ret\"\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'expr: missing operand

    Try ''expr --help'' for more information.

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local sum=$(echo \"${1//-/ }\" |\
    \ cut -d' ' -f1)\n    local digits=$((${#1} - 1))\n    local nums=$(echo \"${1//-/\
    \ }\" | cut -d' ' -f2- | tr -dc '0-9')\n    if [[ -z ${sum} ]]; then\n       \
    \ return 0\n    fi\n    if [[ -n $digits ]]; then\n        local negative=$(echo\
    \ \"$sum\" | awk 'BEGIN { print ($1 > 0 ? 1 : -1); }')\n        local result=$((nums\
    \ * $negative + $nums))\n    else\n        local result=$((nums * ($sum % 10)\
    \ + $nums))\n    fi\n    echo $result\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n\tlocal list=\"$1\"\n\tlocal n=\"$2\"\
    \n\tlocal ret=\"$3\"\n\twhile read -r line; do\n\t\tif [ -n \"$line\" ] && [ \"\
    $line\" != \"${line#-}\" ]; then\n\t\t\tif [ \"$line\" == \"\" ]; then\n\t\t\t\
    \tn=0\n\t\t\telse\n\t\t\t\tn=$(( n + ( $line % $n ) = 0 ))\n\t\t\tfi\n\t\t\tret=\"\
    $n\"\n\t\tfi\n\tdone <<<\"$list\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=$1\n  local count=0\n \
    \ local i\n  for i in $nums; do\n    (( i > 0 ? i++ : i++ < 0 ? i++ : i++ > 0\
    \ ? i++ : i++ > 0 ? i++ : i++ > 0 ? i++ : i++ > 0 ? i++ : i++ > 0 ? i++ : i++\
    \ > 0 ? i++ : i++ ))\n    (( i % 10 )) && count++\n  done\n  echo $count\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjbrt0a14.sh: line 20: count++: command not found

    /tmp/tmpjbrt0a14.sh: line 20: count++: command not found

    /tmp/tmpjbrt0a14.sh: line 20: count++: command not found

    /tmp/tmpjbrt0a14.sh: line 20: count++: command not found

    /tmp/tmpjbrt0a14.sh: line 20: count++: command not found

    /tmp/tmpjbrt0a14.sh: line 20: count++: command not found

    /tmp/tmpjbrt0a14.sh: line 20: count++: command not found

    /tmp/tmpjbrt0a14.sh: line 20: count++: command not found

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local IFS=$' \\t\\n'\n    local\
    \ n=0\n    for n; do\n        [[ -z \"$1\" ]] && return\n        local s=$(($(echo\
    \ \"$1\" | sed -E 's/([^-]*)-([^-]*)-([^-]*)-([^-]*)(.*)/\\6/\\4/\\3/\\1/\\2/'\
    \ 2>/dev/null | sort -n | uniq -c) - ${#n}))\n        [[ -z \"$s\" ]] && s=\"\
    0\"\n        if (( $s > 0 )); then\n            echo \"$n\"\n            return\n\
    \        fi\n    done\n    echo \"0\"\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local i n sum\n    n=$(( ${#1} >\
    \ 0 ? ${#1} : -1 ))\n    sum=0\n    for (( i = 0; i < n; i++ )); do\n        sum=$((\
    \ sum + ${1[i]} ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpo_x63imr.sh: line 19:  sum + ${1[i]} : bad substitution

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local numbers=$1\n  local count=$(echo\
    \ $numbers | sed -n 's/^-?[0-9]\\+\\([0-9]\\+\\).*$/\\1/p' | sort | uniq -c |\
    \ sed 's/^ *//g' | sed 's/^ *//g')\n  printf \"$count\"\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  declare -i nums=0;\n  local -n arr=$1;\n\
    \n  for n in $arr; do\n    if [ \"$n\" -gt 0 ]; then\n      if (( n % 10 )); then\n\
    \        if (( nums == 0 )); then\n          nums=$n;\n        else\n        \
    \  nums=$(( nums + n ));\n        fi\n      else\n        (( n += ( $( echo \"\
    $n % 10\" | bc ) ))\n      fi\n    fi\n  done\n\n  echo $nums\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpre6nek_r.sh: line 27: syntax error near unexpected token `(''

    /tmp/tmpre6nek_r.sh: line 27: `( n += ( $( echo "$n % 10" | bc ) ))''

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local n digit\n    local sum\n \
    \   local num\n    local sign\n    read -a nums\n    n=${#nums[@]}\n    sum=0\n\
    \    for (( i=0; i<${n}; i++ )); do\n        digit=${nums[i]}\n        if [ -z\
    \ \"${digit}\" ]; then\n            # This loop should only run once\n       \
    \     echo -n \"0\"\n            continue\n        fi\n        if [[ ${digit}\
    \ -lt 0 ]]; then\n            sign=\"-\"\n            digit=-${digit}\n      \
    \  else\n            sign=\"\"\n        fi\n        (( sum += digit ))\n    done\n\
    \    echo \"${sign}${sum}\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=30 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=27 encoding='utf-8'>
  timestamp: 1660056363
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local x\n    local -i cnt\n    local\
    \ -n array=$1\n\n    array=( $array )\n    cnt=0\n    for x in \"${array[@]}\"\
    ; do\n        if (( ${x} > 0 )); then\n            (( cnt += ( $( echo \"$x/10\"\
    \ | bc ) -1 ) ))\n        fi\n    done\n\n    echo \"$cnt\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvzbl6h6c.sh: line 17: local: `'': not a valid identifier

    /tmp/tmpvzbl6h6c.sh: line 17: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmpvzbl6h6c.sh: line 17: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=\"$1\"\n    local sum=0\n\
    \    local n\n    for n in \"${nums//,/ }\"; do\n        ((sum+=${n//+/}))\n \
    \   done\n    echo -n \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6orxucuf.sh: line 19: ((: sum+=: syntax error: operand expected
    (error token is "+=")

    /tmp/tmp6orxucuf.sh: line 19: ((: sum+=-1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local digits=$(( $(echo \"$1\" |\
    \ tr '\\n' ' ' | awk '{print $1}' | sort -n | uniq) ))\n    local sum=$(( $((\
    \ $(( $(echo \"$1\" | tr '\\n' ' ' | awk '{print $1}' | sort -n | uniq) )) ))\
    \ ))\n    if [ $(expr $sum - $digits) -gt 0 ]; then\n        echo 1\n    else\n\
    \        echo 0\n    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local sum\n  sum=0\n  for num in $(\
    \ echo $1 | sed -e 's/ /,/g' -e 's/^-/-/g' -e 's/-$//g' -e 's/^-*//g' -e 's/-*$//g'\
    \ -e 's/^-/-/g' -e 's/-*//g' -e 's/-$//g' ); do\n    if [ $num -gt 0 ]; then\n\
    \      sum=$(($sum + $num))\n    elif [ $num -lt 0 ]; then\n      sum=$(($sum\
    \ + $num))\n      sum=$(($sum - 1))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzo03wnhk.sh: line 18: [: 1,2,0: integer expression expected

    /tmp/tmpzo03wnhk.sh: line 20: [: 1,2,0: integer expression expected

    /tmp/tmpzo03wnhk.sh: line 18: [: 1,1,2,2,3,4,5: integer expression expected

    /tmp/tmpzo03wnhk.sh: line 20: [: 1,1,2,2,3,4,5: integer expression expected

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=$@\n  local count\n  count=0\n\
    \  while read num; do\n    if test $num -gt 0; then\n      (( count+=1 ))\n  \
    \  fi\n  done <<< \"$nums\"\n  echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmppm2st9m7.sh: line 19: test: -gt: unary operator expected

    /tmp/tmppm2st9m7.sh: line 19: test: -1: unary operator expected

    /tmp/tmppm2st9m7.sh: line 19: test: too many arguments

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local array=\"$1\"\n    echo \"\
    $array\" | sed -E 's/^ *([0-9]+) *$/\\1/' | grep -Ev '^ *\\-[0-9]+ *$' | sort\
    \ -n | wc -l\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local array\n  array=( \"$@\" )\n\
    \  local nums nums2 nums3\n  nums=0\n  nums2=0\n  nums3=0\n  for i in \"${array[@]}\"\
    ; do\n    (( nums+=${#i} ))\n  done\n  for i in \"${array[@]}\"; do\n    if [\
    \ \"$i\" -gt 0 ]; then\n      (( nums2+=${#i} ))\n    fi\n  done\n  for i in \"\
    ${array[@]}\"; do\n    if [ \"$i\" -gt 0 ]; then\n      (( nums3+=${#i} ))\n \
    \   fi\n  done\n  if (( ${#nums} )) && [ \"${nums%?}\" != \"0\" ]; then\n    nums=${nums%?}\n\
    \  fi\n  if (( ${#nums2} )) && [ \"${nums2%?}\" != \"0\" ]; then\n    nums2=${nums2%?}\n\
    \  fi\n  if (( ${#nums3} )) && [ \"${nums3%?}\" != \"0\" ]; then\n    nums3=${nums3%?}\n\
    \  fi\n  echo \"$nums\"\n  echo \"$nums2\"\n  echo \"$nums3\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp4lvbg40t.sh: line 25: [: : integer expression expected

    /tmp/tmp4lvbg40t.sh: line 30: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local n num\n  read -a list <<< \"\
    $1\"\n  for n in \"${list[@]}\"; do\n    if [[ \"$n\" =~ ^- ]]; then\n      num=$(echo\
    \ \"$n\" | sed -e 's/^- //')\n    else\n      num=$(echo \"$n\" | tr -dc '0-9')\n\
    \    fi\n    if [ \"$num\" -gt 0 ]; then\n      echo $(( (\"$num\" + 1) * 10 ))\n\
    \    fi\n  done\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  # Convert each element of $1 into\
    \ a negative number\n  local number\n  read -r numbers\n  printf -v number \"\
    -$numbers\"\n\n  # Count positive numbers\n  local i sum=0\n  for ((i=0; i < ${#number};\
    \ i++)); do\n    sum=$((sum + ${number:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=55 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=53 encoding='utf-8'>
  timestamp: 1660056363
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr\n  if [[ \"$1\" =~ ^-?[0-9]+$\
    \ ]]; then\n    arr=($1)\n  else\n    arr=($(echo $1 | sed 's/^\\([^-]\\)-\\([0-9]\\\
    )/\\1 \\2/g'))\n  fi\n  local -n total=\"count_nums_$1\"\n  if [[ \"${arr[0]}\"\
    \ -ge 0 ]]; then\n    if [[ \"${arr[2]}\" -ge 0 ]]; then\n      total=$((total+3))\n\
    \    else\n      total=$((total+2))\n    fi\n  fi\n  for i in $(seq 1 $((${#arr[@]}-1)));\
    \ do\n    if [[ \"${arr[$i]}\" -ge 0 ]]; then\n      total=$((total+${arr[$i]}))\n\
    \    fi\n  done\n  echo \"$total\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local -n num=$1\n    echo \"${#num[@]}\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8pvwyl7j.sh: line 15: local: `'': not a valid identifier

    /tmp/tmp8pvwyl7j.sh: line 15: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmp8pvwyl7j.sh: line 15: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( ${( )} )\n  local n=0\n\
    \  for (( i=0; i<${#arr[@]}; i++ )); do\n    (( ${arr[i]} > 0 )) && let n=$n+1\n\
    \  done\n  echo $n\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpp9rojseb.sh: line 15: ${( )}: bad substitution

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n        local arr=$1\n        local\
    \ nums=0\n        for num in ${arr//,/ }; do\n                local s=$(echo $num\
    \ | awk '{print $1+$2+0+$3+0+$4+0+$5+0}')\n                if [[ $s -gt 0 ]];\
    \ then\n                        nums=$((nums + 1))\n                fi\n     \
    \   done\n        echo \"$nums\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  echo \"$(count_nums_helper ${1// /})\"\
    \ # replace spaces with single whitespace\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphxxcwyqj.sh: line 15: count_nums_helper: command not found

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local array=( \"${@}\" )\n    local\
    \ nums=\"\"\n    for num in \"${array[@]}\"; do\n        [ \"$num\" -eq $num ]\
    \ || return\n        if [[ -n \"$nums\" ]]; then\n            if [[ \"$num\" -lt\
    \ 0 ]]; then\n                nums=\"${nums}${num}\"\n            else\n     \
    \           nums=\"${nums}${num#-}\"\n            fi\n        else\n         \
    \   nums=\"$num\"\n        fi\n    done\n    echo -n \"$nums\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpebihbiec.sh: line 18: [: : unary operator expected

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local -n nums=$1; shift\n    local\
    \ n=0\n    while read num; do\n        local sum=0\n        while (( ${num:0:1}\
    \ >= 0 )) ; do\n            sum=$(( ${sum} * 10 + ${num:0:1} ))\n            num=${num:1}\n\
    \        done\n        if (( ${sum} > 0 )) ; then\n            n=$(( n + 1 ))\n\
    \        fi\n    done <<<\"$nums\"\n    echo \"$n\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbxqtqpzd.sh: line 15: local: `'': not a valid identifier

    /tmp/tmpbxqtqpzd.sh: line 19: ((: >= 0 : syntax error: operand expected (error
    token is ">= 0 ")

    /tmp/tmpbxqtqpzd.sh: line 15: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmpbxqtqpzd.sh: line 19: ((: >= 0 : syntax error: operand expected (error
    token is ">= 0 ")

    /tmp/tmpbxqtqpzd.sh: line 15: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    /tmp/tmpbxqtqpzd.sh: line 19: ((: >= 0 : syntax error: operand expected (error
    token is ">= 0 ")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n        local numbers=$1\n        local\
    \ num_string=\n        for number in $numbers\n        do\n                num_string=\"\
    $num_string $number\"\n        done\n\n        local count_of_digits=$num_string\n\
    \        local i=\n        for ((i=0; i < ${#num_string}; i++)); do\n        \
    \        digit=${num_string:$i:1}\n                let \"digit *= 10\"\n     \
    \           if (( digit > 0 ))\n                then\n                       \
    \ let \"digit += 1\"\n                        count_of_digits=\"$count_of_digits\
    \ $digit\"\n                fi\n        done\n\n        echo $count_of_digits\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=\"$1\"\n    if [ -z \"\
    $nums\" ] ; then\n        return 0\n    fi\n    # echo \"$nums\" | awk '{print\
    \ length} END {print length}'\n    local num_sum=0\n    local num_num=$(echo \"\
    $nums\" | awk '{print length} END {print length}')\n    for (( i=0 ; i < num_num\
    \ ; i++ )) ; do\n        local num=$( echo \"$nums\" | cut -d' ' -f$i | awk '{print\
    \ length} END {print length}')\n        num_sum=$((num_sum + num))\n    done\n\
    \    echo \"$num_sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local IFS=\" \"\n    local n=0\n\
    \    for x in $@; do\n        if (( $(expr \"$x\" : '^-*\\([0-9][0-9]*\\)') +\
    \ 0 > 0 ))\n        then\n            n=$(( n + $(expr \"$x\" : '^-*\\([0-9][0-9]*\\\
    )') + 0))\n        fi\n    done\n    echo \"$n\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  if [[ $# -eq 0 ]]; then\n    echo\
    \ \"0\"\n  else\n    arr=()\n    count=0\n    for s in $@; do\n      if [[ ${s#-}\
    \ ]]; then \n        s=$(echo $s -t 0)\n      fi\n      arr+=(\"$s\")\n    done\n\
    \    for ((i=0; i<${#arr[@]}; i++)); do\n      count=$((count + ${arr[i]}))\n\
    \    done\n    echo \"$count\"\n  fi\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_mwsotod.sh: line 27: count + -1 -t 0: syntax error in expression
    (error token is "0")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n        echo -n \"$(echo $1 | tr -d\
    \ ' ' | sort -nr | wc -l )\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    IFS=' ' read -r -a array <<< \"\
    $1\"\n    local -i count=0\n    for num in \"${array[@]}\"; do\n        if [[\
    \ $num -gt 0 ]]; then\n            ((count+=num))\n        fi\n    done\n    echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  echo \"$(echo $1 | sed 's/ /, /g'\
    \ | awk '{if($1~/\\+/){ $1=abs($1); print }}')\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    echo \"$(echo\
    \ \"$numbers\" | sed -E 's/[^ ]*( )*/\\1/g' | sort | uniq -c | sort -rn  | grep\
    \ ' [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+\
    \ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+\
    \ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+\
    \ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+\
    \ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+\
    \ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+\
    \ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+\
    \ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+\
    \ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+\
    \ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+\
    \ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+\
    \ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+\
    \ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+\
    \ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+ [0-9]+\
    \ [0-9]+ [0-9]+ [0-9]+ [0-9\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxh_1o0de.sh: line 16: unexpected EOF while looking for matching
    `''''

    /tmp/tmpxh_1o0de.sh: line 36: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=\"${1}\"\n    local count\
    \ res\n    for n in $nums; do\n        (( count++ ))\n        res=\"${res}${#n}\"\
    \n    done\n    echo \"$res\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local array nl sum\n    nl=$'\\\
    n'\n    array=($1)\n    # loop over all numbers in $array, one by one\n    for\
    \ (( i=0; i<${#array[@]}; i++ )); do\n        sum=0\n        if [ ${array[$i]}\
    \ -gt 0 ]; then\n            # count digits in a number\n            digits=$(echo\
    \ ${array[$i]} | sed 's/\\./\\n/g')\n            digits=$(echo ${digits/^/-} ${digits/^/+}\
    \ | sed 's/\\./\\n/g')\n            digits=${#digits}\n            # add each\
    \ digit to sum\n            for (( j=0; j<${digits}; j++ )); do\n            \
    \    sum=$(( sum + ${array[$i]} * 10 ))\n            done\n            # if the\
    \ current sum is greater than zero, output it\n            if [ ${sum} -gt 0 ];\
    \ then\n                printf \"%s\\n\" \"${array[$i]}\"\n            fi\n  \
    \      fi\n    done\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local len=${#arr[@]}\n\
    \    # echo \"len=$len\"\n    if [ \"$len\" -eq \"0\" ]; then\n        echo \"\
    0\"\n    elif [ \"$len\" -eq \"1\" ]; then\n        echo \"1\"\n    elif [ \"\
    $len\" -eq \"2\" ]; then\n        echo \"2\"\n    elif [ \"$len\" -eq \"3\" ];\
    \ then\n        echo \"3\"\n    elif [ \"$len\" -eq \"4\" ]; then\n        echo\
    \ \"4\"\n    elif [ \"$len\" -eq \"5\" ]; then\n        echo \"5\"\n    elif [\
    \ \"$len\" -eq \"6\" ]; then\n        echo \"6\"\n    elif [ \"$len\" -eq \"7\"\
    \ ]; then\n        echo \"7\"\n    elif [ \"$len\" -eq \"8\" ]; then\n       \
    \ echo \"8\"\n    elif [ \"$len\" -eq \"9\" ]; then\n        echo \"9\"\n    elif\
    \ [ \"$len\" -eq \"10\" ]; then\n        echo \"10\"\n    else\n        echo \"\
    unknown\"\n    fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local n=\"$1\"\n  local -i s=0\n \
    \ while [[ $n != *-* ]]; do\n    (( n *= 10 ))\n    (( s += $n ))\n  done\n  echo\
    \ $(( s - $(( 10#$n )) ))\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=42 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=31 encoding='utf-8'>
  timestamp: 1660056363
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    echo \"$(echo \"$1\" | sed 's/^-\
    \ //g' | sed 's/ //g' | sort -n | uniq | sed 's/^ *//' | wc -c)\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local array len\n  # Split $1 into\
    \ an array with one number per element\n  array=( $1 )\n  # Initialize a counter\n\
    \  len=0\n  # Loop through all numbers\n  for num in ${array[@]}; do\n    # Add\
    \ the length of the number to the counter\n    ((len+=${#num}))\n  done\n  # Return\
    \ the counter\n  echo ${len}\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local -a nums\n    local nums_str=\"\
    $1\"\n    if [[ -n $nums_str ]]; then\n\tnums_str=\"$(echo \"$nums_str\" | tr\
    \ -s ' ')\"\n\tnums_str=\"$(echo \"$nums_str\" | sed -e 's/^-[[:digit:]]*//' -e\
    \ 's/[[:digit:]]*-//')\"\n\t# Convert strings to array of integers and sum them.\n\
    \tIFS=' ' read -r -a nums <<< \"$nums_str\"\n\tnums=$(echo \"${nums[@]}\" | awk\
    \ '{print ($1+0)}')\n\techo \"$nums\"\n    else\n\techo 0\n    fi\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local L=$( echo $1 | sed \"s/ /\"\
    \ ); echo \"${#L}\" | bc\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 4: unterminated `s'' command

    sed: -e expression #1, char 4: unterminated `s'' command

    sed: -e expression #1, char 4: unterminated `s'' command

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( \"${1//$( printf \"%s\\\
    n\" \"${arr[@]}\" | sed 's/ /\\n/g')}\" )\n  local -i i\n  local n=0\n  while\
    \ read x; do\n    (( i )) || i=0 # reset i for each number\n    (( ${#x} > 0 ))\
    \ || x=-${x}; # if x is non-zero\n    (( ${#x} > 0 )) || x=-${x}; # if x is non-zero\n\
    \    (( i % 2 )) && x=\"-${x}\" # if x is odd, then its first sign digit is negative\n\
    \    (( n += ${arr[i]} )) || n++ # increment count for num with first sign digit\n\
    \    (( ${x} >= 0 )) && arr[i]=$(( ${arr[i]}+1 )); # if x is positive, then increment\
    \ count\n  done\n  echo \"$n\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=43 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=16 encoding='utf-8'>
  timestamp: 1660056363
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local array=$1\n  local sum=0\n  local\
    \ element\n  local elements=$(echo $array | tr ' ' \"\\n\")\n  for element in\
    \ $elements; do\n    ((sum+=$element))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local array=\"$1\"\n    local nums=\"\
    \"\n    for element in $array; do\n        if [ \"$element\" -ge 0 ]; then\n \
    \           if [ \"$element\" -le 9 ]; then\n                nums=\"$nums\"$element\n\
    \            elif [ \"$element\" -ge 99 ]; then\n                nums=\"$nums\
    \ $element\"\n            else\n                nums=\"$nums ${element#-}\"\n\
    \            fi\n        fi\n    done\n    echo \"${nums#-}\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  declare -i nums\n  declare -i num_digits\n\
    \  declare -i count\n  local number=$1\n  [[ -z $number ]] && return 0\n  IFS=-\
    \ read -a numbers <<<\"$number\"\n  num=${numbers[*]}\n  num_digits=${#num}\n\
    \  (( num_digits == 0 )) && return 0\n  count=0\n  for num in \"${numbers[@]}\"\
    ; do\n    (( ${num:0:1} == ${num:0:1} * 10 )) && continue\n    (( ${num} > 0 &&\
    \ ${num} < 10 )) || continue\n    (( ${num} > 9 )) && continue\n    (( count++\
    \ ))\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  array=$(echo $1 | sed \"s/^ *//;s/\
    \ *$//;s/ *,/,/g\")\n  sum=0\n  for i in $array; do\n    digit=$(( 10#${i} ))\n\
    \    sum=$(( $sum + $digit ))\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n \
    \   count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n   local nums\n   local sum\n   local\
    \ num_with_sum\n   nums=\"${@}\"\n   # Get a list of all the negative numbers\
    \ first\n   while read num; do\n      if [[ ${num} =~ ^- ]]; then\n         num_with_sum=\"\
    ${num}${sum}\"\n         sum=\"0\"\n      fi\n   done <<< \"$nums\"\n   if [[\
    \ ${#num_with_sum} -gt 0 ]]; then\n      echo \"${#num_with_sum}\"\n   else\n\
    \      echo \"0\"\n   fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local sum=$(\n        if [[ ${1}\
    \ =~ ^-?[0-9]+$ ]] || [[ ${1} =~ ^-?[0-9]+(-[0-9]+)?$ ]]\n        then\n     \
    \       echo $(( ${1} * $(count_nums ${1//-/ })  ))\n        fi\n    )\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr\n  read -r arr\n  arr=(${arr//,/\
    \ })\n  local len=${#arr[@]}\n  local n=0\n  for ((i=0; i<len; i++)); do\n   \
    \ ((n+=${arr[$i]}*${arr[$i]}))\n  done\n  echo $n\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=54 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=23 encoding='utf-8'>
  timestamp: 1660056363
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local n sum\n    local -a nums\n\
    \    sum=0\n    nums=($1)\n    for n in \"${nums[@]}\"; do\n        # skip negative\
    \ numbers since their first sign digit is negative\n        if [[ \"$n\" -lt 0\
    \ ]]; then\n            continue\n        fi\n        if [[ $(( $n % 10 )) -eq\
    \ 0 ]]; then\n            sum=$(( $sum + $n ))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local n sum=$1 sum0=$2 sum1=$3 sum2=$4\
    \ sum3=$5 sum4=$6\n  for ((i = 0; i < $#; i++)); do\n    if test $i -ge 0; then\
    \ if test $n -eq 0; then sum=0; sum0=0; sum1=0; sum2=0; sum3=0; sum4=0; fi; elif\
    \ test $n -eq 1; then\n      sum0=0; sum1=0; fi; elif test $n -eq 2; then\n  \
    \    sum0=0; sum1=0; sum2=0; fi; elif test $n -eq 3; then\n      sum0=0; sum1=0;\
    \ sum2=0; sum3=0; fi; elif test $n -eq 4; then\n      sum0=0; sum1=0; sum2=0;\
    \ sum3=0; sum4=0; fi; elif test $n -eq 5; then\n      sum0=0; sum1=0; sum2=0;\
    \ sum3=0; sum4=0; sum5=0; fi; elif test $n -eq 6; then\n      sum0=0; sum1=0;\
    \ sum2=0; sum3=0; sum4=0; sum5=0; sum6=0; fi; elif test $n -eq 7; then\n     \
    \ sum0=0; sum1=0; sum2=0; sum3=0; sum4=0; sum5=0; sum6=0; sum7=0; fi; elif test\
    \ $n -eq 8; then\n      sum0=0; sum1=0; sum2=0; sum3=0; sum4=0; sum5=0; sum6=0;\
    \ sum7=0; sum8=0; fi; elif test $n -eq 9; then\n      sum0=0; sum1=0; sum2=0;\
    \ sum3=0; sum4=0; sum5=0; sum6=0; sum7=0; sum8=0; sum9=0; fi; elif test $n -eq\
    \ 10; then\n      sum0=0; sum1=0; sum2=0; sum3=0; sum4=0; sum5=0; sum6=0; sum7=0;\
    \ sum8=0; sum9=0; sum10=0; fi; elif test $n -eq 11; then\n      sum0=0; sum1=0;\
    \ sum2=0; sum3=0; sum4=0; sum5=0; sum6=0; sum7=0; sum8=0; \n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw4wwvg60.sh: line 18: syntax error near unexpected token `elif''

    /tmp/tmpw4wwvg60.sh: line 18: `      sum0=0; sum1=0; fi; elif test $n -eq 2; then''

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=( $1 )\n    local\
    \ nums_sum=0\n    for num in ${numbers[*]}; do\n        if [ $num -gt 0 ]; then\n\
    \            (( nums_sum += num / 10 ))\n            nums_sum += (num % 10)\n\
    \        fi\n    done\n    printf \"%s\\n\" \"$nums_sum\"\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4rup9drc.sh: line 20: syntax error near unexpected token `(''

    /tmp/tmp4rup9drc.sh: line 20: `            nums_sum += (num % 10)''

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr\n  arr=$1\n  local n\n \
    \ n=$(echo $arr | wc -l)\n  echo $((n+${arr: -1} | bc))\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4uk2fwty.sh: line 19: n+ | bc: syntax error: operand expected (error
    token is "| bc")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local number\n  local result\n  local\
    \ digit\n\n  echo \"$1\" | while read number ; do\n    result=$((number+0))\n\
    \    digit=$((number%10))\n    if [[ $result -gt 0 ]]; then\n      digit=-$digit\n\
    \    fi\n    echo \"$digit\"\n  done\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpndq4ps4w.sh: line 20: -1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=\"${1}\"\n  local num_digits=\"\
    \"\n  if [ \"${nums}\" = \"\" ]; then\n    echo 0\n  else\n    local count=0\n\
    \    local numbers=\"\"\n    for n in $nums; do\n      if [ \"$n\" = \"\" ]; then\n\
    \        echo \"$num_digits\"\n      else\n        if [ \"$n\" -lt 0 ]; then\n\
    \          local n_digits=$(( (\"$n\" * -1) % 10 ))\n          local n_digits_str=\"\
    ${n_digits:-0}\"\n          numbers=\"$numbers\" \"$n_digits_str\"\n        else\n\
    \          local n_digits=$(( (\"$n\" * 1) % 10 ))\n          local n_digits_str=\"\
    ${n_digits:-0}\"\n          numbers=\"$numbers\" \"$n_digits_str\"\n        fi\n\
    \      fi\n      (( count++ ))\n    done\n    num_digits=\"$(echo $numbers | tr\
    \ \" \" \"\\n\")\"\n    echo \"$num_digits\"\n  fi\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpsh0zfu6q.sh: line 29: 1: command not found

    /tmp/tmpsh0zfu6q.sh: line 29: 2: command not found

    /tmp/tmpsh0zfu6q.sh: line 33: 0: command not found

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr\n    arr=($1)\n    local\
    \ -i i sum\n    sum=$(expr ${#arr[@]} -1 )\n    for ((i = 0; i < (${#arr[@]});\
    \ i++)); do\n        sum=$(( ${arr[i]} + sum ))\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "expr: syntax error: unexpected argument \u2018-1\u2019\nexpr: syntax error:\
    \ unexpected argument \u2018-1\u2019\n"
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=$1 i=0 nums=$2\n    IFS=\"\
    \ \" read -r -a digits <<< \"$nums\"\n    while [[ ${digits[$i]} -gt 0 ]]; do\n\
    \        ((i++))\n    done\n    echo $i\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums sum\n\n  local -a nums_args=()\n\
    \n  while (( $# > 0 )); do\n    if [ \"$1\" == \"--\" ]; then\n      shift\n \
    \     break\n    fi\n\n    case \"$1\" in\n      -[!0-9]*|--) nums_args+=( \"\
    $1\" ) ;;\n      *) nums_args+=( \"${1%%+(-[0-9]*)}\" ) ;;\n    esac\n    shift\n\
    \  done\n\n  local num_arg\n  for num_arg in \"${nums_args[@]}\"; do\n    if [[\
    \ $num_arg =~ ^-([0-9]*)$ ]]; then\n      sum=\"$(( 10#$num_arg ))\"\n      ((\
    \ sum > 0 )) || sum=$(( sum + $(( 10#$num_arg )) ))\n    else\n      sum=0\n \
    \   fi\n    (( sum += $num_arg ))\n  done\n\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2a_xvq6a.sh: line 40: ((: sum +=  : syntax error: operand expected
    (error token is "+=  ")

    /tmp/tmp2a_xvq6a.sh: line 40: ((: sum += -1 -2 0 : syntax error in expression
    (error token is "0 ")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local -n arr=( \"$1\" )\n  local count=0\n\
    \  for num in \"${arr[@]}\"; do\n    (( num < 10 )) && continue\n    (( num <\
    \ 0 ? num: num < num * 10 - num )) && continue\n    (( num > 0 )) && count=$((\
    \ count + 1 ))\n  done\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2kwgg1ev.sh: line 15: local: arr: reference variable cannot be
    an array

    /tmp/tmp2kwgg1ev.sh: line 15: local: arr: reference variable cannot be an array

    /tmp/tmp2kwgg1ev.sh: line 18: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmp2kwgg1ev.sh: line 19: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmp2kwgg1ev.sh: line 20: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmp2kwgg1ev.sh: line 15: local: arr: reference variable cannot be an array

    /tmp/tmp2kwgg1ev.sh: line 18: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmp2kwgg1ev.sh: line 19: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmp2kwgg1ev.sh: line 20: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  array=$1\n  if [[ \"${array}\" !=\
    \ \"\" ]]; then\n    array=($array)\n  fi\n  count=${#array[@]}\n  for (( i=0;\
    \ i<${count}; i++ )); do\n    number=${array[i]}\n    # Count signed digits\n\
    \    digits=${number//-/*}\n    if [[ ${number} -eq 0 ]]; then\n      sum=0\n\
    \    else\n      sum=${number}\n      for (( j=0; j<${#digits}; j++ )); do\n \
    \       sum=$((sum*10)+${digits[j]})\n      done\n    fi\n    if [[ ${sum} -gt\
    \ 0 ]]; then\n      sum=$((sum+1))\n    fi\n    echo \"$sum\"\n  done\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpws0bszkq.sh: command substitution: line 29: syntax error near unexpected
    token `+${digits[j]}''

    /tmp/tmpws0bszkq.sh: command substitution: line 29: `(sum*10)+${digits[j]}''

    /tmp/tmpws0bszkq.sh: command substitution: line 29: syntax error near unexpected
    token `+${digits[j]}''

    /tmp/tmpws0bszkq.sh: command substitution: line 29: `(sum*10)+${digits[j]}''

    /tmp/tmpws0bszkq.sh: command substitution: line 29: syntax error near unexpected
    token `+${digits[j]}''

    /tmp/tmpws0bszkq.sh: command substitution: line 29: `(sum*10)+${digits[j]}''

    /tmp/tmpws0bszkq.sh: command substitution: line 29: syntax error near unexpected
    token `+${digits[j]}''

    /tmp/tmpws0bszkq.sh: command substitution: line 29: `(sum*10)+${digits[j]}''

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local array=\"$1\"\n    local nums=$(echo\
    \ \"$array\" | tr \" \" \"\\n\" | sort --key=1,1 --key=2,2 --key=3,3 --numeric-sort\
    \ --reverse | tr \"\\n\" \" \")\n    local sum\n    local digit\n    for num in\
    \ $nums; do\n        sum=0\n        while (( $# > 0 )); do\n            digit=$((\
    \ ${1%#} % 10 ))\n            (( ${nums#$num} > 0 )) || digit=$(( -$digit ))\n\
    \            (( sum += digit ))\n            shift\n        done\n        echo\
    \ \"$sum\"\n    done\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local sum=0\n    for num in $*;\
    \ do\n        let sum+=$((num % 10))\n    done\n    if test $sum -gt 0; then return\
    \ $sum; else return 0; fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local digits=$1\n    local count\
    \ num\n\n    count=$(echo $digits | tr \" \" \"\\n\" | awk '{sum+=$1};END {print\
    \ sum}')\n    if [ \"$count\" -lt 0 ]; then\n        count=$(echo $digits | tr\
    \ \" \" \"\\n\" | awk '{sum-=$1};END {print sum}')\n        sign=\"-$count\"\n\
    \    else\n        sign=\"\"\n    fi\n\n    echo \"$sign\"\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  # \"local\" creates a local (automatic)\
    \ variable in the current shell\n  # In this case, its a list whose elements are\
    \ the digits of $1.\n  # $1 is a space-separated list\n  local a=$( echo $1 |\
    \ sed 's/^ *//' )\n\n  # echo prints its parameter with newlines included.\n \
    \ echo $a | while read -d \"\"; do\n    # $d is an integer string\n    # read\
    \ returns 0 on successful read\n    # $? stores the exit status of the last command\
    \ executed\n    echo $(( ${#a[@]} - 1 ))\n  done\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local -r array=\"$1\"\n  local total\n\
    \  total=0\n  for number in ${array[@]}; do\n    if [ \"${number}\" -ge 0 ]; then\n\
    \      ((total+=number))\n    fi\n  done\n  echo \"$total\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  # Sift through the array of integers,\
    \ and count how many have\n  # a sum of digits that are > 0.\n  local nums=$1\
    \ num\n  nums=$(echo $nums | tr ' ' ',')\n  nums=$(echo $nums | sed 's/,$//')\n\
    \  for num in $nums; do\n    if [ \"$num\" -gt 0 ]; then\n      ((nums+=1))\n\
    \    fi\n  done\n  echo $nums\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local n=$1\n  local count=$(echo $n\
    \ | grep -E -o \"-?[0-9]+\" | sort -n | uniq -c | sort -nr | awk '{print $2}')\n\
    \  if [ $# -gt 1 ]; then\n    count=$(echo $n | grep -E -o \"-?[0-9]+\" | sort\
    \ -n | uniq -c | sort -nr | awk '{print $1}' | paste -s -d , | awk -F, '{print\
    \ $NF}' | xargs)\n  fi\n  echo $count\n}\n\ncandidate() {\n    count_nums \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'grep: invalid option -- ''?''

    Usage: grep [OPTION]... PATTERNS [FILE]...

    Try ''grep --help'' for more information.

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local n=1\n  local IFS=' '\n  for\
    \ i in $(echo $1 | sed 's/^-\\([0-9]*\\)\\s\\([0-9]*\\)\\s\\([0-9]*\\)$/\\1 \\\
    2/');\n  do\n    ((n+=$(expr $i % 10)))\n    ((n+=$(expr $i / 10 %% 10)))\n  done\n\
    \  echo $n\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local -i n=\"${#1}\" sum=\"${1}\"\n\
    \  if [[ $n -lt 3 ]]; then\n    echo \"0\"\n  else\n    while [[ $n -gt 0 ]];\
    \ do\n      digit=\"$((10#${sum}%10))\"\n      sum=\"$((${sum}-10#${digit}))\"\
    \n      ((n--))\n    done\n  fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpspuibvjq.sh: line 15: local: -1 -2 0: syntax error in expression
    (error token is "0")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    set -- \"$1\" # Convert to an array\n\
    \    count_nums_local \"$@\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2r8a7xi7.sh: line 16: count_nums_local: command not found

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local count=0\n  local x\n  for x\
    \ in $*; do\n    (( $x > 0 )) && continue\n    (( $x < 0 )) && x=`echo $x | cut\
    \ -c1 | sed -e 's/-.*//'`\n    (( $x < 0)) || (( count += 1 ))\n  done\n  echo\
    \ \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuza9rpet.sh: line 20: ((: < 0: syntax error: operand expected (error
    token is "< 0")

    /tmp/tmpuza9rpet.sh: line 20: ((: < 0: syntax error: operand expected (error token
    is "< 0")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local sum=0\n    local nums=$(echo\
    \ $1 | sed 's/ /\\n/g')\n    for num in $nums; do\n        local digit=$(($num\
    \ % 10))\n        if [ $digit -eq 0 ]; then\n            sum=$(($sum+$digit))\n\
    \        elif [ $digit -lt 0 ]; then\n            sum=$(($sum-$digit))\n     \
    \   fi\n        ((sum++))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n \
    \   count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local -n arr=$1\n    local str\n\
    \    str=`IFS= ; echo \"${arr[*]}\"`\n    local n\n    n=0\n    for str in $str;\
    \ do\n\tlet n=$n+${str//[!0-9]/}\n    done\n    echo \"$n\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjgr42i4z.sh: line 15: local: `'': not a valid identifier

    /tmp/tmpjgr42i4z.sh: line 15: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmpjgr42i4z.sh: line 15: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local x=\"$1\" count=0\n    IFS=\"\
    \ \" read -r -a x <<< \"$x\"\n    for n in \"${x[@]}\"; do\n        if (( n !=\
    \ 0 )); then\n            if (( n >= 0 )); then\n                (( count+=( \"\
    $n\" < 0 )) + 1 )\n            else\n                (( count+=( \"$n\" > 0 ))\
    \ + 1 )\n            fi\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkw9g4qob.sh: line 20: syntax error near unexpected token `<''

    /tmp/tmpkw9g4qob.sh: line 20: `( count+=( "$n" < 0 )) ''

    /tmp/tmpkw9g4qob.sh: line 21: syntax error near unexpected token `else''

    /tmp/tmpkw9g4qob.sh: line 21: `            else''

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local i sum count i_list\n    i_list=\"\
    ${1// /$'\\n'}\"\n    sum=0\n    count=0\n    for i in  \"$i_list\"; do\n    \
    \    sum=$(expr \"$sum\" + \"$i\")\n        if [ $i -gt 0 ]; then\n          \
    \  count=$(( count + 1))\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'expr: non-integer argument

    /tmp/tmpnlszqmfb.sh: line 21: [: -gt: unary operator expected

    expr: non-integer argument

    /tmp/tmpnlszqmfb.sh: line 21: [: -1: unary operator expected

    expr: non-integer argument

    /tmp/tmpnlszqmfb.sh: line 21: [: too many arguments

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=($1)\n  local nums=0\n \
    \ for num in \"${arr[@]}\"; do\n    local sum=\"$(( 10#$num ))\"\n    if [[ \"\
    $sum\" -gt 0 ]]; then\n      nums=$((nums + 1))\n    fi\n  done\n  echo \"$nums\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local -a arr\n    arr=( \"$1\" )\n\
    \    # Count how many numbers with sum > 0\n    # are in the array\n    local\
    \ -i cnt=0\n    local d=0\n    while (( ${#arr[@]}) > 0 )) ; do\n        local\
    \ num=\"${arr[0]}\"\n        local sign=\"${num%+}\"\n        local num=\"${num#-}\"\
    \n        local sum=0\n        while (( ${#num} > 0 )); do\n            ((sum+=(\
    \ ${num%+} ))); num=\"${num#-}\"\n        done\n        if (( sign )); then\n\
    \            (( sum = -sum ))\n        fi\n        if (( sum > 0 )); then\n  \
    \          ((cnt++))\n        fi\n        ((d+=sum))\n        arr=( \"${arr[@]:1}\"\
    \ )\n    done\n    echo \"$cnt\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnj3n91u0.sh: line 21: syntax error near unexpected token `)''

    /tmp/tmpnj3n91u0.sh: line 21: `    while (( ${#arr[@]}) > 0 )) ; do''

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=\"$1\"\n\n    # Count\
    \ only positive numbers by setting an accumulator to 0\n    local nums_count=0\
    \ \n\n    # Go through each number in the array, \n    # add it with the accumulator\
    \ if it is > 0, \n    # and increment the accumulator\n    for num in $nums; do\n\
    \        if [ $num -gt 0 ]; then\n            ((nums_count+=num))\n        else\n\
    \            ((nums_count=nums_count+num))\n        fi\n    done\n\n    # Return\
    \ the accumulator\n    echo \"$nums_count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local -r arr=$1\n  [[ -z \"${arr}\"\
    \ ]] && return 0\n  local -a nums\n  local -r sum=0\n  local n=0\n  [[ -z \"${arr}\"\
    \ ]] && return 0\n  local -r digits=${arr#* }\n  read -r -a nums <<<\"$digits\"\
    \ # read each integer into nums\n  for (( i=0; i<${#nums[@]}; i++ )); do\n   \
    \ (( sum += nums[i] ))\n    if (( sum > 0 )); then\n      (( n++ ))\n    fi\n\
    \  done\n  [[ -z \"${n}\" ]] && return 0\n  echo \"${n}\"\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local IFS=\" \"\n    local IFS$IFS\n\
    \    local -a nums\n    local len\n    local -a num\n    local i\n    local j\n\
    \    local sum\n    for ((i=0; i<${#1}; ++i)); do\n        num=${1// /$i}\n  \
    \      if (( ${#num} < 0 )); then\n            num=-$num\n        fi\n       \
    \ j=0\n        while (( j < ${#num}-1 )); do\n            (( j++ ))\n        \
    \    sum=${num:$j:1}\n            (( sum += $(( 10#$num:$j-1 )) ))\n         \
    \   if (( sum > 0 )) ; then\n                (( sum-- ))\n            else\n \
    \               (( sum++ ))\n            fi\n            if (( $j == ${#num} ));\
    \ then\n                (( nums[${#nums}+1]=\"${num}\" ))\n                ((\
    \ sum++ ))\n            fi\n            (( nums[${#nums}] = sum ))\n        done\n\
    \    done\n    for ((i=0; i<${#nums}; ++i)); do\n        echo \"${nums[$i]}\"\n\
    \    done\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local -n numbers=\"$1\"\n  # Split\
    \ by spaces.\n  local -r numbers_arr=(${numbers// / })\n  # Map each number to\
    \ its positive and negative digits.\n  local -r numbers_map=( ${numbers_arr[@]}\
    \ | tr \" \" \"\\n\" | awk '{\n    split($0,a,\"-\")\n    for (i in a) a[i]=a[i]+0\n\
    \    for (i in a) if (a[i]>0) print i\n  }' | sort -u )\n  # Count how many numbers\
    \ have a positive digit and add 1 for negatives.\n  echo \"${#numbers_map[@]}\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcjuloywq.sh: line 19: syntax error near unexpected token `|''

    /tmp/tmpcjuloywq.sh: line 19: `  local -r numbers_map=( ${numbers_arr[@]} | tr
    " " "\n" | awk ''{''

    /tmp/tmpcjuloywq.sh: line 20: syntax error near unexpected token `$0,a,"-"''

    /tmp/tmpcjuloywq.sh: line 20: `    split($0,a,"-")''

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  arr=($1)\n  n=0\n  for i in \"${arr[@]}\"\
    ; do\n    # Count first sign for each number\n    ((n+=$(count_nums \"$i\"))))\n\
    \  done\n  echo \"$n\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2\
    \ 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk50hpx3k.sh: line 19: syntax error near unexpected token `)''

    /tmp/tmpk50hpx3k.sh: line 19: `    ((n+=$(count_nums "$i"))))''

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums i\n  read -a nums <<< \"\
    $1\"\n  local num_sum\n  num_sum=0\n  for ((i=0; i < ${#nums[@]}; i++)); do\n\
    \    ((num_sum+=${nums[$i]}))\n  done\n  if (( num_sum > 0 )); then\n    echo\
    \ \"$num_sum\"\n  else\n    echo \"0\"\n  fi\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local array=\"$1\" count=\"$2\" ret=\"\
    $3\" i\n  local i\n\n  for ((i=0; i < ${#array[@]}; i++)); do\n    case \"${array[i]}\"\
    \ in\n      *[!0-9]*)\n        ((i++))\n        continue\n        ;;\n      *)\n\
    \        ((i++))\n        ((count+=${array[i]}))\n        continue\n        ;;\n\
    \    esac\n  done\n\n  printf \"%s\\n\" \"$count\"\n  (( ret = $count > 0 ))\n\
    \  printf \"%s\\n\" \"${array[@]:$ret}\"\n  echo \"${ret}\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf2s4cd1a.sh: line 26: ((: count+=: syntax error: operand expected
    (error token is "+=")

    /tmp/tmpf2s4cd1a.sh: line 33: ((: ret =  > 0 : syntax error: operand expected
    (error token is "> 0 ")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local array=( $1 )\n    local length=${#array[@]}\n\
    \    local sum=0\n\n    for (( i=0; i<${length}; i++ )); do\n        (( sum +=\
    \ ${array[$i]} ))\n        if (( ${sum} < 0 )); then\n            sum=$(( sum\
    \ + 10 ))\n        fi\n    done\n\n    echo \"$sum\"\n}\n\ncandidate() {\n   \
    \ count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local x\n  x=0\n  for i in $( echo\
    \ $1 | sed \"s/ /\\n/g\" | grep \"^-[0-9]*$\" ); do\n    x=$(( x + i ))\n  done\n\
    \  echo $x\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local -n arr=$1\n  # The array should\
    \ only consist of positive integers\n  [[ -n \"${arr[@]}\" ]] || return 0\n  [[\
    \ \"${arr[0]}\" -gt 0 ]] || return 0\n\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [ $i -lt 0 ]; then\n      i=\"${i#-}\"\n      i=\"${i%%-*}\"\n  \
    \    i=\"${i#*}\"\n    fi\n    (( sum += i ))\n  done\n  echo $(( sum > 0 ))\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6ggjg7mv.sh: line 15: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local array=\"$1\"\n  local total\n\
    \  local count\n\n  total=\"$(echo $array | sed 's/^ *//;s/ *$//;s/ //g')\"\n\
    \  if [[ \"$total\" =~ ^-?[0-9]*$ ]]; then\n    local sign=\"-\"\n  else\n   \
    \ local sign=\"\"\n  fi\n\n  count=\"$(echo $total | sed 's/ //g' | sed 's/-/\
    \ /g' | \\\n             sed 's/^ //g' | sed 's/ +//g' | tr -cd '0-9' | wc -l)\"\
    \n  echo -n \"${sign}${count}\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local a\n  a=$( echo $1 | tr -s '\
    \ ' ' ' | sed -e 's/^ *//g' \\\n          -e 's/ *$//g' -e '/^ *$/d' -e 's/^ *//g'\
    \ -e 's/ .*//g')\n  echo \"$( echo $a | tr ' ' '\\n' | awk '{for (i=1; i<=NF;\
    \ i++) {\n    if ($i>0) {\n      sum=0; while (sum<$i) { sum+=10; };\n      if\
    \ (sum==$i) ++n; else n=0; };\n    }}')\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local sum=0\n  local num_strings=\"\
    \"\n  local numbers=$( echo \"$1\" | tr -s ' ' '\\n' | grep -E '^-?[0-9]+$' )\n\
    \n  while read -r num; do\n    sum=$(( sum + num % 10 ))\n    num_strings=$( echo\
    \ \"$num_strings\" \"\\\"$num\\\"\" )\"\n  done\n\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphrnqpo0w.sh: line 40: unexpected EOF while looking for matching
    `"''

    /tmp/tmphrnqpo0w.sh: line 44: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local array=\"$1\"\n  local sum=0\n\
    \n  for number in $array; do\n    if (( number < 0 )); then\n      number=-$number\n\
    \      sum=$((-sum + number))\n    else\n      (( sum += number ))\n    fi\n \
    \ done\n\n  echo \"$sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local i tmp count\n    local -a\
    \ nums\n    local -n counts\n    local opts=${1:-} ## default options\n    local\
    \ tmp\n    local digit\n    local sign\n\n    local -a num_arr=($1)\n    [[ -n\
    \ $1 ]] || return 0\n\n    [[ -n $opts ]] || opts=()\n\n    if [[ \"${opts[@]}\"\
    \ =~ '^-?[0-9]+$' ]]; then\n        num=${1%\"$1\"} ## strip leading sign from\
    \ numbers\n        opts=${opts#\"-?\"}    ## strip leading sign from options\n\
    \        shift ## drop 1st arg\n        [[ -n $opts ]] || opts=()\n    elif [[\
    \ \"${opts[@]}\" =~ '^-?[0-9]+\\.[0-9]+$' ]]; then\n        num=${1%\"$1\"} ##\
    \ strip leading sign from numbers\n        opts=${opts#\"-?\"}    ## strip leading\
    \ sign from options\n        shift ## drop 1st arg\n        [[ -n $opts ]] ||\
    \ opts=()\n    elif [[ \"${opts[@]}\" =~ '^-?[0-9]+\\.[0-9]+\\.[0-9]+$' ]]; then\n\
    \        num=${1%\"$1\"} ## strip leading sign from numbers\n        opts=${opts#\"\
    -?\"}    ## strip leading sign from options\n        shift ## drop 1st arg\n \
    \       [[ -n $opts ]] || opts=()\n    else\n        echo \"invalid argument:\
    \ $1\"\n        exit 1\n    fi\n\n    sign=\"\"\n    if [[ \"${num}\" =~ '^-?[0-9]+$'\
    \ ]]; then\n        sign=\"-\" ## put sign back if negative numbers\n        num=${num#-}\
    \ ## drop leading sign\n    fi\n\n    if [[ \"$num\" =~ '^-?[0-9]+\\.[0-9]+$'\
    \ ]]; then\n        sum=\"${BASH_REMATCH[1]}\"\n        echo \"$sign $sum\"\n\
    \        return 0\n    elif [[ \"$num\" =~ '^-?[0-9]+\\.[0-9]+\\.[0-9]+$' ]];\
    \ then\n        sum=\"${BASH_REMATCH[1]}\"\n        echo \"$sign $sum\"\n    \
    \    return 0\n    elif [[ \"$num\" =~ '^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$'\
    \ ]]; then\n        sum=\"${BASH_REMATCH[1]}\"\n        echo \"$sign $sum\"\n\
    \        return 0\n    elif [[ \"$num\" =~ '^-?[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+\\\
    .[0-9]+$' ]]; then\n        sum=\"${BASH_REMATCH[1]}\"\n        echo \"\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuv15iabf.sh: line 84: unexpected EOF while looking for matching
    `"''

    /tmp/tmpuv15iabf.sh: line 88: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local numbers=$1\n\n  # Split strings\
    \ into arrays of numbers. Sum numbers into an array, and\n  # output a count of\
    \ elements whose sum > 0\n  local -a nums\n  IFS=' ' read -a nums <<< \"$numbers\"\
    \n  local num_sums\n  num_sums=$(\n    for i in ${nums[@]}; do\n      (( i ==\
    \ $i )) && echo \"$i\"\n    done\n  )\n\n  # Count number of elements whose sum\
    \ > 0\n  local -a counts\n  for i in ${num_sums[@]}; do\n    (( i == $i )) &&\
    \ counts[$i]=\"${counts[$i]}${counts[$i]}\"\n  done\n\n  # Output a count of elements\
    \ whose sum > 0\n  echo \"${#counts[@]}\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbzvugiy8.sh: line 31: counts: bad array subscript

    /tmp/tmpbzvugiy8.sh: line 31: counts: bad array subscript

    /tmp/tmpbzvugiy8.sh: line 31: counts[$i]: bad array subscript

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=( $1 )\n\n  local num\n\
    \  for (( i = 0; i < ${#nums[@]} && i < ${#nums[@]} - 1; i++ )); do\n    num=${nums[i]}\n\
    \  done\n  (( i < ${#nums[@]} && i++ ))\n\n  echo $i\n}\n\ncandidate() {\n   \
    \ count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local items=$1 count=0\n  while IFS=\
    \ read -r item; do\n    (( item = item < 0 ? $((item * -1)) : item ))\n    ((\
    \ item = $((item % 10)  + $((item / 10))))\n    (( item > 0 )) && count=$((count+1))\n\
    \  done <<< \"$items\"\n  echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr3vui14n.sh: line 19: syntax error near unexpected token `(''

    /tmp/tmpr3vui14n.sh: line 19: `    (( item > 0 )) && count=$((count+1))''

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local nums=$1\n  local sum=0\n  local\
    \ nums_split=(${nums//[[:blank:]]})\n  for num in ${nums_split[@]}; do\n    ((\
    \ sum += $num ))\n  done\n  if (( sum > 0 )) ; then\n    echo $(( sum - 1 ))\n\
    \  else\n    echo \"0\"\n  fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local -a nums\n    IFS=$'\\n' nums=($(echo\
    \ \"$1\" | tr ' ' \"\\n\"))\n    local nums_sum=0\n    for num in \"${nums[@]}\"\
    ; do\n        if [[ \"$num\" < 0 ]]; then\n            num=$(echo \"$num\" | awk\
    \ '{print $1 + $2 * -1}')\n        fi\n        nums_sum=$((nums_sum + num))\n\
    \    done\n    echo \"$nums_sum\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$1 num\n    for num in\
    \ $nums; do\n\techo -n \"$(( ($num) % 10 )) \"\n    done\n    echo\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local num_arr=$1 num_str=\"$2\"\n\
    \  local sum=$(( ${num_str//,/ } ))\n  echo $sum\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local array=\"$1\"\n  local sum\n\
    \  local len\n  local nums\n\n  # Remove leading whitespace from the array.\n\
    \  array=\"${array#\"${array%%[![:space:]]*}\"}\"\n  # Convert the array into\
    \ space-separated elements.\n  array=\"${array%\"$array\"}\"\n  array=\"${array#*\
    \ }\"\n\n  # If the array contains no elements, return 0.\n  # The '-0' option\
    \ converts an empty string to 0.\n  if [ -z \"$array\" ]; then\n    echo \"0\"\
    \n    return\n  fi\n\n  # Loop over the elements in the array.\n  nums=$( echo\
    \ \"$array\" | tr \" \" \"\\n\" )\n  for (( i=0; i < ${#nums[@]}; i++ )); do\n\
    \    # Convert the element to a number and subtract off the leading sign.\n  \
    \  sum=$(( ${nums[$i]} - $(echo \"$i\" | bc) ))\n    # If the sum is greater than\
    \ or equal to 0\n    if (( sum > 0 )); then\n      # If the sum is negative, then\
    \ the number had a leading negative\n      # sign.\n      if (( sum < 0 )); then\n\
    \        sum=$(( sum + $(echo \"$i\" | bc) ))\n      fi\n      # Break the loop\
    \ after one iteration.\n      break\n    fi\n  done\n\n  # Return the number of\
    \ elements with the specified sum.\n  echo \"$sum\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local i\n  local j=0\n  for i in $@;\
    \ do\n    echo $((i%9>0 ? j++ : j))\n  done\n  echo $j\n}\n\ncandidate() {\n \
    \   count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2\
    \ -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local -n arr=$1\n    local sum=0\n\
    \    local num\n    for num in ${arr}; do\n        if [[ $num =~ ^(-[0-9]+)$ ]];\
    \ then\n            sum=`expr \"$sum\" + ${BASH_REMATCH[1]}`\n        else\n \
    \           sum=`expr \"$sum\" + ${num}`\n        fi\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp91t7zxpm.sh: line 15: local: `'': not a valid identifier

    /tmp/tmp91t7zxpm.sh: line 15: local: `-1 -2 0'': invalid variable name for name
    reference

    /tmp/tmp91t7zxpm.sh: line 15: local: `1 1 2 -2 3 4 5'': invalid variable name
    for name reference

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  echo \"$@\" | awk -v ORS='' '{\n \
    \   # Read a line from stdin into $1 variable\n    while read i; do\n      # If\
    \ the first character is a '-' then we ignore it for now.\n      if [ \"${i%%-*}\"\
    \ != \"$i\" ]; then\n        # If the number starts with a '-', then it is a negative\
    \ number\n        # and we add its first signed digit to count its digits\n  \
    \      if [ \"${i#*-}\" != \"$i\" ]; then\n          sum=$(( $i + $( echo \"$i\"\
    |sed 's/^-//' ) ))\n        else\n          sum=$(( $i + $( echo \"$i\"|sed 's/^-/-/'\
    \ ) ))\n        fi\n        # If this number has its first digit as a '-', then\
    \ we ignore it too\n        if [ \"${sum#*-}\" != \"$sum\" ]; then\n         \
    \ break\n        fi\n      else\n        break\n      fi\n    done\n    # Print\
    \ out how many numbers have their first digit greater than 0\n    # or non-existing.\n\
    \    print -- \"$sum\"\n  }'\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'awk: cmd. line:3:     while read i; do

    awk: cmd. line:3:           ^ syntax error

    awk: cmd. line:5:       if [ "${i%%-*}" != "$i" ]; then

    awk: cmd. line:5:          ^ syntax error

    awk: cmd. line:5:       if [ "${i%%-*}" != "$i" ]; then

    awk: cmd. line:5:                               ^ syntax error

    awk: cmd. line:8:         if [ "${i#*-}" != "$i" ]; then

    awk: cmd. line:8:            ^ syntax error

    awk: cmd. line:8:         if [ "${i#*-}" != "$i" ]; then

    awk: cmd. line:8:                                ^ syntax error

    awk: cmd. line:9:           sum=$(( $i + $( echo "$i"|sed s/^-// ) ))

    awk: cmd. line:9:                                     ^ syntax error

    awk: cmd. line:9:           sum=$(( $i + $( echo "$i"|sed s/^-// ) ))

    awk: cmd. line:9:                                                  ^ syntax error

    awk: cmd. line:9:           sum=$(( $i + $( echo "$i"|sed s/^-// ) ))

    awk: cmd. line:9:                                                   ^ syntax error

    awk: cmd. line:10:           sum=$(( $i + $( echo "$i"|sed s/^-// ) ))

    awk: cmd. line:10:                                                    ^ unexpected
    newline or end of string

    awk: cmd. line:11:           sum=$(( $i + $( echo "$i"|sed s/^-/-/ ) ))

    awk: cmd. line:11:                                     ^ syntax error

    awk: cmd. line:11:           sum=$(( $i + $( echo "$i"|sed s/^-/-/ ) ))

    awk: cmd. line:11:                                                   ^ syntax
    error

    awk: cmd. line:11:           sum=$(( $i + $( echo "$i"|sed s/^-/-/ ) ))

    awk: cmd. line:11:                                                    ^ syntax
    error

    awk: cmd. line:12:           sum=$(( $i + $( echo "$i"|sed s/^-/-/ ) ))

    awk: cmd. line:12:                                                     ^ unexpected
    newline or end of string

    awk: cmd. line:14:         if [ "${sum#*-}" != "$sum" ]; then

    awk: cmd. line:14:                                    ^ syntax error

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local -n arr=$1\n    local sum=0\n\
    \    local n=0\n    for num in $arr; do\n        (( sum += (num % 10)) )) || continue\n\
    \        n=$((n+1))\n        (( sum += (num % 10)) )) || continue\n        n=$((n+1))\n\
    \    done\n    echo \"$n\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeknq7s8k.sh: line 19: syntax error near unexpected token `(''

    /tmp/tmpeknq7s8k.sh: line 19: `( sum += (num % 10)) ''

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local array=\"$1\"\n    local -a\
    \ counter=() num\n    local sign=${array[0]}\n\n    if [[ \"$sign\" == -* ]];\
    \ then\n        sign=\"-$sign\"\n        array=( \"${array[@]/#-}\" )\n    fi\n\
    \n    for num in \"${array[@]}\"; do\n        if [[ \"$num\" == * ]]; then\n \
    \           num=\"$sign$num\"\n        fi\n        if (( ${#num} > 0 && ! (( ${#num}\
    \ % 4 )); )); then\n            ((counter[${#counter[@]}]++))\n        fi\n  \
    \  done\n\n    local count=\"$(( ${#counter[@]} ))\"\n    echo \"$count\"\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4or89hlp.sh: line 28: ((: 0 > 0 && ! (( 0 % 4 )); : syntax error:
    operand expected (error token is "; ")

    /tmp/tmp4or89hlp.sh: line 28: ((: 14 > 0 && ! (( 14 % 4 )); : syntax error: operand
    expected (error token is "; ")

    /tmp/tmp4or89hlp.sh: line 28: ((: 28 > 0 && ! (( 28 % 4 )); : syntax error: operand
    expected (error token is "; ")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local numbers=( \"$1\" )\n  local\
    \ sum=0\n  local count=0\n  for i in \"${!numbers[@]}\"; do\n    (( i % 2 )) &&\
    \ sum+=${numbers[$i]}\n    (( i / 2 )) && sum+=($(( ${numbers[$((i % 2))]} + ${numbers[$((i\
    \ / 2))]} * 10 )))\n  done\n  (( sum >= 0 )) && count=$(( sum + count ))\n  echo\
    \ $count\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\"\
    \ ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"\
    1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\"\
    \ ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local NUMS=$1\n    local NUM=$(expr\
    \ \" $NUMS \" : '[0-9]\\+')\n    echo \"$((${NUM//[^0-9]/ } + ${NUM//[-]/ } ))\"\
    \n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n \
    \   [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9\
    \ -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n\
    \    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"\
    0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local -n arr=$1\n    local i sum\
    \ tmp\n    sum=0\n\n    for i in \"${arr[@]}\"; do\n        ((tmp=${i}+sum))\n\
    \        sum=$((tmp%10))\n    done\n\n    ((sum && ((sum > 9)) || sum == 0))\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpuudo8h23.sh: line 15: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local IFS=\n  local -a arr=( \"$1\"\
    \ )\n  local -i num=0\n  local -a result=()\n  local -i length=0\n\n  for element\
    \ in \"${arr[@]}\"; do\n    if [ $element -lt 0 ]; then\n      length=$(( length\
    \ + $(count_digits_negative \"$element\") ))\n    else\n      num=$(( num + $(count_digits_positive\
    \ \"$element\") ))\n    fi\n  done\n\n  for (( i=0; i<$(( $length + 1 )); i++\
    \ )); do\n    result+=( $(get_digit $i \"$num\") )\n  done\n\n  printf \"%i\\\
    n\" \"$result\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp39myjd4h.sh: line 22: [: -lt: unary operator expected

    /tmp/tmp39myjd4h.sh: line 25: count_digits_positive: command not found

    /tmp/tmp39myjd4h.sh: line 25: num +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local digits=$1 sum=0\n    local\
    \ i nums max\n    IFS=' ' read -r digits < <(echo \"$digits\")\n    num=$(echo\
    \ \"$digits\" | tr \" \" \"\\n\")\n    for i in $num; do\n        sum=$(($sum\
    \ + $i))\n    done\n    max=$(($sum))\n    IFS=' '\n    for i in $nums; do\n \
    \       if (( $i == $max )); then\n            echo $((++$count))\n          \
    \  break\n        fi\n    done\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$(IFS=' ' read -a\
    \ array <<< \"$1\")\n    local num_sum=0\n    local sign\n\n    local i\n    for\
    \ ((i=0; i<${#array[@]}; ++i)); do\n        local num=${array[$i]}\n        local\
    \ num_digits=$(echo \"$num\" | sed -e 's/\\([-+]\\)0\\+/\\1/')\n        local\
    \ num_sum+=$num_digits\n        if (( num < 0 )) ; then\n            num_sum+=\"\
    -$num_digits\"\n        fi\n    done\n    echo \"$num_sum\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local array=( \"$@\" )\n    local\
    \ sum=0\n    for x in \"${array[@]}\"; do\n        if (( x > 0 )); then\n    \
    \        (( sum += x ))\n        else\n            (( sum += x ))\n          \
    \  (( sum *= -1 ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp45fiy242.sh: line 18: ((: -1 -2 0: syntax error in expression (error
    token is "0")

    /tmp/tmp45fiy242.sh: line 21: ((: -1 -2 0: syntax error in expression (error token
    is "0")

    /tmp/tmp45fiy242.sh: line 18: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    /tmp/tmp45fiy242.sh: line 21: ((: 1 1 2 -2 3 4 5: syntax error in expression (error
    token is "1 2 -2 3 4 5")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n\tlocal IFS=' '\n\tlocal nums\n\tnums=\"\
    $1\"\n\t# nums=$(echo \" $nums\" | sed -e 's/^ *//g' -e 's/ *$//g')\n\tnums=\"\
    $nums\"\n\tnums=\"$(echo \"$nums\" | sed -e 's/^ *//g' -e 's/ *$//g')\"\n\tnums=\"\
    $nums\" | sed -e \"s/^ *//\" -e \"s/ *$//\"\n\tnums=\"$nums\" | sed -e \"s/^ *//\"\
    \ -e \"s/ *$//\"\n\tnums=\"$nums\" | sed -e \"s/^ *//\" -e \"s/ *$//\"\n\tnums=\"\
    $nums\" | sed -e \"s/^ *//\" -e \"s/ *$//\"\n\tnums=\"$nums\" | sed -e \"s/^ *//\"\
    \ -e \"s/ *$//\"\n\tnums=\"$nums\" | sed -e \"s/^ *//\" -e \"s/ *$//\"\n\tnums=\"\
    $nums\" | sed -e \"s/^ *//\" -e \"s/ *$//\"\n\tnums=\"$nums\" | sed -e \"s/^ *//\"\
    \ -e \"s/ *$//\"\n\tnums=\"$nums\" | sed -e \"s/^ *//\" -e \"s/ *$//\"\n\tnums=\"\
    $nums\" | sed -e \"s/^ *//\" -e \"s/ *$//\"\n\tnums=\"$nums\" | sed -e \"s/^ *//\"\
    \ -e \"s/ *$//\"\n\tnums=\"$nums\" | sed -e \"s/^ *//\" -e \"s/ *$//\"\n\tnums=\"\
    $nums\" | sed -e \"s/^ *//\" -e \"s/ *$//\"\n\tnums=\"$nums\" | sed -e \"s/^ *//\"\
    \ -e \"s/ *$//\"\n\tnums=\"$nums\" | sed -e \"s/^ *//\" -e \"s/ *$//\"\n\tnums=\"\
    $nums\" | sed -e \"s/^ *//\" -e \"s/ *$//\"\n\tnums=\"$nums\" | sed -e \"s/^ *//\"\
    \ -e \"s/ *$//\"\n\tnums=\"$nums\" | sed -e \"s/^ *//\" -e \"s/ *$//\"\n\tnums=\"\
    $nums\" | sed -e \"s/^ *//\" -e \"\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpye0oksj3.sh: line 55: unexpected EOF while looking for matching
    `"''

    /tmp/tmpye0oksj3.sh: line 59: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=$@\n\n  echo \"$(echo $arr\
    \ | tr \" \" \"\\n\" | sort -nr | sed 's/^/0/' | uniq -c | sort -nr -k 2 | sed\
    \ 's/^/-1/' | awk '{print $2}')\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=$1\n    local cnt=0\n\
    \    local digit\n    local d\n\n    for d in \"${arr[@]}\"; do\n        [ \"\
    ${d}\" = \"-${d}\" ] && d=0\n        [ \"$d\" -lt 0 ] && d=$(echo \"${d}\" | awk\
    \ '{print substr($0, 0, 1);}')\n        if (( \"${d}\" < 10 )); then\n       \
    \     digit=$(( ${d} ))\n        else\n            digit=$(( 10 + ${d} ))\n  \
    \      fi\n        (( cnt += 1 ))\n    done\n    echo \"${cnt}\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1u7z6424.sh: line 22: [: : integer expression expected

    /tmp/tmp1u7z6424.sh: line 23: ((: < 10 : syntax error: operand expected (error
    token is "< 10 ")

    /tmp/tmp1u7z6424.sh: line 26: 10 +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    local count=0\n\
    \    for number in ${numbers}; do\n        # Only count negative numbers\n   \
    \     if [[ ${number} == -* ]]; then\n            # Count first positive number\
    \ that has all its digits in descending order\n            if [[ ${number} ==\
    \ *+ ]]; then\n                if [[ $number -le 10 ]]; then\n               \
    \     (( count++ ))\n                fi\n            else\n                if\
    \ [[ $number -le 9 ]]; then\n                    (( count++ ))\n             \
    \   fi\n            fi\n        else\n            # Count the number of positive\
    \ numbers which have all their digits\n            # in ascending order\n    \
    \        if [[ $number -le 9 ]]; then\n                (( count++ ))\n       \
    \     fi\n        fi\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local digits=$(( $(echo $1 | tr \"\
    \ \" \"\\n\" | sort | uniq | wc -l) ))\n  local digits_sum=$(( $(echo $1 | tr\
    \ \" \" \"\\n\" | sort | uniq | awk '{sum+=$1}END{print sum}' ) ))\n  local digits_sum=$((\
    \ $(echo $1 | tr \" \" \"\\n\" | sort | uniq | awk '{sum+=$1}END{print sum}' )\
    \ ))\n  if [ \"$digits_sum\" -gt \"$digits\" ]; then\n    echo $digits_sum\n \
    \ else\n    echo $digits\n  fi\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( \"${@}\" )\n  local n=0\n\
    \  for n in \"${arr[@]}\"; do\n    (( n > 0 )) || n=-1\n    (( n == 0 )) && continue\n\
    \    (( (n<0) && n )) || n+=10\n    (( (n<10) )) && n+=0\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local numbers=( \"$@\" )\n  local\
    \ nums=$(echo \"${numbers[*]}\" | tr \" \" \"\\n\" | sort -n | uniq -u | wc -l)\n\
    \  echo \"$nums\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=\"$1\"\n    local sum=0\n\
    \n    # for each number in the list, check if it has digits > 0\n    for num in\
    \ $nums; do\n        if [[ $num =~ ^-?[0-9]+$ ]]; then\n            sum=$(( ${num}\
    \ * 10 ))\n        else\n            sum=$(( ${sum} + $num ))\n        fi\n  \
    \  done\n\n    echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"\
    -1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n   \
    \ [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98\
    \ -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n\
    \    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local sum=0\n  for i in $@; do\n \
    \   ((sum+=i))\n  done\n  echo $((sum%10))\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: -1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local i count=0\n  for ((i=0; i <\
    \ ${#1}; i++)); do\n    case ${1}[i] in\n      0) count=$((count + 1)); break;;\n\
    \      *) count=$((count + $(count_nums ${1}[$((i-1))]})));;\n    esac\n  done\n\
    \  echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=28 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=20 encoding='utf-8'>
  timestamp: 1660056363
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local i sum\n  for i in $(echo $1\
    \ | sed 's/[, ]/ /g'); do\n    sum=0\n    for (( j=0 ; j<i ; j++ )); do\n    \
    \  if [ $i -gt 0 ]; then\n        sum=$(( $sum + ${1:$j:1} ))\n      fi\n    done\n\
    \    if [ $sum -gt 0 ]; then\n      echo $i\n      break\n    fi\n  done\n}\n\n\
    candidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local array=\"$1\"\n\n  local count=0\n\
    \  IFS=' ' read -r -a array <<< \"$array\"\n  for num in \"${array[@]}\"; do\n\
    \    (( $(digits=\"$num\") - $(digits=\"$((num % 10))\") )) || \\\n      ( ((num\
    \ > 0) && (num < 10)) && break ;;\n    done ;\n  echo \"$count\"\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnfisami8.sh: line 21: syntax error near unexpected token `;;''

    /tmp/tmpnfisami8.sh: line 21: `      ( ((num > 0) && (num < 10)) && break ;;''

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local i\n  local nums=( \"$@\" )\n\
    \  local num\n  local nums_len=\"${#nums[@]}\"\n  local count\n  local i\n\n \
    \ for (( i = 1; i <= nums_len; i++ )); do\n    num=${nums[$i]}\n    if [[ $num\
    \ != -* && $(( num / 10 )) -gt 0 ]]; then\n      (( count++))\n    fi\n  done\n\
    \  echo \"$count\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local nums=$(echo \"$1\" | sed 's/\
    \ /\\n/g')\n    local count=0\n    while IFS='' read -r num rest; do\n       \
    \ num=$(echo \"$num\" | sed -e 's/^-//g' -e 's/^//g' -e 's/^-\\([0-9]\\+\\)\\\
    ([0-9]\\+\\)$/\\1/')\n        if [ \"$num\" -gt 0 ]; then\n            (( count+=num+0\
    \ ))\n        else\n            (( count+=num+${num%%\\*} ))\n        fi\n   \
    \ done <<< \"$nums\"\n    echo \"$count\"\n}\n\ncandidate() {\n    count_nums\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n   \
    \ [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\"\
    ) = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\"\
    ) = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_317qf65.sh: line 19: [: : integer expression expected

    /tmp/tmp_317qf65.sh: line 22: ((: count+=num+ : syntax error: operand expected
    (error token is "+ ")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local -n nums=\"${1#-}\"\n    local\
    \ nums\n    local num\n    local n\n    local i\n    # First sort list so the\
    \ most negative numbers are first,\n    # then convert to an array.\n    read\
    \ -r -a nums < <(printf \"%s\\n\" \"${nums}\" | sort -nr )\n    for num in \"\
    ${nums[@]}\"; do\n        (( n += num % 10 ))\n    done\n    if [[ $n -gt 0 ]];\
    \ then\n        n=${n#-}\n    else\n        n=0\n    fi\n    for (( i = 0; i <\
    \ ${#nums[@]}; i++ )); do\n        if [[ ${nums[$i]} -gt 0 && -${nums[$i]} -eq\
    \ $n ]]; then\n            echo \"$((++n))\"\n            break\n        fi\n\
    \    done\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpl_zdq27w.sh: line 15: local: `'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local digits=$1 nums=\"\"\n\n  while\
    \ read digit; do\n    (( nums+=${digit//[!0-9]}))\n  done <<< \"$1\"\n\n  (( nums=${nums//-/+}\
    \ ))\n\n  echo $(( ${#digits[@]} <= ${#nums} ? ${#nums} : ${#digits[@]} ))\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl4990pc2.sh: line 18: ((: nums+=: syntax error: operand expected
    (error token is "+=")

    /tmp/tmpl4990pc2.sh: line 21: ((: nums= : syntax error: operand expected (error
    token is "= ")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local n=0\n    for i in $(cat \"\
    $1\" | tr \" \" \":\"); do\n        n=$(($n + $(count_digits $i)))\n    done\n\
    \    echo \"$n\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'cat: '''': No such file or directory

    cat: invalid option -- ''1''

    Try ''cat --help'' for more information.

    cat: ''1 1 2 -2 3 4 5'': No such file or directory

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  if [[ \"$1\" = \"--help\" ]] ; then\n\
    \    echo \"count_nums: count number of positive integers in given list\"\n  \
    \  echo \"$0 [--help]\"\n    return\n  fi\n\n  local arr=( \"$@\" )\n  local sum=0\n\
    \  local nums=()\n  local i\n  for ((i=0; i < \"${#arr[@]}\"; i++)); do\n    local\
    \ j\n    for ((j=0; j < i; j++)) ; do\n      if [[ ${arr[j]+0} -le 0 ]] ; then\n\
    \        arr[j]=$(neg_num \"${arr[j]}\")\n      fi\n    done\n    local num=\"\
    ${arr[i]}\"\n    sum=$((sum + num))\n    nums+=(\"${num}\")\n  done\n  echo $((\
    \ ${sum} ))\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"\
    0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate\
    \ \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"\
    4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate\
    \ \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpv0ys1m9f.sh: line 33: -1 -2 0: syntax error in expression (error
    token is "0")

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n   local arr=\"$1\"\n   local len=\"\
    ${#arr}\"\n   local count\n\n   if [ -z \"$len\" ]; then\n      return 0\n   fi\n\
    \n   local i\n   local sum\n\n   local sign=\"${arr[0]}\"\n   arr=\"${arr[@]:1}\"\
    \n\n   for ((i = 1; i <= len; i++)); do\n      sum=\"$((sum + ${arr[i]}))\"\n\
    \      if [ \"$sum\" -gt 0 ]; then\n         if [ \"$sign\" -gt 0 ]; then\n  \
    \          echo \"$i\"\n         else\n            echo \"$i\"\n         fi\n\
    \         break\n      fi\n      sign=\"$((sum / 10 + sign))\"\n      if [ \"\
    $sign\" -gt 0 ]; then\n         echo \"$i\"\n         break\n      fi\n   done\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local numbers=$1\n    echo $(( $(\
    \ echo $numbers | tr \" \" \"\\n\" | awk '{sum+=$1} END {print sum}' ) ))\n}\n\
    \ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=( $1 )\n    local count=0\n\
    \    for i in \"${arr[@]}\"; do\n        [[ $i =~ ^-?[0-9]+$ ]] || continue\n\
    \        ((count += $i))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n\
    \    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local arr=( \"$@\" )\n  local -a ret=()\n\
    \  local n\n  for n in \"${arr[@]}\"; do\n    (( ${#n} )) && let ret[${#ret[@]}-1]++\n\
    \  done\n  echo \"${ret[@]}\"\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n  local sum=$(echo \"${1}\" | tr -cd\
    \ '[0-9]' | sed -E 's/^ *//g; s/ *$//g; s/ *$//g; s/^ *//g')\n  case \"$sum\"\
    \ in\n    0) echo 0;;\n    *) echo $(echo \"$sum\" | bc -l);;\n  esac\n}\n\ncandidate()\
    \ {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"\
    1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n\
    \    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12\
    \ 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local arr=\"$1\"\n    local len=${#arr}\n\
    \    local sum=0\n    local idx\n    # Iterate over each element and sum up its\
    \ digits\n    for ((idx = 0; idx < len; idx++)); do\n        ((sum += (${arr[idx]}*${arr[idx]#?})));\
    \ # $(( )) is preferred over `(( ))`\n    done\n    # Return 0 if sum of digits\
    \ is 0\n    ((sum == 0)) && return 0\n    # Otherwise, return the number of elements\
    \ with sum greater than\n    # zero\n    [ \"$sum\" -gt 0 ] || return $((len-1))\n\
    }\n\ncandidate() {\n    count_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate\
    \ \"1 1 2 -2 3 4 5\") = \"6\" ]]\n    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"\
    5\" ]]\n    [[ $(candidate \"1 100 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate\
    \ \"12 23 34 -45 -56 0\") = \"5\" ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358
- exit_code: 2
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n    local i sum=0 nums=\"${1:-}\"\n\
    \    for (( i=0; i < ${#nums}\"; i++ )); do\n        sum=$(( $sum + ${nums:$i:1}\
    \ ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    count_nums \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp00fht3gp.sh: line 35: unexpected EOF while looking for matching
    `"''

    /tmp/tmp00fht3gp.sh: line 39: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660056358
- exit_code: 1
  program: "#!/bin/bash\n# Write a function count_nums which takes an array of integers\
    \ and returns\n# the number of elements which has a sum of digits > 0.\n# If a\
    \ number is negative, then its first signed digit will be negative:\n# e.g. -123\
    \ has signed digits -1, 2, and 3.\n# >>> $(count_nums \"\")\n# \"0\"\n# >>> $(count_nums\
    \ \"-1 11 -11\")\n# \"1\"\n# >>> $(count_nums \"1 1 2\")\n# \"3\"\n#\n# $1 is\
    \ a space-separated list\ncount_nums() {\n   local ns=\"${1:-}\"\n   for n in\
    \ $ns; do\n      if [[ $n =~ ^[+-]?[0-9]+$ ]]; then\n         n=$(expr \"$n\"\
    \ : '^[+-]?[0-9]+$')\n         if (( n != 0 && n != 1 )) ; then\n            echo\
    \ \"$n\"\n         fi\n      fi\n   done\n}\n\ncandidate() {\n    count_nums \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate\
    \ \"-1 -2 0\") = \"0\" ]]\n    [[ $(candidate \"1 1 2 -2 3 4 5\") = \"6\" ]]\n\
    \    [[ $(candidate \"1 6 9 -6 0 1 5\") = \"5\" ]]\n    [[ $(candidate \"1 100\
    \ 98 -7 1 -1\") = \"4\" ]]\n    [[ $(candidate \"12 23 34 -45 -56 0\") = \"5\"\
    \ ]]\n    [[ $(candidate \"0 1\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660056358

language: sh
name: HumanEval_55_fib
results:
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -lt 2 ] ; then\n    echo \"${1}\"\n  else\n\
    \    echo $( (( ${1} * $1 + $2 ) %  ${1} )) $( (( ${2} * $1 + $2 ) %  ${2} ))\n\
    \  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwwq44aud.sh: command substitution: line 16: syntax error near unexpected
    token `%''

    /tmp/tmpwwq44aud.sh: command substitution: line 16: ` (( ${1} * $1 + $2 ) %  ${1}
    ))''

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"1\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    elif [ \"$1\" -eq\
    \ \"2\" ]; then\n        echo \"2\"\n    elif [ \"$1\" -le \"10\" ]; then\n  \
    \      echo \"$(fib $(($1 - 1))) + $(fib $(($1 - 1)))\"\n    else\n        echo\
    \ \"0\"\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [[ ! \"$1\" =~ ^[0-9]+$ ]]; then\n    echo \"Must provide\
    \ an integer.\"\n    exit 1\n  fi\n\n  local n=\"$1\"\n  if [[ ! \"$n\" =~ ^[0-9]+$\
    \ ]]; then\n    echo \"Must provide an integer.\"\n    exit 1\n  fi\n\n  local\
    \ n\n  ((n>=1)) && echo \"$(( $(fib \"$((n-2)+1)\") + $(fib \"$((n-1)\")) ))\"\
    \n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoyizjy8n.sh: line 24: unexpected EOF while looking for matching
    `)''

    /tmp/tmpoyizjy8n.sh: line 41: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  local a=1\n  local b=0\n  while (( $n )) ;do\n\
    \    (( $a <= $n )) && break\n    (( $a > $n )) && break\n    a=$(($a + $b))\n\
    \    b=$(($a + $b))\n  done\n  echo \"$b\"\n}\n\ncandidate() {\n    fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tif [ $# -ne 1 ]; then\n\t\techo \"usage: $(basename $0)\
    \ n\"\n\t\texit 1\n\tfi\n\tlocal n=\"$1\"\n\tlocal a=1\n\tlocal b=1\n\tlocal c=$((\
    \ $n - 1 ))\n\twhile [ $c -ge 0 ]; do\n\t\tlocal d=$(( $a + $b ))\n\t\tlocal e=$((\
    \ $a + $c ))\n\t\ta=$b\n\t\tb=$c\n\t\tc=$(( $c + 1 ))\n\t\techo \"$d\"\n\t\techo\
    \ \"$e\"\n\tdone\n\techo \"$d\"\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=15 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=7 encoding='utf-8'>
  timestamp: 1660059396
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    if [ $n -le 0 ]; then\n        return\
    \ 1\n    elif [ $n -eq 1 ]; then\n        return 1\n    elif [ $n -eq 2 ]; then\n\
    \        return 1\n    fi\n    local a=1\n    local b=1\n    while [ $n -gt 1\
    \ ]; do\n        local c=`expr $a + $b`\n        local d=`expr $b + $a`\n    \
    \    local e=`expr $c + $d`\n        a=$b\n        b=$c\n        echo $e\n   \
    \     n=$((n-1))\n    done\n    echo $e\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" = \"1\" ] || [ \"$1\" = \"0\" ] ; then\n \
    \       echo \"1\"\n    elif [ \"$1\" = \"2\" ] ; then\n        echo \"1\"\n \
    \   elif [ \"$1\" = \"3\" ] ; then\n        echo \"2\"\n    elif [ \"$1\" = \"\
    4\" ] ; then\n        echo \"3\"\n    elif [ \"$1\" = \"5\" ] ; then\n       \
    \ echo \"5\"\n    elif [ \"$1\" = \"6\" ] ; then\n        echo \"8\"\n    elif\
    \ [ \"$1\" = \"7\" ] ; then\n        echo \"13\"\n    elif [ \"$1\" = \"8\" ]\
    \ ; then\n        echo \"21\"\n    elif [ \"$1\" = \"9\" ] ; then\n        echo\
    \ \"34\"\n    elif [ \"$1\" = \"10\" ] ; then\n        echo \"55\"\n    else\n\
    \        echo \"Error\"\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -eq 1 ]; then\n    echo \"1\"\n  elif [ \"$1\"\
    \ -eq 2 ]; then\n    echo \"2\"\n  elif [ \"$1\" -le \"$2\" ]; then\n    fib \"\
    $(fib \"$(( $1 - 1 ))\")\" \"$(( 1 + $1 ))\"\n  else\n    fib \"$(( $2 - 1 ))\"\
    \ \"$(( 1 + $2 ))\"\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp89ka53jr.sh: line 16: [: : integer expression expected

    /tmp/tmp89ka53jr.sh: line 19: 1 +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [[ $1 =~ ^-?[0-9]+$ ]]; then\n    local n=$1\n    if\
    \ [[ $n -gt 1 ]]; then\n      echo $(fib $((n - 1))) \\\n    | awk -v n=\"$n\"\
    \ -v a=\"1\" -v b=\"1\" -v res=\"1\" \\\n      'BEGIN {\n         while (n > 1)\
    \ {\n            res=a+b\n            x=res\n            a=b\n            b=x\n\
    \            n--\n         }\n         print res\n      }'\n    else\n      echo\
    \ $1\n    fi\n  else\n    echo \"$1 is not a number\"\n  fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    (($1 > 1)) && echo \"0 1\" && return 1\n    local n=$1\n\
    \    local a=0\n    local b=1\n    local c=1\n    while (( n >= 3 )) ; do\n  \
    \      (( n = n - 2 ))\n        (( c = a + b ))\n        (( a = b ))\n       \
    \ (( b = c ))\n        (( n = n - 2 ))\n    done\n    (( n = n - 1 ))\n    echo\
    \ $c\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=\"$1\"\n    if [ \"${n}\" -lt \"2\" ]; then\n\
    \        echo \"$n is not a positive integer\"\n        exit 1\n    fi\n    local\
    \ a=1\n    local b=2\n    local f\n    while [ $n -gt \"$b\" ]; do\n        echo\
    \ $(( $a + $b ))\n        a=$b\n        b=$(( $a + $b ))\n        (( n -= 1 ))\n\
    \    done\n    echo \"$b\"\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\t# Initialize variables\n\tlocal n=$1\n\tlocal i a b c\n\t\
    \n\t# Handle negative n\n\tif [[ $n -lt 0 ]]; then\n\t\techo \"Error: negative\
    \ integer required\"\n\t\texit 1\n\tfi\n\n\t# Handle single arguments\n\tif [[\
    \ $# -eq 1 ]]; then\n\t\tif [[ $1 == \"0\" ]]; then\n\t\t\techo \"0\"\n\t\telse\n\
    \t\t\techo \"$(( $1 * 2 ))\"\n\t\tfi\n\t\n\t# Handle multiple arguments\n\telif\
    \ [[ $# -gt 1 ]]; then\n\t\ta=$1\n\t\tb=$2\n\t\t\n\t\t# Initialize loop\n\t\t\
    i=1\n\n\t\t# Loop over args\n\t\twhile [ $i -le $n ]; do\n\t\t\t# Calculate Fibonacci\
    \ number\n\t\t\tc=$(( b + a ))\n\t\t\t\n\t\t\t# Write to stdout\n\t\t\techo \"\
    $c\"\n\t\t\t\n\t\t\t# Save a & b\n\t\t\ta=$b\n\t\t\tb=$c\n\t\t\t\n\t\t\t# Increment\
    \ i\n\t\t\ti=$(( $i + 1 ))\n\t\tdone\n\tfi\n}\n\ncandidate() {\n    fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"${#}\" -eq \"1\" ]; then\n    echo 1\n  elif [ \"\
    ${#}\" -eq \"2\" ]; then\n    echo $1\n  else\n    local i=1\n    local fib\n\
    \    fib=$(mktemp)\n    while [ $i -lt $1 ]; do\n      fib=$(mktemp)\n      echo\
    \ \"$i\"\n      i=$(expr $i + 1)\n      echo $(expr $fib \\* $i)\n    done\n \
    \ fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ -z \"$1\" ] ; then\n        echo \"Need a number\"\
    \n        exit 1\n    fi\n    if [[ $1 == -* ]] ; then\n        echo \"Need a\
    \ positive integer\"\n        exit 1\n    fi\n    if [[ $1 -gt 1 ]] ; then\n \
    \       echo \"Need a positive integer, not $1\"\n        exit 1\n    fi\n\n \
    \   [ $1 -eq 0 ] && (echo 0 ; exit 0)\n    [ $1 -eq 1 ] && (echo 1 ; exit 0)\n\
    \    [ $1 -eq 2 ] && (echo 1 ; exit 0)\n\n    fib2=$(( $fib2 - $(( $fib2 - $fib1\
    \ )) ))\n    fib1=$fib2\n    fib3=$(( $fib3 +$fib1 ))\n    echo $fib3\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  local prev\n  prev=$(echo $n | awk '{ print\
    \ $1 }')\n  [ $n -lt 2 ] && (echo \"$prev\" || echo \"$prev+$prev\" || echo \"\
    $prev+$prev+$prev\" || echo \"$prev+$prev+$prev+$prev+$prev\")\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tif [ $# -lt 1 ]\n\tthen\n\t\techo \"\"\n\t\treturn\n\tfi\n\
    \n\t# The Fibonacci sequence\n\tn=1\n\ta=1\n\tb=1\n\n\t# Fibonacci sequence\n\t\
    for i in $(seq 1 $1)\n\tdo\n\t\tc=`expr $a + $b`\n\t\techo \"$c\"\n\t\ta=$b\n\t\
    \tb=$c\n\tdone\n\n\techo \"\"\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ -z \"$1\" ]; then\n    echo \"$0: missing 1st argument\"\
    \n    return 1\n  fi\n  if [ \"$1\" -gt \"1\" ] || [ \"$1\" -lt \"1\" ]; then\n\
    \    echo \"$0: not an interger $1\"\n    return 1\n  fi\n  a=1\n  b=1\n  if [\
    \ \"$1\" -gt \"2\" ]; then\n    while [ \"$a\" -le \"$1\" ]; do\n      c=`expr\
    \ $a + $b`\n      a=`expr $b`\n      b=`expr $c`\n    done\n  fi\n  echo $b\n\
    }\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1 i=0 ret=1 curr\n    while (( i <= n )); do\n\
    \        curr=$(( ret+curr ))\n        (( ++i ))\n        (( ret = curr ))\n \
    \   done\n    echo \"$ret\"\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if (( $# != 1 )); then\n        echo \"Usage: $(basename\
    \ \"$0\") N\" >&2\n        return 1\n    fi\n    local n=\"$1\"\n    local a=0\
    \ b=1 i\n    while [ \"$b\" -lt \"$n\" ]; do\n        i=$((i+1))\n        a=$b\n\
    \        b=$a+$b\n    done\n    echo \"$b\"\n}\n\ncandidate() {\n    fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmfy7z39w.sh: line 18: [: 1+1: integer expression expected

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  local cur\n  cur=0\n  while [ $((cur<n)) -eq\
    \ 1 ]; do\n    local tmp=$cur\n    cur=$((cur+cur))\n    echo $tmp\n  done\n}\n\
    \ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=37 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=34 encoding='utf-8'>
  timestamp: 1660059396
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=\"$1\"\n  if [ $n -lt 2 ]\n  then\n    echo \"$1\"\
    \n  else\n    echo \"$(( $1 + $( fib $( echo $n | bc ) ) ))\"\n  fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=28 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=22 encoding='utf-8'>
  timestamp: 1660059396
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  n=$1\n  [ $n -eq 1 ] && return 1\n  [ $n -eq 0 ] && return\
    \ 0\n\n  fibs=$(echo $n | cut -d \"-\" -f 1)\n\n  [ $(expr $fibs - $(nth)$(echo\
    \ $fibs - 1|bc)) -eq 1 ] && return 1\n  [ $(expr $fibs - $(nth)$(echo $fibs -\
    \ 1|bc)) -eq 0 ] && return 0\n  [ $(($(expr $fibs - $(nth)$(echo $fibs - 1|bc))))\
    \ -le $(expr $fibs - $(nth)$(echo $fibs - 1|bc)) ] && fibs+=$(expr $fibs - $(nth)$(echo\
    \ $fibs - 1|bc))\n  [ $(($(expr $fibs - $(nth)$(echo $fibs - 1|bc)))) -gt $(expr\
    \ $fibs - $(nth)$(echo $fibs - 1|bc)) ] && fibs+=$(expr $fibs - $(nth)$(echo $fibs\
    \ - 1|bc))\n  [ $(($(expr $fibs - $(nth)$(echo $fibs - 1|bc)))) -eq $(expr $fibs\
    \ - $(nth)$(echo $fibs - 1|bc)) ] && return $(($(expr $fibs - $(nth)$(echo $fibs\
    \ - 1|bc))+$(expr $fibs - $((nth)$(echo $fibs - 1|bc)))));\n\n  # Recurse in tail\
    \ position, starting at n-1\n  fibs $(echo $n | cut -d \"-\" -f 1) $(($(expr $fibs\
    \ - $(nth)$(echo $fibs - 1|bc))+$(expr $fibs - $((nth)$(echo $fibs - 1|bc)))))\
    \ $(($(expr $fibs - $(nth)$(echo $fibs - 1|bc))+$(expr $fibs - $((nth)$(echo $fibs\
    \ - 1|bc))))) $(($(expr $fibs - $(nth)$(echo $fibs - 1|bc))+$(expr $fibs - $((nth)$(echo\
    \ $fibs - 1|bc))))) $(($(expr $fibs - $(nth)$(echo $fibs - 1|bc))+$(expr $fibs\
    \ - $((nth)$(echo $fibs - 1|bc))))) $(($(expr $fibs - $(nth)$(echo $fibs - 1|bc))+$(expr\
    \ $fibs - $((nth)$(echo $fib\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjnml5o4q.sh: line 25: unexpected EOF while looking for matching
    `)''

    /tmp/tmpjnml5o4q.sh: line 42: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tlocal n=$1 result=0 1 2 3 4 5 6 7 8\n\t((n<=1)) && return\
    \ 1\n\t((n>1)) && return $(fib \"$((n-1))\") + $(fib \"$((n-2))\")\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnu5zdg_8.sh: line 12: local: `1'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `2'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `3'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `4'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `5'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `6'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `7'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `8'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `1'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `2'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `3'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `4'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `5'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `6'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `7'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `8'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `1'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `2'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `3'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `4'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `5'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `6'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `7'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `8'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `1'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `2'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `3'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `4'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `5'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `6'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: local: `7'': not a valid identifier

    /tmp/tmpnu5zdg_8.sh: line 12: loc'
  stdout: ''
  timestamp: 1660059391
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tlocal n a b c\n\tread n || exit 1\n\ta=1\n\tb=1\n\tc=0\n\
    \twhile ((c < $n)) ; do\n\t\tc=$(( c + a + b ))\n\t\ta=$(( b + a ))\n\t\tb=$c\n\
    \tdone\n\techo $c\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=11 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=8 encoding='utf-8'>
  timestamp: 1660059396
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local a=1\n    local b=1\n    local ret\n\
    \    while [ $n -gt 0 ]; do\n        local tmp=$a\n        a=$b\n        b=$tmp\n\
    \        (( n-- ))\n    done\n    ret=$b\n    echo \"$ret\"\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [[ \"$1\" -lt 0 || \"$1\" -gt 2 ]]; then\n    echo \"\
    ERROR: fib($1) is not an int from 0 to 2\"\n  fi\n  local n=$1\n  local a=1\n\
    \  local b=2\n  local c\n  c=0\n  while [ $n -gt 0 ]; do\n    c=$(( ${c}+$b ))\n\
    \    local d=$((a+b))\n    local e=$(( $d+$b ))\n    a=$b\n    b=$d\n    n=$(($n-1))\n\
    \    c=$(($c+$e))\n  done\n  echo $c\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  ((n<2) ? echo : ((n<4) ? echo ${1-1} : ((n<6)\
    \ ? echo ${1-2} : ((n<8) ? echo ${1-3} : echo ${1-4})))))\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpopb0fbh1.sh: line 13: syntax error near unexpected token `?''

    /tmp/tmpopb0fbh1.sh: line 13: `  ((n<2) ? echo : ((n<4) ? echo ${1-1} : ((n<6)
    ? echo ${1-2} : ((n<8) ? echo ${1-3} : echo ${1-4})))))''

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -eq 1 ]\n    then\n        echo 1\n    elif [\
    \ $1 -eq 2 ]\n    then\n        echo 1\n    elif [ $1 -le 7 ]\n    then\n    \
    \    echo $(( ($(fib \"${2:-1}\") \\* ${2:-1}) ))\n    else\n        echo $((\
    \ ($(fib \"${3:-1}\") \\* ${3:-1}) ))\n    fi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppr7dmwwm.sh: line 22: (1 \* 1) : syntax error: invalid arithmetic
    operator (error token is "\* 1) ")

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tlocal NUM=\"${1}\"\n\tif [[ ${NUM} = \"1\" ]]; then\n\t\t\
    echo \"1\"\n\telif [[ ${NUM} = \"2\" ]]; then\n\t\techo \"2\"\n\telif [[ ${NUM}\
    \ = \"5\" ]]; then\n\t\techo \"5\"\n\telif [[ ${NUM} -gt 5 ]]; then\n\t\tlocal\
    \ N=\"${NUM}\"\n\t\twhile [[ ${N} -gt 5 ]];\n\t\t\tdo\n\t\t\t\tlocal N=\"${N}-1\"\
    \n\t\t\t\tlocal NUM=\"${NUM}+${N}\"\n\t\t\tdone\n\t\techo ${NUM}\n\telse\n\t\t\
    echo \"$1\"\n\tfi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  (( n > 2 )) && echo \"$(fib $((n - 1)) + $(fib\
    \ $((n - 2)))\"\n  (( n > 1 )) && echo \"$((fib $n - 1)) + $((fib $n - 2))\"\n\
    \  echo \"$(( fib $n + 1 ))\"\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf6mx9s6b.sh: line 28: unexpected EOF while looking for matching
    `"''

    /tmp/tmpf6mx9s6b.sh: line 32: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local a=$1\n    local n=$2\n    local b\n    if (( $n\
    \ > 0 )); then\n\tb=$((a+b))\n\techo \"$b\"\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp20kk9pnp.sh: line 15: ((: > 0 : syntax error: operand expected
    (error token is "> 0 ")

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local i fib_n=$(( $#+ 1))\n  if [ $fib_n -gt 1 ]; then\n\
    \    i=1\n  elif [ $fib_n -eq 1 ]; then\n    echo 1\n  else\n    echo 0\n  fi\n\
    \  while [ $i -le $fib_n ]; do\n    echo `expr $1 + $2`\n    i=$(( $i + 1 ))\n\
    \  done\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "expr: syntax error: missing argument after \u2018+\u2019\nexpr: syntax\
    \ error: missing argument after \u2018+\u2019\n"
  stdout: ''
  timestamp: 1660059391
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local i n a b c\n  i=\"$1\"\n  ((a=$b),(b=1),(c=$a+$b))\n\
    \  printf '%i' \"$c\"\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxydifw62.sh: line 14: syntax error near unexpected token `,''

    /tmp/tmpxydifw62.sh: line 14: `  ((a=$b),(b=1),(c=$a+$b))''

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=${1}; shift;\n  local a=0; local b=1; local c;\n\
    \  while [ $n -gt 0 ]; do\n    c=$(bc -l <<< \"$a + $b\");\n    echo $c\n    a=$b;\n\
    \    b=$c;\n    shift;\n    n --;\n  done;\n  echo $b;\n}\n\ncandidate() {\n \
    \   fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=31 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=20 encoding='utf-8'>
  timestamp: 1660059396
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\t# This can be optimised more by not storing values in variables.\n\
    \t# But I am lazy.\n\tn=$1\n\t((n<2)) && return 1\n\t((n==2)) && return 1\n\t\
    ((n==3)) && return 2\n\tlet a=3\n\tlet b=5\n\tlet ret=$b\n\twhile [ $n -gt $((a-1))\
    \ ]; do\n\t\tlet x=$((a+b+1))\n\t\tlet ret=$((ret+x))\n\t\tlet a=b\n\t\tlet b=x\n\
    \tdone\n\techo $ret\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  if [[ $n -eq 1 ]]; then\n    echo \"1\"\n\
    \  else\n    local a=1\n    local b=0\n    while [[ $a -le $n ]]; do\n      local\
    \ c=$(($a + $b))\n      a=$b\n      b=$c\n    done\n    echo \"$b\"\n  fi\n}\n\
    \ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ $# -lt 1 ]; then\n    echo \"Usage: $0 [<n>]\"\n  \
    \  exit 1\n  fi\n  local n=$1\n  if [ $n -gt $(( $n - 2 )) ]; then\n    echo \"\
    Value of $1 must be greater than 2\"\n    exit 1\n  fi\n  if [ $n -eq 1 ]; then\n\
    \    echo \"0\"\n  else\n    echo \"$(( $n - 1 )) $(( $n - 2 ))\"\n  fi\n}\n\n\
    candidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"\
    8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"\
    12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n a b c\n  n=$1\n  if [ $n -eq 1 ]; then return; fi\n\
    \  a=0\n  b=1\n  while [ $n -gt 1 ]; do\n    local tmp $((b+a))\n    a=$b\n  \
    \  b=$tmp\n    n=$((n-1))\n  done\n  echo $b\n}\n\ncandidate() {\n    fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp63jndyf0.sh: line 18: local: `1'': not a valid identifier

    /tmp/tmp63jndyf0.sh: line 18: local: `1'': not a valid identifier

    /tmp/tmp63jndyf0.sh: line 18: local: `0'': not a valid identifier

    /tmp/tmp63jndyf0.sh: line 18: local: `0'': not a valid identifier

    /tmp/tmp63jndyf0.sh: line 18: local: `0'': not a valid identifier

    /tmp/tmp63jndyf0.sh: line 18: local: `0'': not a valid identifier

    /tmp/tmp63jndyf0.sh: line 18: local: `0'': not a valid identifier

    /tmp/tmp63jndyf0.sh: line 18: local: `0'': not a valid identifier

    /tmp/tmp63jndyf0.sh: line 18: local: `0'': not a valid identifier

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local -r n=$1\n    local -r fib=$(( 2 ))\n    local -r\
    \ prev=$(( 0 ))\n    while [ $n -gt 1 ]; do\n        fib-=$(( fib + ( prev + prev\
    \ ) ))\n        prev=$fib\n        fibo=\"$(printf \"%${n}d\" $fib)\"\n      \
    \  echo -n $fibo\n        (( n = n - 1 ))\n    done\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpt696np5g.sh: line 16: fib-=2: command not found

    /tmp/tmpt696np5g.sh: line 17: prev: readonly variable

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tlocal n=$1\n\tif [[ $n -lt 1 || $n -gt 3 ]]; then\n\t\t\
    echo \"Invalid input '$n'!\" >&2\n\t\texit 1\n\tfi\n\tif [ $n == 1 ]; then\n\t\
    \techo 1\n\telse\n\t\tlocal first=$(fib \"${n-1}\")\n\t\tlocal second=$(fib \"\
    ${n-2}\")\n\t\techo $(($first + $second))\n\tfi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: 'Invalid input ''10''!

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -lt 2 -o \"$1\" -gt \"8\" ] ; then\n     \
    \   echo \"ERROR\"\n    elif [ \"$1\" -eq \"1\" ]; then\n        echo 1\n    elif\
    \ [ \"$1\" -eq \"2\" ]; then\n        echo 1\n    elif [ \"$1\" -eq \"3\" ]; then\n\
    \        echo 2\n    elif [ \"$1\" -le \"8\" ]; then\n        echo $(( $(fib \"\
    $(($1 - 2))\") + $(fib \"$(($1 - 1))\" ) ))\n    else\n        echo \"ERROR\"\n\
    \    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local i=$1\n  local prev curr num\n  prev=curr=$((1+i))\n\
    \  while [ $prev -gt $curr ]; do\n    prev=$curr\n    curr=$((prev+curr))\n  done\n\
    \  num=$curr\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpgah4rriu.sh: line 15: [: curr=11: unary operator expected

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\t# Return nth fibonacci number\n\tlocal n=$1\n\tif [[ $n\
    \ -lt 1 || n -gt 8 ]]; then\n\t\techo \"$n is out of range [1-8]\"\n\t\texit 1\n\
    \tfi\n\tlocal a b\n\ta=1\n\tb=1\n\tfor (( c=1; c<=n; c++ )); do\n\t\tlocal tmp=$((\
    \ a+b ))\n\t\ta=b\n\t\tb=$tmp\n\tdone\n\techo \"$b\"\n}\n\ncandidate() {\n   \
    \ fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local a=1\n    local b=1\n    while [[\
    \ $n -gt 1 ]] ; do\n        local tmp=$a\n        a=$b\n        b=$tmp\n     \
    \   echo \"$b\"\n        let n--\n    done\n}\n\ncandidate() {\n    fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  if [ $n -lt 2 ]; then\n    echo $n\n  else\n\
    \    echo \"$(fib \"$(( n - 1 ))\")$(( n - 1 ))\"\n  fi\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tlocal n=$1\n\tif [ -z \"$n\" ] ; then\n\t\treturn 1\n\t\
    fi\n\n\tif [ $n -eq 0 ] || [ $n -eq 1 ] ; then\n\t\treturn $1\n\tfi\n\tlocal a=1\n\
    \tlocal b=1\n\twhile [ $n -gt 0 ] ; do\n\t\tlocal a=$a\n\t\tlocal b=$b\n\t\tn=$((n\
    \ - 1))\n\tdone\n\treturn $b\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tlet \"n=$1\"\n\tlet \"a=1\"\n\tlet \"b=2\"\n\twhile [ $n\
    \ -gt 1 ]; do\n\t\tlet \"c=`expr $a + $b`\"\n\t\tlet \"a=`expr $b`\"\n\t\tlet\
    \ \"b=`expr $c`\"\n\t\tlet \"n=`expr $n - 1`\"\n\tdone\n\techo \"$c\"\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tlocal i f a\n\ti=$1\n\tf=1\n\ta=1\n\twhile [ $i -gt 0 ];\
    \ do\n\t\tlet f+=$a\n\t\tlet a-=1\n\t\ti=$((i-1))\n\tdone\n\techo $f\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1; shift\n  local a=0; local b=1\n  while [ $n\
    \ -gt 1 ]; do\n    local c=$(bc -l <<< \"$a + $b\")\n    a=$b; b=$c\n    local\
    \ d=$n-1\n    local e=$((n%2))\n    n=$((n-e))\n    if [ $d -eq 0 ]; then\n  \
    \    echo \"$c\"\n    elif [ $e -eq 0 ]; then\n      echo \"$c\"\n    else\n \
    \     echo \"$d\"\n    fi\n  done\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=25 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=27 encoding='utf-8'>
  timestamp: 1660059396
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=\"$1\"\n  if [ \"$n\" -eq 1 ]; then\n    echo \"\
    1\"\n  elif [ \"$n\" -eq 2 ]; then\n    echo \"1\"\n  else\n    echo \"$(( $((\
    \ $(fib \"${n-1}\") )) +  $(fib \"${n-2}\") ))\"\n  fi\n}\n\ncandidate() {\n \
    \   fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=43 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=38 encoding='utf-8'>
  timestamp: 1660059396
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n a\n  local n0 n1 next\n  n=$1\n  if [ $n -lt 2 ]\n\
    \  then\n    return 1\n  fi\n  a=$(fib $(( $n - 1 )))\n  next=$(fib $(( $n - 2\
    \ )))\n  n0=$(echo $a | cut -c1)\n  n1=$(echo $next | cut -c1)\n  echo $(( ( $n0\
    \ + $n1 ) / 2 ))\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcd4_9u7h.sh: line 23: (  +  ) / 2 : syntax error: operand expected
    (error token is ") / 2 ")

    /tmp/tmpcd4_9u7h.sh: line 23: (  +  ) / 2 : syntax error: operand expected (error
    token is ") / 2 ")

    /tmp/tmpcd4_9u7h.sh: line 23: (  +  ) / 2 : syntax error: operand expected (error
    token is ") / 2 ")

    /tmp/tmpcd4_9u7h.sh: line 23: (  +  ) / 2 : syntax error: operand expected (error
    token is ") / 2 ")

    /tmp/tmpcd4_9u7h.sh: line 23: (  +  ) / 2 : syntax error: operand expected (error
    token is ") / 2 ")

    /tmp/tmpcd4_9u7h.sh: line 23: (  +  ) / 2 : syntax error: operand expected (error
    token is ") / 2 ")

    /tmp/tmpcd4_9u7h.sh: line 23: (  +  ) / 2 : syntax error: operand expected (error
    token is ") / 2 ")

    /tmp/tmpcd4_9u7h.sh: line 23: (  +  ) / 2 : syntax error: operand expected (error
    token is ") / 2 ")

    /tmp/tmpcd4_9u7h.sh: line 23: (  +  ) / 2 : syntax error: operand expected (error
    token is ") / 2 ")

    /tmp/tmpcd4_9u7h.sh: line 23: (  +  ) / 2 : syntax error: operand expected (error
    token is ") / 2 ")

    /tmp/tmpcd4_9u7h.sh: line 23: (  +  ) / 2 : syntax error: operand expected (error
    token is ") / 2 ")

    /tmp/tmpcd4_9u7h.sh: line 23: (  +  ) / 2 : syntax error: operand expected (error
    token is ") / 2 ")

    /tmp/tmpcd4_9u7h.sh: line 23: (  +  ) / 2 : syntax error: operand expected (error
    token is ") / 2 ")

    /tmp/tmpcd4_9u7h.sh: line 23: (  +  ) / 2 : syntax error: operand expected (error
    token is ") / 2 ")

    /tmp/tmpcd4_9u7h.sh: line 23: (  +  ) / 2 : syntax error: operand expected (error
    token is ") / 2 ")

    /tmp/tmpcd4_9u7h.sh: line 23: (  +  ) / 2 : syntax error: operand expected (error
    token is ") / 2 ")

    /tmp/tmpcd4_9u7h.sh: line 23: (  +  ) / 2 : syntax error: operand expected (error
    token is ") / 2 ")

    /tmp/tmpcd4_9u7h.sh: line 23: (  +  ) / 2 : syntax error: operand expected (error
    token is ") / 2 ")

    /tmp/tmpcd4_9u7h.sh: line 23: (  +  ) / 2 : syntax error: operand expected (error
    token is ") / 2 ")

    /tmp/tmpcd4_9u7h.sh: line 23: (  +  ) / 2 : syntax error: operand expected (error
    token is ") / 2 ")

    /tmp/tmpcd4_9u7h.sh: line 23'
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local -n num=$1; shift\n  local -n a=${1:-0};\n  (( num\
    \ > 1 )) && printf -v b '%s %s' \"${a}\" \"$(fib $(($num - 1)))\" || echo $a\n\
    }\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpyhsqdazn.sh: line 12: local: `10'': invalid variable name for name
    reference

    /tmp/tmpyhsqdazn.sh: line 13: local: `0'': invalid variable name for name reference

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local x\n  x=0\n  y=1\n  z=$1\n  while [ $z -lt $2 ]\n \
    \ do\n    echo $y\n    y=$((x+y))\n    x=$z\n    z=$((x+z))\n  done\n  echo $z\n\
    }\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpspjcq598.sh: line 16: [: 10: unary operator expected

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n a b\n  n=$1\n  a=1\n  b=1\n  while [ \"$n\" -gt\
    \ 0 ]; do\n    a=$b\n    b=$(( $a + $b ))\n    n=$(( $n - 1 ))\n  done\n  echo\
    \ $a\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n a b\n  local c=$1\n  shift\n  a=1\n  b=1\n  while\
    \ [ $c -gt 0 ]; do\n    local tmp=$((a + b))\n    c=$((b - a))\n    a=$tmp\n \
    \   b=$tmp\n  done\n  echo $b\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local prev curr out\n    if [ $n -eq 1\
    \ ]; then return 1; fi\n    prev=$(fib $((n - 1)))\n    curr=$(fib $((n - 2)))\n\
    \    out=$((prev + curr))\n    return $out\n}\n\ncandidate() {\n    fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=41 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=55 encoding='utf-8'>
  timestamp: 1660059396
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  [ $n -eq 0 ] && return 0 # handle 0 as special\
    \ case\n  [ $n -eq 1 ] && return 1\n  [ $n -eq 2 ] && return 1\n  local a=$((${!n:0:1}+${!n:1:1}))\n\
    \  local b=$((${!n:2:1}+${!n:3:1}))\n  echo $((${a}+${b}))\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcc7ek0f0.sh: line 16: +: syntax error: operand expected (error
    token is "+")

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  ((n < 2)) && echo \"$n\" || {\n    local a=1\n\
    \    local b=2\n    while ((n < 3)) ; do\n      ((a+=$a))\n      ((b-=$b))\n \
    \     ((n++))\n    done\n    echo \"$b\"\n  }\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" = \"--help\" ] || [ \"$1\" = \"-h\" ] || [ \"\
    $1\" = \"-?\" ] ; then\n    echo \"Usage: $(basename \"$0\") [--version]\n   \
    \ --version         print the version number.\"\n    exit 0\n  fi\n\n  local -i\
    \ n=$1\n  local -i a=0\n  local -i b=1\n\n  while [ $n -gt 0 ]\n  do\n    (( n\
    \ -= 2 ))\n    local -i c=$((a+b))\n    local -i d=$(expr $a + $b)\n    local\
    \ -i e=$c\n    local -i f=$d\n\n    (( $(( n - 1 )) )) && echo \"$c\"\n    ((\
    \ $(( n - 1 )) )) && echo \"$d\"\n    (( $(( n - 1 )) )) && echo \"$e\"\n    ((\
    \ $(( n - 1 )) )) && echo \"$f\"\n  done\n  echo $e\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=\"$1\"\n  (( n > 1 )) && return $(( $fib ($n - 2)\
    \ + $fib ($n - 1) ))\n  (( n < 2 )) && return $1\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tif [ $1 -gt 3 ]; then\n\t\techo $(($2 * $2 + $3 * $3 + $1\
    \ * $1))\n\telif [ $1 -gt 2 ]; then\n\t\techo $(($2 * $2 + $1 * $1))\n\telif [\
    \ $1 -gt 1 ]; then\n\t\techo $(($2 * $2 + 1))\n\telse\n\t\techo 1\n\tfi\n}\n\n\
    candidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"\
    8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"\
    12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvi_2adq3.sh: line 13: *  +  *  + 10 * 10: syntax error: operand
    expected (error token is "*  +  *  + 10 * 10")

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tlocal n=$1\n\tlocal prev=$(seq 1 $2 | head -1)\n\techo $(seq\
    \ $2 $n | sed -n \"1,$prevp\" | paste -s -d \"\\n\") $prev\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'sed: -e expression #1, char 2: unexpected `,''

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local -r n=$1\n    local -a a=(${!n})\n    local -r b=${a[1]}\n\
    \    local -r c=${a[0]}\n    while (( ${#a[@]} > 1 )); do\n        local -r temp=${a[${#a[@]}\
    \ - 1]}\n        local -a a=(${a[0]} ${a[${#a[@]} - 1]} ${a[1]})\n        local\
    \ -r c=$(expr ${c} + ${temp})\n        local -r b=${a[1]}\n        local -r temp=${a[${#a[@]}\
    \ - 1]}\n        local -a a=(${a[0]} ${a[${#a[@]} - 1]} ${a[1]})\n        local\
    \ -r b=${a[1]}\n    done\n    echo \"${c}\"\n}\n\ncandidate() {\n    fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ $# -ne 1 ]\n  then\n    echo \"Usage: $0 integer\"\
    \ >&2\n    return 1\n  fi\n  local n=$1\n  local a=1\n  local b=1\n  while [ \"\
    $n\" -gt 0 ]\n  do\n    local p=$(( $a * $b ))\n    local q=$(( $a + $b ))\n \
    \   local r=$(( $a + $b ))\n    local s=$(( $n - 1 ))\n    a=$b\n    b=$q\n  \
    \  n=$s\n  done\n  echo $r\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -lt 2 ]; then\n        echo $1;\n    else\n  \
    \      fib \"$(( $1 - 1 ))\" + $(( $1 + 1 ))\n    fi\n}\n\ncandidate() {\n   \
    \ fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ $1 -eq 0 ]; then\n    1\n  else\n    $(fib \"$(($1\
    \ - 1))\" $(($1 + 1)))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqmhzbp5o.sh: line 13: 1: command not found

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local number=$1\n    local n\n    if [[ $number -eq 0\
    \ ]] || [[ $number -eq 1 ]]; then\n        echo \"0\"\n    else\n        for n\
    \ in $(seq 0 $(($number - 1)))\n        do\n            echo $(expr $(( $((n +\
    \ 2)) + $((n + 1))))\n        done\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4gz0tin7.sh: line 19: unexpected EOF while looking for matching
    `)''

    /tmp/tmp4gz0tin7.sh: line 38: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local -n n=$1\n  local a=$2 b=$3 c=$4\n  (( $n )) || return\
    \ $a\n  (( $n > $4 )) && return $c\n  (( $n < 3 )) && return $a\n  local -n i=$n\n\
    \  local -n j=3\n  (( $i % 2 )) && i=$(( $i + 1 ))\n  local -n k=$(( i + j ))\n\
    \  (( $k >= $n )) && return $a\n  local -n j=$j + 1\n  (( $j <= $n )) && return\
    \ $b\n  local -n k=$(( $k + 2 ))\n  (( $k >= $n )) && return $c\n  local -n j=$j\
    \ + 1\n  (( $j <= $n )) && return $a\n  local -n i=$(( $i + 1 ))\n  (( $i >= $n\
    \ )) && return $b\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmprhi7ougx.sh: line 12: local: `10'': invalid variable name for name
    reference

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1 prev next\n  (( n = n - 1 ))\n  if [ $n -eq 0\
    \ ]; then\n    return\n  elif [ $n -eq 1 ]; then\n    prev = 0\n    next = 1\n\
    \  elif [ $n -eq 2 ]; then\n    prev = 1\n    next = 1\n  else\n    prev = 0\n\
    \    next = $((prev + next))\n  fi\n  echo $next\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwx9unigh.sh: line 23: prev: command not found

    /tmp/tmpwx9unigh.sh: line 24: next: command not found

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  [ $# -eq 1 ] && printf '[ERROR] $(fib %s) - No number as\
    \ argument\\n' \"$1\" 1>&2 && return 1\n  local n=\"$1\"\n  [[ \"$n\" =~ ^[0-9]+$\
    \ ]] && printf '[ERROR] $(fib %s) - Input number should be an integer.\\n' \"\
    $n\" 1>&2 && return 1\n  local a=1\n  local b=0\n  local c=0\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  while (( n )); do\n\
    \    p=$a\n    q=$b\n    r=$c\n    s=$p+$q\n    t=$r+$s\n    u=$t+$v\n    v=$t\n\
    \    a=$u\n    b=$v\n    c=$r\n    (( n = n - 1 ))\n  done\n  printf \"$c\"\n\
    }\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '[ERROR] $(fib 10) - No number as argument

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    [ -z $1 ] || [[ ! \"$1\" =~ ^-?[0-9]+$ ]] && echo \"Not\
    \ an integer: $(basename $0)\" && exit 1 || return 0\n    local a b\n    a=1\n\
    \    b=1\n    for (( i = 1 ; i <= $1 ; i++ ))\n    do\n        echo $b && b=$((a+b))\n\
    \        a=$((a+1))\n    done\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tif [ \"$1\" -eq \"0\" ]; then\n\t\techo \"0\"\n\telse\n\t\
    \tif [ \"$1\" -eq \"1\" ]; then\n\t\t\techo \"1\"\n\t\telse\n\t\t\tif [ \"$1\"\
    \ -eq \"2\" ]; then\n\t\t\t\techo \"2\"\n\t\t\telse\n\t\t\t\tlocal i\n\t\t\t\t\
    i=$(( $1 / 2 ))\n\t\t\t\tlet \"i %= $2\"\n\t\t\t\tfib_$1=$(( fib($i) + fib($i-1)))\n\
    \t\t\tfi\n\t\tfi\n\tfi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpck_b2tdq.sh: line 23: let: i %= : syntax error: operand expected
    (error token is "%= ")

    /tmp/tmpck_b2tdq.sh: line 24: fib(5) + fib(5-1): syntax error in expression (error
    token is "(5) + fib(5-1)")

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -gt 0 -o \"$1\" -eq 1 ]; then\n    echo \"$((\
    \ $1 < 2 ? $1 : ($1 ^ 1 - $1 ^ 2 )))\"\n  else\n    echo \"$(( $2 < 2 ? $2 : ($2\
    \ ^ 2 - $2 ^ 1 )))\"\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n a b\n  (( n = $1 ))\n  if [ $n -lt 2 ]; then\n \
    \   echo \"1\"\n  else\n    a=1\n    b=1\n    while [ $n -gt 2 ]; do\n      ((a=$b))\n\
    \      ((b=a))\n      (( n-- ))\n    done\n    echo \"$b\"\n  fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local i\n  local fib\n  i=\"$1\"\n  if [[ $(( i < 0 )) ==\
    \ 0 ]]; then\n    echo \"$i must be greater than 0\"\n    return 1\n  fi\n  fib=\"\
    $(IFS=$'\\n' read -ra fib < <(for ((i = 1; i <= $(( i + 1 )); i++)); do echo \"\
    $i\"; done))\"\n  if [[ ${#fib[@]} -eq 1 ]]; then\n    echo \"${fib[0]}\"\n  \
    \  return 0\n  else\n    local tmp=\"${fib[1]}\"\n    for ((i = 2; i <= ${#fib[@]};\
    \ i++)); do\n      ((tmp += \"${fib[i - 1]}\"));\n      fib[i]=$tmp\n    done\n\
    \    echo \"${fib[@]}\"\n  }\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr02f7xth.sh: line 30: syntax error near unexpected token `}''

    /tmp/tmpr02f7xth.sh: line 30: `  }''

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if (( $# < 2 )); then\n        echo \"ERROR: Fibonacci\
    \ number only has one argument.\"\n        exit 1\n    fi\n    \n    local n=$1\n\
    \    \n    if [ $n -eq 0 ] ; then \n        return 0\n    fi\n    \n    local\
    \ a=$(( ${!n} - 1 ))\n    local b=$(( ${!n} -1 ))\n    local c=1\n    \n    while\
    \ [ $c -le ${!n} ]; do\n        let \"c+=b\"\n        let \"b+=a\"\n        let\
    \ \"a+=c\"\n    done\n    \n    echo $a\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=\"$1\"\n  (( n >= 2 )) || return 1\n  local fib1=1\n\
    \  local fib2=1\n  local fib3=1\n  while (( n >3 ))\n  do\n    (( fib3 = fib1\
    \ + fib2 ))\n    fib1=$fib2\n    fib2=$fib3\n    (( n -= 3 ))\n  done\n  echo\
    \ $fib3\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ $# -eq 1 ] ; then echo $1 1>&2 ; return 1 ; fi\n  case\
    \ $1 in\n  0) echo \"0\" ;;\n  1) echo \"1\" ;;\n  2) echo $1 ; return $(( $1\
    \ + $2 )) ;;\n  *)\n    local n=$1 a=$2 b=$1 tmp\n    while (( n >= 1 )) ; do\n\
    \      tmp=$b\n      b=$a\n      a=$tmp\n      (( n-- ))\n    done\n    echo \"\
    $a\"\n  esac\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '10

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n a b\n    n=$(($1+1))\n    a=1\n    b=1\n    local\
    \ i\n    for i in $(seq 0 $n-1)\n    do\n        echo $(( $a + $b))\n        a=$b\n\
    \        b=$a\n    done\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "seq: invalid floating point argument: \u201811-1\u2019\nTry 'seq --help'\
    \ for more information.\n"
  stdout: ''
  timestamp: 1660059391
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1; shift\n  ((n==1)) && return $1\n  local a=1;\
    \ local b=0\n  for ((n-1); n>0; n-=1) ; do a=$(b+a); b=$a; done\n  echo $b\n}\n\
    \ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp7epl1boa.sh: line 15: syntax error near `;''

    /tmp/tmp7epl1boa.sh: line 15: `  for ((n-1); n>0; n-=1) ; do a=$(b+a); b=$a; done''

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ $1 -eq 0 ] || [ $1 -eq 1 ]; then\n    return $1\n \
    \ fi\n  echo $1 | {\n    read a b\n    $(( $a + $b ))\n  }\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp40jqhup0.sh: line 17: 10 +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  (( $# > 2 )) && echo invalid input\n  (( $1 < 2 )) && echo\
    \ invalid input\n  n=$(( $n - 1 ))\n  if (( $n == 0 )) ; then\n    echo \"0\"\n\
    \  else\n    echo \"$(fib $n $(( $n - 1 ))\"\n  fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdr2d8paq.sh: line 32: unexpected EOF while looking for matching
    `"''

    /tmp/tmpdr2d8paq.sh: line 36: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  # $1 is passed by shell\n  # $2 start from 1\n  local n=$2\n\
    \  ((n>=1)) && {\n      echo \"$(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $(( $((\
    \ $((\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4qebx4rg.sh: line 16: unexpected EOF while looking for matching
    `)''

    /tmp/tmp4qebx4rg.sh: line 33: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n prev cur\n  n=$1; shift\n  prev=\"1\"; cur=\"2\"\
    \n  for (( c=$(n); c>1; c--)); do\n    prev=\"$cur\"\n    cur=\"$(( $prev + $cur\
    \ ))\"\n  done\n  echo \"$cur\"\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpt3vpys03.sh: line 15: n: command not found

    /tmp/tmpt3vpys03.sh: line 15: ((: c=: syntax error: operand expected (error token
    is "=")

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ $# -ne 1 ]\n  then\n    echo \"usage: $(basename \"\
    $0\") n\"\n    echo \"  Return n-th Fibonacci number.\"\n    echo \"  >>> $(fib\
    \ \"10\")\"\n    echo \"  55\"\n    echo \"  >>> $(fib \"1\")\"\n    echo \" \
    \ 1\"\n    echo \"  >>> $(fib \"8\")\"\n    echo \"  21\"\n  fi\n  # Define a\
    \ variable.\n  # $1 is the first number\n  # $2 is the second number\n  a=$1\n\
    \  b=$2\n  # Define an array.\n  arr=( $a $b )\n  # Define an array.\n  # $1 is\
    \ the nth number\n  n=${1:-1}\n  # Check if the number is valid\n  [[ -z ${n}\
    \ ]] && echo \"$(basename \"$0\") error: invalid argument\" && exit 1\n  # Check\
    \ if the number is positive\n  [[ -z ${n} ]] && echo \"$(basename \"$0\") error:\
    \ invalid argument\" && exit 1\n  # Check if the number is odd\n  [[ -z ${n} ]]\
    \ && echo \"$(basename \"$0\") error: invalid argument\" && exit 1\n  \n  # Calculate\
    \ Fibonacci numbers\n  fib=$(bc <<< \"${arr[$((${n}-1))]+arr[$((${n}-2))]}+${arr[$((${n}-1))]}\"\
    )\n  echo \"$fib\"\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tif [ $# -ne 1 ]; then\n\t\techo \"Usage: $0 number\" 1>&2\n\
    \t\texit 1\n\tfi\n\techo $(( $( awk \"BEGIN { print 0; print 1 }\" | awk -v n=$1\
    \ '$0 > n{print $1;n=$0}' ) ))\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tif [ $# -ne 1 ] ; then\n\t\treturn 1\n\tfi\n\n\t# Store\
    \ the running results in the global variables $a and $b.\n\tif [ $n -eq 1 ] ;\
    \ then\n\t\ta=1\n\t\tb=1\n\telse\n\t\ta=$a\n\t\tb=$b\n\tfi\n\n\twhile [ $n -gt\
    \ 0 ] ; do\n\t\tc=`expr $a + $b`\n\t\ta=$b\n\t\tb=$c\n\t\tn=$(( $n - 1 ))\n\t\
    done\n\n\t# Return the result of the last iteration of a and b.\n\treturn $c\n\
    }\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpt979snyq.sh: line 17: [: -eq: unary operator expected

    /tmp/tmpt979snyq.sh: line 25: [: -gt: unary operator expected

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tlocal n=$1\n\tif [ $n -lt 2 ]; then return 1; fi\n\tlocal\
    \ -n fibarray=\"$2\"\n\t((fibarray[0]=$fibarray[1]; fibarray[1]=$n))\n\techo \"\
    ${fibarray[@]}\"\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpw5hz3g2x.sh: line 14: local: `'': not a valid identifier

    /tmp/tmpw5hz3g2x.sh: line 15: ((: fibarray[0]=[1]; fibarray[1]=10: syntax error:
    operand expected (error token is "[1]; fibarray[1]=10")

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local fib\n\n    if [ -z \"$n\" ] ; then\n\
    \        n=-1\n    fi\n\n    if [[ $n -gt 0 ]]; then\n        if [[ $n == 0 ]];\
    \ then\n            echo 0\n        else\n            echo 1\n        fi\n   \
    \ else\n        echo \"Fibonacci number doesn't exist\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $# -lt 1 -o \"$1\" = \"--help\" -o \"$1\" = \"-h\"\
    \ ]; then\n        echo \"Usage: $(basename $0) n [-b start-point]\"\n       \
    \ return 1\n    fi\n    declare -i n=\"$1\"\n    declare -i a=\"${2}\"\n    if\
    \ [ -z \"$a\" ]; then\n        a=1\n    elif [ -n \"$2\" ]; then\n        a=$2\n\
    \    elif [ -n \"$3\" ]; then\n        a=$3\n    elif [ -z \"$3\" ]; then\n  \
    \      a=3\n    fi\n    while [ \"$a\" -le \"$n\" ]; do\n        a=\"$(awk \"\
    BEGIN {print ${a} + ${a}}\"\n    )\"\n    done\n    echo \"$a\"\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [[ ! $1 =~ ^[0-9]+$ ]]; then\n    echo \"Usage: $(basename\
    \ $0) <n>\"\n    exit 1\n  fi\n  local n=$1\n  local ret=\n  local a=1\n  local\
    \ b=0\n  local tmp=\n  for (( n=${n}-1; n >= 0; n-- )); do\n    tmp=$a\n    a=$b\n\
    \    b=$tmp\n    ret=$a\n  done\n  echo $ret\n}\n\ncandidate() {\n    fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1 # use 1-based indexing\n  if [ $n -eq 1 -o $n\
    \ -eq 2 ] ; then\n    echo \"1\"\n  elif [ $n -eq 0 ] ; then\n    echo \"0\"\n\
    \  else\n    echo $(( $(n-i) \\\n      $(fib ( $(( n-i -1 )) )) \\\n      $(fib\
    \ ( $(( n-i -1 )) )) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpapfyh3oj.sh: command substitution: line 21: syntax error near unexpected
    token `$(( n-i -1 ))''

    /tmp/tmpapfyh3oj.sh: command substitution: line 21: `fib ( $(( n-i -1 )) ))       $(fib
    ( $(( n-i -1 )) )) ))''

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  [ $# -eq 1 ] && return\n  if [ $1 -lt 2 ]; then\n    return\n\
    \  else\n    local x\n    x=$(( $1 < 2 ? -$1 : $1 ))\n    local y\n    y=$(( $y\
    \ < 2 ? -$y : $(fib -2 $(( $1 -1 ))) ))\n    return  $( $(( ${x}+${y} )) )\n \
    \ fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n a b c\n    # Make sure we got an argument.\n \
    \   test \"$1\" -gt 0 -o \"$1\" -lt 1 || return 1\n    # Initialize the accumulators.\n\
    \    a=0\n    b=1\n    c=2\n    # Perform the loop\n    while [ \"$c\" -lt \"\
    $1\" ]; do\n        echo \"$c\"\n        test \"$c\" -eq \"$c\" && echo \"exit\"\
    \n        test \"$c\" -eq 0 || echo \"$a $b\"\n        a=\"$b\"\n        b=\"\
    $c\"\n        c=\"$c+$a\"\n    done\n    echo \"$c\"\n}\n\ncandidate() {\n   \
    \ fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6gpt5sdh.sh: line 20: [: 2+1: integer expression expected

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $# -lt 1 ]; then\n        echo 0\n    else\n    \
    \    local n=$1\n        if [ $n -eq 0 ]; then\n            echo 1\n        elif\
    \ [ $n -eq 1 ]; then\n            echo 1\n        else\n            local prev1=$((\
    \ $( echo 1 $(( $(( $(n-1) + $(n-2) )) )) )))\n            local prev2=$(( $(\
    \ echo 1 $(( $(n-2) )) )))\n            local res=$(( $( echo 1 $(( 1 $(( 1 +\
    \ $prev1 $prev2 )) )) )))\n            if [ $n -gt 2 ]; then\n               \
    \ local res=$(( $( echo $res $( echo $(( $(n-2) )) )) ))\n            fi\n   \
    \         echo $res\n        fi\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwqhpl58_.sh: line 21: n-1: command not found

    /tmp/tmpwqhpl58_.sh: line 21: n-2: command not found

    /tmp/tmpwqhpl58_.sh: line 21: +  : syntax error: operand expected (error token
    is "+  ")

    /tmp/tmpwqhpl58_.sh: line 22: n-2: command not found

    /tmp/tmpwqhpl58_.sh: line 22: 1 0: syntax error in expression (error token is
    "0")

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -gt 1 ] || [ $1 -le 0 ]; then\n        echo $1\n\
    \    else\n        fib \"${2-1}\" \"${2}${2}${2}\"\n    fi\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $# -eq 0 -o $# -gt 2 ]; then\n        echo \"Usage:\
    \ $(basename \"$0\") <integer>\"\n        exit 1\n    fi\n    n=$1\n    if [ $n\
    \ -eq 1 ]\n    then\n        echo \"1\"\n    elif [ $n -eq 2 ]\n    then\n   \
    \     echo \"1\"\n    else\n        echo \"$(echo $(($(fib $((n - 1)) + $(fib\
    \ $((n - 2)))))).$(($(fib $((n - 1)))).$(($(fib $((n - 2))))))\"\n    fi\n}\n\n\
    candidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"\
    8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"\
    12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxh3nd_az.sh: line 38: unexpected EOF while looking for matching
    `"''

    /tmp/tmpxh3nd_az.sh: line 42: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n a b\n  (( n = $1 ))\n  (( n-- ))\n  if [ $n -eq\
    \ 0 ]; then\n     a=1\n     b=2\n  elif [ $n -eq 1 ]; then\n     a=1\n     b=1\n\
    \  else\n     a=$(( $a + $b ))\n     b=$(( $a + $b ))\n  fi\n  echo -n $a\n}\n\
    \ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpbvqor7qe.sh: line 22: +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  declare -A count=([0]=1 [1])\n  declare -i\
    \ i\n  for i in $(seq 2 $n); do\n    (( count[$((i - 1))]++))\n  done\n  echo\
    \ ${count[$((n - 1))]}\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpylulliup.sh: line 13: count: [1]: must use subscript when assigning
    associative array

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" = \"0\" -o \"$1\" = \"1\" ]; then\n    echo\
    \ \"$1\"\n  else\n    $(eval echo \"\\$$(($(fib $(($1 - 1))) + $(fib $(($1 - 2)))))\"\
    )\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdr7np8kw.sh: line 15: 2: command not found

    /tmp/tmpdr7np8kw.sh: line 15: 3: command not found

    /tmp/tmpdr7np8kw.sh: line 15: 2: command not found

    /tmp/tmpdr7np8kw.sh: line 15: + : syntax error: operand expected (error token
    is "+ ")

    /tmp/tmpdr7np8kw.sh: line 15: 2: command not found

    /tmp/tmpdr7np8kw.sh: line 15: 3: command not found

    /tmp/tmpdr7np8kw.sh: line 15: + : syntax error: operand expected (error token
    is "+ ")

    /tmp/tmpdr7np8kw.sh: line 15: 2: command not found

    /tmp/tmpdr7np8kw.sh: line 15: 3: command not found

    /tmp/tmpdr7np8kw.sh: line 15: 2: command not found

    /tmp/tmpdr7np8kw.sh: line 15: + : syntax error: operand expected (error token
    is "+ ")

    /tmp/tmpdr7np8kw.sh: line 15: + : syntax error: operand expected (error token
    is "+ ")

    /tmp/tmpdr7np8kw.sh: line 15: 2: command not found

    /tmp/tmpdr7np8kw.sh: line 15: 3: command not found

    /tmp/tmpdr7np8kw.sh: line 15: 2: command not found

    /tmp/tmpdr7np8kw.sh: line 15: + : syntax error: operand expected (error token
    is "+ ")

    /tmp/tmpdr7np8kw.sh: line 15: 2: command not found

    /tmp/tmpdr7np8kw.sh: line 15: 3: command not found

    /tmp/tmpdr7np8kw.sh: line 15: + : syntax error: operand expected (error token
    is "+ ")

    /tmp/tmpdr7np8kw.sh: line 15: + : syntax error: operand expected (error token
    is "+ ")

    /tmp/tmpdr7np8kw.sh: line 15: 2: command not found

    /tmp/tmpdr7np8kw.sh: line 15: 3: command not found

    /tmp/tmpdr7np8kw.sh: line 15: 2: command not found

    /tmp/tmpdr7np8kw.sh: line 15: + : syntax error: operand expected (error token
    is "+ ")

    /tmp/tmpdr7np8kw.sh: line 15: 2: command not found

    /tmp/tmpdr7np8kw.sh: line 15: 3: command not found

    /tmp/tmpdr7np8kw.sh: line 15: + : syntax error: operand expected (error token
    is "+ ")

    /tmp/tmpdr7np8kw.sh: line 15: 2: command not found

    /tmp/tmpdr7np8kw.sh: line 15: 3: command not found

    /tmp/tmpdr7np8kw.sh: line 15: 2: command not found

    /tmp/tmpdr7np8kw.sh: line 15: + : syntax error: operand expected (error token
    is "+ ")

    /tmp/tmpdr7np8kw.sh: line 15: + : syntax error: operand expected (error token
    is "+ ")

    /tmp/tmpdr7np8kw.sh:'
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  n=$1\n  if [ $n -lt 1 -o $n -gt 4 ]\n  then\n    echo \"\
    Invalid value for $n\"\n  else\n    a=0\n    b=1\n    while [ $n -gt 1 ]\n   \
    \ do\n      echo $(( $b + $a ))\n      n=$(( $n - 1 ))\n      a=$(( $a + $b ))\n\
    \      b=$(( $b + $a ))\n    done\n    echo $a\n  fi\n}\n\ncandidate() {\n   \
    \ fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tif [ \"$1\" = \"--help\" ]; then\n\t\techo \"Usage: $(basename\
    \ $0) <n>\"\n\t\texit 0\n\tfi\n\t# Convert \"1\" to \"0\" so that $2 works in\
    \ arithmetic expressions.\n\t# If $1 is \"0\", then we get \"$2 + 1\". That's\
    \ not right.\n\t[ \"$1\" = \"0\" ] && echo \"$2\" || echo \"$2$3\"\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local a=$1\n  local b=1\n  local c\n  while [ $a -gt 1 ];\
    \ do\n      c=`expr $a + $b`\n      a=$b\n      b=$c\n  done\n  echo $b\n}\n\n\
    candidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"\
    8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"\
    12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tif [[ \"$1\" -lt 2 ]]; then\n\t\techo \"Bad Argument: $1\"\
    \n\t\texit 0\n\tfi\n\tlocal n=$1\n\tlocal a b\n\ta=$(( $n < 2 ? $n : $(fib $((\
    \ $n - 1 )) ) + $(fib $(( $n - 2 )))))\n\tb=$(( $n == 1 ? $a : $(b$(( $n - 2 )))))\n\
    \techo $b\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n \
    \   [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_mdgkes0.sh: line 18: 2 < 2 ? 2 : Bad Argument: 1 + Bad Argument:
    0: syntax error in expression (error token is "Argument: 1 + Bad Argument: 0")

    /tmp/tmp_mdgkes0.sh: line 18: 3 < 2 ? 3 :  + Bad Argument: 1: syntax error in
    expression (error token is "Argument: 1")

    /tmp/tmp_mdgkes0.sh: line 18: 2 < 2 ? 2 : Bad Argument: 1 + Bad Argument: 0: syntax
    error in expression (error token is "Argument: 1 + Bad Argument: 0")

    /tmp/tmp_mdgkes0.sh: line 18: 4 < 2 ? 4 :  + : syntax error: operand expected
    (error token is "+ ")

    /tmp/tmp_mdgkes0.sh: line 18: 2 < 2 ? 2 : Bad Argument: 1 + Bad Argument: 0: syntax
    error in expression (error token is "Argument: 1 + Bad Argument: 0")

    /tmp/tmp_mdgkes0.sh: line 18: 3 < 2 ? 3 :  + Bad Argument: 1: syntax error in
    expression (error token is "Argument: 1")

    /tmp/tmp_mdgkes0.sh: line 18: 5 < 2 ? 5 :  + : syntax error: operand expected
    (error token is "+ ")

    /tmp/tmp_mdgkes0.sh: line 18: 2 < 2 ? 2 : Bad Argument: 1 + Bad Argument: 0: syntax
    error in expression (error token is "Argument: 1 + Bad Argument: 0")

    /tmp/tmp_mdgkes0.sh: line 18: 3 < 2 ? 3 :  + Bad Argument: 1: syntax error in
    expression (error token is "Argument: 1")

    /tmp/tmp_mdgkes0.sh: line 18: 2 < 2 ? 2 : Bad Argument: 1 + Bad Argument: 0: syntax
    error in expression (error token is "Argument: 1 + Bad Argument: 0")

    /tmp/tmp_mdgkes0.sh: line 18: 4 < 2 ? 4 :  + : syntax error: operand expected
    (error token is "+ ")

    /tmp/tmp_mdgkes0.sh: line 18: 6 < 2 ? 6 :  + : syntax error: operand expected
    (error token is "+ ")

    /tmp/tmp_mdgkes0.sh: line 18: 2 < 2 ? 2 : Bad Argument: 1 + Bad Argument: 0: syntax
    error in expression (error token is "Argument: 1 + Bad Argument: 0")

    /tmp/tmp_mdgkes0.sh: line 18: 3 < 2 ? 3 :  + Bad Argument: 1: syntax error in
    expression (error token is "Argument: 1")

    /tmp/tmp_mdgkes0.sh: line 18: 2 < 2 ? 2 : Bad Argument: 1 + Bad Argument: 0: syntax
    error in expression (error token is "Argument: 1 + Bad Argument: 0")

    /tmp/tmp_mdgkes0.sh: line 18: 4 < 2 ? 4 :  + : syntax error: operand expected
    (error token is "+ '
  stdout: ''
  timestamp: 1660059392
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  case $1 in\n  0) 0\n  1) 1\n  2) 1\n  *)\n    local n=\"\
    $1\"\n    a=$(bc <<< \"($n)\")\n    b=$(bc <<< \"($n)\")\n    echo \"$((a+b))\"\
    \n  esac\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplx689a8g.sh: line 14: syntax error near unexpected token `)''

    /tmp/tmplx689a8g.sh: line 14: `  1) 1''

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local a=0\n    local b=1\n    while [\
    \ $n -gt 0 ]\n    do\n        echo $a\n        local c=$((a+b))\n        local\
    \ d=$(echo $c | bc)\n        local e=$(echo $c | bc | cut -d \".\" -f1)\n    \
    \    a=$b\n        b=$d\n        echo $e\n        n=$((n-1))\n    done\n    echo\
    \ $b\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if (( $# < 1 )); then\n    echo \"Usage: $(basename \"$0\"\
    ) <N>\"\n    exit 0\n  fi\n  local n=$1\n  local prev\n  (( prev = $n ))\n  ((\
    \ n = prev - 1 ))\n  local a=1\n  local b=0\n  local c=0\n  local d=0\n  while\
    \ (( n > 0 )); do\n    echo $(( $a + $b ))\n    local n=$(( $n - 1 ))\n    a=$b\n\
    \    b=$c\n    c=$d\n    d=$n\n  done\n  echo $a\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if (( $# < 1 )) ; then\n    echo 'error: missing arg'\n\
    \    exit 1\n  fi\n  local n=$1\n  local a=0\n  local b=1\n  while (( n )); do\n\
    \    a=$b\n    b=$((a+b))\n    shift\n    (( n --))\n  done\n  echo $b\n}\n\n\
    candidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"\
    8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"\
    12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  n=\"$1\"\n  a=0\n  b=1\n  while [ $n -ge 1 ]; do\n    [\
    \ $n -gt 1 ] && let \"a=$a + b\"\n    [ $n -gt 1 ] && let \"b=$a + b\"\n    [\
    \ $n -gt 1 ] && let \"a=$b - b\"\n    [ $n -gt 1 ] && let \"b=$b - b\"\n    [\
    \ $n -gt 1 ] && let \"a=$a - b\"\n    [ $n -gt 1 ] && let \"b=$a - b\"\n    echo\
    \ $a\n    let \"n=n-1\"\n  done\n  echo $b\n}\n\ncandidate() {\n    fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  local prev=\"${prev+1}\"\n  if [ \"$prev\"\
    \ -eq \"$n\" ]; then\n    echo $prev\n  else\n    prev=\"$(fib \"$((n-1))\")\"\
    \n    echo $prev\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmppal0ygos.sh: line 14: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local i\n  local prev\n  local tmp\n  prev=0\n  tmp=1\n\
    \  for ((i=$1; i>1; i=i-2)); do\n    prev=$tmp\n    tmp=$prev+$tmp\n  done\n \
    \ echo $tmp\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  # $1 is a string; $2 a number\n  local n=$1 num=$2\n  \n\
    \  if [ \"${num}\" = \"-\" ]; then\n    local n=$1 num=$2\n  fi\n  \n  if [ \"\
    $num\" = \"0\" ] || [ \"$num\" = \"1\" ]; then\n    echo \"$num\"\n  else\n  \
    \  local prev=0 cur=1\n    while [ \"$cur\" -lt \"$n\" ]; do\n      (( prev +=\
    \ cur ))\n      (( cur += 1 ))\n      echo \"$prev\"\n    done\n  fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  local a=0\n  local b=1\n  while [ $n -gt 1\
    \ ]; do\n    local c=$(( $a + $b ))\n    local d=$a\n    a=$b\n    b=$c\n    local\
    \ e=$d\n    d=$e\n    n=$(( n - 1 ))\n  done\n  echo $d\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if (( $# != 1 )); then\n        echo \"Usage: $(basename\
    \ \"$0\") <n>\"\n        exit 1\n    fi\n    local n=\"$1\"\n    if [ -z \"$n\"\
    \ ]; then\n        echo \"Usage: $(basename \"$0\") <n>\"\n        exit 1\n  \
    \  fi\n    local fib\n    fib=$(( $(fibonacci -n \"$n\") - $(fibonacci -n 1) \
    \ ))\n    echo $fib\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1fw5wpis.sh: line 22: fibonacci: command not found

    /tmp/tmp1fw5wpis.sh: line 22: fibonacci: command not found

    /tmp/tmp1fw5wpis.sh: line 22: -   : syntax error: operand expected (error token
    is "-   ")

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -lt 2 ]; then\n    echo \"Fibonacci numbers\
    \ are zero-based.\"\n  else\n    local n=\"$1\"\n    local fib=$(( ${n} - 1 ))\n\
    \    echo \"$fib\"\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tlocal num=$1\n\tlocal fibnum\n\tlocal fibnum2\n\n\t# Check\
    \ for special cases.\n\tif (( num <= 1 )); then\n\t\techo $num\n\telse\n\t\tlocal\
    \ firstnum\n\t\tlocal lastnum\n\t\tlocal fibnum2\n\n\t\t# Handle the special cases.\n\
    \t\tif (( num == 1 )); then\n\t\t\tfirstnum=$(( num + 1 ))\n\t\t\tlastnum=$((\
    \ num + 1 ))\n\t\t\techo $firstnum\n\t\telif (( num == 2 )); then\n\t\t\tfirstnum=$((\
    \ num + 1 ))\n\t\t\tlastnum=$(( num + 1 ))\n\t\t\techo $firstnum\n\t\t\techo $lastnum\n\
    \t\telif (( num > 1 )); then\n\t\t\tfirstnum=$(( num + 1 ))\n\t\t\tlastnum=$((\
    \ num + 1 ))\n\t\t\techo $firstnum\n\n\t\t\tfibnum=$(( firstnum + lastnum ))\n\
    \t\t\tfibnum2=$(( firstnum + lastnum ))\n\n\t\t\t# Add 1 to the fib number until\
    \ the value doesn't exceed the limit.\n\t\t\twhile (( fibnum2 <= num )); do\n\t\
    \t\t\tfibnum=$(( fibnum + lastnum ))\n\t\t\t\tfibnum2=$(( fibnum2 + lastnum ))\n\
    \t\t\tdone\n\n\t\t\techo $fibnum\n\t\tfi\n\tfi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"${1:-0}\" -gt \"0\" ]; then\n    echo $(($1 + $(($1\
    \ - 1) + $(($1 - 2))))\n  else\n    echo $(($1))\n  fi\n}\n\ncandidate() {\n \
    \   fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuybgprgv.sh: line 13: unexpected EOF while looking for matching
    `)''

    /tmp/tmpuybgprgv.sh: line 33: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059391
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1; shift\n  local first=1; local second=0\n  local\
    \ cur\n\n  while (( $n )); do\n    (( cur=$first + $second ))\n    first=$second;\
    \ second=$cur\n    (( n-=1 ))\n  done\n  echo \"$second\"\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660059391
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  ((N=$1)-1); echo $(seq 0 $N | \\\n  awk -F: '{print $1+$2}'\
    \ | \\\n  sort | tail -n $N | head -n 1)\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjnmi_ei7.sh: line 12: syntax error near unexpected token `-1''

    /tmp/tmpjnmi_ei7.sh: line 12: `  ((N=$1)-1); echo $(seq 0 $N | \''

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local x=\"$1\"\n    if [ $x -eq 1 ]; then\n        echo\
    \ 1\n    elif [ $x -eq 2 ]; then\n        echo 1\n    elif [ $x -ge 3 ]; then\n\
    \        echo $(( $x * $(fib \"$(( $x - 1 ))\") + $(fib $(( $x - 2 ))))\n    else\n\
    \        echo $(fib $(( $x - 1 )))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsngkbhq8.sh: line 18: unexpected EOF while looking for matching
    `)''

    /tmp/tmpsngkbhq8.sh: line 38: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=${1:-0}\n    local a=0\n    local b=1\n    local\
    \ tmp\n    while [ $n -gt 0 ]; do\n        ((tmp=$a+$b))\n        (($b=$a))\n\
    \        (($a=tmp))\n        ((n--))\n    done\n    echo $a\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnsewrc91.sh: line 18: ((: 1=0: attempted assignment to non-variable
    (error token is "=0")

    /tmp/tmpnsewrc91.sh: line 19: ((: 0=tmp: attempted assignment to non-variable
    (error token is "=tmp")

    /tmp/tmpnsewrc91.sh: line 18: ((: 1=0: attempted assignment to non-variable (error
    token is "=0")

    /tmp/tmpnsewrc91.sh: line 19: ((: 0=tmp: attempted assignment to non-variable
    (error token is "=tmp")

    /tmp/tmpnsewrc91.sh: line 18: ((: 1=0: attempted assignment to non-variable (error
    token is "=0")

    /tmp/tmpnsewrc91.sh: line 19: ((: 0=tmp: attempted assignment to non-variable
    (error token is "=tmp")

    /tmp/tmpnsewrc91.sh: line 18: ((: 1=0: attempted assignment to non-variable (error
    token is "=0")

    /tmp/tmpnsewrc91.sh: line 19: ((: 0=tmp: attempted assignment to non-variable
    (error token is "=tmp")

    /tmp/tmpnsewrc91.sh: line 18: ((: 1=0: attempted assignment to non-variable (error
    token is "=0")

    /tmp/tmpnsewrc91.sh: line 19: ((: 0=tmp: attempted assignment to non-variable
    (error token is "=tmp")

    /tmp/tmpnsewrc91.sh: line 18: ((: 1=0: attempted assignment to non-variable (error
    token is "=0")

    /tmp/tmpnsewrc91.sh: line 19: ((: 0=tmp: attempted assignment to non-variable
    (error token is "=tmp")

    /tmp/tmpnsewrc91.sh: line 18: ((: 1=0: attempted assignment to non-variable (error
    token is "=0")

    /tmp/tmpnsewrc91.sh: line 19: ((: 0=tmp: attempted assignment to non-variable
    (error token is "=tmp")

    /tmp/tmpnsewrc91.sh: line 18: ((: 1=0: attempted assignment to non-variable (error
    token is "=0")

    /tmp/tmpnsewrc91.sh: line 19: ((: 0=tmp: attempted assignment to non-variable
    (error token is "=tmp")

    /tmp/tmpnsewrc91.sh: line 18: ((: 1=0: attempted assignment to non-variable (error
    token is "=0")

    /tmp/tmpnsewrc91.sh: line 19: ((: 0=tmp: attempted assignment to non-variable
    (error token is "=tmp")

    /tmp/tmpnsewrc91.sh: line 18: ((: 1=0: attempted assignment to non-variable (error
    token is "=0")

    /tmp/tmpnsewrc91.sh: line 19: ((: 0=tmp: attempted assignment to non-variable
    (error token is "=tmp")

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ $# -eq 0 ]; then\n    return 0\n  fi\n  case \"$1\"\
    \ in\n  1)\n    return 1\n    ;;\n  2)\n    return 1\n    ;;\n  *)\n    [ $2 -le\
    \ 9 ] | \\\n      { echo \"Usage: $(basename $0) [-n] [-v] number\" >&2; exit\
    \ 2; }\n    fib=$(( $1 + $2 ))\n    if [ $2 -le 9 ]; then\n      fib=$(( $fib\
    \ + $3 ))\n      if [ $2 -le 9 ]; then\n        fib=$(( $fib + $4 ))\n       \
    \ if [ $2 -le 9 ]; then\n          fib=$(( $fib + $5 ))\n        fi\n      fi\n\
    \    fi\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdu174aq0.sh: line 35: syntax error near unexpected token `fi''

    /tmp/tmpdu174aq0.sh: line 35: `  fi''

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local i\n  (( i=1; i=\"${1}\"; i=$(( $i + 2 )); i=\"$((\
    \ $i - 2 ))\" ))\n  echo $(( $i * $i ))\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyuqooc6b.sh: line 13: ((: i=1; i=10; i=2; i=-2 : syntax error:
    invalid arithmetic operator (error token is "; i=10; i=2; i=-2 ")

    /tmp/tmpyuqooc6b.sh: line 14: *  : syntax error: operand expected (error token
    is "*  ")

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1 b1 b2 i j\n  read a b <<< \"$2\"\n  j=$(( b >\
    \ a ? b : a ))\n  (( n-- ))\n  i=$(( j < 2 ? j : j-1 ))\n  printf \"%d\\n\" \"\
    $i\"\n  fib \"$n\" \"$b\" \"$a\" \"$j\"\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=48 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=45 encoding='utf-8'>
  timestamp: 1660059397
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ -z $1 ]; then\n    echo \"Usage: $(basename $0) [integer]\"\
    \n    exit 1\n  fi\n\n  local fibs i result prev prev2\n\n  fibs=$(( $1 + 1 ))\n\
    \n  prev=1 prev2=2\n\n  for i in $(seq $fibs)\n  do\n    result=$(( $prev + $prev2\
    \ ))\n    prev=$prev2\n    prev2=$result\n  done\n\n  echo $result\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local fibVal\n    local n\n    local prev\n    local cur\n\
    \    \n    # Check if number is a number.\n    # Throw error if not.\n    if !\
    \ [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"Usage: $(basename $0) number\" >&2\n\
    \        return 1\n    fi\n\n    # $prev is previous Fibonacci number\n    # $cur\
    \ is current Fibonacci number\n    prev=$cur=$(( $prev + $cur ))\n    n=$(($2\
    \ - 1))\n\n    # Return n-th Fibonacci number\n    if [ $n -lt 0 ] ; then\n  \
    \      echo \"Usage: $(basename $0) -n|--number n\" >&2\n        return 1\n  \
    \  elif [ $n -eq 0 ] ; then\n        echo \"Usage: $(basename $0) 0|1\" >&2\n\
    \        return 1\n    elif [ $n -gt 0 ] ; then\n        while [ \"$prev\" !=\
    \ \"$cur\" ] ; do\n            prev=$cur\n            cur=$(( $prev + $cur ))\n\
    \        done\n        echo ${cur}\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3f3wvv6p.sh: line 26: +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local i a b\n    a=0; b=1\n    for ((i=0; i<$1; i+=1));\
    \ do\n       a=`expr $a + $b`\n       b=`expr $b + $a`\n    done\n    echo $a\n\
    }\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n a b\n    read n <<< \"$1\"\n    a=1\n    b=1\n\
    \    while (( n )); do\n\t(( a = a + b ))\n\t(( b = a - b ))\n\t(( n = n - 1 ))\n\
    \    done\n    echo \"$a\"\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local i n prev_fib\n  read -n1 i\n  prev_fib=$(( ${i}-1\
    \ ))\n  if [ $(( ${i} )) -le 1 ]; then\n    echo \"0\"\n  else\n    for (( n =\
    \ 0; n <= $(( $i - 1 )); n++ )); do\n      echo $(( prev_fib + ${prev_fib} ))\n\
    \      prev_fib=${prev_fib}\n    done\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=71 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=50 encoding='utf-8'>
  timestamp: 1660059397
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n a b i\n  (( $# == 0 )) && echo \"Usage: $0 integer\"\
    \ 1>&2\n  (( $# > 1 )) && echo \"Too many arguments\" 1>&2\n  (( $# < 1 )) &&\
    \ echo \"Too few arguments\" 1>&2\n  (( $# > 100 )) && echo \"Too many arguments\"\
    \ 1>&2\n  (( $# < 1 )) && echo \"Too few arguments\" 1>&2\n  i=$1\n  (( i > 1\
    \ )) && echo \"Too few arguments\" 1>&2\n  (( i < 0 )) && echo \"Too few arguments\"\
    \ 1>&2\n  (( i < 1 )) && echo \"Too few arguments\" 1>&2\n  (( i >= $1 )) && echo\
    \ \"Too few arguments\" 1>&2\n  (( $(( $# - 2 )) )) && echo \"Too few arguments\"\
    \ 1>&2\n  (( $i < 0 )) && echo \"Too few arguments\" 1>&2\n  (( $i > 1 )) && echo\
    \ \"Too few arguments\" 1>&2\n  if (( n <= 1 )); then\n    echo \"${n}\"\n  else\n\
    \    for (( b = 0; b < i; b++ )); do\n      a=$(( b + 1 ))\n      echo \"${a}\"\
    \n    done\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: 'Too few arguments

    Too few arguments

    Too few arguments

    Too few arguments

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    (( n = $1 ))\n\n    # Avoid a division by zero\n    if\
    \ [ $n -eq 0 ]; then return 1; fi\n\n    # Return previous fibonacci\n    if [\
    \ $n -eq 1 ]; then return $1; fi\n\n    # Return n-th Fibonacci number\n    echo\
    \ $(( $(( $n - 1 )) + ( $(( $n - 2 )) )))\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $# -lt 1 ] || [ $1 -gt 1 ] || [ $1 -eq 1 ]\n    then\n\
    \        echo \"$1 is invalid number\"\n        exit 1\n    fi\n    if [ $2 -lt\
    \ 1 ] || [ $2 -gt 1 ] || [ $2 -eq 1 ]\n    then\n        echo \"$2 is invalid\
    \ number\"\n        exit 1\n    fi\n    local n=$1\n    local a=1\n    local b=1\n\
    \    local sum=$(( $a + $b))\n    while [ $n -gt 0 ]\n    do\n        local next_a=$((\
    \ $a + $b))\n        local next_b=$(( $a + $b ))\n        local sum=$(( $sum +\
    \ $next_a ))\n        local a=$next_a\n        local b=$next_b\n        (( n =\
    \ n - 1 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n prev1 prev2\n  ((n=$1))\n  ((n < 2)) && return ${n}\n\
    \  ((prev1=prev2=1))\n  while [ $prev1 -lt $n ]; do\n    ((prev1+=prev2))\n  \
    \  ((prev2=prev1+=prev1))\n  done\n  echo $prev2\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tlocal n=$1\n\tlocal a\n\tlocal b\n\tlocal c\n\ta=0\n\tb=1\n\
    \twhile [ $n -gt 0 ]; do\n\t\tc=`expr $a + $b`\n\t\ta=`expr $b`\n\t\tb=`expr $c`\n\
    \t\tn=`expr $n - 1`\n\tdone\n\techo $c\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ $1 -lt 2 ]\n  then\n      echo \"${1}\"\n  else\n \
    \     fib \"$(expr $(( $n - 1 )))\"\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local i=1\n  local prev=0\n  while [ $(($i - 2)) -le $1\
    \ ]; do\n    prev=$(( $prev + $i ))\n    i=$(( $i + 1 ))\n  done\n  echo $prev\n\
    }\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1 prev curr next\n  prev=0\n  curr=1\n  next=0\n\
    \n  while [ $n -gt 0 ]; do\n    next=$(( prev + curr ))\n    prev=$curr\n    curr=$next\n\
    \  done\n\n  echo \"$next\"\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=47 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=33 encoding='utf-8'>
  timestamp: 1660059397
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tlocal n=$1\n\tif [ $n -lt 2 ]\n\tthen\n\t\techo \"0\"\n\t\
    else\n\t\techo $(( $(fib \"$((n - 1)\"))+$(fib \"$((n - 2)\")) ))\n\tfi\n}\n\n\
    candidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"\
    8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"\
    12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9bd38bdx.sh: line 31: unexpected EOF while looking for matching
    `"''

    /tmp/tmp9bd38bdx.sh: line 35: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local -r n=\"${1}\"\n    if [[ ! $n =~ ^-?[0-9]+$ ]];\
    \ then\n        echo \"$n\" 1>&2\n        return 1\n    fi\n    local -r f1=$(mktemp)\n\
    \    local -r f2=$(mktemp)\n    mkfifo \"$f1\"\n    mkfifo \"$f2\"\n    local\
    \ -r tmp=$(mktemp)\n    local fib\n    while IFS= read -r fib; do\n        # read\
    \ fib from fifo, write to tmp fifo\n        echo $(( $fib + 1 )) > \"$tmp\"\n\
    \        echo \"$fib\" >> \"$f1\"\n        echo \"$(( $fib - 1 )) > $f2\"\n  \
    \      echo \"$(( $fib + 1 )) | $(( $fib - 1 )) > $tmp\"\n    done < <(\n    \
    \    awk -v num=\"$n\" '\n            BEGIN {\n                exit = 1\n    \
    \        }\n            {\n                exit > \"/dev/null\";\n           \
    \     exit > \"/dev/null\";\n            }\n            '\n    )\n    local result\n\
    \    if [[ -n \"$tmp\" ]]; then\n        result=$(cat \"$tmp\")\n    fi\n    rm\
    \ -f \"$tmp\" \"$f1\" \"$f2\"\n    return $result\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: 'mkfifo: cannot create fifo ''/tmp/tmp.6eE7iu0pYl'': File exists

    mkfifo: cannot create fifo ''/tmp/tmp.Hdf1LYKoXs'': File exists

    awk: cmd. line:3:                 exit = 1

    awk: cmd. line:3:                      ^ syntax error

    awk: cmd. line:6:                 exit > "/dev/null";

    awk: cmd. line:6:                      ^ syntax error

    awk: cmd. line:7:                 exit > "/dev/null";

    awk: cmd. line:7:                      ^ syntax error

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local b=$(( $n > 1 ? $(bc -l <<< \"$n\
    \ - 1\") : $n ))\n    echo $(bc -l <<< \"$b + $(bc -l <<< \"$b - $b\")\")\n}\n\
    \ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\t# For loop is faster than \"bc\" command\n\tlocal i j n\
    \ fib\n\n\t# The Fibonacci sequence is 0, 1, 1, 2, 3, 5, 8, 13, 21, ...\n\t# so\
    \ \"fib\" is 0 at first, 1 is second, etc.\n\tfib = $(( ${1} \\\n\t\t&& (( ${1}\
    \ == 1 ) 2>/dev/null) 2>/dev/null  \\\n\t\t&& (( ${1} == 2 ) 2>/dev/null) 2>/dev/null\
    \ \\\n\t\t&& (( ${1} == 3 ) 2>/dev/null) 2>/dev/null \\\n\t\t&& ${1} == 4 || ${1}\
    \ == 5 ))\n\n\tif [ ${1} -gt 0 ] && [ ${1} -gt ${fib} ]; then\n\t\techo \"$((\
    \ ${1} - 2 ))\"\n\telse\n\t\techo \"$(( ${fib} - 1 ))\"\n\tfi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: "/tmp/tmp95ra3io0.sh: line 17: 10 \t\t&& (( 10 == 1 ) 2>/dev/null) 2>/dev/null\
    \  \t\t&& (( 10 == 2 ) 2>/dev/null) 2>/dev/null \t\t&& (( 10 == 3 ) 2>/dev/null)\
    \ 2>/dev/null \t\t&& 10 == 4 || 10 == 5 : missing `)' (error token is \"2>/dev/null)\
    \ 2>/dev/null  \t\t&& (( 10 == 2 ) 2>/dev/null) 2>/dev/null \t\t&& (( 10 == 3\
    \ ) 2>/dev/null) 2>/dev/null \t\t&& 10 == 4 || 10 == 5 \")\n"
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  if [ $n -eq 0 ]; then\n    echo \"0\"\n  elif\
    \ [ $n -eq 1 ]; then\n    echo \"1\"\n  elif [ $n -eq 2 ]; then\n    echo \"2\"\
    \n  elif [ $n -le 6 ]; then\n    local a=0\n    local b=1\n    while [ $n -gt\
    \ 1 ]; do\n      local c=$(($a + $b))\n      local d=$a\n      local e=$b\n  \
    \    local f=$c\n      local g=$d\n      local h=$e\n      local i=$f\n      local\
    \ j=$g\n      local k=$h\n      echo \"$c\"\n      echo \"$d\"\n      echo \"\
    $e\"\n      echo \"$f\"\n      echo \"$g\"\n      echo \"$h\"\n      echo \"$i\"\
    \n      echo \"$j\"\n      echo \"$k\"\n      a=$c\n      b=$d\n      n=$(($n\
    \ - 1))\n    done\n  else\n    local a=0\n    local b=1\n    local c=0\n    local\
    \ d=1\n    local e=0\n    while [ $n -gt 1 ]; do\n      local f=$(($a + $b))\n\
    \      local g=$(($a + $c))\n      local h=$(($b + $d))\n      local i=$(($c +\
    \ $d))\n      local j=$(($d + $e))\n      local k=$(($e + $f))\n      echo \"\
    $f\" \n      echo \"$g\" \n      echo \"$h\" \n      echo \"$i\" \n      echo\
    \ \"$j\" \n      echo \"$k\" \n      a=$f\n      b=$g\n      c=$h\n      d=$i\n\
    \      e=$j\n      n=$(($n - 1))\n    done\n  fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [[ \"$1\" =~ ^[0-9]+$ ]]; then\n    local n=\"$1\"\n\
    \  elif [[ \"$1\" =~ ^[0-9]+\\.[0-9]+$ ]]; then\n    local n=\"$( echo \"$1\"\
    \ | cut -d. -f 1 )\"\n  else\n    echo \"invalid input - $1\"\n    return 1\n\
    \  fi\n  local fib1\n  local fib2\n  local i\n  local sum\n  fib1=0\n  fib2=1\n\
    \  sum=0\n  for i in $(seq \"$n\")\n  do\n    sum=$(( fib1 + fib2 ))\n    fib1=$fib2\n\
    \    fib2=$sum\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local num=$1\n  if [ $num -eq 0 ]; then\n    return 0\n\
    \  fi\n  if [ $num -gt 0 ] && [ $num -le 2 ]; then\n    return 1\n  fi\n  local\
    \ n=$(($num - 1))\n  local a=$(($(fib \"$n-1\") + $(fib \"$n-2\")))\n  if [ $num\
    \ -eq 2 ]; then\n    return $a\n  fi\n  return $a\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=17 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=6 encoding='utf-8'>
  timestamp: 1660059397
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  ((n>1) && printf \"%d\\n\" \"$(( $(n-1) +\
    \ $(n-2) ))\" || return $n); \n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp7aom_zha.sh: line 13: n: command not found

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  test \"$1\" -gt 0 && test \"$1\" -lt 3 && return 1\n  test\
    \ \"$1\" -eq 3 && return 2\n  s=0\n  f=0\n  while [ \"$s\" -le \"$1\" ]; do\n\
    \    s=\"$f+$s\"\n    f=\"$f\"+$f\n  done\n  echo \"$s\"\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqllltuem.sh: line 16: [: 0+0: integer expression expected

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n a b i c\n  [[ \"$1\" =~ ([0-9]+|[0-9]+) ]]\n  n=${BASH_REMATCH[1]}\n\
    \  if [[ \"$n\" -gt 0 ]]; then\n    a=1\n    b=1\n    i=2\n    while [ $i -lt\
    \ \"$n\" ]; do\n      c=`expr $a + $b`\n      a=`expr $b`\n      b=`expr $c`\n\
    \      i=`expr $i + 1`\n    done\n    echo \"$c\"\n  else\n    echo \"0\"\n  fi\n\
    }\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local F=\"${1}\"\n  ((F > 1)) && printf \"%s\" $(( $(fib\
    \ $((F-1)) + $(fib $((F-2)) ) ))\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5fbyxouk.sh: line 13: unexpected EOF while looking for matching
    `)''

    /tmp/tmp5fbyxouk.sh: line 30: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tlocal a b\n\tIFS=\n\ta=$1\n\tb=1\n\twhile [ $a -gt 0 ]\n\
    \tdo\n\t\tb=$a\n\t\ta=$((b-a))\n\tdone\n\techo $b\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  ((n>=2)&&((n<=$#ARGV))) || echo \"$0: expecting\
    \ one integer argument\" 1>&2\n  local a=1\n  local b=1\n  local ret=$a\n  while\
    \ [ \"$n\" -gt 0 ]; do\n    ((n--))\n    echo \"$ret\"\n    let \"ret = ret +\
    \ b\"\n    let \"b = $a - $b\"\n    let \"a = $a + b\"\n  done\n  echo \"$ret\"\
    \n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkgvxvc90.sh: line 13: n: command not found

    /tmp/tmpkgvxvc90.sh: expecting one integer argument

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tlocal n a b c\n\t(( n = $2 )) || return\n\ta=1\n\tb=1\n\t\
    c=1\n\twhile [ $n -gt 0 ]; do\n\t\t(( n = n - 1 ))\n\t\t(( a = $a + b ))\n\t\t\
    (( b = $c + a ))\n\t\t(( c = $c - a ))\n\tdone\n\techo $c\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppj5ybd9l.sh: line 13: ((: n =  : syntax error: operand expected
    (error token is "=  ")

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $# -lt 1 ]\n    then\n        echo \"Invalid number\
    \ of parameters! Usage: $0 <n>\" >&2\n        return 1\n    fi\n\n    local n=$1\n\
    \    local a=$(( $n <= 2 ))\n    local b=0\n    local c=1\n    local d=$(( n -\
    \ 2 ))\n    while [ $d -le $n ]\n    do\n        (( c+=c ))\n        b=$(( $a\
    \ + b ))\n        a=$b\n        d=$(( $d +2 ))\n    done\n    if [ $c -eq $n ]\n\
    \    then\n        echo $b\n    else\n        echo $(fib $c)\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tlocal n prev result a b c\n\t(( n = $1 ))\n\tprev = 0\n\t\
    result = 0\n\twhile (( n )); do\n\t\t((a,b,c)=($prev,$(( a+b )),$(( a+c ))))\n\
    \t\tprev=$(( a+b ))\n\t\tresult=$(( a+c ))\n\t\t(( n-- ))\n\tdone\n\techo $result\n\
    }\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: "/tmp/tmpmdr6rei2.sh: line 17: syntax error near unexpected token `='\n\
    /tmp/tmpmdr6rei2.sh: line 17: `\t\t((a,b,c)=($prev,$(( a+b )),$(( a+c ))))'\n"
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [[ $1 =~ ^[0-9]+$ ]]; then\n    local N=$1\n  else\n\
    \    echo \"ERROR: invalid parameter number $1\" >&2\n    return 1\n  fi\n  N=$((\
    \ ${N} - 2 ))\n  local -a F\n  F[0]=1\n  F[1]=1\n  local i\n  local j\n  for ((\
    \ i = 3; i <= N; i++ )); do\n    j=$(( ${j} + 2 ))\n    F[i]=${F[i-1]}+${F[j-1]}\n\
    \  done\n  echo ${F[$N]}\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  n=$1\n  if [ $n -lt 1 -o $n -ge 3 ]\n  then\n    echo 0\n\
    \  elif [ $n -le 2 ]\n  then\n    echo $1\n  else\n    echo $(($fib($(( n - 1\
    \ )) ) + $(($fib($(( n - 2 )) )) )))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tlocal n a b\n\tif [[ $# -lt 2 ]]; then\n\t\techo \"Usage:\
    \ $(basename $0) [integer]\"\n\t\texit 1\n\tfi\n\t((n=${#1}))\n\tif [[ $n -lt\
    \ 2 ]]; then\n\t\techo \"Fibonacci $1 does not exist\"\n\t\texit 1\n\tfi\n\ta=0\n\
    \tb=1\n\twhile (( n >= 1 )); do\n\t\techo \"$b\"\n\t\tlocal tmp=$b\n\t\tb=$a\n\
    \t\ta=$tmp\n\t\tn=$(( n - 1 ))\n\tdone\n\techo \"$a\"\n}\n\ncandidate() {\n  \
    \  fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1 prev=$(( n-1 )) cur next=$(( n-2 ))\n  while\
    \ [ $n -gt 0 ]; do\n    cur=$prev; next=$(( cur + next ))\n    prev=$cur\n   \
    \ [ $n -eq 1 ] && return $next\n    n=$next\n  done\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    if [ $n -lt 2 ]; then\n        echo \"\
    0\"\n    elif [ $n -lt 5 ]; then\n        echo \"${(k)$(fib)}\"\n    else\n  \
    \      echo \"${(k)$(fib $((n - 2)))}${(k)$(fib $((n - 1)))}\"\n    fi\n}\n\n\
    candidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"\
    8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"\
    12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpby373k3p.sh: line 18: ${(k)$(fib $((n - 2)))}${(k)$(fib $((n -
    1)))}: bad substitution

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local x=$1 i=0 a=0\n    until [ \"$x\" -gt \"$i\" ]\n\
    \    do\n        ((a+=$x))\n        ((i=$a+$x))\n    done\n    echo \"$i\"\n}\n\
    \ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tif [ $1 -lt 2 ]; then\n\t\techo 1\n\telse\n\t\techo $(($1\
    \ + $(($2 - $1))))\n\tfi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local a=0 b=1\n    while (( n < 0 )) ;\
    \ do\n        echo \"n must be positive\"\n        exit 0\n    done\n    while\
    \ (( n > 1 )) ; do\n        echo \"Fibonacci number $n is: $(a)\"\n        ((\
    \ n = a - b ))\n        a=$(b);\n        b=$n\n    done\n    echo \"Fibonacci\
    \ number $n is: $(a)\"\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpn_fa0t5w.sh: line 19: a: command not found

    /tmp/tmpn_fa0t5w.sh: line 21: b: command not found

    /tmp/tmpn_fa0t5w.sh: line 24: a: command not found

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tif [[ \"${#}\" -lt 1 ]]; then\n\t\techo \"Usage: $0 [number]\"\
    \n\t\texit 1\n\tfi\n\tlocal i\n\tlocal res\n\tlocal n\n\n\tfor i in $(seq 0 ${1});\
    \ do\n\t\tlocal x\n\t\tlocal y\n\t\tlocal z\n\n\t\tif [ $i -eq 0 ]; then\n\t\t\
    \tx=${2}\n\t\t\ty=${1}\n\t\telse\n\t\t\tx=$(( ${y} + ${2} ))\n\t\t\ty=$(( ${x}\
    \ + ${1} ))\n\t\tfi\n\t\tz=$(( ${z} + 1 ))\n\t\tif [ $z -lt $n ]; then\n\t\t\t\
    res=\"$y\"\n\t\t\tbreak\n\t\tfi\n\tdone\n\techo \"$res\"\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpj09pi372.sh: line 33: [: 1: unary operator expected

    /tmp/tmpj09pi372.sh: line 29: 10 +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n   local n=\"$1\"\n   local f=\"$2\"\n   if (( n > 1 )); then\n\
    \      (( f = fib $(( n - 1 )) ))\n      echo $(( f + f ))\n   else\n      echo\
    \ $(( f ))\n   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp75mf0xw4.sh: line 15: ((: f = fib 9 : syntax error in expression
    (error token is "9 ")

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  ((n < 2)) && echo \"$n\" && return $n\n  local\
    \ a=0\n  local b=1\n  while [ $n -gt 1 ]; do\n    echo $b\n    local m=$(b | cut\
    \ -c3-)\n    local a=$a\n    local b=$m\n    local n=$((n - 1))\n  done\n  echo\
    \ $a\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfv_y6rfv.sh: line 18: b: command not found

    /tmp/tmpfv_y6rfv.sh: line 18: b: command not found

    /tmp/tmpfv_y6rfv.sh: line 18: b: command not found

    /tmp/tmpfv_y6rfv.sh: line 18: b: command not found

    /tmp/tmpfv_y6rfv.sh: line 18: b: command not found

    /tmp/tmpfv_y6rfv.sh: line 18: b: command not found

    /tmp/tmpfv_y6rfv.sh: line 18: b: command not found

    /tmp/tmpfv_y6rfv.sh: line 18: b: command not found

    /tmp/tmpfv_y6rfv.sh: line 18: b: command not found

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local a=0\n    local b=1\n\n    while\
    \ [ $n -gt 0 ]; do\n        local p=$(( $b + $a ))\n        echo $p\n        [\
    \ $n -eq 0 ] && break\n        local a=$b\n        local b=$p\n        n=$(($n\
    \ - 1))\n    done\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1; shift;\n  local a b; # local variables so that\
    \ they are visible to subshells.\n  a=0; b=1\n  echo \"$1\"\n  for ((i=$n; i>1;\
    \ i--))\n  do\n    # echo \"$i $a $b\" # uncomment this line for debugging\n \
    \   b=$a\n    a=$b\n    echo $a\n  done\n  echo $a\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$#\" -lt 1 ]; then return 1; fi\n    local a=$1;\
    \ local b=$(( $a + $b ));\n    while [ \"${#b}\" -gt \"$1\" ]; do b=$(( $a + $b\
    \ )); a=$b;\n    done\n    echo $b\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2ko_wpcu.sh: line 13: 10 +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [[ $1 =~ ^[0-9]+$ ]]; then\n    # Non negative integer.\n\
    \    if [[ $1 -lt 1 ]]; then\n      echo \"0 1\";\n    else\n      echo \"$(fib\
    \ $(( $1 - 1 ))) $(fib $(( $1 - 1 ))) 1\";\n    fi\n  else\n    # Non-integer.\n\
    \    echo \"$1\"\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059394
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local x n y z\n    local -i a\n    local -f fib\n    x=\"\
    ${1}\"\n    if [ -z \"$1\" ] || [ \"$1\" -lt 1 ] || [ \"$1\" -gt $(( 1 << $# ))\
    \ ] ; then\n        echo \"Usage: $0 number\" >&2\n        exit 1\n    fi\n  \
    \  if [ \"$x\" = \"0\" ] ; then\n        echo 0\n        return\n    fi\n    [[\
    \ \"$x\" -lt 2 ]] && echo \"Not enough arguments\" && return 1\n    [[ \"$x\"\
    \ -ge 1 ]] && echo \"Too many arguments\" && return 1\n    local b\n    local\
    \ -i c\n    local d e\n    local -r f\n    local -i g\n    local -p h\n    local\
    \ -i k\n    local l\n    local -m\n    local -p n\n    local -p q\n    local -p\n\
    \    local r\n    local -s u\n    local -i v\n    local w\n    local -p\n    local\
    \ x\n    local y\n    local -a b\n    local -i c\n    local -f fib g\n    if [[\
    \ \"$#\" -eq \"1\" ]] ; then\n        [[ \"$x\" = \"$n\" ]] && return \"$x\"\n\
    \        local -a c d e f\n        for (( n = 0; n <= $x; n++ )); do\n       \
    \     (( c += 1 ))\n            local -i x\n            local -i y\n         \
    \   local -p z\n            local -i a\n            local -p b\n            local\
    \ -f fib c\n            if [ -z \"$c\" ] ; then\n                continue\n  \
    \          fi\n            (( b[c-1] ))\n            (( e[c-1] ))\n          \
    \  (( d[c-1] ))\n            (( f[c-1] ))\n        done\n    fi\n    if [[ \"\
    $x\" = \"$n\" ]] ; then\n        echo \"$d\"\n        return\n    fi\n    local\
    \ -r h\n    local -r k\n    for (( n = 2; n <= $x; n++ )); do\n        (( f +=\
    \ 1 ))\n        local -i b\n        local -i x\n        local -i y\n        local\
    \ -p z\n        local -i a\n        local -p b\n        local -f fib f\n     \
    \   (( g[f-1] ))\n        (( k[f-1] ))\n        (( b[f-1] ))\n    done\n    for\
    \ (( n = 3; n <= $x; n++ )); \n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr_vh2kx8.sh: line 88: syntax error near unexpected token `}''

    /tmp/tmpr_vh2kx8.sh: line 88: `}''

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tlocal number=$1\n\tlocal i prev prev1\n\tprev=${prev1=$(eval\
    \ echo \"\\$($((${number}-1))$number)$prev1\")}\n\teval \"echo $prev\"\n}\n\n\
    candidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"\
    8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"\
    12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpvxecvw7c.sh: line 14: 910: command not found

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tlet a=$1-1\n\tlet b=1\n\tlet c=0\n\tif [[ $a -eq 0 ]]; then\
    \ return 0; fi\n\twhile [[ $a -gt 0 ]]; do\n\t\tlet c=$a+$b\n\t\tlet b=$a\n\t\t\
    let a=$c\n\tdone\n\techo $c\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [[ -z \"$1\" ]]; then\n    echo \"$fib missing argument\"\
    \ >&2; exit 1\n  fi\n  declare -i n=$1\n  declare -i a=1\n  declare -i b=1\n \
    \ while [ $n -gt 0 ]; do\n    let \"n = n - 1\"\n    let \"a = a + b\"\n    let\
    \ \"b = a - b\"\n  done\n  echo \"$a\"\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  # For n=0, return 0.\n  local n prev0 prev1\n  n=\"${1:-0}\"\
    \n  prev0=\"$(eval echo \\\"\\${(s/^/0/;s/[^0-9]//;s/..$//)$n}\\\" | bc)\"\n \
    \ prev1=\"$(eval echo \\\"\\${(s/^/1/;s/[^0-9]//;s/..$//)$n}\\\" | bc)\"\n  echo\
    \ \"$(($prev0 + $prev1))\"\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmuozbot6.sh: command substitution: line 16: syntax error near unexpected
    token `(''

    /tmp/tmpmuozbot6.sh: command substitution: line 16: `eval echo \"\${(s/^/0/;s/[^0-9]//;s/..$//)$n}\"
    | bc)"''

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\t# Test if argument is an integer\n\tif [ \"$1\" -eq \"0\"\
    \ ] || [ \"$1\" -eq \"1\" ] || [ \"$1\" -gt \"8\" ]; then\n\t\techo \"$1\"\n\t\
    else\n\t\tlocal -n n=\"$1\"\n\t\tlocal prev=\"${n-1}\"\n\t\tlocal next=\"${prev+1}\"\
    \n\t\techo \"$prev $next\"\n\tfi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local -r n=$1\n  echo \"$(eval \"echo \\${${n}+${${n}-1}}\"\
    ) - \"\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpl2rwff5u.sh: line 13: echo \${${n}+${${n}-1}}: bad substitution

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ $# -lt 1 -o $# -gt 1 ]; then\n    echo \"Usage: $(basename\
    \ $0) n fib_number\"\n    echo \"  fib_number = $(echo $2 | tr \" \" \"\\n\")\"\
    \n    echo \"  If n equals 0 then the result is 1.\"\n    exit 0\n  fi\n  echo\
    \ $(($(($1 + $2)) + $(echo $3 | tr \" \" \"\\n\")))\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd0auldtm.sh: line 18: 10 + : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $# -eq 1 ]\n    then\n       n=\"$1\"\n       if\
    \ [ \"$n\" -le 0 ] || [ \"$n\" -gt 30 ]\n       then\n           echo \"Invalid\
    \ number. Try again.\"\n           exit 1\n       fi\n       a=$(( $n == 1 ? 0\
    \ : $n - 1 ))\n       b=$(( $n == 1 ? 1 : $n - 2 ))\n       echo \"${a}\\n${b}\"\
    \n    else\n       echo \"Usage: $0 [number]\"\n    fi\n}\n\ncandidate() {\n \
    \   fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tif (( ! $1 )); then\n\t\techo \"Error : fib called with\
    \ no args\"\n\t\treturn 1\n\tfi\n\n\tif (( $1 == 1 )); then\n\t\treturn 1\n\t\
    fi\n\n\tif (( $1 == 2 )); then\n\t\treturn 2\n\tfi\n\n\t(( a=$1 ))\n\t(( b=$2\
    \ ))\n\n\t(( c=$a + $b ))\n\t(( d=$c - a ))\n\t(( e=$d - b ))\n\t(( f=$e - c ))\n\
    \n\t(( g=$f * $f ))\n\t(( h=$g + $f ))\n\t(( i=$h - $g ))\n\n\treturn $i\n}\n\n\
    candidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"\
    8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"\
    12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmp8_p94k.sh: line 26: ((: b= : syntax error: operand expected (error
    token is "= ")

    /tmp/tmpmp8_p94k.sh: line 28: ((: c=10 +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tif [ \"$1\" == \"0\" ]; then\n\t\techo \"0\"\n\telif [ \"\
    $1\" == \"1\" ]; then\n\t\techo \"1\"\n\telif [ \"$1\" -lt \"2\" ]; then\n\t\t\
    fib \"$(($1 - 1))\"\n\t\techo \"$1\"\n\t\tfib \"$(($1 + 1))\"\n\t\techo \"$2\"\
    \n\telse\n\t\techo \"$(($1 + $2))\"\n\tfi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnu23f9w2.sh: line 22: 10 + : syntax error: operand expected (error
    token is "+ ")

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1 i a b\n    # Handle edge case where n is 0\n\
    \    if [ ${n} -eq 0 ]\n    then\n        echo 0\n        return\n    fi\n   \
    \ # Factor out fib(0) and fib(1)\n    if [ ${n} -eq 1 ]\n    then\n        return\
    \ 1\n    fi\n    # Calculate fib(n-1)\n    b=$(( $(fib ${n-1}) ))\n    # Calculate\
    \ fib(n-2)\n    a=$(( $(fib ${n-2}) ))\n    # Return fib(n)\n    echo ${a}${b}\n\
    }\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=58 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=26 encoding='utf-8'>
  timestamp: 1660059397
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tif [ $1 -eq 0 ]\n\tthen\n\t\techo \"0\"\n\telif [ $1 -eq\
    \ 1 ]\n\tthen\n\t\techo \"1\"\n\telse\n\t\techo \"$(fib \"$(( ${1}-1 ))\") \"\
    `fib $(( ${1}-1 ))` \\\n\t\t`fib $(( ${1}-1 ))`\n\tfi\n}\n\ncandidate() {\n  \
    \  fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=53 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=46 encoding='utf-8'>
  timestamp: 1660059397
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n a b\n    local -i i ret\n\n    if [ -z \"$1\"\
    \ ]; then\n        return 1\n    fi\n\n    # shellcheck disable=SC2154\n    echo\
    \ \"$(\n        for (( i=1; i<=$1; i++ )); do\n            a=$(bc -l <<< \"$a\
    \ $i\")\n        done\n    )\"\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local -n n=$1 prev=${n-1} val\n  (( $# > 1 )) && echo \"\
    Too many arguments.\" && return 1\n  (( $# < 1 )) && echo \"Not enough arguments.\"\
    \ && return 1\n  val=$(( $prev + $prev ))\n  [[ $val -gt $n ]] && val=$n\n  [[\
    \ $val -lt $n ]] && val=$n\n  printf \"%d\\n\" \"$val\"\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp14m1uq6t.sh: line 12: local: `10'': invalid variable name for name
    reference

    /tmp/tmp14m1uq6t.sh: line 12: local: `1'': invalid variable name for name reference

    /tmp/tmp14m1uq6t.sh: line 15: +  : syntax error: operand expected (error token
    is "+  ")

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    [ -z \"$1\" ] && echo 0\n\n    if [ \"$1\" -eq 1 ]; then\n\
    \        echo 1\n        return\n    fi\n\n    echo \"${1:0:$1}\"$(\n        expr\
    \ $1 \\* \"\\(n - 1\\)\" + \\\n        $(fib \"\\$((n - 2)\\)\") \\\n    )\n}\n\
    \ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpptk3dygt.sh: line 14: [: $((n - 2)\): integer expression expected

    /tmp/tmpptk3dygt.sh: line 22: 1: $((n - 2)\): syntax error: operand expected (error
    token is "$((n - 2)\)")

    expr: non-integer argument

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [[ $# -lt 1 ]]\n  then\n    echo \"[error] Usage: $(basename\
    \ $0) <n>\"\n  else\n    local -a arr=( ${(@s:/:/)arr[@]} 1 );\n    local -i n=\"\
    ${1}\";\n\n    if [[ ${#arr[@]} -gt ${n} ]]\n    then\n      echo \"[error] Usage:\
    \ $(basename $0) <n>\"\n    else\n      local -i cnt=\"${n}\";\n      arr[0]=\"\
    ${arr[1]}\";\n      arr[1]=\"${arr[2]}\";\n      arr[2]=\"${arr[3]+arr[0]}\";\n\
    \      arr[3]=\"${arr[2]}\";\n\n      local -i i=\"${4}-${2}\";\n\n      while\
    \ [[ ${i} -le ${cnt} ]]\n      do\n        local temp=\"${arr[i]}\";\n       \
    \ arr[i]=\"${arr[i-1]}\";\n        arr[i-1]=\"${arr[i]}\";\n        arr[i]=\"\
    ${temp}+${arr[i-1]}\";\n      done;\n\n      echo \"${arr[i]}\";\n    fi\n  fi\n\
    }\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnn_h4j46.sh: line 16: ${(@s:/:/)arr[@]}: bad substitution

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local a=1\n    local b=1\n    local c=0\n\
    \    local tmp\n    for ((n--; n > 0; n--)); do\n        c=$((c+b))\n        tmp=$a\n\
    \        a=$b\n        b=$tmp\n    done\n    echo $c\n}\n\ncandidate() {\n   \
    \ fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local -n n=$1\n    local a b\n    a=0\n    b=1\n    while\
    \ ((n--)); do\n        printf -v a \"%03d\" $((a+b))\n        printf -v b \"%03d\"\
    \ $((a+b))\n    done\n    printf -v a \"%03d\" $((a+b))\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfm92qqoh.sh: line 12: local: `10'': invalid variable name for name
    reference

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ $# -eq 1 ]\n  then\n    echo 1\n    return\n  fi\n\n\
    \  local n=\"$1\"\n  [ $n -eq 0 ] && return 0 || return $(( $(fib \"$((n - 1))\"\
    ) + $(fib \"$((n - 2))\") ))\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  [ $# -eq 0 ] && { echo \"Usage: $0 integer\"; exit 1; }\n\
    \  local n=$1\n  [ $n -eq 0 ] && echo \"0\" || echo $(( $(fib ( $n - 1 )) + $(fib\
    \ $(( $n - 1 )) )) )\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp105138hd.sh: command substitution: line 15: syntax error near unexpected
    token `$n''

    /tmp/tmp105138hd.sh: command substitution: line 15: `fib ( $n - 1 )) + $(fib $((
    $n - 1 )) )) )''

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    if [ $n -lt 2 ]; then\n        echo \"\
    1\";\n    elif [ $n -eq 2 ]; then\n        echo \"2\";\n    else\n        local\
    \ a=0\n        local b=1\n        while [ $n -gt 2 ]; do\n            local c=$(expr\
    \ $a + $b)\n            echo $c\n            a=$b\n            b=$c\n        \
    \    n=$(( $n - 1 ))\n        done\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ -z \"$1\" ] || [ -n \"$1\" ] ; then\n        echo\
    \ \"Error: argument $1 must be an integer.\"\n        return 1\n    fi\n    #\
    \ Store fib(n) in a variable fib(n)\n    local n=$1\n    local prev=\"${prev:-1}\"\
    \n    local curr=\"${curr:-1}\"\n    local next=\"${next:-$(eval \"echo \\$$curr\
    \ + \\$$prev\")}\"\n    prev=\"${curr}\"\n    curr=\"${next}\"\n    next=\"${next+1}\"\
    \n\n    echo $next\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n a b\n  IFS=\"$(printf \"%d\" \"$1\")\"\n  a=\"$(let\
    \ \"a=1; b=1; ($1<2) && return $a; ($1==2) && return $b; ($1%2==0) && a+=$b; b+=$a;\
    \ return $b;\")\"\n  echo \"$a\"\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjmmlb91d.sh: line 14: let: a=1; b=1; (10<2) && return ; (10==2)
    && return ; (10%2==0) && a+=; b+=; return ;: syntax error: invalid arithmetic
    operator (error token is "; b=1; (10<2) && return ; (10==2) && return ; (10%2==0)
    && a+=; b+=; return ;")

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    if [ $n -eq 0 ]; then return 1; elif [\
    \ $n -eq 1 ]; then return 1; else return $((fib$((n-1))+fib$((n-2))))\n    fi\n\
    }\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  (( $# )) && {\n    local n a b\n    (( $# )) && {\n    \
    \  local x y\n      read x\n      read y\n    }\n  }\n  if (( $# == 1 )); then\n\
    \    echo $(( $1 + $1))\n  else\n    echo $(( $2 * $3 + $2 ))\n    echo $(( $3\
    \ * $3 + $1 ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=57 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=24 encoding='utf-8'>
  timestamp: 1660059397
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  [ $# -gt 1 ] && echo \"$1\"\n  echo \"$1\"\n  [ $# -eq 1\
    \ ] && return 1\n  [ $# -eq 2 ] && return $1\n  [ $# -eq 3 ] && return $(fib $(($1+2))\
    \ $(($1+3)) $(($2+3)) )\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660059392
- exit_code: 2
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tif [ \"${1:0:1}\" == \"0\" ]; then\n\t\techo \"0\"\n\telif\
    \ [ \"${1:0:1}\" == \"1\" ]; then\n\t\techo \"1\"\n\telse\n\t\techo \"$(fib $(echo\
    \ \"$(( $2 * $3 - $1 )) | bc -l))\"\n\tfi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpwbh4nqpp.sh: line 17: unexpected EOF while looking for matching
    `)''

    /tmp/tmpwbh4nqpp.sh: line 35: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tlocal n a b i tmp\n\tif [[ $1 =~ ^[0-9]+$ ]]; then\n\t\t\
    i=$1\n\telse\n\t\techo \"Usage: $0 number\"\n\t\texit 1\n\tfi\n\ta=1\n\tb=1\n\t\
    while [ \"$i\" -gt 0 ]; do\n\t\tn=`expr $i + $a`\n\t\ti=$((n-1))\n\t\ttmp=\"$b\"\
    \n\t\tb=\"$a\"\n\t\ta=\"$tmp\"\n\tdone\n\techo $a\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=66 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660059397
- exit_code: -1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  local a=0\n  local b=1\n  while [ $n -gt 1\
    \ ]; do\n    let \"tmp=$a+$b; let a=$b; let $b=$tmp; n--\"\n  done\n  echo $a\n\
    }\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=61 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=30 encoding='utf-8'>
  timestamp: 1660059397
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if (( $1 )) ; then a=1\n    else                a=0\n\
    \    fi\n    echo $a\n    local b\n    for b in $(seq -f \"%02g\" 0 $1); do\n\
    \        echo $a\n        local c=$a\n        (( c++ ))\n        a=$b\n      \
    \  echo $c\n        echo \"$c\"\n    done\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9cz1o9p3.sh: line 20: ((: 08: value too great for base (error token
    is "08")

    /tmp/tmp9cz1o9p3.sh: line 20: ((: 09: value too great for base (error token is
    "09")

    '
  stdout: ''
  timestamp: 1660059392
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=\"$1\"\n  local a\n  local b\n  local c\n  local\
    \ d\n\n  (( n )) || return 1\n  a=1\n  b=1\n  while [ $n -gt 0 ]; do\n      ((\
    \ n -= 1 )) || return $a\n      c=$a+$b\n      d=$b\n      b=$a\n      a=$c\n\
    \  done\n  return $d\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpsohk4gqa.sh: line 22: return: 1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1:
    numeric argument required

    '
  stdout: ''
  timestamp: 1660059392

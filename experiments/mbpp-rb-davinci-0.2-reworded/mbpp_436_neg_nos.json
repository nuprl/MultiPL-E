{
  "name": "mbpp_436_neg_nos",
  "language": "rb",
  "prompt": "# Write a rbthon function to return the negative numbers in an array.\ndef neg_nos(list1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_436_neg_nos.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_neg_nos\n    candidate = method(:neg_nos)\n    assert_equal([-1, -6], candidate.call([-1, 4, 5, -6]))\n    assert_equal([-1, -2], candidate.call([-1, -2, 3, 4]))\n    assert_equal([-7, -6], candidate.call([-7, -6, 8, 9]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  list1.select {|x| x < 0}\nend",
    "  list1.select { |x| x < 0 }\nend",
    "  list1.each do |i|\n    if i < 0\n      puts i\n    end\n  end\nend",
    "  list1.select { |x| x < 0 }\nend",
    "  list1.select { |x| x < 0 }\nend",
    "  list1.select {|x| x < 0}\nend",
    "  list1.select { |x| x < 0 }\nend",
    "  list1.select { |x| x < 0 }\nend",
    "  list1.select { |x| x < 0 }\nend",
    "  list1.select { |x| x < 0 }\nend",
    "  list1.select {|num| num < 0}\nend",
    "  list1.select { |num| num < 0 }\nend",
    "  list1.select { |num| num < 0 }\nend",
    "  list1.select { |x| x < 0 }\nend",
    "  list1.select { |i| i < 0 }\nend",
    "  list1.select { |x| x < 0 }\nend",
    "  list1.select {|i| i < 0}\nend",
    "  list1.select { |i| i < 0 }\nend",
    "  list1.select { |num| num < 0 }\nend",
    "  list1.select { |num| num < 0 }\nend"
  ]
}
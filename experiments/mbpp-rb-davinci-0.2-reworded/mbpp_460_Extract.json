{
  "name": "mbpp_460_Extract",
  "language": "rb",
  "prompt": "# Write a rbthon function to get the first element of each subarray.\ndef Extract(lst)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_460_Extract.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_Extract\n    candidate = method(:Extract)\n    assert_equal([1, 3, 6], candidate.call([[1, 2], [3, 4, 5], [6, 7, 8, 9]]))\n    assert_equal([1, 4], candidate.call([[1, 2, 3], [4, 5]]))\n    assert_equal([9, 1], candidate.call([[9, 8, 1], [1, 2]]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  lst.map {|x| x[0]}\nend",
    "  lst.map { |sub_arr| sub_arr[0] }\nend",
    "  lst.map { |sub_array| sub_array[0] }\nend",
    "  lst.map { |sub| sub[0] }\nend",
    "  lst.map {|i| i[0]}\nend",
    "  lst.map { |sub_array| sub_array[0] }\nend",
    "    lst.map {|x| x[0]}\nend",
    "  lst.map { |sub| sub[0] }\nend",
    "  lst.map { |sub_arr| sub_arr[0] }\nend",
    "  lst.map { |sub_array| sub_array[0] }\nend",
    "  lst.map { |sub_arr| sub_arr[0] }\nend",
    "  lst.map{|i| i[0]}\nend",
    "  lst.map {|x| x[0]}\nend",
    "  lst.map { |x| x[0] }\nend",
    "  lst.map { |sub| sub[0] }\nend",
    "  lst.map { |sub| sub[0] }\nend",
    "  lst.map { |sub| sub[0] }\nend",
    "  lst.map { |sub| sub[0] }\nend",
    "  lst.map { |sub_arr| sub_arr[0] }\nend",
    "  lst.map {|x| x[0]}\nend"
  ]
}
{
  "name": "mbpp_97_frequency_lists",
  "language": "rb",
  "prompt": "# Write a function to find frequency of each element in a flattened array of arrays, returned in a hash.\ndef frequency_lists(list1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_97_frequency_lists.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_frequency_lists\n    candidate = method(:frequency_lists)\n    assert_equal({1 => 1, 2 => 3, 3 => 1, 4 => 1, 5 => 2, 6 => 1, 7 => 1, 8 => 1, 9 => 1}, candidate.call([[1, 2, 3, 2], [4, 5, 6, 2], [7, 8, 9, 5]]))\n    assert_equal({1 => 1, 2 => 1, 3 => 1, 4 => 1, 5 => 1, 6 => 1, 7 => 1, 8 => 1, 9 => 1, 10 => 1, 11 => 1, 12 => 1}, candidate.call([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]]))\n    assert_equal({20 => 2, 30 => 2, 40 => 2, 17 => 1, 18 => 1, 16 => 1, 14 => 1, 13 => 1, 10 => 1}, candidate.call([[20, 30, 40, 17], [18, 16, 14, 13], [10, 20, 30, 40]]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  frequency_hash = {}\n  list1.each do |element|\n    if frequency_hash[element]\n      frequency_hash[element] += 1\n    else\n      frequency_hash[element] = 1\n    end\n  end\n  frequency_hash\nend",
    "  freq_hash = {}\n  list1.flatten.each do |element|\n    freq_hash[element] = list1.flatten.count(element)\n  end\n  freq_hash\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  frequency = Hash.new(0)\n  list1.flatten.each { |element| frequency[element] += 1 }\n  frequency\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq_hash = Hash.new(0)\n  list1.flatten.each do |element|\n    freq_hash[element] += 1\n  end\n  freq_hash\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |item| freq[item] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.flatten.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.flatten.each { |x| freq[x] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  hash = Hash.new(0)\n  list1.flatten.each do |x|\n    hash[x] += 1\n  end\n  hash\nend",
    "  freq = Hash.new(0)\n  list1.flatten.each { |x| freq[x] += 1 }\n  freq\nend",
    "  # create a hash to store the results\n  results = {}\n  # iterate through the list\n  list1.each do |element|\n    # if the element is a list, iterate through the list\n    if element.is_a?(Array)\n      element.each do |inner_element|\n        # if the element is already in the hash, increment the count\n        if results.has_key?(inner_element)\n          results[inner_element] += 1\n        # if the element is not in the hash, add it with a count of 1\n        else\n          results[inner_element] = 1\n        end\n      end\n    # if the element is not a list, check if it is in the hash\n    else\n      if results.has_key?(element)\n        # if the element is already in the hash, increment the count\n        results[element] += 1\n      # if the element is not in the hash, add it with a count of 1\n      else\n        results[element] = 1\n      end\n    end\n  end\n  # return the hash\n  results\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\nend",
    "  freq_hash = {}\n  list1.flatten.each do |element|\n    if freq_hash[element]\n      freq_hash[element] += 1\n    else\n      freq_hash[element] = 1\n    end\n  end\n  freq_hash\nend",
    "  frequency = Hash.new(0)\n  list1.each do |element|\n    frequency[element] += 1\n  end\n  frequency\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  # code goes here\n  hash = Hash.new(0)\n  list1.flatten.each do |x|\n    hash[x] += 1\n  end\n  hash\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each do |element|\n    freq[element] += 1\n  end\n  freq\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.flatten.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each do |item|\n    freq[item] += 1\n  end\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  new_hash = Hash.new(0)\n  list1.each do |x|\n    new_hash[x] += 1\n  end\n  new_hash\nend",
    "  frequency = Hash.new(0)\n  list1.each do |item|\n    frequency[item] += 1\n  end\n  frequency\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  # create a new hash\n  hash = {}\n  # iterate through the list\n  list1.each do |element|\n    # if the element is in the hash, increment the value by 1\n    if hash.has_key?(element)\n      hash[element] += 1\n    # if the element is not in the hash, add it to the hash with a value of 1\n    else\n      hash[element] = 1\n    end\n  end\n  # return the hash\n  hash\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  freq_hash = {}\n  list1.each do |item|\n    if freq_hash.has_key?(item)\n      freq_hash[item] += 1\n    else\n      freq_hash[item] = 1\n    end\n  end\n  freq_hash\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  freq = Hash.new(0)\n  list1.flatten.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each do |word|\n    freq[word] += 1\n  end\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each do |item|\n    freq[item] += 1\n  end\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.flatten.each { |x| freq[x] += 1 }\n  freq\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  frequency_hash = {}\n  list1.each do |x|\n    if frequency_hash.has_key?(x)\n      frequency_hash[x] += 1\n    else\n      frequency_hash[x] = 1\n    end\n  end\n  return frequency_hash\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  # create a hash to store the frequency of each element\n  frequency_hash = {}\n  # iterate through the list\n  list1.each do |element|\n    # if the element is not in the hash, add it and set the frequency to 1\n    if frequency_hash[element] == nil\n      frequency_hash[element] = 1\n    # if the element is in the hash, increment the frequency by 1\n    else\n      frequency_hash[element] += 1\n    end\n  end\n  # return the hash\n  frequency_hash\nend",
    "  # code goes here\n  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq_hash = {}\n  list1.flatten.each do |x|\n    if freq_hash[x]\n      freq_hash[x] += 1\n    else\n      freq_hash[x] = 1\n    end\n  end\n  freq_hash\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.flatten.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq_hash = Hash.new(0)\n  list1.flatten.each { |x| freq_hash[x] += 1 }\n  freq_hash\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq_hash = {}\n  list1.each do |list|\n    list.each do |element|\n      if freq_hash[element]\n        freq_hash[element] += 1\n      else\n        freq_hash[element] = 1\n      end\n    end\n  end\n  freq_hash\nend",
    "  freq_hash = {}\n  list1.each do |element|\n    if freq_hash.has_key?(element)\n      freq_hash[element] += 1\n    else\n      freq_hash[element] = 1\n    end\n  end\n  freq_hash\nend",
    "  # create a new hash\n  new_hash = {}\n  # iterate through the list\n  list1.each do |item|\n    # if the item is in the hash, increment the value by 1\n    if new_hash.has_key?(item)\n      new_hash[item] += 1\n    # if the item is not in the hash, add it with a value of 1\n    else\n      new_hash[item] = 1\n    end\n  end\n  # return the hash\n  new_hash\nend",
    "  freq = Hash.new(0)\n  list1.each do |i|\n    freq[i] += 1\n  end\n  freq\nend",
    "  freq_hash = Hash.new(0)\n  list1.flatten.each { |x| freq_hash[x] += 1 }\n  freq_hash\nend",
    "  # your code here\n  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  # your code here\n  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  # your code here\n  freq_hash = Hash.new(0)\n  list1.each do |x|\n    freq_hash[x] += 1\n  end\n  freq_hash\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |x| freq[x] += 1 }\n  freq\nend",
    "  # your code here\n  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.flatten.each { |x| freq[x] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\nend",
    "  freq_hash = Hash.new(0)\n  list1.flatten.each do |item|\n    freq_hash[item] += 1\n  end\n  freq_hash\nend",
    "  frequency = Hash.new(0)\n  list1.each do |element|\n    frequency[element] += 1\n  end\n  frequency\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  # your code here\nend",
    "  freq = Hash.new(0)\n  list1.flatten.each { |x| freq[x] += 1 }\n  freq\nend",
    "  # Write your code here\n  freq = Hash.new(0)\n  list1.each do |i|\n    freq[i] += 1\n  end\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.flatten.each { |item| freq[item] += 1 }\n  freq\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\nend",
    "  new_hash = {}\n  list1.flatten.each do |x|\n    if new_hash.has_key?(x)\n      new_hash[x] += 1\n    else\n      new_hash[x] = 1\n    end\n  end\n  new_hash\nend",
    "  # create a new hash\n  hash = {}\n  # iterate through the list\n  list1.each do |item|\n    # if the item is in the hash, add 1 to the value\n    if hash.has_key?(item)\n      hash[item] += 1\n    # if the item is not in the hash, add it with a value of 1\n    else\n      hash[item] = 1\n    end\n  end\n  # return the hash\n  hash\nend",
    "  freq = Hash.new(0)\n  list1.flatten.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h, v| h[v] += 1; h }\nend",
    "  # your code here\n  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq_hash = Hash.new(0)\n  list1.flatten.each do |element|\n    freq_hash[element] += 1\n  end\n  freq_hash\nend",
    "  list1.flatten.inject(Hash.new(0)) {|h,v| h[v] += 1; h}\nend",
    "  frequency = Hash.new(0)\n  list1.flatten.each { |word| frequency[word] += 1 }\n  frequency\nend",
    "  frequency = Hash.new(0)\n  list1.flatten.each { |element| frequency[element] += 1 }\n  frequency\nend",
    "  # write your code here\n  freq = Hash.new(0)\n  list1.flatten.each { |x| freq[x] += 1 }\n  freq\nend",
    "  freq_hash = {}\n  list1.flatten.each do |item|\n    if freq_hash[item]\n      freq_hash[item] += 1\n    else\n      freq_hash[item] = 1\n    end\n  end\n  freq_hash\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  hash = Hash.new(0)\n  list1.each do |list|\n    list.each do |element|\n      hash[element] += 1\n    end\n  end\n  hash\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h, e| h[e] += 1; h }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  # your code here\n  list1.flatten.each_with_object(Hash.new(0)) do |word, counts|\n    counts[word] += 1\n  end\nend",
    "  # Write your code here\n  freq = Hash.new(0)\n  list1.each do |list|\n    list.each do |element|\n      freq[element] += 1\n    end\n  end\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.flatten.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = {}\n  list1.each do |x|\n    if freq.has_key?(x)\n      freq[x] += 1\n    else\n      freq[x] = 1\n    end\n  end\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each do |element|\n    freq[element] += 1\n  end\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  frequency_hash = {}\n  list1.flatten.each do |element|\n    if frequency_hash[element]\n      frequency_hash[element] += 1\n    else\n      frequency_hash[element] = 1\n    end\n  end\n  frequency_hash\nend",
    "  # create a hash to store the results\n  results = {}\n  # iterate through the list\n  list1.each do |item|\n    # if the item is not in the hash, add it with a value of 1\n    if results[item] == nil\n      results[item] = 1\n    # if the item is in the hash, increment the value by 1\n    else\n      results[item] += 1\n    end\n  end\n  # return the hash\n  results\nend",
    "  frequency_hash = Hash.new(0)\n  list1.flatten.each { |element| frequency_hash[element] += 1 }\n  frequency_hash\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  # create an empty hash\n  freq_hash = {}\n  # iterate through the list\n  list1.each do |element|\n    # if the element is not in the hash\n    if !freq_hash.has_key?(element)\n      # add it to the hash with a value of 1\n      freq_hash[element] = 1\n    # otherwise\n    else\n      # increment the value by 1\n      freq_hash[element] += 1\n    end\n  end\n  # return the hash\n  freq_hash\nend",
    "  # your code here\n  hash = Hash.new(0)\n  list1.flatten.each do |x|\n    hash[x] += 1\n  end\n  hash\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.flatten.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h, v| h[v] += 1; h }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  frequency = Hash.new(0)\n  list1.flatten.each { |element| frequency[element] += 1 }\n  frequency\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.flatten.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq_hash = {}\n  list1.each do |list|\n    list.each do |element|\n      if freq_hash.has_key?(element)\n        freq_hash[element] += 1\n      else\n        freq_hash[element] = 1\n      end\n    end\n  end\n  freq_hash\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq_hash = {}\n  list1.each do |element|\n    if freq_hash.has_key?(element)\n      freq_hash[element] += 1\n    else\n      freq_hash[element] = 1\n    end\n  end\n  freq_hash\nend",
    "  # Your code here\n  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) {|word, counts| counts[word] += 1}\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  # your code here\n  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.flatten.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  freq = Hash.new(0)\n  list1.flatten.each { |word| freq[word] += 1 }\n  freq\nend",
    "  frequency = Hash.new(0)\n  list1.flatten.each { |element| frequency[element] += 1 }\n  frequency\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  # code goes here\n  freq_hash = Hash.new(0)\n  list1.flatten.each do |x|\n    freq_hash[x] += 1\n  end\n  freq_hash\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  # write your code here\n  frequency = Hash.new(0)\n  list1.flatten.each { |element| frequency[element] += 1 }\n  frequency\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  hash = {}\n  list1.each do |element|\n    if hash[element] == nil\n      hash[element] = 1\n    else\n      hash[element] += 1\n    end\n  end\n  hash\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq_hash = {}\n  list1.flatten.each do |element|\n    freq_hash[element] = list1.flatten.count(element)\n  end\n  freq_hash\nend",
    "  frequency = Hash.new(0)\n  list1.each do |item|\n    frequency[item] += 1\n  end\n  frequency\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  frequency = Hash.new(0)\n  list1.flatten.each { |word| frequency[word] += 1 }\n  frequency\nend",
    "  freq = Hash.new(0)\n  list1.flatten.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object({}) do |x, hash|\n    hash[x] = list1.flatten.count(x)\n  end\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq_hash = {}\n  list1.flatten.each do |x|\n    if freq_hash.has_key?(x)\n      freq_hash[x] += 1\n    else\n      freq_hash[x] = 1\n    end\n  end\n  freq_hash\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\nend",
    "  freq_hash = Hash.new(0)\n  list1.flatten.each do |element|\n    freq_hash[element] += 1\n  end\n  freq_hash\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.flatten.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq_hash = Hash.new(0)\n  list1.flatten.each { |element| freq_hash[element] += 1 }\n  freq_hash\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.flatten.each do |x|\n    freq[x] += 1\n  end\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h, v| h[v] += 1; h }\nend",
    "  # your code here\n  list1.flatten.inject(Hash.new(0)) { |h, v| h[v] += 1; h }\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  # your code here\n  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  frequency_hash = Hash.new(0)\n  list1.flatten.each do |element|\n    frequency_hash[element] += 1\n  end\n  return frequency_hash\nend",
    "  # create a new hash\n  new_hash = {}\n  # iterate through the list\n  list1.each do |item|\n    # if the item is not in the hash, add it and set the value to 1\n    if !new_hash.include?(item)\n      new_hash[item] = 1\n    # if the item is in the hash, add 1 to the value\n    else\n      new_hash[item] += 1\n    end\n  end\n  # return the hash\n  new_hash\nend",
    "  freq = Hash.new(0)\n  list1.flatten.each { |word| freq[word] += 1 }\n  freq\nend",
    "  frequency = Hash.new(0)\n  list1.each do |list|\n    list.each do |element|\n      frequency[element] += 1\n    end\n  end\n  frequency\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq_hash = {}\n  list1.flatten.each do |element|\n    freq_hash[element] = list1.flatten.count(element)\n  end\n  freq_hash\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  # Write your code here\n  list1.flatten!\n  hash = Hash.new(0)\n  list1.each { |x| hash[x] += 1 }\n  hash\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h, v| h[v] += 1; h }\nend"
  ]
}
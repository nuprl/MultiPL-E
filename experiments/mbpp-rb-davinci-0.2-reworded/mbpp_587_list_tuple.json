{
  "name": "mbpp_587_list_tuple",
  "language": "rb",
  "prompt": "# Write a function to convert an array to an array.\ndef list_tuple(listx)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_587_list_tuple.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_list_tuple\n    candidate = method(:list_tuple)\n    assert_equal([5, 10, 7, 4, 15, 3], candidate.call([5, 10, 7, 4, 15, 3]))\n    assert_equal([2, 4, 5, 6, 2, 3, 4, 4, 7], candidate.call([2, 4, 5, 6, 2, 3, 4, 4, 7]))\n    assert_equal([58, 44, 56], candidate.call([58, 44, 56]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    return tuple(listx)",
    "  listx.map { |x| x.to_a }\nend",
    "  listx.map { |x| x.to_s }\nend",
    "    listx.map {|x| x.to_a}\nend",
    "    return listx.to_a\nend",
    "    return tuple(listx)",
    "    return tuple(listx)",
    "    return tuple(listx)",
    "    return tuple(listx)",
    "    return tuple(listx)",
    "    return listx.to_a\nend",
    "    return listx.map {|x| x.to_a}\nend",
    "    return listx.to_a\nend",
    "    return tuple(listx)\nlist_tuple([1,2,3,4,5])",
    "    return tuple(listx)",
    "    listx.map { |x| x.to_a }\nend",
    "    return tuple(listx)",
    "    listx.map { |x| x.to_i }\nend",
    "  listx.map {|x| x.to_a}\nend",
    "    return tuple(listx)"
  ]
}
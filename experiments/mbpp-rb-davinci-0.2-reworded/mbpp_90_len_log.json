{
  "name": "mbpp_90_len_log",
  "language": "rb",
  "prompt": "# Write a rbthon function to find the length of the longest word.\ndef len_log(list1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_90_len_log.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_len_log\n    candidate = method(:len_log)\n    assert_equal(7, candidate.call([\"python\", \"PHP\", \"bigdata\"]))\n    assert_equal(3, candidate.call([\"a\", \"ab\", \"abc\"]))\n    assert_equal(5, candidate.call([\"small\", \"big\", \"tall\"]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  max = 0\n  list1.each do |i|\n    if i.length > max\n      max = i.length\n    end\n  end\n  return max\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.sort_by(&:length).last\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.map(&:length).max\nend",
    "  list1.map{|x| x.length}.max\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by {|x| x.length}\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.map! {|x| x.length}\n  list1.max\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "    list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length).length\nend",
    "\tlist1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  len = 0\n  list1.each do |word|\n    if len < word.length\n      len = word.length\n    end\n  end\n  return len\nend",
    "  list1.max_by { |x| x.length }\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length).length\nend",
    "  list1.max_by(&:length)\nend",
    "  len = 0\n  list1.each do |i|\n    if len < i.length\n      len = i.length\n    end\n  end\n  return len\nend",
    "  list1.max_by(&:length).length\nend",
    "  list1.max_by(&:length)\nend",
    "    list1.max_by(&:length)\nend\nputs len_log([\"Ruby\", \"Python\", \"Java\"])",
    "  list1.max_by(&:length)\nend",
    "  len_list = []\n  list1.each do |x|\n    len_list.push(x.length)\n  end\n  len_list.max\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.map! { |x| x.length }\n  list1.max\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  longest = list1.max_by(&:length)\n  puts longest.length\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by{|x| x.length}\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "    list1.max_by(&:length).length\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  max = 0\n  list1.each do |x|\n    if x.length > max\n      max = x.length\n    end\n  end\n  return max\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length).length\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length).length\nend",
    "  list1.max_by(&:length).length\nend",
    "  list1.sort_by! { |word| word.length }\n  list1[-1].length\nend",
    "  list1.max_by(&:length)\nend\nputs len_log([\"ruby\", \"python\", \"java\"])",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "\tlist1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.map! { |x| x.length }\n  list1.max\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length).length\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend",
    "  list1.max_by(&:length)\nend"
  ]
}
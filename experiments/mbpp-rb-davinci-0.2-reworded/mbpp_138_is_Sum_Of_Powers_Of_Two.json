{
  "name": "mbpp_138_is_Sum_Of_Powers_Of_Two",
  "language": "rb",
  "prompt": "# Write a rbthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\ndef is_Sum_Of_Powers_Of_Two(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_138_is_Sum_Of_Powers_Of_Two.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_is_Sum_Of_Powers_Of_Two\n    candidate = method(:is_Sum_Of_Powers_Of_Two)\n    assert_equal(true, candidate.call(10))\n    assert_equal(false, candidate.call(7))\n    assert_equal(true, candidate.call(14))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  return true if n == 0\n  return false if n < 0\n  while n > 0\n    return false if n % 2 != 0\n    n = n / 2\n  end\n  return true\nend",
    "  return true if n == 0\n  return false if n < 0\n  while n != 0\n    if n % 2 != 0\n      return false\n    end\n    n = n / 2\n  end\n  return true\nend",
    "  if n == 0\n    return false\n  end\n  while n != 1\n    if n % 2 != 0\n      return false\n    end\n    n = n / 2\n  end\n  return true\nend",
    "  sum = 0\n  i = 0\n  while sum < n\n    sum += 2**i\n    i += 1\n  end\n  if sum == n\n    return true\n  else\n    return false\n  end\nend\nputs is_Sum_Of_Powers_Of_Two(8)\nputs is_Sum_Of_Powers_Of_Two(7)\nputs is_Sum_Of_Powers_Of_Two(10)\nputs is_Sum_Of_Powers_Of_Two(16)\nputs is_Sum_Of_Powers_Of_Two(18)\nputs is_Sum_Of_Powers_Of_Two(20)",
    "  if n == 0\n    return false\n  end\n  while n != 1\n    if n % 2 != 0\n      return false\n    end\n    n = n / 2\n  end\n  return true\nend",
    "  if n == 0\n    return false\n  end\n  while n != 1\n    if n % 2 != 0\n      return false\n    end\n    n = n / 2\n  end\n  return true\nend",
    "  return true if n == 0\n  return false if n < 0\n  return is_Sum_Of_Powers_Of_Two(n - (2**Math.log2(n).floor))\nend",
    "  if n == 0\n    return false\n  end\n  while n != 1\n    if n % 2 != 0\n      return false\n    end\n    n = n / 2\n  end\n  return true\nend",
    "  return true if n == 0\n  return false if n < 0\n  while n > 1\n    if n % 2 != 0\n      return false\n    end\n    n = n / 2\n  end\n  return true\nend",
    "  if n == 0\n    return false\n  end\n  while n != 1\n    if n % 2 != 0\n      return false\n    end\n    n = n / 2\n  end\n  return true\nend",
    "  return true if n == 0\n  return false if n < 0\n  while n > 0\n    if n % 2 == 1\n      return false\n    end\n    n = n / 2\n  end\n  return true\nend",
    "  if n == 0\n    return false\n  end\n  while n != 1\n    if n % 2 != 0\n      return false\n    end\n    n = n / 2\n  end\n  return true\nend",
    "  if n == 0\n    return false\n  end\n  while n != 1\n    if n % 2 != 0\n      return false\n    end\n    n = n / 2\n  end\n  return true\nend\nputs is_Sum_Of_Powers_Of_Two(8)\nputs is_Sum_Of_Powers_Of_Two(7)\nputs is_Sum_Of_Powers_Of_Two(0)\nputs is_Sum_Of_Powers_Of_Two(1)\nputs is_Sum_Of_Powers_Of_Two(2)\nputs is_Sum_Of_Powers_Of_Two(3)\nputs is_Sum_Of_Powers_Of_Two(4)\nputs is_Sum_Of_Powers_Of_Two(5)\nputs is_Sum_Of_Powers_Of_Two(6)\nputs is_Sum_Of_Powers_Of_Two(7)\nputs is_Sum_Of_Powers_Of_Two(8)\nputs is_Sum_Of_Powers_Of_Two(9)\nputs is_Sum_Of_Powers_Of_Two(10)\nputs is_Sum_Of_Powers_Of_Two(11)\nputs is_Sum_Of_Powers_Of_Two(12)\nputs is_Sum_Of_Powers_Of_Two(13)\nputs is_Sum_Of_Powers_Of_Two(14)\nputs is_Sum_Of_Powers_Of_Two(15)\nputs is_Sum_Of_Powers_Of_Two(16)\nputs is_Sum_Of_Powers_Of_Two(17)\nputs is_Sum_Of_Powers_Of_Two(18)\nputs is_Sum_Of_Powers_Of_Two(19)\nputs is_Sum_Of_Powers_Of_Two(20)\nputs is_Sum_Of_Powers_Of_Two(21)\nputs is_Sum_Of_Powers_Of_Two(22)\nputs is_Sum_Of_Powers_",
    "  return true if n == 0\n  return false if n < 0\n  while n > 0\n    if n % 2 == 1\n      return false\n    end\n    n = n / 2\n  end\n  return true\nend",
    "  if n == 0\n    return false\n  end\n  while n != 1\n    if n % 2 != 0\n      return false\n    end\n    n = n / 2\n  end\n  return true\nend",
    "  if n == 0\n    return false\n  end\n  while n != 1\n    if n % 2 != 0\n      return false\n    end\n    n = n / 2\n  end\n  return true\nend",
    "  return true if n == 0\n  return false if n < 0\n  return is_Sum_Of_Powers_Of_Two(n - 2**(n.to_s(2).length - 1))\nend",
    "  if n == 0\n    return false\n  end\n  while n != 1\n    if n % 2 != 0\n      return false\n    end\n    n = n / 2\n  end\n  return true\nend",
    "  if n == 0\n    return false\n  end\n  while n != 1\n    if n % 2 != 0\n      return false\n    end\n    n = n / 2\n  end\n  return true\nend",
    "  if n == 0\n    return false\n  end\n  while n != 1\n    if n % 2 != 0\n      return false\n    end\n    n = n / 2\n  end\n  return true\nend"
  ]
}
{
  "name": "mbpp_806_max_run_uppercase",
  "language": "rb",
  "prompt": "# Write a function to find maximum run of uppercase characters in the given string.\ndef max_run_uppercase(test_str)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_806_max_run_uppercase.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_max_run_uppercase\n    candidate = method(:max_run_uppercase)\n    assert_equal(5, candidate.call(\"GeMKSForGERksISBESt\"))\n    assert_equal(6, candidate.call(\"PrECIOusMOVemENTSYT\"))\n    assert_equal(4, candidate.call(\"GooGLEFluTTER\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  test_str.split('').map { |char| char.ord }.each_with_object([0, 0]) do |char, (max, count), |\n    if char >= 65 && char <= 90\n      count += 1\n      max = count if count > max\n    else\n      count = 0\n    end\n  end.first\nend",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char == char.upcase\n      count += 1\n    else\n      count = 0\n    end\n    max_count = count if count > max_count\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_count = 0\n  count = 0\n  test_str.chars.each do |char|\n    if char == char.upcase\n      count += 1\n    else\n      count = 0\n    end\n    max_count = count if count > max_count\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |c|\n    if c.upcase == c\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  count = 0\n  max = 0\n  test_str.each_char do |char|\n    if char == char.upcase\n      count += 1\n      max = count if count > max\n    else\n      count = 0\n    end\n  end\n  max\nend",
    "  max_run = 0\n  run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      run += 1\n      max_run = run if run > max_run\n    else\n      run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char == char.upcase\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      run += 1\n      max_run = run if run > max_run\n    else\n      run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.match(/[A-Z]/)\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      count += 1\n    else\n      count = 0\n    end\n    max_count = count if count > max_count\n  end\n  max_count\nend",
    "  max = 0\n  curr = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      curr += 1\n    else\n      curr = 0\n    end\n    max = curr if curr > max\n  end\n  max\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  test_str.scan(/[A-Z]+/).max_by(&:length)\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char == char.upcase\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  # Write your code here\n  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      if current_run > max_run\n        max_run = current_run\n      end\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char == char.upcase\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  return test_str.scan(/[A-Z]+/).max_by(&:length).length\nend",
    "  test_str.chars.chunk_while { |a, b| a.upcase == b.upcase }.max_by(&:size).join\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.match(/[A-Z]/)\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char == char.upcase\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.match(/[A-Z]/)\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_count = 0\n  current_count = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_count += 1\n      max_count = current_count if current_count > max_count\n    else\n      current_count = 0\n    end\n  end\n  max_count\nend",
    "  test_str.chars.chunk{|x| x.upcase == x}.map{|x,y| y.length}.max\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.match(/[A-Z]/)\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      count += 1\n    else\n      count = 0\n    end\n    max_count = count if count > max_count\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.match(/[A-Z]/)\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.match(/[A-Z]/)\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  # split the string into an array of characters\n  # iterate through the array of characters\n  # if the character is uppercase, add it to a new array\n  # if the character is not uppercase, stop adding to the new array\n  # return the length of the new array\n  # if the new array is empty, return 0\n  char_array = test_str.split('')\n  uppercase_array = []\n  char_array.each do |char|\n    if char == char.upcase\n      uppercase_array << char\n    else\n      break\n    end\n  end\n  if uppercase_array.empty?\n    0\n  else\n    uppercase_array.length\n  end\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.match(/[A-Z]/)\n      current_run += 1\n    else\n      if current_run > max_run\n        max_run = current_run\n      end\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  # your code here\n  return test_str.scan(/[A-Z]+/).max_by(&:length).length\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_count = 0\n  current_count = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_count += 1\n    else\n      current_count = 0\n    end\n    max_count = current_count if current_count > max_count\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.match(/[A-Z]/)\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  # Write your code here\n  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char == char.upcase\n      count += 1\n    else\n      max_count = count if count > max_count\n      count = 0\n    end\n  end\n  max_count = count if count > max_count\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max = 0\n  current = 0\n  test_str.each_char do |char|\n    if char == char.upcase\n      current += 1\n    else\n      current = 0\n    end\n    max = current if current > max\n  end\n  max\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      count += 1\n      max_count = count if count > max_count\n    else\n      count = 0\n    end\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      count += 1\n    else\n      count = 0\n    end\n    max_count = count if count > max_count\n  end\n  max_count\nend",
    "  test_str.scan(/[A-Z]+/).max_by(&:length)\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      count += 1\n      max_count = count if count > max_count\n    else\n      count = 0\n    end\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char.match(/[A-Z]/)\n      count += 1\n    else\n      count = 0\n    end\n    max_count = count if count > max_count\n  end\n  max_count\nend",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      count += 1\n      max_count = count if count > max_count\n    else\n      count = 0\n    end\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.split(\"\").each do |char|\n    if char == char.upcase\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      count += 1\n    else\n      count = 0\n    end\n    max_count = count if count > max_count\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_count = 0\n  current_count = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_count += 1\n    else\n      current_count = 0\n    end\n    max_count = current_count if current_count > max_count\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char == char.upcase\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      run += 1\n    else\n      run = 0\n    end\n    max_run = run if run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.match(/[A-Z]/)\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  test_str.chars.chunk { |c| c.upcase == c }.map { |k, v| v.size }.max\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  run = 0\n  test_str.chars.each do |char|\n    if char.match(/[A-Z]/)\n      run += 1\n    else\n      max_run = run if run > max_run\n      run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  test_str.chars.chunk { |char| char.upcase == char }.map { |_, chunk| chunk.size }.max\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char == char.upcase\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_count = 0\n  current_count = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_count += 1\n      max_count = current_count if current_count > max_count\n    else\n      current_count = 0\n    end\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char == char.upcase\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  # split string into array of characters\n  char_arr = test_str.split(\"\")\n  # initialize variables\n  max_run = 0\n  current_run = 0\n  # iterate through array\n  char_arr.each do |char|\n    # if character is uppercase, increment current run\n    if char.upcase == char\n      current_run += 1\n    # if character is not uppercase, reset current run\n    else\n      current_run = 0\n    end\n    # if current run is greater than max run, set max run to current run\n    if current_run > max_run\n      max_run = current_run\n    end\n  end\n  # return max run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char == char.upcase\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  test_str.chars.chunk{|c| c.upcase == c}.map{|c, a| a.size}.max\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      run += 1\n    else\n      run = 0\n    end\n    max_run = run if run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  test_str.chars.chunk { |c| c.upcase == c }.map { |k, v| v.join }.max_by(&:length)\nend",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      count += 1\n    else\n      max_count = count if count > max_count\n      count = 0\n    end\n  end\n  max_count = count if count > max_count\n  max_count\nend",
    "  max_run = 0\n  run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      run += 1\n    else\n      max_run = run if run > max_run\n      run = 0\n    end\n  end\n  max_run = run if run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend"
  ]
}
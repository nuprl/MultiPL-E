{
  "name": "mbpp_756_text_match_zero_one",
  "language": "rb",
  "prompt": "# Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/rbthon-exercises/re/rbthon-re-exercise-3.php\ndef text_match_zero_one(text)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_756_text_match_zero_one.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_text_match_zero_one\n    candidate = method(:text_match_zero_one)\n    assert_equal(false, candidate.call(\"ac\"))\n    assert_equal(false, candidate.call(\"dc\"))\n    assert_equal(true, candidate.call(\"abbbba\"))\n    assert_equal(true, candidate.call(\"dsabbbba\"))\n    assert_equal(false, candidate.call(\"asbbbba\"))\n    assert_equal(true, candidate.call(\"abaaa\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  if text.match(/ab{0,1}/)\n    puts \"Matched\"\n  else\n    puts \"Not Matched\"\n  end\nend",
    "  if text.match(/ab{1,}/)\n    puts \"Matched\"\n  else\n    puts \"Not Matched\"\n  end\nend",
    "  if text.match(/^a\\w*b$/)\n    puts \"We have a match!\"\n  else\n    puts \"No match!\"\n  end\nend",
    "  if text.match(/ab{1,}/)\n    puts \"Matched\"\n  else\n    puts \"Not Matched\"\n  end\nend",
    "  if text.match(/^a\\w*b$/)\n    puts \"Matched\"\n  else\n    puts \"Not Matched\"\n  end\nend",
    "  if /ab?/.match(text)\n    puts \"Matched\"\n  else\n    puts \"Not matched\"\n  end\nend",
    "  if text.match(/^a\\w*b$/)\n    puts \"Matched\"\n  else\n    puts \"Not Matched\"\n  end\nend",
    "  if text.match(/^a\\w*b$/)\n    puts \"Match\"\n  else\n    puts \"No match\"\n  end\nend",
    "  if text.match(/ab{1,}/)\n    puts \"Matched\"\n  else\n    puts \"Not Matched\"\n  end\nend",
    "  if text.match(/^[a-z]*a[b]+[a-z]*$/)\n    puts \"Matched\"\n  else\n    puts \"Not Matched\"\n  end\nend",
    "  if /ab?/.match(text)\n    puts \"Matched\"\n  else\n    puts \"Not Matched\"\n  end\nend",
    "  if /ab?/.match(text)\n    puts \"Matched\"\n  else\n    puts \"Not Matched\"\n  end\nend",
    "  if /ab?/.match(text)\n    puts \"Matched\"\n  else\n    puts \"Not Matched\"\n  end\nend",
    "  if text.match(/^a\\w*b$/)\n    puts \"Matched\"\n  else\n    puts \"Not Matched\"\n  end\nend",
    "  if /ab+/.match(text)\n    puts \"Matched\"\n  else\n    puts \"Not matched\"\n  end\nend",
    "  if /ab?/.match(text)\n    puts \"Matched\"\n  else\n    puts \"Not Matched\"\n  end\nend",
    "    if /a[b]{1,}/.match(text)\n        puts \"Matched\"\n    else\n        puts \"Not Matched\"\n    end\nend\ntext_match_zero_one(\"abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb",
    "  if /ab?/.match(text)\n    puts \"Matched\"\n  else\n    puts \"Not matched\"\n  end\nend",
    "  if text.match(/^a\\w*b$/)\n    puts \"Matched\"\n  else\n    puts \"Not Matched\"\n  end\nend",
    "    text.scan(/ab?/)\nend"
  ]
}
{
  "name": "mbpp_720_add_dict_to_tuple",
  "language": "rb",
  "prompt": "# Write a function to add a hash to the array. The output should be an array.\ndef add_dict_to_tuple(test_tup, test_dict)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_720_add_dict_to_tuple.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_add_dict_to_tuple\n    candidate = method(:add_dict_to_tuple)\n    assert_equal([4, 5, 6, {\"MSAM\" => 1, \"is\" => 2, \"best\" => 3}], candidate.call([4, 5, 6], {\"MSAM\" => 1, \"is\" => 2, \"best\" => 3}))\n    assert_equal([1, 2, 3, {\"UTS\" => 2, \"is\" => 3, \"Worst\" => 4}], candidate.call([1, 2, 3], {\"UTS\" => 2, \"is\" => 3, \"Worst\" => 4}))\n    assert_equal([8, 9, 10, {\"POS\" => 3, \"is\" => 4, \"Okay\" => 5}], candidate.call([8, 9, 10], {\"POS\" => 3, \"is\" => 4, \"Okay\" => 5}))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    test_tup.push(test_dict)\nend",
    "    test_tup.push(test_dict)\nend",
    "    test_tup.push(test_dict)\nend",
    "  test_tup << test_dict\nend",
    "  # Your code here\nend",
    "    test_tup.push(test_dict)\nend",
    "  test_tup.push(test_dict)\nend",
    "    test_tup.push(test_dict)\nend",
    "    test_tup.push(test_dict)\nend",
    "  test_tup.push(test_dict)\nend",
    "    test_tup.push(test_dict)\nend",
    "    test_tup.push(test_dict)\nend",
    "    test_tup.push(test_dict)\nend",
    "    test_tup.push(test_dict)\nend",
    "    test_tup.push(test_dict)\nend",
    "    test_tup.push(test_dict)\nend",
    "    # Write your code here\n    test_tup.push(test_dict)\nend",
    "    test_tup.push(test_dict)\nend",
    "    test_tup.push(test_dict)\nend",
    "    test_tup.push(test_dict)\nend"
  ]
}
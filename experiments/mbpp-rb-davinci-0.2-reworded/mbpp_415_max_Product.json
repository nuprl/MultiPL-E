{
  "name": "mbpp_415_max_Product",
  "language": "rb",
  "prompt": "# Write a rbthon function to find a pair with highest product from a given array of integers.\ndef max_Product(arr)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_415_max_Product.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_max_Product\n    candidate = method(:max_Product)\n    assert_equal([7, 8], candidate.call([1, 2, 3, 4, 7, 0, 8, 4]))\n    assert_equal([-4, -6], candidate.call([0, -1, -2, -4, 5, 0, -6]))\n    assert_equal([2, 3], candidate.call([1, 2, 3]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  arr.sort!\n  arr[-1]*arr[-2]\nend",
    "  arr.sort!\n  return arr[-1]*arr[-2]\nend",
    "  max_product = -1\n  for i in 0..arr.length-1\n    for j in i+1..arr.length-1\n      product = arr[i] * arr[j]\n      if product > max_product\n        max_product = product\n      end\n    end\n  end\n  return max_product\nend",
    "  arr.sort!\n  return arr[-1] * arr[-2]\nend",
    "  arr.sort!\n  arr[-1] * arr[-2]\nend",
    "  max = 0\n  for i in 0..arr.length-1\n    for j in i+1..arr.length-1\n      if arr[i]*arr[j] > max\n        max = arr[i]*arr[j]\n      end\n    end\n  end\n  return max\nend",
    "  arr.sort!\n  return (arr[-1] * arr[-2])\nend",
    "  arr.max(2).inject(:*)\nend",
    "  max_product = 0\n  arr.each_with_index do |x, i|\n    arr.each_with_index do |y, j|\n      if i != j\n        product = x * y\n        if product > max_product\n          max_product = product\n        end\n      end\n    end\n  end\n  max_product\nend",
    "  arr.sort!\n  return arr[-1]*arr[-2]\nend",
    "  arr.sort!\n  return (arr[-1] * arr[-2])\nend",
    "  arr.sort!\n  return arr[-1]*arr[-2]\nend",
    "  arr.sort!\n  return arr[-1] * arr[-2]\nend",
    "  arr.sort!\n  return arr[-1] * arr[-2]\nend",
    "  arr.sort!\n  return arr[-1]*arr[-2]\nend",
    "  max = arr[0]\n  min = arr[0]\n  max_product = arr[0]\n  for i in 1..arr.length-1\n    if arr[i] < 0\n      temp = max\n      max = min\n      min = temp\n    end\n    max = [arr[i], arr[i]*max].max\n    min = [arr[i], arr[i]*min].min\n    max_product = [max_product, max].max\n  end\n  max_product\nend",
    "  arr.sort!\n  return arr[-1]*arr[-2]\nend",
    "  arr.sort!\n  return (arr[-1] * arr[-2])\nend",
    "  arr.sort!\n  return arr[-1]*arr[-2]\nend",
    "  arr.sort!\n  return (arr[-1] * arr[-2])\nend"
  ]
}
{
  "name": "mbpp_308_large_product",
  "language": "rb",
  "prompt": "# Write a function to find the specified number of largest products from two given arrays, selecting one factor from each array.\ndef large_product(nums1, nums2, n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_308_large_product.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_large_product\n    candidate = method(:large_product)\n    assert_equal([60, 54, 50], candidate.call([1, 2, 3, 4, 5, 6], [3, 6, 8, 9, 10, 6], 3))\n    assert_equal([60, 54, 50, 48], candidate.call([1, 2, 3, 4, 5, 6], [3, 6, 8, 9, 10, 6], 4))\n    assert_equal([60, 54, 50, 48, 45], candidate.call([1, 2, 3, 4, 5, 6], [3, 6, 8, 9, 10, 6], 5))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  nums1.sort!\n  nums2.sort!\n  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort[-n..-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort[-n..-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []",
    "  nums1.sort!.reverse!\n  nums2.sort!.reverse!\n  result = []\n  i = 0\n  while i < n\n    result << nums1[i] * nums2[i]\n    i += 1\n  end\n  result\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort[-n..-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  # Write your code here\n  nums1.sort!\n  nums2.sort!\n  result = []\n  i = nums1.length - 1\n  j = nums2.length - 1\n  while n > 0\n    if nums1[i] * nums2[j] > nums1[i - 1] * nums2[j - 1]\n      result << nums1[i] * nums2[j]\n      i -= 1\n      j -= 1\n    else\n      result << nums1[i - 1] * nums2[j - 1]\n      i -= 1\n      j -= 1\n    end\n    n -= 1\n  end\n  result\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort[-n..-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort[-n..-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  # Write your code here\n  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[0...n]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  # Write your code here\n  nums1.sort!\n  nums2.sort!\n  result = []\n  while n > 0\n    if nums1[-1] * nums2[-1] > nums1[0] * nums2[0]\n      result << nums1[-1] * nums2[-1]\n      nums1.pop\n      nums2.pop\n    else\n      result << nums1[0] * nums2[0]\n      nums1.shift\n      nums2.shift\n    end\n    n -= 1\n  end\n  result\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort[-n..-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort[-n..-1]\nend",
    "  nums1.sort!.reverse!\n  nums2.sort!.reverse!\n  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort!.reverse!\n  products[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  # sort both arrays in descending order\n  nums1.sort!.reverse!\n  nums2.sort!.reverse!",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  nums1.sort!.reverse!\n  nums2.sort!.reverse!\n  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort!.reverse!\n  products[0...n]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  # sort both arrays in descending order\n  nums1.sort!.reverse!\n  nums2.sort!.reverse!\n  # create a new array to store the products\n  products = []\n  # iterate through the first array\n  nums1.each do |num1|\n    # iterate through the second array\n    nums2.each do |num2|\n      # multiply the two numbers and store the product in the products array\n      products << num1 * num2\n    end\n  end\n  # sort the products array in descending order\n  products.sort!.reverse!\n  # return the first n products\n  products[0...n]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  nums1.sort!.reverse!\n  nums2.sort!.reverse!\n  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort!.reverse!\n  products[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  nums1.sort!\n  nums2.sort!\n  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort!.reverse!\n  products[0...n]\nend",
    "  nums1.sort!\n  nums2.sort!\n  nums1.reverse!\n  nums2.reverse!\n  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort!\n  products.reverse!\n  products[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  # Write your code here\n  nums1.sort!\n  nums2.sort!\n  nums1.reverse!\n  nums2.reverse!\n  result = []\n  for i in 0..n-1\n    result << nums1[i] * nums2[i]\n  end\n  result\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  # sort the arrays\n  nums1.sort!\n  nums2.sort!",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort[-n..-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  nums1.sort!.reverse!\n  nums2.sort!.reverse!\n  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort!.reverse!\n  products[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort[-n..-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort[-n..-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  # Write your code here\n  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.last(n)\nend",
    "  products = []",
    "  nums1.sort!\n  nums2.sort!\n  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort!\n  products[-n..-1]\nend",
    "  nums1.sort!.reverse!\n  nums2.sort!.reverse!\n  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort!.reverse!\n  products[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  nums1.sort!.reverse!\n  nums2.sort!.reverse!\n  result = []\n  i = 0\n  while i < n\n    result << nums1[i] * nums2[i]\n    i += 1\n  end\n  result\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort[-n..-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  # sort both arrays in descending order\n  nums1.sort!.reverse!\n  nums2.sort!.reverse!\n  # create a new array to store the products\n  products = []\n  # iterate through the first array\n  nums1.each do |num1|\n    # iterate through the second array\n    nums2.each do |num2|\n      # multiply the two numbers and push the product to the products array\n      products << num1 * num2\n    end\n  end\n  # sort the products array in descending order\n  products.sort!.reverse!\n  # return the first n elements of the products array\n  products[0...n]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort[-n..-1]\nend",
    "  nums1.sort!.reverse!\n  nums2.sort!.reverse!\n  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort!.reverse!\n  products[0...n]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort[-n..-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  nums1.sort!.reverse!\n  nums2.sort!.reverse!\n  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort!.reverse!\n  products[0...n]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  nums1.sort!.reverse!\n  nums2.sort!.reverse!\n  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort!.reverse!\n  products[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  nums1.sort!\n  nums2.sort!\n  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort!.reverse!\n  products[0..n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[0...n]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  nums1.sort!.reverse!\n  nums2.sort!.reverse!\n  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort!.reverse!\n  products[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  # sort the arrays\n  nums1.sort!\n  nums2.sort!",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort[-n..-1]\nend",
    "  # Write your code here\n  nums1.sort!\n  nums2.sort!\n  result = []\n  i = 0\n  j = 0\n  while result.length < n\n    if nums1[i] * nums2[j] > nums1[i] * nums2[j + 1]\n      result << nums1[i] * nums2[j]\n      j += 1\n    else\n      result << nums1[i] * nums2[j + 1]\n      i += 1\n    end\n  end\n  result[-1]\nend",
    "  nums1.sort!.reverse!\n  nums2.sort!.reverse!\n  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort!.reverse!\n  products[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort[-n..-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  # sort both arrays\n  nums1.sort!\n  nums2.sort!",
    "  nums1.sort!\n  nums2.sort!\n  result = []\n  until result.length == n\n    if nums1.last * nums2.last > nums1.first * nums2.last\n      result << nums1.pop * nums2.last\n    else\n      result << nums1.first * nums2.pop\n    end\n  end\n  result\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  # Write your code here\n  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort[-n..-1]\nend",
    "  # sort the arrays in descending order\n  nums1.sort!.reverse!\n  nums2.sort!.reverse!",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n-1]\nend",
    "  products = []\n  nums1.each do |num1|\n    nums2.each do |num2|\n      products << num1 * num2\n    end\n  end\n  products.sort.reverse[n - 1]\nend"
  ]
}
{
  "name": "mbpp_79_word_len",
  "language": "rb",
  "prompt": "# Write a rbthon function to check whether the length of the word is odd or not.\ndef word_len(s)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_79_word_len.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_word_len\n    candidate = method(:word_len)\n    assert_equal(false, candidate.call(\"Hadoop\"))\n    assert_equal(true, candidate.call(\"great\"))\n    assert_equal(true, candidate.call(\"structure\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  if s.length % 2 == 0\n    puts \"The word is even\"\n  else\n    puts \"The word is odd\"\n  end\nend",
    "  if s.length % 2 == 0\n    puts \"Even\"\n  else\n    puts \"Odd\"\n  end\nend",
    "  if s.length.odd?\n    return true\n  else\n    return false\n  end\nend",
    "  if s.length % 2 == 0\n    puts \"The word is even\"\n  else\n    puts \"The word is odd\"\n  end\nend",
    "  if s.length % 2 == 0\n    puts \"even\"\n  else\n    puts \"odd\"\n  end\nend",
    "  if s.length % 2 == 0\n    puts \"even\"\n  else\n    puts \"odd\"\n  end\nend",
    "  if s.length % 2 == 0\n    return \"even\"\n  else\n    return \"odd\"\n  end\nend",
    "  if s.length % 2 == 0\n    return \"even\"\n  else\n    return \"odd\"\n  end\nend",
    "  if s.length % 2 == 0\n    puts \"The length of the word is even\"\n  else\n    puts \"The length of the word is odd\"\n  end\nend",
    "  if s.length % 2 == 0\n    puts \"The length of the word is even\"\n  else\n    puts \"The length of the word is odd\"\n  end\nend",
    "  if s.length % 2 == 0\n    puts \"The word #{s} is even\"\n  else\n    puts \"The word #{s} is odd\"\n  end\nend",
    "  if s.length % 2 == 0\n    puts \"Even\"\n  else\n    puts \"Odd\"\n  end\nend",
    "  if s.length % 2 == 0\n    return \"Even\"\n  else\n    return \"Odd\"\n  end\nend",
    "  if s.length % 2 == 0\n    return \"even\"\n  else\n    return \"odd\"\n  end\nend",
    "  if s.length.odd?\n    puts \"The length of the word is odd\"\n  else\n    puts \"The length of the word is even\"\n  end\nend",
    "  if s.length % 2 == 0\n    puts \"even\"\n  else\n    puts \"odd\"\n  end\nend",
    "  if s.length % 2 == 0\n    puts \"Even\"\n  else\n    puts \"Odd\"\n  end\nend",
    "  if s.length % 2 == 0\n    puts \"Even\"\n  else\n    puts \"Odd\"\n  end\nend",
    "  if s.length % 2 == 0\n    puts \"The word #{s} is even\"\n  else\n    puts \"The word #{s} is odd\"\n  end\nend",
    "  if s.length % 2 == 0\n    return \"even\"\n  else\n    return \"odd\"\n  end\nend"
  ]
}
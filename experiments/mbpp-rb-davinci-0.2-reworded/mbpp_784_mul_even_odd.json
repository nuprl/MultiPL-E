{
  "name": "mbpp_784_mul_even_odd",
  "language": "rb",
  "prompt": "# Write a function to find the product of first even and odd number of a given array.\ndef mul_even_odd(list1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_784_mul_even_odd.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_mul_even_odd\n    candidate = method(:mul_even_odd)\n    assert_equal(4, candidate.call([1, 3, 5, 7, 4, 1, 6, 8]))\n    assert_equal(2, candidate.call([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\n    assert_equal(10, candidate.call([1, 5, 7, 9, 10]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  even_num = list1.select {|num| num.even?}\n  odd_num = list1.select {|num| num.odd?}\n  even_num[0] * odd_num[0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even_num = list1.select(&:even?)\n  odd_num = list1.select(&:odd?)\n  even_num[0] * odd_num[0]\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even_odd = []\n  list1.each do |num|\n    if num % 2 == 0\n      even_odd << num\n      break\n    end\n  end\n  list1.each do |num|\n    if num % 2 != 0\n      even_odd << num\n      break\n    end\n  end\n  even_odd.reduce(:*)\nend",
    "  even = list1.select{|x| x.even?}\n  odd = list1.select{|x| x.odd?}\n  puts \"Product of first even and odd number of a given array is #{even[0]*odd[0]}\"\nend\nmul_even_odd(list1)",
    "  even = list1.select{|x| x.even?}\n  odd = list1.select{|x| x.odd?}\n  even[0] * odd[0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even_odd = []\n  list1.each do |num|\n    if num % 2 == 0\n      even_odd << num\n      break\n    end\n  end\n  list1.each do |num|\n    if num % 2 != 0\n      even_odd << num\n      break\n    end\n  end\n  even_odd.inject(:*)\nend",
    "  even_num = list1.select(&:even?)\n  odd_num = list1.select(&:odd?)\n  even_num.first * odd_num.first\nend",
    "  even = list1.select {|num| num.even?}\n  odd = list1.select {|num| num.odd?}\n  return even[0] * odd[0]\nend",
    "  even_no = list1.select { |num| num.even? }\n  odd_no = list1.select { |num| num.odd? }\n  even_no[0] * odd_no[0]\nend",
    "  even_odd_list = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd_list << i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      even_odd_list << i\n      break\n    end\n  end\n  return even_odd_list.inject(:*)\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  puts \"Product of first even and odd number of a given array is #{even_num[0] * odd_num[0]}\"\nend",
    "  even_num = list1.select{|x| x%2==0}\n  odd_num = list1.select{|x| x%2!=0}\n  puts \"Product of first even and odd number of a given array is #{even_num[0]*odd_num[0]}\"\nend\nmul_even_odd(list1)",
    "  even = list1.select{|x| x%2==0}\n  odd = list1.select{|x| x%2!=0}\n  puts \"Product of first even and odd number of a given array is #{even[0]*odd[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even = list1.select {|x| x.even?}\n  odd = list1.select {|x| x.odd?}\n  puts even[0] * odd[0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even = list1.select{|x| x%2==0}\n  odd = list1.select{|x| x%2!=0}\n  puts \"Product of first even and odd number of a given array is #{even[0]*odd[0]}\"\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even_num = list1.select {|num| num.even?}\n  odd_num = list1.select {|num| num.odd?}\n  even_num[0] * odd_num[0]\nend",
    "  even = list1.select {|x| x.even?}\n  odd = list1.select {|x| x.odd?}\n  puts \"Product of first even and odd number of a given array is #{even[0] * odd[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even = list1.select{|x| x % 2 == 0}\n  odd = list1.select{|x| x % 2 != 0}\n  puts even[0] * odd[0]\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      puts num * list1[index+1]\n      break\n    end\n  end\nend",
    "  list1.each_with_index do |val,index|\n    if val.even?\n      puts \"The product of first even and odd number is : #{val * list1[index+1]}\"\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  even_num = list1.select {|num| num.even?}\n  odd_num = list1.select {|num| num.odd?}\n  even_num.first * odd_num.first\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num.first * odd_num.first\nend",
    "  even = list1.select { |x| x.even? }\n  odd = list1.select { |x| x.odd? }\n  puts \"Product of first even and odd number of a given array is #{even[0] * odd[0]}\"\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even = list1.select { |x| x.even? }\n  odd = list1.select { |x| x.odd? }\n  even[0] * odd[0]\nend",
    "  even_odd_list = list1.partition(&:even?)\n  even_odd_list[0][0] * even_odd_list[1][0]\nend",
    "  even_num = list1.select {|num| num.even?}\n  odd_num = list1.select {|num| num.odd?}\n  even_num[0] * odd_num[0]\nend",
    "  even_odd_list = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd_list << i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      even_odd_list << i\n      break\n    end\n  end\n  even_odd_list.inject(:*)\nend",
    "  even_odd_list = list1.partition {|x| x.even?}\n  even_odd_list[0][0] * even_odd_list[1][0]\nend",
    "  even = list1.select(&:even?)\n  odd = list1.select(&:odd?)\n  even[0] * odd[0]\nend",
    "  even_num = list1.select { |num| num.even? }.first\n  odd_num = list1.select { |num| num.odd? }.first\n  even_num * odd_num\nend",
    "  even_num = list1.select(&:even?)\n  odd_num = list1.select(&:odd?)\n  even_num[0] * odd_num[0]\nend",
    "  even = list1.select{|x| x.even?}\n  odd = list1.select{|x| x.odd?}\n  even[0] * odd[0]\nend",
    "  even_num = list1.select {|num| num.even?}\n  odd_num = list1.select {|num| num.odd?}\n  return even_num[0] * odd_num[0]\nend",
    "  even_num = list1.select(&:even?)\n  odd_num = list1.select(&:odd?)\n  even_num[0] * odd_num[0]\nend",
    "  even_odd = list1.partition(&:even?)\n  even_odd[0][0] * even_odd[1][0]\nend",
    "  even_no = list1.select { |x| x.even? }\n  odd_no = list1.select { |x| x.odd? }\n  puts \"The product of first even and odd number is #{even_no[0] * odd_no[0]}\"\nend",
    "  even_odd_list = []\n  list1.each do |num|\n    if num % 2 == 0\n      even_odd_list << num\n      break\n    end\n  end\n  list1.each do |num|\n    if num % 2 != 0\n      even_odd_list << num\n      break\n    end\n  end\n  even_odd_list[0] * even_odd_list[1]\nend",
    "  even = list1.select {|x| x.even?}\n  odd = list1.select {|x| x.odd?}\n  puts even[0] * odd[0]\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even_odd_list = list1.partition {|x| x.even?}\n  even_odd_list[0][0] * even_odd_list[1][0]\nend",
    "  list1.each_with_index do |x,i|\n    if x%2==0\n      puts x*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5])",
    "  even_odd_mul = list1.select{|x| x.even?}.first * list1.select{|x| x.odd?}.first\n  puts \"The product of first even and odd number of a given array is #{even_odd_mul}\"\nend",
    "  even_num = list1.select{|i| i%2==0}\n  odd_num = list1.select{|i| i%2!=0}\n  puts \"The product of first even and odd number of a given array is #{even_num[0]*odd_num[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even = list1.select {|i| i.even?}\n  odd = list1.select {|i| i.odd?}\n  even[0] * odd[0]\nend",
    "  even_no = list1.select { |x| x.even? }\n  odd_no = list1.select { |x| x.odd? }\n  puts \"Product of first even and odd number is #{even_no[0] * odd_no[0]}\"\nend",
    "  even_odd_list = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd_list << i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      even_odd_list << i\n      break\n    end\n  end\n  return even_odd_list.inject(:*)\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even = list1.select{|x| x%2==0}\n  odd = list1.select{|x| x%2!=0}\n  return even[0]*odd[0]\nend",
    "  list1.each_with_index do |x, i|\n    if x.even?\n      puts list1[i] * list1[i + 1]\n      break\n    end\n  end\nend",
    "  even_odd = []\n  list1.each do |num|\n    if num.even?\n      even_odd << num\n      break\n    end\n  end\n  list1.each do |num|\n    if num.odd?\n      even_odd << num\n      break\n    end\n  end\n  even_odd.inject(:*)\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num.first * odd_num.first\nend",
    "  even_odd_list = list1.partition { |x| x.even? }\n  return even_odd_list[0][0] * even_odd_list[1][0]\nend",
    "  even = list1.select { |x| x.even? }\n  odd = list1.select { |x| x.odd? }\n  puts even[0] * odd[0]\nend",
    "  even_num = list1.select {|num| num.even?}\n  odd_num = list1.select {|num| num.odd?}\n  even_num[0] * odd_num[0]\nend",
    "  even_odd_list = []\n  list1.each do |num|\n    if num % 2 == 0\n      even_odd_list << num\n      break\n    end\n  end\n  list1.each do |num|\n    if num % 2 != 0\n      even_odd_list << num\n      break\n    end\n  end\n  even_odd_list.inject(:*)\nend",
    "  even_num = list1.select {|x| x.even?}\n  odd_num = list1.select {|x| x.odd?}\n  puts \"The product of first even and odd number is #{even_num[0] * odd_num[0]}\"\nend",
    "  even = list1.select{|x| x%2 == 0}\n  odd = list1.select{|x| x%2 != 0}\n  puts \"Product of first even and odd number of a given array is #{even[0]*odd[0]}\"\nend",
    "  list1.each do |i|\n    if i%2==0\n      puts i*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even = list1.select { |x| x.even? }\n  odd = list1.select { |x| x.odd? }\n  even[0] * odd[0]\nend",
    "  even_odd = []\n  list1.each do |x|\n    if x.even?\n      even_odd << x\n      break\n    end\n  end\n  list1.each do |x|\n    if x.odd?\n      even_odd << x\n      break\n    end\n  end\n  return even_odd.inject(:*)\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even_no=list1.select{|x| x%2==0}\n  odd_no=list1.select{|x| x%2!=0}\n  puts \"Product of first even and odd number is #{even_no[0]*odd_no[0]}\"\nend",
    "  even_num = list1.select {|x| x.even?}\n  odd_num = list1.select {|x| x.odd?}\n  puts \"The product of first even and odd number is #{even_num[0] * odd_num[0]}\"\nend",
    "  even_num = list1.select {|num| num.even?}\n  odd_num = list1.select {|num| num.odd?}\n  return even_num[0] * odd_num[0]\nend",
    "  even = list1.select{|x| x.even?}\n  odd = list1.select{|x| x.odd?}\n  puts \"Product of first even and odd number of a given array is #{even[0]*odd[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even = list1.select {|i| i.even?}\n  odd = list1.select {|i| i.odd?}\n  even[0] * odd[0]\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even_num = list1.select { |num| num.even? }.first\n  odd_num = list1.select { |num| num.odd? }.first\n  even_num * odd_num\nend",
    "  even_odd_list = []\n  list1.each do |value|\n    if value.even?\n      even_odd_list << value\n      break\n    end\n  end\n  list1.each do |value|\n    if value.odd?\n      even_odd_list << value\n      break\n    end\n  end\n  even_odd_list.inject(:*)\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even_odd = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd << i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      even_odd << i\n      break\n    end\n  end\n  even_odd.inject(:*)\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  list1.each_with_index do |num,index|\n    if num.even?\n      puts list1[index]*list1[index+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5])",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even = list1.select{|x| x.even?}\n  odd = list1.select{|x| x.odd?}\n  even[0] * odd[0]\nend",
    "  even_num = list1.select(&:even?)\n  odd_num = list1.select(&:odd?)\n  even_num[0] * odd_num[0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num.first * odd_num.first\nend",
    "  even_num = list1.select {|num| num.even?}\n  odd_num = list1.select {|num| num.odd?}\n  even_num[0] * odd_num[0]\nend",
    "  even_num = list1.select{|x| x%2 == 0}\n  odd_num = list1.select{|x| x%2 != 0}\n  return even_num[0] * odd_num[0]\nend",
    "  even_odd = []\n  list1.each do |num|\n    if num.even?\n      even_odd << num\n      break\n    end\n  end\n  list1.each do |num|\n    if num.odd?\n      even_odd << num\n      break\n    end\n  end\n  even_odd.inject(:*)\nend",
    "  even = list1.select{|x| x%2==0}\n  odd = list1.select{|x| x%2!=0}\n  puts \"Product of first even and odd number is #{even[0]*odd[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even = list1.select { |x| x.even? }\n  odd = list1.select { |x| x.odd? }\n  even[0] * odd[0]\nend",
    "  even = list1.select { |x| x.even? }\n  odd = list1.select { |x| x.odd? }\n  puts \"The product of first even and odd number of a given array is #{even[0] * odd[0]}\"\nend",
    "  even_num = list1.select(&:even?)\n  odd_num = list1.select(&:odd?)\n  even_num[0] * odd_num[0]\nend",
    "  even = list1.select{|x| x%2 == 0}\n  odd = list1.select{|x| x%2 != 0}\n  puts \"Product of first even and odd number is #{even[0]*odd[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even = list1.select {|x| x.even?}\n  odd = list1.select {|x| x.odd?}\n  even[0] * odd[0]\nend",
    "  even_num = list1.select{|num| num.even?}\n  odd_num = list1.select{|num| num.odd?}\n  puts \"The product of first even and odd number of a given array is #{even_num[0] * odd_num[0]}\"\nend",
    "  list1.each_with_index do |x,i|\n    if x%2==0\n      puts x*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even_num = list1.select {|num| num.even?}\n  odd_num = list1.select {|num| num.odd?}\n  even_num[0] * odd_num[0]\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even = list1.select(&:even?)\n  odd = list1.select(&:odd?)\n  even[0] * odd[0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even_odd = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd << i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      even_odd << i\n      break\n    end\n  end\n  even_odd.inject(:*)\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even = list1.select(&:even?)\n  odd = list1.select(&:odd?)\n  even[0] * odd[0]\nend",
    "  even_num = list1.select { |num| num.even? }.first\n  odd_num = list1.select { |num| num.odd? }.first\n  even_num * odd_num\nend",
    "  even_num = list1.select{|num| num.even?}\n  odd_num = list1.select{|num| num.odd?}\n  return even_num[0] * odd_num[0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  puts \"The product of first even and odd number is #{even_num[0] * odd_num[0]}\"\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even_odd_list = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd_list << i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      even_odd_list << i\n      break\n    end\n  end\n  puts \"The product of first even and odd number of a given array is #{even_odd_list[0] * even_odd_list[1]}\"\nend",
    "  list1.each_with_index do |x,i|\n    if x.even?\n      puts x * list1[i+1]\n      break\n    end\n  end\nend",
    "  even = list1.select {|x| x.even?}\n  odd = list1.select {|x| x.odd?}\n  puts \"Product of first even and odd number of a given array is #{even[0] * odd[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  even_odd = list1.partition{|x| x.even?}\n  even_odd[0][0] * even_odd[1][0]\nend",
    "  even = list1.select { |i| i.even? }\n  odd = list1.select { |i| i.odd? }\n  even[0] * odd[0]\nend",
    "  even_number = list1.select { |x| x.even? }\n  odd_number = list1.select { |x| x.odd? }\n  puts \"Product of first even and odd number of a given array is #{even_number[0] * odd_number[0]}\"\nend",
    "  even = 0\n  odd = 0\n  for i in 0...list1.length\n    if list1[i] % 2 == 0\n      even = list1[i]\n      break\n    end\n  end\n  for i in 0...list1.length\n    if list1[i] % 2 != 0\n      odd = list1[i]\n      break\n    end\n  end\n  puts \"Product of first even and odd number of a given array is #{even * odd}\"\nend\nmul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])",
    "  even = list1.select { |x| x.even? }\n  odd = list1.select { |x| x.odd? }\n  puts \"Product of first even and odd number of a given array is #{even[0] * odd[0]}\"\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even = list1.select { |x| x.even? }\n  odd = list1.select { |x| x.odd? }\n  even[0] * odd[0]\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even_num = list1.select{|num| num%2==0}\n  odd_num = list1.select{|num| num%2!=0}\n  puts \"The product of first even and odd number is #{even_num[0]*odd_num[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even_num = list1.select {|num| num.even?}\n  odd_num = list1.select {|num| num.odd?}\n  even_num[0] * odd_num[0]\nend",
    "  even_no = list1.select { |num| num.even? }\n  odd_no = list1.select { |num| num.odd? }\n  even_no.first * odd_no.first\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even = list1.select { |x| x.even? }\n  odd = list1.select { |x| x.odd? }\n  even[0] * odd[0]\nend",
    "  list1.each_with_index do |value, index|\n    if value % 2 == 0\n      puts \"Product of first even and odd number is #{value * list1[index + 1]}\"\n      break\n    end\n  end\nend",
    "  even_odd_list = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd_list << i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      even_odd_list << i\n      break\n    end\n  end\n  even_odd_list.inject(:*)\nend",
    "  even_odd_mul = 1\n  list1.each do |i|\n    if i%2 == 0\n      even_odd_mul = even_odd_mul * i\n      break\n    end\n  end\n  list1.each do |i|\n    if i%2 != 0\n      even_odd_mul = even_odd_mul * i\n      break\n    end\n  end\n  return even_odd_mul\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num.first * odd_num.first\nend",
    "  even = list1.select{|i| i%2==0}\n  odd = list1.select{|i| i%2!=0}\n  puts \"The product of first even and odd number of a given array is #{even[0]*odd[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even = list1.select{|x| x%2==0}\n  odd = list1.select{|x| x%2!=0}\n  puts \"Product of first even and odd number of a given array is #{even[0]*odd[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even_odd_list = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd_list << i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      even_odd_list << i\n      break\n    end\n  end\n  even_odd_list.inject(:*)\nend\np mul_even_odd([1,2,3,4,5,6])",
    "  even_odd_list = []\n  list1.each do |num|\n    if num % 2 == 0\n      even_odd_list << num\n      break\n    end\n  end\n  list1.each do |num|\n    if num % 2 != 0\n      even_odd_list << num\n      break\n    end\n  end\n  puts \"The product of first even and odd number of a given array is #{even_odd_list[0] * even_odd_list[1]}\"\nend",
    "  list1.each_with_index do |value, index|\n    if value % 2 == 0\n      return value * list1[index + 1]\n    end\n  end\nend",
    "  even_num = list1.select{|num| num.even?}\n  odd_num = list1.select{|num| num.odd?}\n  puts \"Product of first even and odd number is #{even_num[0] * odd_num[0]}\"\nend",
    "  even = list1.select {|x| x.even?}\n  odd = list1.select {|x| x.odd?}\n  puts even[0] * odd[0]\nend",
    "  even_odd = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd << i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      even_odd << i\n      break\n    end\n  end\n  even_odd.inject(:*)\nend",
    "  even_num = list1.select(&:even?)[0]\n  odd_num = list1.select(&:odd?)[0]\n  even_num * odd_num\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even = list1.select(&:even?)\n  odd = list1.select(&:odd?)\n  even[0] * odd[0]\nend",
    "  even_num = list1.select{|x| x%2==0}\n  odd_num = list1.select{|x| x%2!=0}\n  puts \"Product of first even and odd number of a given array is #{even_num[0]*odd_num[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  even = list1.select(&:even?)\n  odd = list1.select(&:odd?)\n  even[0] * odd[0]\nend",
    "  even_odd = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd << i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      even_odd << i\n      break\n    end\n  end\n  puts \"The product of first even and odd number of a given array is #{even_odd[0] * even_odd[1]}\"\nend",
    "  even_odd = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd << i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      even_odd << i\n      break\n    end\n  end\n  puts even_odd.inject(:*)\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  even_list = list1.select { |num| num.even? }\n  odd_list = list1.select { |num| num.odd? }\n  even_list[0] * odd_list[0]\nend",
    "  even_odd_list = []\n  list1.each do |num|\n    if num % 2 == 0\n      even_odd_list << num\n      break\n    end\n  end\n  list1.each do |num|\n    if num % 2 != 0\n      even_odd_list << num\n      break\n    end\n  end\n  even_odd_list.inject(:*)\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even_num = list1.select{|x| x%2==0}\n  odd_num = list1.select{|x| x%2!=0}\n  puts \"Product of first even and odd number of a given array is #{even_num[0]*odd_num[0]}\"\nend",
    "  even_num = list1.find { |x| x.even? }\n  odd_num = list1.find { |x| x.odd? }\n  even_num * odd_num\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even.first * odd.first\nend",
    "  even = list1.select(&:even?)\n  odd = list1.select(&:odd?)\n  even[0] * odd[0]\nend",
    "  even = list1.select { |i| i.even? }\n  odd = list1.select { |i| i.odd? }\n  even[0] * odd[0]\nend",
    "  even_num = list1.select{|num| num.even?}\n  odd_num = list1.select{|num| num.odd?}\n  even_num[0] * odd_num[0]\nend",
    "  list1.each_with_index do |value, index|\n    if value % 2 == 0\n      puts value * list1[index + 1]\n      break\n    end\n  end\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even = list1.select { |x| x.even? }\n  odd = list1.select { |x| x.odd? }\n  even[0] * odd[0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num.first * odd_num.first\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even = list1.select {|x| x.even?}\n  odd = list1.select {|x| x.odd?}\n  puts even[0] * odd[0]\nend",
    "  even_num = list1.select {|num| num.even?}\n  odd_num = list1.select {|num| num.odd?}\n  even_num[0] * odd_num[0]\nend",
    "  even = list1.select {|x| x.even?}\n  odd = list1.select {|x| x.odd?}\n  puts \"Product of first even and odd number of a given array is #{even[0] * odd[0]}\"\nend",
    "  even_num = list1.select {|num| num.even?}\n  odd_num = list1.select {|num| num.odd?}\n  even_num[0] * odd_num[0]\nend",
    "  even_odd = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd << i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      even_odd << i\n      break\n    end\n  end\n  even_odd.inject(:*)\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num.first * odd_num.first\nend",
    "  even = list1.select {|num| num.even?}\n  odd = list1.select {|num| num.odd?}\n  even[0] * odd[0]\nend",
    "  even_odd_list = []\n  list1.each do |num|\n    if num % 2 == 0\n      even_odd_list << num\n    end\n  end\n  even_odd_list[0] * even_odd_list[-1]\nend",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      puts list1[index] * list1[index+1]\n      break\n    end\n  end\nend",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      puts \"The product of first even and odd number is #{num * list1[index + 1]}\"\n      break\n    end\n  end\nend",
    "  even_odd_list = []\n  list1.each do |num|\n    if num % 2 == 0\n      even_odd_list << num\n      break\n    end\n  end\n  list1.each do |num|\n    if num % 2 != 0\n      even_odd_list << num\n      break\n    end\n  end\n  even_odd_list.inject(:*)\nend",
    "  even_num = list1.select{|x| x%2==0}\n  odd_num = list1.select{|x| x%2!=0}\n  puts \"Product of first even and odd number is #{even_num[0]*odd_num[0]}\"\nend",
    "  even_num = list1.select{|num| num.even?}\n  odd_num = list1.select{|num| num.odd?}\n  puts \"Product of first even and odd number of a given array is #{even_num[0] * odd_num[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even = list1.select{|i| i%2==0}\n  odd = list1.select{|i| i%2!=0}\n  puts \"even number is #{even[0]}\"\n  puts \"odd number is #{odd[0]}\"\n  puts \"multiplication of even and odd number is #{even[0]*odd[0]}\"\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even_num = list1.select{|num| num%2==0}\n  odd_num = list1.select{|num| num%2!=0}\n  puts \"Product of first even and odd number of a given array is #{even_num[0]*odd_num[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even = list1.select { |x| x.even? }\n  odd = list1.select { |x| x.odd? }\n  even[0] * odd[0]\nend",
    "  even = list1.select{|x| x%2==0}\n  odd = list1.select{|x| x%2!=0}\n  puts \"Product of first even and odd number is #{even[0]*odd[0]}\"\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even_odd = list1.partition {|x| x.even?}\n  even_odd[0][0] * even_odd[1][0]\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even = list1.select {|x| x.even?}\n  odd = list1.select {|x| x.odd?}\n  return even[0] * odd[0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even = list1.select{|x| x%2 == 0}\n  odd = list1.select{|x| x%2 != 0}\n  return even[0]*odd[0]\nend",
    "  even = list1.select{|x| x%2==0}\n  odd = list1.select{|x| x%2!=0}\n  return even[0]*odd[0]\nend\nlist1 = [1,2,3,4,5,6,7,8,9,10]\nputs mul_even_odd(list1)",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even_num = list1.select{|x| x%2==0}\n  odd_num = list1.select{|x| x%2!=0}\n  puts \"Product of first even and odd number is #{even_num[0]*odd_num[0]}\"\nend",
    "  even_odd = list1.partition { |x| x.even? }\n  even_odd[0][0] * even_odd[1][0]\nend",
    "  even = list1.select { |x| x.even? }\n  odd = list1.select { |x| x.odd? }\n  even[0] * odd[0]\nend",
    "  even = list1.select { |x| x.even? }\n  odd = list1.select { |x| x.odd? }\n  even[0] * odd[0]\nend",
    "  even = list1.select{|x| x%2==0}\n  odd = list1.select{|x| x%2!=0}\n  puts \"Product of first even and odd number of a given array is #{even[0]*odd[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even_num = list1.select(&:even?)\n  odd_num = list1.select(&:odd?)\n  even_num[0] * odd_num[0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num.first * odd_num.first\nend",
    "  list1.each_with_index do |x,i|\n    if x%2==0\n      puts x*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6])",
    "  even = 0\n  odd = 0\n  for i in 0...list1.length\n    if list1[i] % 2 == 0\n      even = list1[i]\n      break\n    end\n  end\n  for i in 0...list1.length\n    if list1[i] % 2 != 0\n      odd = list1[i]\n      break\n    end\n  end\n  puts \"The product of first even and odd number is #{even * odd}\"\nend"
  ]
}
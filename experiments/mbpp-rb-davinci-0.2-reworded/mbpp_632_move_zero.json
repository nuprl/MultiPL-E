{
  "name": "mbpp_632_move_zero",
  "language": "rb",
  "prompt": "# Write a rbthon function to move all zeroes to the end of the given array.\ndef move_zero(num_list)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_632_move_zero.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_zero\n    candidate = method(:move_zero)\n    assert_equal([1, 2, 3, 4, 0, 0], candidate.call([1, 0, 2, 0, 3, 4]))\n    assert_equal([2, 3, 2, 4, 5, 0, 0, 0, 0], candidate.call([2, 3, 2, 0, 0, 4, 0, 5, 0]))\n    assert_equal([1, 1, 1, 0, 0], candidate.call([0, 1, 0, 1, 1]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  count = num_list.count(0)\n  num_list.delete(0)\n  count.times { num_list.push(0) }\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    else\n      print num\n    end\n  end\n  zero_count.times do\n    print 0\n  end\nend",
    "  num_list.delete(0)\n  num_list.push(0)\n  num_list\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    else\n      print num\n    end\n  end\n  zero_count.times do\n    print 0\n  end\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list << num\n    end\n  end\n  num_list.delete(0)\n  num_list.concat(zero_list)\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      zero_count += 1\n      num_list.delete_at(index)\n    end\n  end\n  zero_count.times { num_list.push(0) }\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    end\n  end\n  num_list.delete(0)\n  num_list.concat(zero_list)\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  return num_list\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list << num\n    end\n  end\n  num_list.delete(0)\n  num_list.concat(zero_list)\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      zero_count += 1\n      num_list.delete_at(index)\n    end\n  end\n  zero_count.times { num_list.push(0) }\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      zero_count += 1\n      num_list.delete_at(index)\n    end\n  end\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  return num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  new_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    else\n      new_list.push(num)\n    end\n  end\n  zero_count.times do\n    new_list.push(0)\n  end\n  new_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list << num\n    end\n  end\n  num_list.delete(0)\n  num_list.concat(zero_list)\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list << num\n    end\n  end\n  num_list.delete(0)\n  num_list.concat(zero_list)\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list << num\n    end\n  end\n  num_list.delete(0)\n  num_list.concat(zero_list)\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      num_list.delete_at(index)\n      zero_count += 1\n    end\n  end\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      zero_count += 1\n      num_list.delete_at(index)\n    end\n  end\n  zero_count.times { num_list.push(0) }\n  num_list\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      zero_count += 1\n      num_list.delete_at(index)\n    end\n  end\n  zero_count.times { num_list.push(0) }\n  num_list\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list << num\n    end\n  end\n  num_list - zero_list + zero_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      zero_count += 1\n      num_list.delete_at(index)\n    end\n  end\n  zero_count.times { num_list.push(0) }\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      zero_count += 1\n      num_list.delete_at(index)\n    end\n  end\n  zero_count.times { num_list.push(0) }\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      zero_count += 1\n      num_list.delete_at(index)\n    end\n  end\n  num_list.fill(0, num_list.length, zero_count)\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      zero_count += 1\n      num_list.delete_at(index)\n    end\n  end\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      zero_count += 1\n      num_list.delete_at(index)\n    end\n  end\n  zero_count.times { num_list.push(0) }\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      zero_count += 1\n      num_list.delete_at(index)\n    end\n  end\n  zero_count.times { num_list.push(0) }\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  return num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  return num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list << num\n    end\n  end\n  num_list.delete(0)\n  num_list.concat(zero_list)\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    else\n      print num\n    end\n  end\n  zero_count.times { print 0 }\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  # Write your code here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  return num_list\nend",
    "  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list << num\n    else\n      non_zero_list << num\n    end\n  end\n  non_zero_list + zero_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    end\n  end\n  num_list.delete(0)\n  num_list.push(zero_list)\n  num_list.flatten\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times { num_list.push(0) }\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  for i in 0...num_list.length\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    end\n  end\n  num_list.delete(0)\n  num_list.push(zero_list)\n  num_list.flatten\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      zero_count += 1\n      num_list.delete_at(index)\n    end\n  end\n  zero_count.times { num_list.push(0) }\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend\np move_zero([0,1,2,0,3,4,0,5,0])",
    "  num_list.sort!\n  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list << num\n      num_list.delete(num)\n    end\n  end\n  num_list.concat(zero_list)\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  # Write your code here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\n  return num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\n  num_list\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    end\n  end\n  num_list.delete(0)\n  num_list.concat(zero_list)\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      zero_count += 1\n      num_list.delete_at(index)\n    end\n  end\n  zero_count.times { num_list.push(0) }\n  num_list\nend",
    "  num_list.each_with_index do |num, index|\n    if num == 0\n      num_list.delete_at(index)\n      num_list.push(0)\n    end\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  return num_list\nend",
    "  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list << num\n    else\n      non_zero_list << num\n    end\n  end\n  non_zero_list + zero_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      num_list.delete_at(index)\n      zero_count += 1\n    end\n  end\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = num_list.count(0)\n  num_list.delete(0)\n  zero_count.times { num_list.push(0) }\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    else\n      print num\n    end\n  end\n  zero_count.times { print 0 }\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  return num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    end\n  end\n  num_list.delete(0)\n  num_list.concat(zero_list)\nend",
    "\tcount = 0\n\tnum_list.each do |num|\n\t\tif num != 0\n\t\t\tnum_list[count] = num\n\t\t\tcount += 1\n\t\tend\n\tend\n\twhile count < num_list.length\n\t\tnum_list[count] = 0\n\t\tcount += 1\n\tend\n\treturn num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      zero_count += 1\n      num_list.delete_at(index)\n    end\n  end\n  num_list.concat([0] * zero_count)\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list << num\n    end\n  end\n  num_list.delete(0)\n  num_list.concat(zero_list)\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      num_list.delete_at(index)\n      zero_count += 1\n    end\n  end\n  zero_count.times do\n    num_list << 0\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      zero_count += 1\n      num_list.delete_at(index)\n    end\n  end\n  num_list.concat(Array.new(zero_count, 0))\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\n  return num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  num_list.each_with_index do |num, index|\n    if num == 0\n      num_list.delete_at(index)\n      num_list.push(0)\n    end\n  end\n  num_list\nend",
    "  zero_count = num_list.count(0)\n  num_list.delete(0)\n  zero_count.times { num_list.push(0) }\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      zero_count += 1\n      num_list.delete_at(index)\n    end\n  end\n  zero_count.times { num_list.push(0) }\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  num_list.each_with_index do |num, index|\n    if num == 0\n      num_list.delete_at(index)\n      num_list.push(0)\n    end\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      zero_count += 1\n      num_list.delete_at(index)\n    end\n  end\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    end\n  end\n  num_list.delete(0)\n  num_list.concat(zero_list)\n  return num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list << num\n    end\n  end\n  num_list.delete(0)\n  num_list.concat(zero_list)\nend",
    "  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    else\n      non_zero_list.push(num)\n    end\n  end\n  return non_zero_list + zero_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list << num\n    end\n  end\n  num_list - zero_list + zero_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      zero_count += 1\n      num_list.delete_at(index)\n    end\n  end\n  num_list.concat(Array.new(zero_count, 0))\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list << num\n    end\n  end\n  num_list.delete(0)\n  num_list.concat(zero_list)\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      zero_count += 1\n      num_list.delete_at(index)\n    end\n  end\n  zero_count.times { num_list << 0 }\n  num_list\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list << num\n    end\n  end\n  num_list.delete(0)\n  num_list.concat(zero_list)\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      zero_count += 1\n      num_list.delete_at(index)\n    end\n  end\n  zero_count.times { num_list.push(0) }\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    else\n      non_zero_list.push(num)\n    end\n  end\n  non_zero_list.concat(zero_list)\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend"
  ]
}
{
  "name": "mbpp_629_Split",
  "language": "rb",
  "prompt": "# Write a rbthon function to find even numbers from an array of numbers.\ndef Split(list)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_629_Split.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_Split\n    candidate = method(:Split)\n    assert_equal([2, 4], candidate.call([1, 2, 3, 4, 5]))\n    assert_equal([4, 6, 8, 0], candidate.call([4, 5, 6, 7, 8, 0, 1]))\n    assert_equal([8, 12], candidate.call([8, 12, 15, 19]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  list.each do |i|\n    if i%2==0\n      puts i\n    end\n  end\nend\nSplit([1,2,3,4,5,6,7,8,9,10])",
    "  list.each do |i|\n    if i % 2 == 0\n      puts i\n    end\n  end\nend\nSplit([1,2,3,4,5,6,7,8,9,10])",
    "  even = []\n  odd = []\n  list.each do |i|\n    if i % 2 == 0\n      even.push(i)\n    else\n      odd.push(i)\n    end\n  end\n  return even, odd\nend",
    "  even = []\n  odd = []\n  list.each do |x|\n    if x % 2 == 0\n      even << x\n    else\n      odd << x\n    end\n  end\n  puts \"Even numbers are #{even}\"\n  puts \"Odd numbers are #{odd}\"\nend",
    "  list.each do |num|\n    if num % 2 == 0\n      puts num\n    end\n  end\nend",
    "  list.each do |x|\n    if x % 2 == 0\n      puts x\n    end\n  end\nend",
    "  list.each do |i|\n    if i % 2 == 0\n      puts i\n    end\n  end\nend",
    "  list.each do |i|\n    if i % 2 == 0\n      puts i\n    end\n  end\nend",
    "  list.each do |x|\n    if x % 2 == 0\n      puts x\n    end\n  end\nend\nSplit([1,2,3,4,5,6,7,8,9,10])",
    "  list.each do |i|\n    if i%2 == 0\n      puts i\n    end\n  end\nend",
    "  list.each do |x|\n    if x % 2 == 0\n      puts x\n    end\n  end\nend",
    "  list.each do |i|\n    if i%2==0\n      puts i\n    end\n  end\nend\nSplit([1,2,3,4,5,6,7,8,9,10])",
    "  list.each do |i|\n    if i % 2 == 0\n      puts i\n    end\n  end\nend",
    "    even = []\n    odd = []\n    list.each do |i|\n        if i % 2 == 0\n            even.push(i)\n        else\n            odd.push(i)\n        end\n    end\n    return even, odd\nend",
    "  list.each do |i|\n    if i % 2 == 0\n      puts i\n    end\n  end\nend",
    "  even = []\n  odd = []\n  list.each do |i|\n    if i % 2 == 0\n      even.push(i)\n    else\n      odd.push(i)\n    end\n  end\n  return even, odd\nend",
    "  list.each do |i|\n    if i % 2 == 0\n      puts i\n    end\n  end\nend",
    "  list.each do |x|\n    if x%2==0\n      puts x\n    end\n  end\nend",
    "  even = []\n  odd = []\n  list.each do |num|\n    if num % 2 == 0\n      even.push(num)\n    else\n      odd.push(num)\n    end\n  end\n  return even, odd\nend",
    "  even = []\n  odd = []\n  list.each do |num|\n    if num % 2 == 0\n      even.push(num)\n    else\n      odd.push(num)\n    end\n  end\n  return even, odd\nend"
  ]
}
{
  "name": "mbpp_619_move_num",
  "language": "rb",
  "prompt": "# Write a function to move all the numbers to the end of the given string.\ndef move_num(test_str)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_619_move_num.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_num\n    candidate = method(:move_num)\n    assert_equal(\"Iloveyouthreethousand1143553000\", candidate.call(\"I1love143you55three3000thousand\"))\n    assert_equal(\"AvengersAssemble124\", candidate.call(\"Avengers124Assemble\"))\n    assert_equal(\"Itsourpathtoseethingsdothings11121314151617\", candidate.call(\"Its11our12path13to14see15things16do17things\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-zA-Z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[^0-9]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[^0-9]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend",
    "  test_str.gsub(/[a-zA-Z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend",
    "  test_str.gsub(/[^0-9]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  # Write your code here\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '') + test_str.gsub(/\\d/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-z]/i, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  num = test_str.scan(/\\d+/)\n  alpha = test_str.scan(/\\D+/)\n  alpha.join + num.join\nend",
    "  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/\\d+/, '') + test_str.scan(/\\d+/).join\nend",
    "  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.split('').sort_by { |x| x.to_i }.join('')\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.delete!(\"^0-9\")\n  test_str.concat(test_str.delete!(\"0-9\"))\nend",
    "  test_str.gsub(/[a-zA-Z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-z]/i, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-z]/i, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.chars.partition { |c| c =~ /[a-z]/ }.join\nend",
    "  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend",
    "  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend",
    "  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend",
    "  test_str.gsub(/[a-z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend",
    "  test_str.gsub(/[a-zA-Z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-z]/, '').split('').join + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/\\D/, '') + test_str.gsub(/\\d/, '')\nend",
    "  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[^0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend",
    "  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend",
    "  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/\\d+/, '') + test_str.scan(/\\d+/).join\nend",
    "  test_str.chars.partition { |c| c =~ /[a-z]/ }.flatten.join\nend",
    "  test_str.delete('^0-9').concat(test_str.delete('0-9'))\nend",
    "  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend",
    "  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-zA-Z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/\\d+/, '') + test_str.scan(/\\d+/).join\nend",
    "  test_str.scan(/[a-zA-Z]+|\\d+/).join(\" \")\nend",
    "  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-zA-Z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend",
    "  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend",
    "  test_str.gsub(/[^0-9]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.scan(/[a-zA-Z]+|[0-9]+/).join\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-zA-Z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-z]/, ' ').split.join(' ') + test_str.gsub(/[0-9]/, ' ').split.join(' ')\nend",
    "  test_str.gsub(/[a-zA-Z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-z]/i, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend",
    "  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  num = test_str.scan(/\\d+/)\n  alpha = test_str.scan(/\\D+/)\n  alpha.join + num.join\nend",
    "  test_str.gsub(/[a-zA-Z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/\\D/, '').concat(test_str.gsub(/\\d/, ''))\nend",
    "  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  nums = test_str.scan(/\\d+/).join\n  test_str.gsub(/\\d+/, '') + nums\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/\\d/, '') + test_str.scan(/\\d/).join\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  num_arr = []\n  char_arr = []\n  test_str.split('').each do |char|\n    if char =~ /\\d/\n      num_arr << char\n    else\n      char_arr << char\n    end\n  end\n  char_arr.join('') + num_arr.join('')\nend",
    "  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend",
    "  # your code here\nend",
    "  test_str.gsub(/[a-zA-Z]/, \"\") + test_str.gsub(/[0-9]/, \"\")\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-zA-Z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/\\d+/, '') + test_str.scan(/\\d+/).join\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/\\d+/, '') + test_str.scan(/\\d+/).join\nend",
    "  test_str.gsub(/[a-zA-Z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend",
    "  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend",
    "  test_str.gsub(/[a-z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-zA-Z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend",
    "  test_str.gsub(/[a-zA-Z]+/, '').concat(test_str.gsub(/[0-9]+/, ''))\nend",
    "  # code goes here\n  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  num = test_str.scan(/\\d+/)\n  test_str.gsub!(/\\d+/, '')\n  test_str << num.join\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, \"\").concat(test_str.gsub(/[0-9]/, \"\"))\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, ' ').split(' ').join + test_str.gsub(/[0-9]/, ' ').split(' ').join\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.split('').sort_by { |x| x =~ /[a-z]/ ? 0 : 1 }.join\nend",
    "  test_str.gsub(/[a-z]/i, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend",
    "  test_str.gsub(/[a-z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, ' ').split.join + test_str.gsub(/[0-9]/, ' ').split.join\nend",
    "  test_str.gsub(/[a-z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[^a-zA-Z]/, '') + test_str.gsub(/[a-zA-Z]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-zA-Z]/, '') + test_str.gsub(/[0-9]/, '')\nend",
    "  test_str.gsub(/[a-z]/, '').concat(test_str.gsub(/[0-9]/, ''))\nend"
  ]
}
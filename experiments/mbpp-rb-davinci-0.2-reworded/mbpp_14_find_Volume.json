{
  "name": "mbpp_14_find_Volume",
  "language": "rb",
  "prompt": "# Write a rbthon function to find the volume of a triangular prism.\ndef find_Volume(l, b, h)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_14_find_Volume.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_Volume\n    candidate = method(:find_Volume)\n    assert_equal(240, candidate.call(10, 8, 6))\n    assert_equal(6, candidate.call(3, 2, 2))\n    assert_equal(1, candidate.call(1, 2, 1))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l*b*h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return (l * b * h) / 2\nend",
    "  return l * b * h\nend",
    "  return l*b*h\nend",
    "  return l * b * h\nend",
    "  return l*b*h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return (l * b * h) / 2\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend\nputs find_Volume(2, 3, 4)",
    "  return (l * b * h) / 2\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l*b*h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend\nputs find_Volume(2, 3, 4)",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  (l * b * h) / 2\nend",
    "  return l*b*h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l*b*h\nend",
    "  return l * b * h\nend",
    "  return l*b*h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return (l * b * h) / 2\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l*b*h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return (l * b * h) / 2\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return (l * b * h) / 2\nend",
    "  return l * b * h\nend",
    "  return (l * b * h) / 2\nend",
    "  return l * b * h\nend",
    "  return l*b*h\nend\nputs find_Volume(2, 3, 4)",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return (l * b * h) / 2\nend",
    "  return l * b * h\nend",
    "  return l*b*h\nend",
    "  return (l * b * h) / 2\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  l * b * h\nend",
    "  return l * b * h\nend",
    "  return (l * b * h) / 2\nend",
    "  return l*b*h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend",
    "  return l*b*h\nend",
    "    return (l*b*h)/2\nend\nputs find_Volume(5,6,7)",
    "  l * b * h\nend",
    "  return l * b * h\nend",
    "  return l * b * h\nend"
  ]
}
{
  "name": "mbpp_392_get_max_sum",
  "language": "rb",
  "prompt": "# Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).\ndef get_max_sum(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_392_get_max_sum.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_get_max_sum\n    candidate = method(:get_max_sum)\n    assert_equal(106, candidate.call(60))\n    assert_equal(12, candidate.call(10))\n    assert_equal(2, candidate.call(2))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 12\nend",
    "  return n if n <= 0\n  return n if n <= 2",
    "  return n if n <= 1\n  max_sum = [get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n].max\nend",
    "  return n if n <= 0\n  return n if n < 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\nend",
    "  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 0\n  return n if n <= 4",
    "  return n if n <= 0\n  return n if n < 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n < 12\n  max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\n  return max_sum if max_sum > n\n  n\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) if n >= 12\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) if n >= 12\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  max_sum = [get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n].max\n  return max_sum\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) if n >= 12\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\nend",
    "  return n if n <= 0\n  return n if n <= 2\n  return n if n <= 4",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) if n >= 12\nend",
    "  return n if n <= 11\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 11\nend",
    "  return n if n <= 0\n  return n if n < 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n >= 5\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\nend",
    "  return n if n <= 11\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 11\nend",
    "  return n if n < 12\n  max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4)\n  max_sum > n ? max_sum : n\nend",
    "  return n if n < 12\n  max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\n  [n, max_sum].max\nend",
    "  return n if n <= 1\n  return n if n == 2 || n == 3 || n == 4 || n == 5\n  return [get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n].max\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) if n >= 12\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 12\nend",
    "  return n if n <= 5\n  max_sum = 0\n  (2..5).each do |i|\n    max_sum = [max_sum, get_max_sum(n/i)].max\n  end\n  max_sum + n\nend",
    "  return n if n <= 0\n  return n if n <= 5",
    "  return n if n <= 0\n  return n if n <= 5",
    "  return n if n <= 0\n  return n if n <= 5",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) if n >= 12\nend",
    "  return n if n <= 5\n  max_sum = [get_max_sum(n/2), get_max_sum(n/3), get_max_sum(n/4), get_max_sum(n/5)].max\n  max_sum + n\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\nend",
    "  return n if n <= 1\n  return [get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n].max\nend",
    "  return n if n <= 11\n  max_sum = [get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n].max\nend",
    "  return n if n <= 1\n  return n if n == 2 || n == 3 || n == 4 || n == 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\nend",
    "  return n if n <= 1\n  return [get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n].max\nend",
    "  return n if n <= 0\n  return n if n <= 2",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n >= 12\nend",
    "  return n if n <= 0\n  return n if n == 1\n  return n if n == 2\n  return n if n == 3\n  return n if n == 4\n  return n if n == 5\n  return n if n == 6\n  return n if n == 7\n  return n if n == 8\n  return n if n == 9\n  return n if n == 10\n  return n if n == 11\n  return n if n == 12\n  return n if n == 13\n  return n if n == 14\n  return n if n == 15\n  return n if n == 16\n  return n if n == 17\n  return n if n == 18\n  return n if n == 19\n  return n if n == 20\n  return n if n == 21\n  return n if n == 22\n  return n if n == 23\n  return n if n == 24\n  return n if n == 25\n  return n if n == 26\n  return n if n == 27\n  return n if n == 28\n  return n if n == 29\n  return n if n == 30\n  return n if n == 31\n  return n if n == 32\n  return n if n == 33\n  return n if n == 34\n  return n if n == 35\n  return n if n == 36\n  return n if n == 37\n  return n if n == 38\n  return n if n == 39\n  return n if n == 40\n  return n if n == 41\n  return n if n == 42\n  return n if n == 43\n  return n if n == 44\n  return n if n == 45\n  return n if n == 46\n  return n if n == 47\n  return n if n == 48\n  return n if n == 49\n  return n if n == 50\n  return n if n == 51\n  return n if n == 52\n  return n if n == 53\n  return n if n == 54\n  return n if n == 55\n  return n if n == 56\n  return n if n == 57\n  return n if n == 58\n  return n if n == 59\n  return n if n == 60\n  return n if n == 61\n  return n if n == 62\n  return n if n == 63",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n >= 12\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n >= 12\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return [get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n].max\nend",
    "  return n if n < 12\n  max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\n  max_sum > n ? max_sum : n\nend",
    "  return n if n <= 1\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 1\nend",
    "  return n if n <= 0\n  return n if n <= 2\n  return n if n <= 4",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 1\n  return n if n < 5\n  get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 12\nend",
    "  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 2\n  return n + get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 12\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 0\n  return n if n <= 5",
    "  return n if n <= 0\n  return n if n <= 5",
    "  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 0\n  return n if n <= 5",
    "  return n if n <= 0\n  return n if n <= 2\n  return n if n <= 4\n  return n if n <= 5",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 2\n  return n + get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\nend",
    "  return n if n <= 0\n  return n if n <= 5",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n >= 12\nend",
    "  return n if n <= 0\n  return n if n == 1\n  return n if n == 2\n  return n if n == 3\n  return n if n == 4\n  return n if n == 5\n  return n if n == 6\n  return n if n == 7\n  return n if n == 8\n  return n if n == 9\n  return n if n == 10\n  return n if n == 11\n  return n if n == 12\n  return n if n == 13\n  return n if n == 14\n  return n if n == 15\n  return n if n == 16\n  return n if n == 17\n  return n if n == 18\n  return n if n == 19\n  return n if n == 20\n  return n if n == 21\n  return n if n == 22\n  return n if n == 23\n  return n if n == 24\n  return n if n == 25\n  return n if n == 26\n  return n if n == 27\n  return n if n == 28\n  return n if n == 29\n  return n if n == 30\n  return n if n == 31\n  return n if n == 32\n  return n if n == 33\n  return n if n == 34\n  return n if n == 35\n  return n if n == 36\n  return n if n == 37\n  return n if n == 38\n  return n if n == 39\n  return n if n == 40\n  return n if n == 41\n  return n if n == 42\n  return n if n == 43\n  return n if n == 44\n  return n if n == 45\n  return n if n == 46\n  return n if n == 47\n  return n if n == 48\n  return n if n == 49\n  return n if n == 50\n  return n if n == 51\n  return n if n == 52\n  return n if n == 53\n  return n if n == 54\n  return n if n == 55\n  return n if n == 56\n  return n if n == 57\n  return n if n == 58\n  return n if n == 59\n  return n if n == 60\n  return n if n == 61\n  return n if n == 62\n  return n if n == 63",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\nend",
    "  return n if n <= 11\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 11\nend",
    "  return n if n <= 10\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 10\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 0\n  return n if n <= 2",
    "  return n if n <= 11\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 11\nend",
    "  return n if n == 0\n  return n if n == 1\n  return n if n == 2\n  return n if n == 3\n  return n if n == 4\n  return n if n == 5\n  return n if n == 6\n  return n if n == 7\n  return n if n == 8\n  return n if n == 9\n  return n if n == 10\n  return n if n == 11\n  return n if n == 12\n  return n if n == 13\n  return n if n == 14\n  return n if n == 15\n  return n if n == 16\n  return n if n == 17\n  return n if n == 18\n  return n if n == 19\n  return n if n == 20\n  return n if n == 21\n  return n if n == 22\n  return n if n == 23\n  return n if n == 24\n  return n if n == 25\n  return n if n == 26\n  return n if n == 27\n  return n if n == 28\n  return n if n == 29\n  return n if n == 30\n  return n if n == 31\n  return n if n == 32\n  return n if n == 33\n  return n if n == 34\n  return n if n == 35\n  return n if n == 36\n  return n if n == 37\n  return n if n == 38\n  return n if n == 39\n  return n if n == 40\n  return n if n == 41\n  return n if n == 42\n  return n if n == 43\n  return n if n == 44\n  return n if n == 45\n  return n if n == 46\n  return n if n == 47\n  return n if n == 48\n  return n if n == 49\n  return n if n == 50\n  return n if n == 51\n  return n if n == 52\n  return n if n == 53\n  return n if n == 54\n  return n if n == 55\n  return n if n == 56\n  return n if n == 57\n  return n if n == 58\n  return n if n == 59\n  return n if n == 60\n  return n if n == 61\n  return n if n == 62\n  return n if n == 63",
    "  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 5\n  max = [get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n].max\nend",
    "  return n if n <= 0\n  return n if n <= 5",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 12\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 5\n  max_sum = 0\n  (2..5).each do |i|\n    max_sum = [max_sum, get_max_sum(n/i)].max\n  end\n  max_sum + n\nend",
    "  return n if n <= 5\n  max = [get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n].max\nend",
    "  return n if n <= 0\n  return n if n <= 5",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 12\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 0\n  return n if n <= 5",
    "  return n if n <= 0\n  return n if n <= 2\n  return n if n <= 4\n  return n if n <= 5",
    "  return n if n <= 0\n  return n if n <= 4",
    "  return n if n <= 1\n  return [get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n].max\nend",
    "  return n if n <= 2\n  return n + get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n >= 12\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n >= 12\nend",
    "  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n < 12",
    "  return n if n <= 0\n  return n if n <= 2\n  return n if n <= 4",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n >= 12\nend",
    "  return n if n <= 1\n  return n if n == 2\n  return n if n == 3\n  return n if n == 4\n  return n if n == 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 0\n  return n if n <= 4\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 4\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 12\nend",
    "  return n if n <= 0\n  return n if n < 6\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\nend",
    "  return n if n <= 0\n  return n if n <= 2\n  return n if n <= 4",
    "  return n if n <= 0\n  return n if n <= 4",
    "  return n if n < 12\n  max_sum = 0\n  max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 12\n  return [max_sum, n].max\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) if n > 12\nend",
    "  return n if n <= 11\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 11\nend",
    "  return n if n <= 0\n  return n if n <= 4",
    "  return n if n <= 11\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) if n > 11\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n >= 12\nend",
    "  return n if n <= 0\n  return n if n <= 5",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 12\nend",
    "  return n if n <= 0\n  return n if n <= 2",
    "  return n if n <= 11\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 11\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 11\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) if n > 11\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\nend",
    "  return n if n <= 5\n  max_sum = [get_max_sum(n/2), get_max_sum(n/3), get_max_sum(n/4), get_max_sum(n/5)].max\n  max_sum + n\nend",
    "  return n if n < 12\n  max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\n  return max_sum > n ? max_sum : n\nend",
    "  return n if n <= 0\n  return n if n <= 4",
    "  return n if n <= 0\n  return n if n <= 5\n  return [get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n].max\nend",
    "  return n if n < 12\n  max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\n  return max_sum if max_sum > n\n  return n\nend",
    "  return n if n <= 0\n  return n if n < 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n >= 5\nend",
    "  return n if n <= 11\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) if n > 11\nend",
    "  return n if n <= 0\n  return n if n <= 5",
    "  return n if n <= 0\n  return n if n <= 4\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\nend",
    "  return n if n <= 0\n  return n if n <= 4",
    "  return n if n <= 0\n  return [get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n].max\nend",
    "  return n if n <= 1\n  return n if n == 2 || n == 3 || n == 4 || n == 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 12\nend",
    "  return n if n <= 0\n  return n if n <= 5",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 12\nend",
    "  return n if n <= 0\n  return @cache[n] if @cache[n]\n  @cache[n] = [get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n].max\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 1\n  return n if n <= 2\n  return n if n <= 3\n  return n if n <= 4\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 12\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n >= 12\nend",
    "  return n if n <= 0\n  return n if n <= 4",
    "  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n >= 12\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 12\nend",
    "  return n if n <= 0\n  return n if n <= 4",
    "  return n if n <= 0\n  return n if n <= 2",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) if n >= 12\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 0\n  return n if n <= 5",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 12\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 12\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 12\nend",
    "  return n if n < 12\n  max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\n  max_sum > n ? max_sum : n\nend",
    "  return n if n <= 11\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\nend",
    "  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  if n <= 0\n    return 0\n  end\n  return n if n <= 5\n  return [get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n].max\nend",
    "  return n if n <= 0\n  return n if n <= 5",
    "  return n if n < 12\n  [get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n].max\nend",
    "  return n if n <= 0\n  return n if n <= 2",
    "  return n if n <= 0\n  return n if n <= 4",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 12\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) if n >= 12\nend",
    "  return n if n <= 0\n  return n if n <= 2\n  return n if n <= 4",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) if n >= 12\nend",
    "  return n if n <= 0\n  return n if n <= 2",
    "  return n if n == 0\n  return n if n == 1\n  return n if n == 2\n  return n if n == 3\n  return n if n == 4\n  return n if n == 5\n  return n if n == 6\n  return n if n == 7\n  return n if n == 8\n  return n if n == 9\n  return n if n == 10\n  return n if n == 11\n  return n if n == 12\n  return n if n == 13\n  return n if n == 14\n  return n if n == 15\n  return n if n == 16\n  return n if n == 17\n  return n if n == 18\n  return n if n == 19\n  return n if n == 20\n  return n if n == 21\n  return n if n == 22\n  return n if n == 23\n  return n if n == 24\n  return n if n == 25\n  return n if n == 26\n  return n if n == 27\n  return n if n == 28\n  return n if n == 29\n  return n if n == 30\n  return n if n == 31\n  return n if n == 32\n  return n if n == 33\n  return n if n == 34\n  return n if n == 35\n  return n if n == 36\n  return n if n == 37\n  return n if n == 38\n  return n if n == 39\n  return n if n == 40\n  return n if n == 41\n  return n if n == 42\n  return n if n == 43\n  return n if n == 44\n  return n if n == 45\n  return n if n == 46\n  return n if n == 47\n  return n if n == 48\n  return n if n == 49\n  return n if n == 50\n  return n if n == 51\n  return n if n == 52\n  return n if n == 53\n  return n if n == 54\n  return n if n == 55\n  return n if n == 56\n  return n if n == 57\n  return n if n == 58\n  return n if n == 59\n  return n if n == 60\n  return n if n == 61\n  return n if n == 62\n  return n if n == 63",
    "  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n >= 12\nend",
    "  return n if n <= 0\n  return n if n <= 5",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n < 2\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 2\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n >= 12\nend",
    "  return n if n <= 1\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 1\nend",
    "  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n < 12\n  max_sum = [get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n].max\n  return max_sum\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n >= 12\nend",
    "  return n if n <= 6\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 6\nend",
    "  return n if n < 12\n  max_sum = [get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n].max\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) if n >= 12\nend",
    "  return n if n <= 0\n  return n if n <= 2\n  return n if n <= 4\n  return n if n <= 6",
    "  return n if n < 12\n  max_sum = get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\n  max_sum > n ? max_sum : n\nend",
    "  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n >= 12\nend",
    "  return n if n <= 0\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\nend",
    "  return n if n <= 0\n  return [get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n].max\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) if n >= 12\nend",
    "  return n if n <= 11\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) if n > 11\nend",
    "  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n > 5\nend",
    "  return n if n <= 0\n  return n if n < 5",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n >= 12\nend",
    "  return n if n < 12\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n >= 12\nend",
    "  return n if n <= 0\n  return @memo[n] if @memo[n]\n  @memo[n] = [get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5), n].max\nend",
    "  return n if n <= 0\n  return n if n < 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5) if n >= 5\nend",
    "  return n if n <= 0\n  return n if n <= 2\n  return n if n <= 4\n  return n if n <= 5\n  return get_max_sum(n/2) + get_max_sum(n/3) + get_max_sum(n/4) + get_max_sum(n/5)\nend",
    "  return n if n <= 0\n  return n if n <= 2\n  return n if n <= 4",
    "  return n if n <= 0\n  return n if n <= 2"
  ]
}
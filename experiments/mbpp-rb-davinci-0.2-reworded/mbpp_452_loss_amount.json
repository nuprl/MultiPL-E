{
  "name": "mbpp_452_loss_amount",
  "language": "rb",
  "prompt": "# Write a function that gives loss amount on a sale if the given amount has loss else return 0.\ndef loss_amount(actual_cost, sale_amount)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_452_loss_amount.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_loss_amount\n    candidate = method(:loss_amount)\n    assert_equal(0, candidate.call(1500, 1200))\n    assert_equal(100, candidate.call(100, 200))\n    assert_equal(3000, candidate.call(2000, 5000))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  if actual_cost > sale_amount\n    actual_cost - sale_amount\n  else\n    0\n  end\nend",
    "  if actual_cost > sale_amount\n    actual_cost - sale_amount\n  else\n    0\n  end\nend",
    "  if actual_cost > sale_amount\n    actual_cost - sale_amount\n  else\n    0\n  end\nend",
    "  if actual_cost > sale_amount\n    return actual_cost - sale_amount\n  else\n    return 0\n  end\nend",
    "  if actual_cost > sale_amount\n    return actual_cost - sale_amount\n  else\n    return 0\n  end\nend",
    "  if actual_cost > sale_amount\n    return actual_cost - sale_amount\n  else\n    return 0\n  end\nend",
    "  if actual_cost > sale_amount\n    return actual_cost - sale_amount\n  else\n    return 0\n  end\nend",
    "  if actual_cost > sale_amount\n    return actual_cost - sale_amount\n  else\n    return 0\n  end\nend",
    "  if actual_cost > sale_amount\n    return actual_cost - sale_amount\n  else\n    return 0\n  end\nend",
    "  if actual_cost > sale_amount\n    loss = actual_cost - sale_amount\n    puts \"Loss amount is #{loss}\"\n  else\n    puts \"No loss\"\n  end\nend",
    "  if actual_cost > sale_amount\n    return actual_cost - sale_amount\n  else\n    return 0\n  end\nend",
    "  if actual_cost > sale_amount\n    actual_cost - sale_amount\n  else\n    0\n  end\nend",
    "  if actual_cost > sale_amount\n    actual_cost - sale_amount\n  else\n    0\n  end\nend",
    "  if actual_cost > sale_amount\n    return actual_cost - sale_amount\n  else\n    return 0\n  end\nend",
    "  if actual_cost > sale_amount\n    actual_cost - sale_amount\n  else\n    0\n  end\nend",
    "  if actual_cost > sale_amount\n    actual_cost - sale_amount\n  else\n    0\n  end\nend",
    "  if actual_cost > sale_amount\n    actual_cost - sale_amount\n  else\n    0\n  end\nend",
    "  if actual_cost > sale_amount\n    actual_cost - sale_amount\n  else\n    0\n  end\nend",
    "  if actual_cost > sale_amount\n    return actual_cost - sale_amount\n  else\n    return 0\n  end\nend",
    "  if actual_cost > sale_amount\n    actual_cost - sale_amount\n  else\n    0\n  end\nend"
  ]
}
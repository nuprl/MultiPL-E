{
  "name": "mbpp_554_Split",
  "language": "rb",
  "prompt": "# Write a rbthon function which takes an array of integers and only returns the odd ones.\ndef Split(list)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_554_Split.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_Split\n    candidate = method(:Split)\n    assert_equal([1, 3, 5], candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal([11, 13], candidate.call([10, 11, 12, 13]))\n    assert_equal([7, 9, 1], candidate.call([7, 8, 9, 1]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  list.select {|x| x % 2 != 0}\nend",
    "  list.select { |num| num.odd? }\nend",
    "  odd = []\n  list.each do |x|\n    if x % 2 != 0\n      odd.push(x)\n    end\n  end\n  return odd\nend",
    "  list.select {|x| x % 2 != 0}\nend",
    "  list.select { |x| x.odd? }\nend",
    "  list.select { |x| x % 2 != 0 }\nend",
    "  odd = []\n  list.each do |i|\n    if i % 2 != 0\n      odd.push(i)\n    end\n  end\n  return odd\nend",
    "  list.select { |x| x.odd? }\nend",
    "  odd_list = []\n  list.each do |num|\n    if num % 2 != 0\n      odd_list.push(num)\n    end\n  end\n  return odd_list\nend",
    "  odd_list = []\n  list.each do |number|\n    if number % 2 != 0\n      odd_list.push(number)\n    end\n  end\n  return odd_list\nend",
    "  list.select {|x| x % 2 != 0}\nend",
    "  odd = []\n  list.each do |i|\n    if i % 2 == 1\n      odd.push(i)\n    end\n  end\n  return odd\nend",
    "  list.select { |num| num.odd? }\nend",
    "  odd = []\n  list.each do |i|\n    if i % 2 != 0\n      odd.push(i)\n    end\n  end\n  return odd\nend",
    "  odd = []\n  list.each do |x|\n    if x % 2 != 0\n      odd.push(x)\n    end\n  end\n  return odd\nend",
    "  odd_list = []\n  list.each do |i|\n    if i % 2 != 0\n      odd_list << i\n    end\n  end\n  return odd_list\nend",
    "  odd = []\n  even = []\n  list.each do |num|\n    if num % 2 == 0\n      even << num\n    else\n      odd << num\n    end\n  end\n  return odd\nend",
    "  odd = []\n  list.each do |i|\n    if i % 2 == 1\n      odd.push(i)\n    end\n  end\n  return odd\nend",
    "  odd_list = []\n  list.each do |i|\n    if i % 2 != 0\n      odd_list << i\n    end\n  end\n  return odd_list\nend",
    "  list.select { |x| x.odd? }\nend"
  ]
}
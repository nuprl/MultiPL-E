{
  "name": "mbpp_281_all_unique",
  "language": "rb",
  "prompt": "# Write a rbthon function to check if the elements of a given array are unique or not.\ndef all_unique(test_list)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_281_all_unique.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_all_unique\n    candidate = method(:all_unique)\n    assert_equal(true, candidate.call([1, 2, 3]))\n    assert_equal(false, candidate.call([1, 2, 1, 2]))\n    assert_equal(true, candidate.call([1, 2, 3, 4, 5]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  test_list.uniq == test_list\nend",
    "  test_list.uniq == test_list\nend",
    "  test_list.uniq == test_list\nend",
    "  test_list.uniq == test_list\nend",
    "  test_list.uniq == test_list\nend",
    "  test_list.uniq == test_list\nend",
    "  test_list.uniq == test_list\nend",
    "  test_list.uniq == test_list\nend",
    "  test_list.uniq == test_list\nend",
    "  test_list.uniq == test_list\nend",
    "  test_list.uniq == test_list\nend",
    "  test_list.uniq == test_list\nend",
    "  test_list.uniq == test_list\nend",
    "  test_list.uniq == test_list\nend",
    "  test_list.uniq == test_list\nend",
    "  test_list.uniq == test_list\nend",
    "  test_list.uniq == test_list\nend",
    "  test_list.uniq == test_list\nend",
    "  test_list.uniq == test_list\nend",
    "  test_list.uniq == test_list\nend"
  ]
}
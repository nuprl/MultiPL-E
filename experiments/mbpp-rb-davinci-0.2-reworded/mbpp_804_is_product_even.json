{
  "name": "mbpp_804_is_product_even",
  "language": "rb",
  "prompt": "# Write a function to check whether the product of numbers in an array is even or not.\ndef is_product_even(arr)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_804_is_product_even.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_is_product_even\n    candidate = method(:is_product_even)\n    assert_equal(true, candidate.call([1, 2, 3]))\n    assert_equal(true, candidate.call([1, 2, 1, 4]))\n    assert_equal(false, candidate.call([1, 1]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  arr.inject(:*).even?\nend",
    "  arr.inject(:*).even?\nend",
    "  arr.inject(:*).even?\nend",
    "  product = 1\n  arr.each { |num| product *= num }\n  product.even?\nend",
    "  arr.inject(:*).even?\nend",
    "  arr.reduce(:*).even?\nend",
    "  arr.inject(:*).even?\nend",
    "  arr.inject(:*).even?\nend",
    "  arr.inject(:*).even?\nend",
    "  arr.inject(:*).even?\nend",
    "  arr.reduce(:*).even?\nend",
    "  arr.inject(:*).even?\nend",
    "  arr.inject(:*).even?\nend",
    "  arr.inject(:*).even?\nend",
    "  arr.inject(:*).even?\nend",
    "  arr.reduce(:*).even?\nend",
    "  arr.inject(:*).even?\nend",
    "  arr.reduce(:*).even?\nend",
    "  arr.inject(:*).even?\nend",
    "  arr.inject(:*).even?\nend"
  ]
}
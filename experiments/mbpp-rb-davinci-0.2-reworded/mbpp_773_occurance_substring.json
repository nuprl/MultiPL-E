{
  "name": "mbpp_773_occurance_substring",
  "language": "rb",
  "prompt": "# Write a function to find the occurrence and position of the substrings within a string. Return nil if there is no match.\ndef occurance_substring(text, pattern)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_773_occurance_substring.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_occurance_substring\n    candidate = method(:occurance_substring)\n    assert_equal([\"python\", 0, 6], candidate.call(\"python programming, python language\", \"python\"))\n    assert_equal([\"programming\", 7, 18], candidate.call(\"python programming,programming language\", \"programming\"))\n    assert_equal([\"language\", 31, 39], candidate.call(\"python programming,programming language\", \"language\"))\n    assert_equal(nil, candidate.call(\"c++ programming, c++ language\", \"python\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.length < pattern.length\n  return nil if text.scan(pattern).empty?\n  text.scan(pattern).map { |match| text.index(match) }\nend",
    "  text.scan(/#{pattern}/).map { |match| text.index(match) }\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.index(pattern).nil?",
    "  text.scan(/#{pattern}/).size\nend",
    "  return nil if text.nil? || pattern.nil? || text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern",
    "  return nil if text.nil? || pattern.nil? || text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text == pattern\n  return nil if pattern.length == 1 && text.length > 1",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.size < pattern.size\n  return nil if text.size == pattern.size && text != pattern\n  return nil if text.size == pattern.size && text == pattern\n  return nil if text.size > pattern.size && text.include?(pattern) == false\n  return nil if text.size > pattern.size && text.include?(pattern) == true",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil? || text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  text_array = text.split('')\n  pattern_array = pattern.split('')\n  result_array = []\n  text_array.each_with_index do |char, index|\n    if char == pattern_array[0]\n      if text_array[index, pattern_array.length] == pattern_array\n        result_array << index\n      end\n    end\n  end\n  result_array.empty? ? nil : result_array\nend",
    "  return nil if text.nil? || pattern.nil?\n  text.scan(/(?=#{pattern})/).count\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) == nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length - 2\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length - 2 && text.index(pattern) == text.length - 3\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length - 2 && text.index(pattern) == text.length - 3 && text.index(pattern) == text.length - 4\n  return nil",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil? || text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.size < pattern.size\n  return nil if text.size == pattern.size && text != pattern",
    "  text.scan(/#{pattern}/).size\nend",
    "  return nil if text.length < pattern.length\n  return nil if text.include?(pattern) == false\n  return text.index(pattern)\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  if text.include?(pattern)\n    return text.index(pattern)\n  else\n    return nil\n  end\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.length < pattern.length\n  return nil if pattern.empty?\n  return nil if text.empty?\n  return nil if pattern.length > text.length\n  return nil if text.length == pattern.length && text != pattern",
    "  pattern_length = pattern.length\n  text_length = text.length\n  return nil if pattern_length > text_length\n  return nil if pattern_length == 0\n  return nil if text_length == 0\n  return nil if text.nil? || pattern.nil?",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  text.scan(/#{pattern}/).size\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  text.scan(/#{pattern}/).length\nend",
    "  text.scan(/#{pattern}/).length\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length == pattern.length && text.include?(pattern)\n  return nil if text.length == pattern.length && text.include?(pattern)\n  return nil if text.length == pattern.length && text.include?(pattern)\n  return nil if text.length == pattern.length && text.include?(pattern)\n  return nil if text.length == pattern.length && text.include?(pattern)\n  return nil if text.length == pattern.length && text.include?(pattern)\n  return nil if text.length == pattern.length && text.include?(pattern)\n  return nil if text.length == pattern.length && text.include?(pattern)\n  return nil if text.length == pattern.length && text.include?(pattern)\n  return nil if text.length == pattern.length && text.include?(pattern)\n  return nil if text.length == pattern.length && text.include?(pattern)\n  return nil if text.length == pattern.length && text.include?(pattern)\n  return nil if text.length == pattern.length && text.include?(pattern)\n  return nil if text.length == pattern.length && text.include?(pattern)\n  return nil if text.length == pattern.length && text.include?(pattern)\n  return nil if text.length == pattern.length && text.include?(pattern)\n  return nil if text.length == pattern.length && text.include?(pattern)\n  return nil if text.length == pattern.length && text.include?(pattern)\n  return nil if text.length == pattern.length && text.include?(pattern)\n  return nil if text.length == pattern.length && text.include?(pattern)\n  return nil if text.length == pattern.length && text.include?(pattern)\n  return nil if text.length == pattern.length && text.include?(pattern)",
    "  text.scan(/(?=#{pattern})/).count\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  # text = \"The quick brown fox jumps over the lazy dog\"\n  # pattern = \"the\"\n  # text = \"The quick brown fox jumps over the lazy dog\"\n  # pattern = \"the\"\n  # text = \"The quick brown fox jumps over the lazy dog\"\n  # pattern = \"the\"\n  # text = \"The quick brown fox jumps over the lazy dog\"\n  # pattern = \"the\"\n  # text = \"The quick brown fox jumps over the lazy dog\"\n  # pattern = \"the\"\n  # text = \"The quick brown fox jumps over the lazy dog\"\n  # pattern = \"the\"\n  # text = \"The quick brown fox jumps over the lazy dog\"\n  # pattern = \"the\"\n  # text = \"The quick brown fox jumps over the lazy dog\"\n  # pattern = \"the\"\n  # text = \"The quick brown fox jumps over the lazy dog\"\n  # pattern = \"the\"\n  # text = \"The quick brown fox jumps over the lazy dog\"\n  # pattern = \"the\"\n  # text = \"The quick brown fox jumps over the lazy dog\"\n  # pattern = \"the\"\n  # text = \"The quick brown fox jumps over the lazy dog\"\n  # pattern = \"the\"\n  # text = \"The quick brown fox jumps over the lazy dog\"\n  # pattern = \"the\"\n  # text = \"The quick brown fox jumps over the lazy dog\"\n  # pattern = \"the\"\n  # text = \"The quick brown fox jumps over the lazy dog\"\n  # pattern = \"the\"\n  # text = \"The quick brown fox jumps over the lazy dog\"\n  # pattern = \"the\"\n  # text = \"The quick brown fox jumps over the lazy dog\"\n  # pattern = \"the\"\n  # text = \"The quick brown fox jumps over the lazy dog\"\n  # pattern = \"the\"\n  # text = \"The quick brown fox jumps over the lazy dog\"\n  # pattern = \"the\"\n  # text = \"The quick brown fox jumps over the lazy dog\"\n  # pattern = \"the\"\n  # text = \"The quick brown fox jumps over the lazy dog\"\n  # pattern = \"the\"\n  # text = \"The quick",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.length > 100_000\n  return nil if pattern.length > 100_000",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.length < 1 || text.length > 1000\n  return nil if pattern.length < 1 || pattern.length > 1000\n  return nil if text.match(/[^a-zA-Z]/) || pattern.match(/[^a-zA-Z]/)\n  return nil if text.match(/\\s/) || pattern.match(/\\s/)",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil? || text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if !text.is_a?(String) || !pattern.is_a?(String)\n  return nil if text.match(/[^a-zA-Z]/) || pattern.match(/[^a-zA-Z]/)",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil unless text.include?(pattern)\n  text.scan(pattern).map { |match| text.index(match) }\nend",
    "  return nil if text.length < pattern.length\n  return nil if text.length == 0 || pattern.length == 0\n  text.scan(/#{pattern}/).length\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) == nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - pattern.length\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - pattern.length && text.index(pattern) != text.length - pattern.length\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - pattern.length && text.index(pattern) != text.length - pattern.length && text.index(pattern) != text.length - pattern.length - 1\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - pattern.length && text.index(pattern) != text.length - pattern.length && text.index(pattern) != text.length -",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.length < pattern.length\n  return nil if text.length == 0 || pattern.length == 0\n  return nil if text.nil? || pattern.nil?\n  return nil if text.class != String || pattern.class != String",
    "  text.scan(/#{pattern}/).map { |match| text.index(match) }\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil? || text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if pattern.length == 1 && text.length > 1",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?",
    "  return nil unless text.include?(pattern)\n  result = []\n  text.split(pattern).each_with_index do |_, i|\n    result << i if i != 0\n  end\n  result\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil? || text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.length < pattern.length\n  return nil if text.empty? || pattern.empty?\n  return nil if text.nil? || pattern.nil?\n  return nil if text.class != String || pattern.class != String\n  return nil if text.include?(pattern) == false",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.length < pattern.length\n  return nil if text.length == 0 || pattern.length == 0\n  return nil if text.nil? || pattern.nil?\n  return nil if text.class != String || pattern.class != String\n  return nil if text.match(/[^a-zA-Z]/) || pattern.match(/[^a-zA-Z]/)\n  return nil if text.match(/\\s/) || pattern.match(/\\s/)\n  return nil if text.match(/[0-9]/) || pattern.match(/[0-9]/)\n  return nil if text.match(/[^a-zA-Z0-9]/) || pattern.match(/[^a-zA-Z0-9]/)\n  return nil if text.match(/[^a-zA-Z0-9\\s]/) || pattern.match(/[^a-zA-Z0-9\\s]/)\n  return nil if text.match(/[^a-zA-Z0-9\\s]/) || pattern.match(/[^a-zA-Z0-9\\s]/)\n  return nil if text.match(/[^a-zA-Z0-9\\s]/) || pattern.match(/[^a-zA-Z0-9\\s]/)\n  return nil if text.match(/[^a-zA-Z0-9\\s]/) || pattern.match(/[^a-zA-Z0-9\\s]/)\n  return nil if text.match(/[^a-zA-Z0-9\\s]/) || pattern.match(/[^a-zA-Z0-9\\s]/)\n  return nil if text.match(/[^a-zA-Z0-9\\s]/) || pattern.match(/[^a-zA-Z0-9\\s]/)\n  return nil if text.match(/[^a-zA-Z0-9\\s]/) || pattern.match(/[^a-zA-Z0-9\\s]/)\n  return nil",
    "  return nil if text.length < pattern.length\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  text.scan(/#{pattern}/).size\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if pattern.length == 1 && text.count(pattern) == 0",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  text.scan(/#{pattern}/).size\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) == nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == text.length - 1\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) != 0 && text.index(pattern) != text.length - 1\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) != 0 && text.index(pattern) != text.length - 1 && text.index(pattern) == text.length - pattern.length\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) != 0 && text.index(pattern) != text.length - 1 && text.index(pattern) != text.length - pattern.length\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) != 0 && text.index(pattern) != text.length - 1 && text.index(pattern) !=",
    "  # Write your code here\n  return nil if text.length < pattern.length\n  return nil if text.length == 0 || pattern.length == 0\n  return nil if text.nil? || pattern.nil?\n  return nil if text.is_a?(Integer) || pattern.is_a?(Integer)\n  return nil if text.is_a?(Float) || pattern.is_a?(Float)\n  return nil if text.is_a?(Array) || pattern.is_a?(Array)\n  return nil if text.is_a?(Hash) || pattern.is_a?(Hash)\n  return nil if text.is_a?(Symbol) || pattern.is_a?(Symbol)\n  return nil if text.is_a?(TrueClass) || pattern.is_a?(TrueClass)\n  return nil if text.is_a?(FalseClass) || pattern.is_a?(FalseClass)\n  return nil if text.is_a?(NilClass) || pattern.is_a?(NilClass)\n  return nil if text.is_a?(Fixnum) || pattern.is_a?(Fixnum)\n  return nil if text.is_a?(Bignum) || pattern.is_a?(Bignum)\n  return nil if text.is_a?(Complex) || pattern.is_a?(Complex)\n  return nil if text.is_a?(Rational) || pattern.is_a?(Rational)\n  return nil if text.is_a?(String) || pattern.is_a?(String)\n  return nil if text.is_a?(Numeric) || pattern.is_a?(Numeric)\n  return nil if text.is_a?(Class) || pattern.is_a?(Class)\n  return nil if text.is_a?(Module) || pattern.is_a?(Module)\n  return nil if text.is_a?(Method) || pattern.is_a?(Method)\n  return nil if text.is_a?(UnboundMethod) || pattern.is_a?(UnboundMethod)\n  return nil if",
    "  return nil if text.length < pattern.length\n  return nil if text.index(pattern).nil?\n  return [text.index(pattern), text.index(pattern) + pattern.length - 1]\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.length < pattern.length\n  return nil if pattern.length == 0\n  return nil if text.length == 0",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true",
    "  return nil if text.nil? || pattern.nil? || text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  text.scan(/(?=#{pattern})/).count\nend",
    "  if text.include?(pattern)\n    puts \"The pattern #{pattern} is present in the text #{text}\"\n    puts \"The pattern #{pattern} is present at the position #{text.index(pattern)}\"\n  else\n    puts \"The pattern #{pattern} is not present in the text #{text}\"\n  end\nend",
    "  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil? || text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.scan(pattern).empty?\n  text.scan(pattern).map { |x| text.index(x) }\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) == nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length - 2\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length - 2 && text.index(pattern) == text.length - 3\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length - 2 && text.index(pattern) == text.length - 3 && text.index(pattern) == text.length - 4\n  return nil",
    "  return nil if text.length < pattern.length\n  return nil if text.scan(pattern).empty?\n  text.scan(pattern).map { |match| text.index(match) }\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if pattern.length == 1 && text.length == 1 && text != pattern\n  return nil if pattern.length == 1 && text.length > 1 && !text.include?(pattern)",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.include?(pattern) == false",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.length < pattern.length\n  return nil if text.length == 0 || pattern.length == 0\n  return nil if text.nil? || pattern.nil?\n  return nil if text.class != String || pattern.class != String\n  return nil if text.empty? || pattern.empty?\n  return nil if text.include?(pattern) == false\n  return nil if text.match(pattern).nil?\n  return nil if text.match(pattern).to_s.empty?\n  return nil if text.match(pattern).to_s != pattern\n  return nil if text.match(pattern).to_s.length != pattern.length\n  return nil if text.match(pattern).to_s.length < pattern.length\n  return nil if text.match(pattern).to_s.length > pattern.length\n  return nil if text.match(pattern).to_s != pattern\n  return nil if text.match(pattern).to_s.length != pattern.length\n  return nil if text.match(pattern).to_s.length < pattern.length\n  return nil if text.match(pattern).to_s.length > pattern.length\n  return nil if text.match(pattern).to_s.length < pattern.length\n  return nil if text.match(pattern).to_s.length > pattern.length\n  return nil if text.match(pattern).to_s.length < pattern.length\n  return nil if text.match(pattern).to_s.length > pattern.length\n  return nil if text.match(pattern).to_s.length < pattern.length\n  return nil if text.match(pattern).to_s.length > pattern.length\n  return nil if text.match(pattern).to_s.length < pattern.length\n  return nil if text.match(pattern).to_s.length > pattern.length\n  return nil if text.match(pattern).to_s.length < pattern.length\n  return nil if text.match(pattern).to_s.length > pattern.length\n  return nil if text.match(pattern).to_s.length < pattern.length\n  return nil if text.match(pattern).to_s.length > pattern.length\n  return nil",
    "  return nil if text.nil? || pattern.nil? || text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  result = []\n  text.each_char.with_index do |char, index|\n    if text[index..index + pattern.length - 1] == pattern\n      result << index\n    end\n  end\n  result\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.length < pattern.length\n  return nil if text.include?(pattern) == false\n  text.scan(pattern)\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern",
    "  return nil if text.nil? || pattern.nil? || text.empty? || pattern.empty?\n  text.scan(/#{pattern}/).map { |match| text.index(match) }\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.length < pattern.length\n  return nil if text.length == 0 || pattern.length == 0\n  return nil if text.nil? || pattern.nil?\n  return nil if text.class != String || pattern.class != String\n  return nil if text.match(/[^a-zA-Z0-9]/) || pattern.match(/[^a-zA-Z0-9]/)\n  return nil if text.match(/\\s/) || pattern.match(/\\s/)\n  return nil if text.match(/[0-9]/) || pattern.match(/[0-9]/)\n  return nil if text.match(/[A-Z]/) || pattern.match(/[A-Z]/)\n  return nil if text.match(/[a-z]/) || pattern.match(/[a-z]/)\n  return nil if text.match(/[^a-zA-Z0-9]/) || pattern.match(/[^a-zA-Z0-9]/)\n  return nil if text.match(/\\s/) || pattern.match(/\\s/)\n  return nil if text.match(/[0-9]/) || pattern.match(/[0-9]/)\n  return nil if text.match(/[A-Z]/) || pattern.match(/[A-Z]/)\n  return nil if text.match(/[a-z]/) || pattern.match(/[a-z]/)\n  return nil if text.match(/[^a-zA-Z0-9]/) || pattern.match(/[^a-zA-Z0-9]/)\n  return nil if text.match(/\\s/) || pattern.match(/\\s/)\n  return nil if text.match(/[0-9]/) || pattern.match(/[0-9]/)\n  return nil if text.match(/[A-Z]/) || pattern.match(/[A-Z]/)\n  return nil if text.match(/[a-z]/) || pattern.match(/[a-z]/)\n  return nil if text.match(/",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.length < pattern.length\n  return nil if text.length == 0 || pattern.length == 0\n  return nil if text.nil? || pattern.nil?\n  return nil if text.class != String || pattern.class != String\n  return nil if text.count(\"a-zA-Z\") == 0 || pattern.count(\"a-zA-Z\") == 0",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false",
    "  return nil if text.length < pattern.length\n  return nil if text.length == 0 || pattern.length == 0\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length == 1 && pattern.length == 1 && text != pattern\n  return nil if text.length == 1 && pattern.length == 1 && text == pattern\n  return nil if text.length == 1 && pattern.length == 2 && text != pattern\n  return nil if text.length == 1 && pattern.length == 2 && text == pattern\n  return nil if text.length == 2 && pattern.length == 1 && text != pattern\n  return nil if text.length == 2 && pattern.length == 1 && text == pattern\n  return nil if text.length == 2 && pattern.length == 2 && text != pattern\n  return nil if text.length == 2 && pattern.length == 2 && text == pattern\n  return nil if text.length == 2 && pattern.length == 3 && text != pattern\n  return nil if text.length == 2 && pattern.length == 3 && text == pattern\n  return nil if text.length == 3 && pattern.length == 2 && text != pattern\n  return nil if text.length == 3 && pattern.length == 2 && text == pattern\n  return nil if text.length == 3 && pattern.length == 3 && text != pattern\n  return nil if text.length == 3 && pattern.length == 3 && text == pattern\n  return nil if text.length == 3 && pattern.length == 4 && text != pattern\n  return nil if text.length == 3 && pattern.length == 4 && text == pattern\n  return nil if text.length == 4 && pattern.length == 3 && text != pattern\n  return nil if text.length == 4 && pattern.length == 3 && text == pattern\n  return nil if text.length == 4 && pattern.length == 4 && text != pattern\n  return nil if text.length == 4 && pattern.length == 4 && text == pattern\n  return nil if text.length == 4 && pattern.length == 5 && text != pattern\n  return nil if text.length == 4 && pattern.length == 5 && text == pattern\n  return nil if text.length == 5 && pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.length < pattern.length\n  return nil if pattern.length == 0",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern",
    "  return nil if text.nil? || pattern.nil? || text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.length < pattern.length\n  return nil if text.empty? || pattern.empty?\n  return nil if text.split('').uniq.length == 1 && pattern.split('').uniq.length == 1 && text.split('').uniq[0] != pattern.split('').uniq[0]\n  return nil if text.split('').uniq.length == 1 && pattern.split('').uniq.length == 1 && text.split('').uniq[0] == pattern.split('').uniq[0] && text.length != pattern.length\n  return nil if text.split('').uniq.length == 1 && pattern.split('').uniq.length == 1 && text.split('').uniq[0] == pattern.split('').uniq[0] && text.length == pattern.length && text != pattern\n  return nil if text.split('').uniq.length == 1 && pattern.split('').uniq.length == 1 && text.split('').uniq[0] == pattern.split('').uniq[0] && text.length == pattern.length && text == pattern && text.length == 1\n  return nil if text.split('').uniq.length == 1 && pattern.split('').uniq.length == 1 && text.split('').uniq[0] == pattern.split('').uniq[0] && text.length == pattern.length && text == pattern && text.length != 1\n  return nil if text.split('').uniq.length == 1 && pattern.split('').uniq.length == 1 && text.split('').uniq[0] == pattern.split('').uniq[0] && text.length == pattern.length && text == pattern && text.length == 1\n  return nil if text.split('').uniq.length == 1 && pattern.split('').uniq.length == 1 && text.split('').uniq[0] == pattern.split('').uniq[0] && text.length == pattern.length && text == pattern && text.length != 1\n ",
    "  return nil if text.length < pattern.length\n  return nil if text.length == 0 || pattern.length == 0\n  return nil if text.nil? || pattern.nil?\n  return nil if text.class != String || pattern.class != String",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.size < pattern.size\n  return nil if text.size == pattern.size && text != pattern\n  return nil if text.size == pattern.size && text == pattern\n  return nil if text.size == pattern.size && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.length == 0 || pattern.length == 0",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.scan(pattern).empty?",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil? || text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  # write your code here\n  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) == nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length - 2\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length - 2 && text.index(pattern) == text.length - 3\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length - 2 && text.index(pattern) == text.length - 3 && text.index(pattern) == text.",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false",
    "  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.length < pattern.length\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.length < pattern.length\n  return nil if pattern.length == 0\n  return nil if text.length == 0",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if pattern.length < 1\n  return nil if pattern.length > text.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length",
    "  return nil if text.length < pattern.length\n  return nil if text.length == 0 || pattern.length == 0\n  return nil if text.nil? || pattern.nil?\n  return nil if text.class != String || pattern.class != String\n  return nil if text.match(/[^a-zA-Z]/) || pattern.match(/[^a-zA-Z]/)",
    "  return nil if text.nil? || pattern.nil?\n  text.scan(/(?=#{pattern})/).count\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || text.empty? || pattern.nil? || pattern.empty?\n  text.scan(/(?=#{pattern})/).count\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern"
  ]
}
{
  "name": "mbpp_805_max_sum_list",
  "language": "rb",
  "prompt": "# Write a function that returns the array in an array of arrays whose sum of elements is the highest.\ndef max_sum_list(lists)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_805_max_sum_list.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_max_sum_list\n    candidate = method(:max_sum_list)\n    assert_equal([10, 11, 12], candidate.call([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]))\n    assert_equal([12, 11, 10], candidate.call([[3, 2, 1], [6, 5, 4], [12, 11, 10]]))\n    assert_equal([2, 3, 1], candidate.call([[2, 3, 1]]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  max_sum = 0\n  max_list = []",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  max_sum = 0\n  max_list = []\n  lists.each do |list|\n    sum = list.inject(0) { |sum, n| sum + n }\n    if sum > max_sum\n      max_sum = sum\n      max_list = list\n    end\n  end\n  max_list\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  max_sum = 0\n  max_list = nil\n  lists.each do |list|\n    sum = list.inject(:+)\n    if sum > max_sum\n      max_sum = sum\n      max_list = list\n    end\n  end\n  max_list\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  max_sum = 0\n  max_list = []\n  lists.each do |list|\n    sum = 0\n    list.each do |element|\n      sum += element\n    end\n    if sum > max_sum\n      max_sum = sum\n      max_list = list\n    end\n  end\n  max_list\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  max_sum = 0\n  max_list = []\n  lists.each do |list|\n    sum = list.reduce(:+)\n    if sum > max_sum\n      max_sum = sum\n      max_list = list\n    end\n  end\n  max_list\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  max_sum = 0\n  max_list = []\n  lists.each do |list|\n    sum = 0\n    list.each do |num|\n      sum += num\n    end\n    if sum > max_sum\n      max_sum = sum\n      max_list = list\n    end\n  end\n  max_list\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  # your code here\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  max_sum = 0\n  max_list = []\n  lists.each do |list|\n    sum = 0\n    list.each do |num|\n      sum += num\n    end\n    if sum > max_sum\n      max_sum = sum\n      max_list = list\n    end\n  end\n  max_list\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  max_sum = 0\n  max_list = nil\n  lists.each do |list|\n    sum = 0\n    list.each do |num|\n      sum += num\n    end\n    if sum > max_sum\n      max_sum = sum\n      max_list = list\n    end\n  end\n  max_list\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.sort_by { |list| list.reduce(:+) }.last\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.map { |list| list.reduce(:+) }.max\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  max_sum = 0\n  max_list = []\n  lists.each do |list|\n    sum = 0\n    list.each do |num|\n      sum += num\n    end\n    if sum > max_sum\n      max_sum = sum\n      max_list = list\n    end\n  end\n  max_list\nend",
    "  max = 0\n  max_list = []\n  lists.each do |list|\n    if list.reduce(:+) > max\n      max = list.reduce(:+)\n      max_list = list\n    end\n  end\n  max_list\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  max = 0\n  max_list = []\n  lists.each do |list|\n    if list.reduce(:+) > max\n      max = list.reduce(:+)\n      max_list = list\n    end\n  end\n  max_list\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.inject(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by {|list| list.sum}\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend",
    "  lists.max_by { |list| list.sum }\nend",
    "  lists.max_by { |list| list.reduce(:+) }\nend"
  ]
}
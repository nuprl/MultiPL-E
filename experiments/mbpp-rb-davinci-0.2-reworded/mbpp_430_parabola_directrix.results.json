{
  "name": "mbpp_430_parabola_directrix",
  "language": "rb",
  "prompt": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_430_parabola_directrix.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp7k7lua95\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp7k7lua95.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007441847 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.38 tests/s, 134.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4 * a * c) / (4 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmpp9h1hfmi\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpp9h1hfmi.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007608324 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n131.43 tests/s, 131.43 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(c - b**2 / (4 * a)) / a\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmpj6heq7il\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpj6heq7il.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007432501 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.54 tests/s, 134.54 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  # Your code here\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmpa12u4zi5\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpa12u4zi5.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.007262102 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n137.70 tests/s, 137.70 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  return -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp6bhkf2ly\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp6bhkf2ly.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007442124 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.37 tests/s, 134.37 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp7k7lua95\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp7k7lua95.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007441847 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.38 tests/s, 134.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  return -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp6bhkf2ly\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp6bhkf2ly.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007442124 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.37 tests/s, 134.37 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  # Your code here\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmpa12u4zi5\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpa12u4zi5.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.007262102 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n137.70 tests/s, 137.70 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp7k7lua95\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp7k7lua95.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007441847 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.38 tests/s, 134.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  # Your code here\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmpa12u4zi5\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpa12u4zi5.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.007262102 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n137.70 tests/s, 137.70 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp7k7lua95\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp7k7lua95.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007441847 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.38 tests/s, 134.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp7k7lua95\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp7k7lua95.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007441847 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.38 tests/s, 134.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  (-b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmpjocom9na\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpjocom9na.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007442732 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.36 tests/s, 134.36 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  return -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp6bhkf2ly\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp6bhkf2ly.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007442124 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.37 tests/s, 134.37 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b/(2*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmpe6m6pial\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpe6m6pial.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007147711 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n139.90 tests/s, 139.90 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  # Your code here\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmpa12u4zi5\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpa12u4zi5.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.007262102 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n137.70 tests/s, 137.70 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  (-b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmpjocom9na\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpjocom9na.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007442732 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.36 tests/s, 134.36 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b.to_f / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp6d1193ky\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp6d1193ky.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-0.3>\n\ndiff:\n? -198\n?  0.3\n?  ???\n===============================================================================\n\nFinished in 0.00715839 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n139.70 tests/s, 139.70 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -c / b\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmpc01dhpu1\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpc01dhpu1.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.008374707 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n119.41 tests/s, 119.41 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp7k7lua95\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp7k7lua95.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007441847 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.38 tests/s, 134.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b.to_f / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp6d1193ky\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp6d1193ky.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-0.3>\n\ndiff:\n? -198\n?  0.3\n?  ???\n===============================================================================\n\nFinished in 0.00715839 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n139.70 tests/s, 139.70 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b.to_f / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp6d1193ky\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp6d1193ky.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-0.3>\n\ndiff:\n? -198\n?  0.3\n?  ???\n===============================================================================\n\nFinished in 0.00715839 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n139.70 tests/s, 139.70 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp7k7lua95\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp7k7lua95.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007441847 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.38 tests/s, 134.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp7k7lua95\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp7k7lua95.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007441847 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.38 tests/s, 134.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp7k7lua95\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp7k7lua95.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007441847 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.38 tests/s, 134.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp7k7lua95\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp7k7lua95.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007441847 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.38 tests/s, 134.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp7k7lua95\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp7k7lua95.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007441847 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.38 tests/s, 134.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp7k7lua95\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp7k7lua95.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007441847 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.38 tests/s, 134.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp7k7lua95\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp7k7lua95.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007441847 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.38 tests/s, 134.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b.to_f / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp6d1193ky\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp6d1193ky.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-0.3>\n\ndiff:\n? -198\n?  0.3\n?  ???\n===============================================================================\n\nFinished in 0.00715839 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n139.70 tests/s, 139.70 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp7k7lua95\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp7k7lua95.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007441847 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.38 tests/s, 134.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp7k7lua95\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp7k7lua95.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007441847 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.38 tests/s, 134.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  (b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmpa8bflj92\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpa8bflj92.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-2>\n\ndiff:\n? -198\n?  2  \n?  ???  \n===============================================================================\n\nFinished in 0.007308827 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n136.82 tests/s, 136.82 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp7k7lua95\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp7k7lua95.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007441847 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.38 tests/s, 134.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  return -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp6bhkf2ly\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp6bhkf2ly.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007442124 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.37 tests/s, 134.37 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
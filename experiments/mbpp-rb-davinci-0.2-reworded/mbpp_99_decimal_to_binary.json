{
  "name": "mbpp_99_decimal_to_binary",
  "language": "rb",
  "prompt": "# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\ndef decimal_to_binary(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_99_decimal_to_binary.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_decimal_to_binary\n    candidate = method(:decimal_to_binary)\n    assert_equal(\"1000\", candidate.call(8))\n    assert_equal(\"10010\", candidate.call(18))\n    assert_equal(\"111\", candidate.call(7))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  binary = ''\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2).to_s\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  n.to_s(2)\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary.prepend(n % 2).to_s\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  binary = []\n  until n == 0\n    binary.unshift(n % 2)\n    n /= 2\n  end\n  binary.join\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2 == 0 ? \"0\" : \"1\")\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = []\n  while n > 0\n    binary.unshift(n % 2)\n    n /= 2\n  end\n  binary.join\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  binary = []\n  while n > 0\n    binary.unshift(n % 2)\n    n /= 2\n  end\n  binary.join\nend",
    "  n.to_s(2)\nend",
    "  return \"0\" if n == 0\n  binary = []\n  until n == 0\n    binary.unshift(n % 2)\n    n /= 2\n  end\n  binary.join\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary.prepend(n % 2 == 0 ? '0' : '1')\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary.prepend(n % 2).to_s\n    n /= 2\n  end\n  binary\nend",
    "  n.to_s(2)\nend",
    "  return \"0\" if n == 0\n  result = \"\"\n  while n > 0\n    result = (n % 2).to_s + result\n    n /= 2\n  end\n  result\nend",
    "  return \"0\" if n == 0\n  result = \"\"\n  while n > 0\n    result = (n % 2).to_s + result\n    n /= 2\n  end\n  result\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend((n % 2).to_s)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2).to_s\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend((n % 2).to_s)\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  binary = []\n  until n == 0\n    binary.unshift(n % 2)\n    n /= 2\n  end\n  binary.join\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary.prepend(n % 2).to_s\n    n /= 2\n  end\n  binary\nend",
    "  # return \"0\" if n == 0\n  # return \"1\" if n == 1\n  # return \"10\" if n == 2\n  # return \"11\" if n == 3\n  # return \"100\" if n == 4\n  # return \"101\" if n == 5\n  # return \"110\" if n == 6\n  # return \"111\" if n == 7\n  # return \"1000\" if n == 8\n  # return \"1001\" if n == 9\n  # return \"1010\" if n == 10\n  # return \"1011\" if n == 11\n  # return \"1100\" if n == 12\n  # return \"1101\" if n == 13\n  # return \"1110\" if n == 14\n  # return \"1111\" if n == 15\n  # return \"10000\" if n == 16\n  # return \"10001\" if n == 17\n  # return \"10010\" if n == 18\n  # return \"10011\" if n == 19\n  # return \"10100\" if n == 20\n  # return \"10101\" if n == 21\n  # return \"10110\" if n == 22\n  # return \"10111\" if n == 23\n  # return \"11000\" if n == 24\n  # return \"11001\" if n == 25\n  # return \"11010\" if n == 26\n  # return \"11011\" if n == 27\n  # return \"11100\" if n == 28\n  # return \"11101\" if n == 29\n  # return \"11110\" if n == 30\n  # return \"11111\" if n == 31\n  # return \"100000\" if n == 32\n  # return \"100001\" if n == 33\n  # return \"100010\" if n == 34\n  # return \"100011\" if n == 35\n  # return \"100100\" if n == 36\n  # return \"100101\" if n == 37\n  # return \"100110\" if n == 38\n  # return \"100111\" if n == 39\n  # return \"101000\" if n == 40\n  # return \"101001\" if n == 41\n  # return \"101010\" if n == 42\n  # return \"101011\" if",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary += (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return \"0\" if n == 0\n  binary_string = \"\"\n  while n > 0\n    binary_string.prepend(n % 2)\n    n /= 2\n  end\n  binary_string\nend",
    "  binary = []\n  until n == 0\n    binary.unshift(n % 2)\n    n /= 2\n  end\n  binary.join\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2 == 0 ? \"0\" : \"1\")\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return '0' if n == 0\n  binary = []\n  while n > 0\n    binary << n % 2\n    n /= 2\n  end\n  binary.reverse.join\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2 == 0 ? \"0\" : \"1\")\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  result = ''\n  while n > 0\n    result.prepend(n % 2).to_s\n    n /= 2\n  end\n  result\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2).to_s\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n = n / 2\n  end\n  binary\nend",
    "  n.to_s(2)\nend",
    "  binary = []\n  while n > 0\n    binary.unshift(n % 2)\n    n /= 2\n  end\n  binary.join\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = []\n  while n > 0\n    binary.unshift(n % 2)\n    n /= 2\n  end\n  binary.join\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2 == 0 ? \"0\" : \"1\")\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  binary = []\n  until n == 0\n    binary.unshift(n % 2)\n    n /= 2\n  end\n  binary.join\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  n.to_s(2)\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary_string = \"\"\n  while n > 0\n    binary_string.prepend(n % 2 == 0 ? \"0\" : \"1\")\n    n /= 2\n  end\n  binary_string\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend((n % 2).to_s)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2 == 0 ? \"0\" : \"1\")\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = []\n  while n > 0\n    binary.unshift(n % 2)\n    n /= 2\n  end\n  binary.join\nend",
    "  n.to_s(2)\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary.prepend(n % 2 == 1 ? '1' : '0')\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2 == 0 ? \"0\" : \"1\")\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  result = ''\n  while n > 0\n    result = (n % 2).to_s + result\n    n /= 2\n  end\n  result\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  binary_string = ''\n  while n > 0\n    binary_string = (n % 2).to_s + binary_string\n    n /= 2\n  end\n  binary_string\nend",
    "  binary = ''\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  n.to_s(2)\nend",
    "  return \"0\" if n == 0\n  result = \"\"\n  while n > 0\n    result << (n % 2).to_s\n    n /= 2\n  end\n  result.reverse\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  binary = ''\n  while n > 0\n    binary.prepend((n % 2).to_s)\n    n /= 2\n  end\n  binary\nend",
    "  binary = []\n  until n == 0\n    binary << n % 2\n    n /= 2\n  end\n  binary.reverse.join\nend",
    "  binary_string = \"\"\n  while n > 0\n    binary_string = (n % 2).to_s + binary_string\n    n /= 2\n  end\n  binary_string\nend",
    "  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  binary = []\n  until n == 0\n    binary << n % 2\n    n /= 2\n  end\n  binary.reverse.join\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary.prepend(n % 2).to_s\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  binary = ''\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  binary_string = ''\n  while n > 0\n    binary_string << (n % 2).to_s\n    n /= 2\n  end\n  binary_string.reverse\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary += (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  binary = ''\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  binary = ''\n  until n == 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  binary = \"\"\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  n.to_s(2)\nend",
    "  binary_array = []\n  while n > 0\n    binary_array.unshift(n % 2)\n    n = n / 2\n  end\n  binary_array.join\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  n.to_s(2)\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2 == 0 ? \"0\" : \"1\")\n    n /= 2\n  end\n  binary\nend",
    "  n.to_s(2)\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2 == 0 ? \"0\" : \"1\")\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2).to_s\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  binary = ''\n  until n == 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  binary = \"\"\n  until n == 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2).to_s\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = []\n  while n > 0\n    binary.unshift(n % 2)\n    n /= 2\n  end\n  binary.join\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2 == 0 ? \"0\" : \"1\")\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend((n % 2).to_s)\n    n /= 2\n  end\n  binary\nend",
    "  binary = ''\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return \"0\" if n == 0\n  binary = []\n  while n > 0\n    binary.unshift(n % 2)\n    n /= 2\n  end\n  binary.join\nend",
    "  return \"0\" if n == 0\n  binary = []\n  while n > 0\n    binary.unshift(n % 2)\n    n /= 2\n  end\n  binary.join\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  n.to_s(2)\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  binary = []\n  while n > 0\n    binary << n % 2\n    n /= 2\n  end\n  binary.reverse.join\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  result = \"\"\n  while n > 0\n    result << (n % 2).to_s\n    n /= 2\n  end\n  result.reverse\nend",
    "  binary = \"\"\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  result = \"\"\n  while n > 0\n    result << (n % 2).to_s\n    n /= 2\n  end\n  result.reverse\nend",
    "  return \"0\" if n == 0\n  binary = []\n  while n > 0\n    binary << n % 2\n    n /= 2\n  end\n  binary.reverse.join\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary.prepend(n % 2).to_s\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = []\n  until n == 0\n    binary << n % 2\n    n /= 2\n  end\n  binary.reverse.join\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary.prepend(n % 2).to_s\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  binary = []\n  until n == 0\n    binary << n % 2\n    n /= 2\n  end\n  binary.reverse.join\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = []\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse.join\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2 == 0 ? \"0\" : \"1\")\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary = (n % 2).to_s + binary\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary += (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary << (n % 2).to_s\n    n /= 2\n  end\n  binary.reverse\nend",
    "  return '0' if n == 0\n  binary = ''\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  n.to_s(2)\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  result = \"\"\n  while n > 0\n    result << (n % 2).to_s\n    n /= 2\n  end\n  result.reverse\nend",
    "  binary = []\n  until n == 0\n    binary << n % 2\n    n /= 2\n  end\n  binary.reverse.join\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2)\n    n /= 2\n  end\n  binary\nend",
    "  return \"0\" if n == 0\n  binary = \"\"\n  while n > 0\n    binary.prepend(n % 2).to_s\n    n /= 2\n  end\n  binary\nend"
  ]
}
{
  "name": "mbpp_760_unique_Element",
  "language": "rb",
  "prompt": "# Write a rbthon function to check whether an array of numbers contains only one distinct element or not.\ndef unique_Element(arr)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_760_unique_Element.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique_Element\n    candidate = method(:unique_Element)\n    assert_equal(true, candidate.call([1, 1, 1]))\n    assert_equal(false, candidate.call([1, 2, 1, 2]))\n    assert_equal(false, candidate.call([1, 2, 3, 4, 5]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend\nputs unique_Element([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend\nputs unique_Element([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend\nputs unique_Element([1,1,1,1,1,1,1])\nputs unique_Element([1,1,1,1,1,1,2])",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  if arr.uniq.length == 1\n    puts \"Array contains only one distinct element\"\n  else\n    puts \"Array contains more than one distinct element\"\n  end\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend\nputs unique_Element([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend\nputs unique_Element([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "    if arr.uniq.length == 1\n        return true\n    else\n        return false\n    end\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  if arr.uniq.length == 1\n    puts \"Array contains only one distinct element\"\n  else\n    puts \"Array contains more than one distinct element\"\n  end\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.count == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.each do |i|\n    if arr.count(i) == 1\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq!\n  if arr.length == 1\n    puts \"Array contains only one distinct element\"\n  else\n    puts \"Array contains more than one distinct element\"\n  end\nend",
    "  arr.uniq.length == 1\nend",
    "    arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  if arr.length == arr.uniq.length\n    puts \"Array contains only one distinct element\"\n  else\n    puts \"Array contains more than one distinct element\"\n  end\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend\nputs unique_Element([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend\nputs unique_Element([1,1,1,1,1,1])\nputs unique_Element([1,1,1,1,1,2])\nputs unique_Element([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend\np unique_Element([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1 ? true : false\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  if arr.uniq.length == 1\n    puts \"Array contains only one distinct element\"\n  else\n    puts \"Array contains more than one distinct element\"\n  end\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "    arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  if arr.uniq.length == 1\n    return true\n  else\n    return false\n  end\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  if arr.uniq.length == 1\n    puts \"Array contains only one distinct element\"\n  else\n    puts \"Array contains more than one distinct element\"\n  end\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "    arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend",
    "  arr.uniq.length == 1\nend"
  ]
}
{
  "name": "mbpp_763_find_min_diff",
  "language": "rb",
  "prompt": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_763_find_min_diff.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # Sort array in non-decreasing order\n  arr = arr.sort\n  # Initialize difference as infinite\n  diff = 10**9\n  # Find the min diff by comparing adjacent\n  # pairs in sorted array\n  (0...n-1).each do |i|\n    diff = [diff, arr[i+1]-arr[i]].min\n  end\n  # Return min diff\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp496t5i7y\nStarted\n.\nFinished in 0.000409499 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2442.01 tests/s, 7326.03 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp4bbakvxv\nStarted\n.\nFinished in 0.000424283 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2356.92 tests/s, 7070.75 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if (arr[i+1] - arr[i]) < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqo8h8gwv\nStarted\n.\nFinished in 0.000403165 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2480.37 tests/s, 7441.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 0..n-2\n    if arr[i+1] - arr[i] < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp93mkpnko\nStarted\n.\nFinished in 0.00039557 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2528.00 tests/s, 7583.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if (arr[i+1] - arr[i]) < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqo8h8gwv\nStarted\n.\nFinished in 0.000403165 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2480.37 tests/s, 7441.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # Sort array in non-decreasing order\n  arr = arr.sort\n  # Initialize difference as infinite\n  diff = 10**9\n  # Find the min diff by comparing adjacent\n  # pairs in sorted array\n  (0...n-1).each do |i|\n    if (arr[i+1] - arr[i]) < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  # Return min diff\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpc1ec9jbv\nStarted\n.\nFinished in 0.000419124 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2385.93 tests/s, 7157.79 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i - 1]) < min\n      min = arr[i] - arr[i - 1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1zq312ba\nStarted\n.\nFinished in 0.000420692 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2377.04 tests/s, 7131.11 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in (1..n-1)\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpcu2u_pk0\nStarted\n.\nFinished in 0.000401099 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2493.15 tests/s, 7479.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_z7w6qom\nStarted\n.\nFinished in 0.000425669 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2349.24 tests/s, 7047.73 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp75vt6lkc\nStarted\n.\nFinished in 0.000390629 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2559.97 tests/s, 7679.92 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # Sort array in non-decreasing order\n  arr.sort!\n  # Initialize difference as infinite\n  diff = 10**9\n  # Find the min diff by comparing adjacent\n  # pairs in sorted array\n  (0...n-1).each do |i|\n    diff = [diff, arr[i+1]-arr[i]].min\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpueic2gwn\nStarted\n.\nFinished in 0.000419661 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2382.88 tests/s, 7148.63 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in (1..n-1)\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpcu2u_pk0\nStarted\n.\nFinished in 0.000401099 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2493.15 tests/s, 7479.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpi5kbodmc\nStarted\n.\nFinished in 0.000395359 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2529.35 tests/s, 7588.04 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  return min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdhn_fa8w\nStarted\n.\nFinished in 0.00039717 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2517.81 tests/s, 7553.44 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxna3yoz1\nStarted\n.\nFinished in 0.000403389 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2479.00 tests/s, 7436.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    diff = arr[i] - arr[i-1]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxr53ao5e\nStarted\n.\nFinished in 0.000410173 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2438.00 tests/s, 7313.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpjixmeanc\nStarted\n.\nFinished in 0.000413615 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2417.71 tests/s, 7253.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1...n\n    diff = [diff, arr[i] - arr[i - 1]].min\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpkzd_4nyr\nStarted\n.\nFinished in 0.000415938 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2404.20 tests/s, 7212.61 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp8rwl4cxm\nStarted\n.\nFinished in 0.000452317 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2210.84 tests/s, 6632.52 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  (1...n).each do |i|\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpto6ynr78\nStarted\n.\nFinished in 0.000427162 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2341.03 tests/s, 7023.10 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < diff\n      diff = arr[i] - arr[i-1]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpkbqs5h2o\nStarted\n.\nFinished in 0.000412655 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2423.33 tests/s, 7270.00 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min\n      min = arr[i+1] - arr[i]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp2u5zty01\nStarted\n.\nFinished in 0.000506205 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.48 tests/s, 5926.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # sort the array\n  arr.sort!\n  # initialize difference as infinite\n  diff = 10**9\n  # find the min diff by comparing adjacent\n  # pairs in sorted array\n  (n-1).times do |i|\n    if (arr[i+1] - arr[i]) < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  # return min diff\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplecimpij\nStarted\n.\nFinished in 0.000414555 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2412.23 tests/s, 7236.68 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpwj32532h\nStarted\n.\nFinished in 0.000448039 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2231.95 tests/s, 6695.85 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpit5q3vts\nStarted\n.\nFinished in 0.000411619 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2429.43 tests/s, 7288.29 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1] < min_diff)\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpa4xcgr6i\nStarted\n.\nFinished in 0.00041144 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2430.49 tests/s, 7291.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp75vt6lkc\nStarted\n.\nFinished in 0.000390629 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2559.97 tests/s, 7679.92 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "Loaded suite /tmp/tmpdt9xdaij\nStarted\nE\n===============================================================================\nError: test_find_min_diff(TestHumanEval):\n  NoMethodError: undefined method `-' for nil:NilClass\n  \n      if arr[i+1] - arr[i] < min_diff\n                  ^\n/tmp/tmpdt9xdaij.rb:6:in `block in find_min_diff'\n/tmp/tmpdt9xdaij.rb:5:in `each'\n/tmp/tmpdt9xdaij.rb:5:in `find_min_diff'\n/tmp/tmpdt9xdaij.rb:16:in `call'\n/tmp/tmpdt9xdaij.rb:16:in `test_find_min_diff'\n     13: class TestHumanEval < Test::Unit::TestCase\n     14:   def test_find_min_diff\n     15:     candidate = method(:find_min_diff)\n  => 16:     assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n     17:     assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n     18:     assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n     19:   end\n===============================================================================\n\nFinished in 0.001987699 seconds.\n-------------------------------------------------------------------------------\n1 tests, 0 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n503.09 tests/s, 0.00 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1] < min_diff)\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpa4xcgr6i\nStarted\n.\nFinished in 0.00041144 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2430.49 tests/s, 7291.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # sort the array\n  arr.sort!\n  # Initialize difference as infinite\n  diff = 10**9\n  # Find the min diff by comparing adjacent\n  # pairs in sorted array\n  (0...n-1).each do |i|\n    diff = [diff, arr[i+1]-arr[i]].min\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxyfl9nin\nStarted\n.\nFinished in 0.000418268 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2390.81 tests/s, 7172.43 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  (1..n-1).each do |i|\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpein4m8ai\nStarted\n.\nFinished in 0.000447916 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2232.56 tests/s, 6697.68 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 0..n-2\n    if (arr[i+1] - arr[i]) < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp565ng7_5\nStarted\n.\nFinished in 0.000426729 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2343.41 tests/s, 7030.22 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  return min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdhn_fa8w\nStarted\n.\nFinished in 0.00039717 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2517.81 tests/s, 7553.44 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 0..n-2\n    if (arr[i+1] - arr[i]) < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp565ng7_5\nStarted\n.\nFinished in 0.000426729 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2343.41 tests/s, 7030.22 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 0..n-2\n    if (arr[i+1] - arr[i]) < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsaqorjle\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i - 1]) < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxv5si87i\nStarted\n.\nFinished in 0.000395507 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2528.40 tests/s, 7585.20 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    min_diff = [min_diff, arr[i+1] - arr[i]].min\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp2p3epov0\nStarted\n.\nFinished in 0.000430948 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2320.47 tests/s, 6961.40 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 0...n-1\n    if arr[i+1] - arr[i] < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpahge8woe\nStarted\n.\nFinished in 0.000412622 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2423.53 tests/s, 7270.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxna3yoz1\nStarted\n.\nFinished in 0.000403389 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2479.00 tests/s, 7436.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpi5kbodmc\nStarted\n.\nFinished in 0.000395359 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2529.35 tests/s, 7588.04 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i-1]) < diff\n      diff = arr[i] - arr[i-1]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpwgj1iznf\nStarted\n.\nFinished in 0.000428766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.27 tests/s, 6996.82 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  res = arr[1] - arr[0]\n  for i in 1...n\n    res = [res, arr[i] - arr[i - 1]].min\n  end\n  res\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp5d7hrq6m\nStarted\n.\nFinished in 0.00041479 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2410.86 tests/s, 7232.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # Sort array in non-decreasing order\n  arr.sort!\n  # Initialize difference as infinite\n  diff = 10**9\n  # Find the min diff by comparing adjacent pairs in sorted array\n  (0...n-1).each do |i|\n    diff = [diff, arr[i+1] - arr[i]].min\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps72yptoe\nStarted\n.\nFinished in 0.000406245 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.57 tests/s, 7384.71 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1...n-1\n    diff = [diff, arr[i+1] - arr[i]].min\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmppjbbtm5c\nStarted\n.\nFinished in 0.000434113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2303.55 tests/s, 6910.64 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpi5kbodmc\nStarted\n.\nFinished in 0.000395359 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2529.35 tests/s, 7588.04 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 0..n-2\n    if (arr[i+1] - arr[i]) < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp3jyouaf\nStarted\n.\nFinished in 0.000407557 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2453.64 tests/s, 7360.93 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp75vt6lkc\nStarted\n.\nFinished in 0.000390629 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2559.97 tests/s, 7679.92 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n - 1\n    diff = arr[i + 1] - arr[i]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpgt_b4bas\nStarted\n.\nFinished in 0.000416205 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2402.66 tests/s, 7207.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_z7w6qom\nStarted\n.\nFinished in 0.000425669 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2349.24 tests/s, 7047.73 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpvblapg7o\nStarted\n.\nFinished in 0.000439019 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2277.81 tests/s, 6833.42 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i - 1]) < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxv5si87i\nStarted\n.\nFinished in 0.000395507 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2528.40 tests/s, 7585.20 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in (1..n-1)\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpcu2u_pk0\nStarted\n.\nFinished in 0.000401099 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2493.15 tests/s, 7479.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpjixmeanc\nStarted\n.\nFinished in 0.000413615 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2417.71 tests/s, 7253.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  (1...n).each do |i|\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpkd6r2jr9\nStarted\n.\nFinished in 0.000424592 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2355.20 tests/s, 7065.61 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    diff = arr[i+1] - arr[i]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp6cx318y1\nStarted\n.\nFinished in 0.000459844 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2174.65 tests/s, 6523.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # Sort array in non-decreasing order\n  arr.sort!\n  # Initialize difference as infinite\n  diff = 10**9\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "/tmp/tmp0s7_gxqy.rb:8: class definition in method body\nclass TestHumanEval < Test::Unit::TestCase\n^~~~~~~~~~~~~~~~~~~\n/tmp/tmp0s7_gxqy.rb:15: syntax error, unexpected end-of-input, expecting `end'\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # Sort array in non-decreasing order\n  arr.sort!\n  # Initialize difference as infinite\n  diff = 10**9\n  # Find the min diff by comparing adjacent\n  # pairs in sorted array\n  (0...n-1).each do |i|\n    diff = [diff, arr[i+1] - arr[i]].min\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp898s4bmq\nStarted\n.\nFinished in 0.000454529 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2200.08 tests/s, 6600.24 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in (1..n-1)\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpzw2fzhrt\nStarted\n.\nFinished in 0.000478617 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2089.35 tests/s, 6268.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # Sort array in non-decreasing order\n  arr = arr.sort\n  # Initialize difference as infinite\n  diff = 10**9\n  # Find the min diff by comparing adjacent\n  # pairs in sorted array\n  (0...n-1).each do |i|\n    diff = [diff, arr[i+1] - arr[i]].min\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpa3pepb2s\nStarted\n.\nFinished in 0.000424683 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2354.70 tests/s, 7064.09 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 0..n-2\n    if (arr[i+1] - arr[i]) < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsaqorjle\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_z7w6qom\nStarted\n.\nFinished in 0.000425669 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2349.24 tests/s, 7047.73 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # Sort array in non-decreasing order\n  arr.sort!\n  # Initialize difference as infinite\n  diff = 10**9\n  # Find the min diff by comparing adjacent\n  # pairs in sorted array\n  (0...n-1).each do |i|\n    if (arr[i+1] - arr[i]) < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  # Return min diff\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_guenpm2\nStarted\n.\nFinished in 0.00070778 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1412.87 tests/s, 4238.61 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # Sort array in non-decreasing order\n  arr.sort!\n  # Initialize difference as infinite\n  diff = 10**9\n  # Find the min diff by comparing adjacent\n  # pairs in sorted array\n  (0...n-1).each do |i|\n    diff = [diff, arr[i+1]-arr[i]].min\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpueic2gwn\nStarted\n.\nFinished in 0.000419661 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2382.88 tests/s, 7148.63 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_z7w6qom\nStarted\n.\nFinished in 0.000425669 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2349.24 tests/s, 7047.73 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    min_diff = [min_diff, arr[i+1] - arr[i]].min\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp2p3epov0\nStarted\n.\nFinished in 0.000430948 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2320.47 tests/s, 6961.40 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp75vt6lkc\nStarted\n.\nFinished in 0.000390629 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2559.97 tests/s, 7679.92 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # Sort array in non-decreasing order\n  arr = arr.sort\n  # Initialize difference as infinite\n  diff = 10**9\n  # Find the min diff by comparing adjacent\n  # pairs in sorted array\n  (0...n-1).each do |i|\n    diff = [diff, arr[i+1] - arr[i]].min\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpa3pepb2s\nStarted\n.\nFinished in 0.000424683 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2354.70 tests/s, 7064.09 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  return min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmppcgdmp54\nStarted\n.\nFinished in 0.000435899 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2294.11 tests/s, 6882.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i - 1]) < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxv5si87i\nStarted\n.\nFinished in 0.000395507 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2528.40 tests/s, 7585.20 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_z7w6qom\nStarted\n.\nFinished in 0.000425669 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2349.24 tests/s, 7047.73 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    diff = arr[i] - arr[i - 1]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpvt1m3xpx\nStarted\n.\nFinished in 0.000480936 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2079.28 tests/s, 6237.84 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 0..n-2\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpz9j8t8zm\nStarted\n.\nFinished in 0.000426776 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2343.15 tests/s, 7029.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 0..n-2\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpg69xksld\nStarted\n.\nFinished in 0.000518073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1930.23 tests/s, 5790.69 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n-1\n    if (arr[i+1] - arr[i]) < min\n      min = arr[i+1] - arr[i]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp5n72v4sk\nStarted\n.\nFinished in 0.00046083 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2170.00 tests/s, 6509.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpjixmeanc\nStarted\n.\nFinished in 0.000413615 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2417.71 tests/s, 7253.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_z7w6qom\nStarted\n.\nFinished in 0.000425669 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2349.24 tests/s, 7047.73 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  (1..n-1).each do |i|\n    min_diff = [min_diff, arr[i] - arr[i-1]].min\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp2sn41yuw\nStarted\n.\nFinished in 0.000482076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2074.36 tests/s, 6223.09 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # Sort array in non-decreasing order\n  arr.sort!\n  # Initialize difference as infinite\n  diff = 10**9\n  # Find the min diff by comparing adjacent\n  # pairs in sorted array\n  (n-1).times do |i|\n    if arr[i+1] - arr[i] < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  # Return min diff\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplhs2njvj\nStarted\n.\nFinished in 0.00045802 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2183.31 tests/s, 6549.93 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < diff\n      diff = arr[i] - arr[i - 1]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxc9culza\nStarted\n.\nFinished in 0.000463526 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2157.38 tests/s, 6472.13 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < diff\n      diff = arr[i] - arr[i - 1]\n    end\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp5stcd9f2\nStarted\n.\nFinished in 0.000871987 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1146.81 tests/s, 3440.42 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    diff = arr[i+1] - arr[i]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp6cx318y1\nStarted\n.\nFinished in 0.000459844 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2174.65 tests/s, 6523.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpi5kbodmc\nStarted\n.\nFinished in 0.000395359 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2529.35 tests/s, 7588.04 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  return min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmppcgdmp54\nStarted\n.\nFinished in 0.000435899 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2294.11 tests/s, 6882.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min\n      min = arr[i+1] - arr[i]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp2u5zty01\nStarted\n.\nFinished in 0.000506205 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.48 tests/s, 5926.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    diff = arr[i] - arr[i - 1]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpvt1m3xpx\nStarted\n.\nFinished in 0.000480936 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2079.28 tests/s, 6237.84 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < diff\n      diff = arr[i] - arr[i - 1]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxc9culza\nStarted\n.\nFinished in 0.000463526 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2157.38 tests/s, 6472.13 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1] < min_diff)\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpa4xcgr6i\nStarted\n.\nFinished in 0.00041144 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2430.49 tests/s, 7291.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i+1] - arr[i] < min\n      min = arr[i+1] - arr[i]\n    end\n  end\n  return min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "Loaded suite /tmp/tmp3a5qqvcp\nStarted\nE\n===============================================================================\nError: test_find_min_diff(TestHumanEval):\n  NoMethodError: undefined method `-' for nil:NilClass\n  \n      if arr[i+1] - arr[i] < min\n                  ^\n/tmp/tmp3a5qqvcp.rb:6:in `block in find_min_diff'\n/tmp/tmp3a5qqvcp.rb:5:in `each'\n/tmp/tmp3a5qqvcp.rb:5:in `find_min_diff'\n/tmp/tmp3a5qqvcp.rb:16:in `call'\n/tmp/tmp3a5qqvcp.rb:16:in `test_find_min_diff'\n     13: class TestHumanEval < Test::Unit::TestCase\n     14:   def test_find_min_diff\n     15:     candidate = method(:find_min_diff)\n  => 16:     assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n     17:     assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n     18:     assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n     19:   end\n===============================================================================\n\nFinished in 0.002013364 seconds.\n-------------------------------------------------------------------------------\n1 tests, 0 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n496.68 tests/s, 0.00 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 0..n-2\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpg69xksld\nStarted\n.\nFinished in 0.000518073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1930.23 tests/s, 5790.69 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxna3yoz1\nStarted\n.\nFinished in 0.000403389 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2479.00 tests/s, 7436.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < diff\n      diff = arr[i] - arr[i-1]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmppkf4lhcg\nStarted\n.\nFinished in 0.000473689 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2111.09 tests/s, 6333.27 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n - 1\n    if arr[i + 1] - arr[i] < min_diff\n      min_diff = arr[i + 1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpb5lt5pt2\nStarted\n.\nFinished in 0.000470148 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2126.99 tests/s, 6380.97 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpwj32532h\nStarted\n.\nFinished in 0.000448039 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2231.95 tests/s, 6695.85 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps2no3y4w\nStarted\n.\nFinished in 0.00045881 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2179.55 tests/s, 6538.65 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i - 1]) < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxv5si87i\nStarted\n.\nFinished in 0.000395507 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2528.40 tests/s, 7585.20 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # Sort array in non-decreasing order\n  arr = arr.sort\n  # Initialize difference as infinite\n  diff = 10**9\n  # Find the min diff by comparing adjacent\n  # pairs in sorted array\n  (0...n-1).each do |i|\n    diff = [diff, arr[i+1]-arr[i]].min\n  end\n  # Return min diff\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp496t5i7y\nStarted\n.\nFinished in 0.000409499 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2442.01 tests/s, 7326.03 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # Sort array in non-decreasing order\n  arr.sort!\n  # Initialize difference as infinite\n  diff = 10**9\n  # Find the min diff by comparing adjacent\n  # pairs in sorted array\n  (n-1).times do |i|\n    diff = [diff, arr[i+1]-arr[i]].min\n  end\n  # Return min diff\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp288mum_r\nStarted\n.\nFinished in 0.000479729 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2084.51 tests/s, 6253.53 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min\n      min = arr[i+1] - arr[i]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp2u5zty01\nStarted\n.\nFinished in 0.000506205 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.48 tests/s, 5926.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min\n      min = arr[i+1] - arr[i]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp2u5zty01\nStarted\n.\nFinished in 0.000506205 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.48 tests/s, 5926.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxna3yoz1\nStarted\n.\nFinished in 0.000403389 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2479.00 tests/s, 7436.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i - 1]) < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxv5si87i\nStarted\n.\nFinished in 0.000395507 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2528.40 tests/s, 7585.20 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i - 1]) < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxv5si87i\nStarted\n.\nFinished in 0.000395507 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2528.40 tests/s, 7585.20 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpipk5z2wm\nStarted\n.\nFinished in 0.000484839 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2062.54 tests/s, 6187.62 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i+1] - arr[i] < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "Loaded suite /tmp/tmpoqp5o9m2\nStarted\nE\n===============================================================================\nError: test_find_min_diff(TestHumanEval):\n  NoMethodError: undefined method `-' for nil:NilClass\n  \n      if arr[i+1] - arr[i] < diff\n                  ^\n/tmp/tmpoqp5o9m2.rb:6:in `block in find_min_diff'\n/tmp/tmpoqp5o9m2.rb:5:in `each'\n/tmp/tmpoqp5o9m2.rb:5:in `find_min_diff'\n/tmp/tmpoqp5o9m2.rb:16:in `call'\n/tmp/tmpoqp5o9m2.rb:16:in `test_find_min_diff'\n     13: class TestHumanEval < Test::Unit::TestCase\n     14:   def test_find_min_diff\n     15:     candidate = method(:find_min_diff)\n  => 16:     assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n     17:     assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n     18:     assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n     19:   end\n===============================================================================\n\nFinished in 0.001996729 seconds.\n-------------------------------------------------------------------------------\n1 tests, 0 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n500.82 tests/s, 0.00 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 0..n-2\n    if arr[i+1] - arr[i] < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp93mkpnko\nStarted\n.\nFinished in 0.00039557 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2528.00 tests/s, 7583.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min\n      min = arr[i] - arr[i - 1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmphgsoxjg_\nStarted\n.\nFinished in 0.000404328 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2473.24 tests/s, 7419.72 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    min_diff = [min_diff, arr[i+1] - arr[i]].min\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp2p3epov0\nStarted\n.\nFinished in 0.000430948 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2320.47 tests/s, 6961.40 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # Sort array in non-decreasing order\n  arr.sort!\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "/tmp/tmpicxvxu78.rb:6: class definition in method body\nclass TestHumanEval < Test::Unit::TestCase\n^~~~~~~~~~~~~~~~~~~\n/tmp/tmpicxvxu78.rb:13: syntax error, unexpected end-of-input, expecting `end'\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if (arr[i+1] - arr[i]) < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaa_yyhmm\nStarted\n.\nFinished in 0.000397635 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2514.87 tests/s, 7544.61 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxna3yoz1\nStarted\n.\nFinished in 0.000403389 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2479.00 tests/s, 7436.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 0..n-1\n    for j in i+1..n-1\n      if (arr[j] - arr[i] < min_diff)\n        min_diff = arr[j] - arr[i]\n      end\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpy4lc2g_s\nStarted\n.\nFinished in 0.000416779 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2399.35 tests/s, 7198.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n-1\n    if (arr[i+1] - arr[i]) < min\n      min = arr[i+1] - arr[i]\n    end\n  end\n  return min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpvt10xen5\nStarted\n.\nFinished in 0.00039896 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2506.52 tests/s, 7519.55 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 0..n-2\n    if (arr[i+1] - arr[i]) < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsaqorjle\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    diff = arr[i+1] - arr[i]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp96z3j_5v\nStarted\n.\nFinished in 0.000401342 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2491.64 tests/s, 7474.92 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 0...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpfhyljzl6\nStarted\n.\nFinished in 0.000388963 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2570.94 tests/s, 7712.82 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpit5q3vts\nStarted\n.\nFinished in 0.000411619 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2429.43 tests/s, 7288.29 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    min_diff = [min_diff, arr[i+1] - arr[i]].min\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp2p3epov0\nStarted\n.\nFinished in 0.000430948 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2320.47 tests/s, 6961.40 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i - 1]) < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxv5si87i\nStarted\n.\nFinished in 0.000395507 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2528.40 tests/s, 7585.20 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in (1..n-1)\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpcu2u_pk0\nStarted\n.\nFinished in 0.000401099 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2493.15 tests/s, 7479.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < diff\n      diff = arr[i] - arr[i-1]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpijd0r6jg\nStarted\n.\nFinished in 0.000393506 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2541.26 tests/s, 7623.77 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxna3yoz1\nStarted\n.\nFinished in 0.000403389 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2479.00 tests/s, 7436.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    min_diff = [min_diff, arr[i+1] - arr[i]].min\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp2p3epov0\nStarted\n.\nFinished in 0.000430948 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2320.47 tests/s, 6961.40 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < diff\n      diff = arr[i] - arr[i-1]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmppkf4lhcg\nStarted\n.\nFinished in 0.000473689 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2111.09 tests/s, 6333.27 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpwj32532h\nStarted\n.\nFinished in 0.000448039 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2231.95 tests/s, 6695.85 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_z7w6qom\nStarted\n.\nFinished in 0.000425669 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2349.24 tests/s, 7047.73 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_z7w6qom\nStarted\n.\nFinished in 0.000425669 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2349.24 tests/s, 7047.73 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpit5q3vts\nStarted\n.\nFinished in 0.000411619 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2429.43 tests/s, 7288.29 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1...n-1\n    diff = [diff, arr[i+1] - arr[i]].min\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpkr1g62f7\nStarted\n.\nFinished in 0.00038827 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2575.53 tests/s, 7726.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpit5q3vts\nStarted\n.\nFinished in 0.000411619 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2429.43 tests/s, 7288.29 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # Sort array in non-decreasing order\n  arr.sort!\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "/tmp/tmpicxvxu78.rb:6: class definition in method body\nclass TestHumanEval < Test::Unit::TestCase\n^~~~~~~~~~~~~~~~~~~\n/tmp/tmpicxvxu78.rb:13: syntax error, unexpected end-of-input, expecting `end'\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp75vt6lkc\nStarted\n.\nFinished in 0.000390629 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2559.97 tests/s, 7679.92 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # Sort array in non-decreasing order\n  arr.sort!\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "/tmp/tmpicxvxu78.rb:6: class definition in method body\nclass TestHumanEval < Test::Unit::TestCase\n^~~~~~~~~~~~~~~~~~~\n/tmp/tmpicxvxu78.rb:13: syntax error, unexpected end-of-input, expecting `end'\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 0..n-2\n    if (arr[i+1] - arr[i]) < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsaqorjle\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in (1..n-1)\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpzw2fzhrt\nStarted\n.\nFinished in 0.000478617 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2089.35 tests/s, 6268.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp75vt6lkc\nStarted\n.\nFinished in 0.000390629 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2559.97 tests/s, 7679.92 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_z7w6qom\nStarted\n.\nFinished in 0.000425669 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2349.24 tests/s, 7047.73 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpi5kbodmc\nStarted\n.\nFinished in 0.000395359 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2529.35 tests/s, 7588.04 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i - 1]) < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxv5si87i\nStarted\n.\nFinished in 0.000395507 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2528.40 tests/s, 7585.20 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpi5kbodmc\nStarted\n.\nFinished in 0.000395359 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2529.35 tests/s, 7588.04 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxna3yoz1\nStarted\n.\nFinished in 0.000403389 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2479.00 tests/s, 7436.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  return min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdhn_fa8w\nStarted\n.\nFinished in 0.00039717 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2517.81 tests/s, 7553.44 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  return min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmppcgdmp54\nStarted\n.\nFinished in 0.000435899 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2294.11 tests/s, 6882.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min\n      min = arr[i+1] - arr[i]\n    end\n  end\n  return min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp5r_y6xd_\nStarted\n.\nFinished in 0.000393065 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2544.11 tests/s, 7632.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < diff\n      diff = arr[i] - arr[i - 1]\n    end\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp5stcd9f2\nStarted\n.\nFinished in 0.000871987 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1146.81 tests/s, 3440.42 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  (1..n-1).each do |i|\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpein4m8ai\nStarted\n.\nFinished in 0.000447916 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2232.56 tests/s, 6697.68 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if (arr[i+1] - arr[i]) < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaa_yyhmm\nStarted\n.\nFinished in 0.000397635 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2514.87 tests/s, 7544.61 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 0..n-2\n    if (arr[i+1] - arr[i]) < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp565ng7_5\nStarted\n.\nFinished in 0.000426729 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2343.41 tests/s, 7030.22 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i - 1]) < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxv5si87i\nStarted\n.\nFinished in 0.000395507 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2528.40 tests/s, 7585.20 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i - 1]) < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxv5si87i\nStarted\n.\nFinished in 0.000395507 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2528.40 tests/s, 7585.20 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < diff\n      diff = arr[i] - arr[i - 1]\n    end\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp5stcd9f2\nStarted\n.\nFinished in 0.000871987 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1146.81 tests/s, 3440.42 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpit5q3vts\nStarted\n.\nFinished in 0.000411619 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2429.43 tests/s, 7288.29 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < diff\n      diff = arr[i] - arr[i-1]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmppkf4lhcg\nStarted\n.\nFinished in 0.000473689 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2111.09 tests/s, 6333.27 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpi5kbodmc\nStarted\n.\nFinished in 0.000395359 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2529.35 tests/s, 7588.04 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < diff\n      diff = arr[i] - arr[i - 1]\n    end\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp5stcd9f2\nStarted\n.\nFinished in 0.000871987 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1146.81 tests/s, 3440.42 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpi5kbodmc\nStarted\n.\nFinished in 0.000395359 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2529.35 tests/s, 7588.04 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if (arr[i+1] - arr[i]) < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaa_yyhmm\nStarted\n.\nFinished in 0.000397635 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2514.87 tests/s, 7544.61 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < diff\n      diff = arr[i] - arr[i-1]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpkbqs5h2o\nStarted\n.\nFinished in 0.000412655 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2423.33 tests/s, 7270.00 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpb4m1y18g\nStarted\n.\nFinished in 0.000404186 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.11 tests/s, 7422.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp75vt6lkc\nStarted\n.\nFinished in 0.000390629 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2559.97 tests/s, 7679.92 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 0..n-2\n    if (arr[i+1] - arr[i]) < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsaqorjle\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min\n      min = arr[i+1] - arr[i]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp2u5zty01\nStarted\n.\nFinished in 0.000506205 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.48 tests/s, 5926.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpit5q3vts\nStarted\n.\nFinished in 0.000411619 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2429.43 tests/s, 7288.29 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxna3yoz1\nStarted\n.\nFinished in 0.000403389 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2479.00 tests/s, 7436.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i+1] - arr[i] < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "Loaded suite /tmp/tmpnhbyjrkg\nStarted\nE\n===============================================================================\nError: test_find_min_diff(TestHumanEval):\n  NoMethodError: undefined method `-' for nil:NilClass\n  \n      if arr[i+1] - arr[i] < diff\n                  ^\n/tmp/tmpnhbyjrkg.rb:6:in `block in find_min_diff'\n/tmp/tmpnhbyjrkg.rb:5:in `each'\n/tmp/tmpnhbyjrkg.rb:5:in `find_min_diff'\n/tmp/tmpnhbyjrkg.rb:16:in `call'\n/tmp/tmpnhbyjrkg.rb:16:in `test_find_min_diff'\n     13: class TestHumanEval < Test::Unit::TestCase\n     14:   def test_find_min_diff\n     15:     candidate = method(:find_min_diff)\n  => 16:     assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n     17:     assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n     18:     assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n     19:   end\n===============================================================================\n\nFinished in 0.001835645 seconds.\n-------------------------------------------------------------------------------\n1 tests, 0 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n544.77 tests/s, 0.00 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < diff\n      diff = arr[i] - arr[i - 1]\n    end\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp5stcd9f2\nStarted\n.\nFinished in 0.000871987 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1146.81 tests/s, 3440.42 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 0...n-1\n    if arr[i+1] - arr[i] < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpahge8woe\nStarted\n.\nFinished in 0.000412622 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2423.53 tests/s, 7270.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpjixmeanc\nStarted\n.\nFinished in 0.000413615 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2417.71 tests/s, 7253.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min\n      min = arr[i+1] - arr[i]\n    end\n  end\n  return min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp5r_y6xd_\nStarted\n.\nFinished in 0.000393065 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2544.11 tests/s, 7632.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpvblapg7o\nStarted\n.\nFinished in 0.000439019 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2277.81 tests/s, 6833.42 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 0...n-1\n    if (arr[i+1] - arr[i]) < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp6fxsxqah\nStarted\n.\nFinished in 0.000435161 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2298.00 tests/s, 6894.00 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    min_diff = [min_diff, arr[i] - arr[i - 1]].min\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpe72vjobv\nStarted\n.\nFinished in 0.000422949 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2364.35 tests/s, 7093.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpit5q3vts\nStarted\n.\nFinished in 0.000411619 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2429.43 tests/s, 7288.29 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaf6fupwb\nStarted\n.\nFinished in 0.000897275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1114.49 tests/s, 3343.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < diff\n      diff = arr[i] - arr[i - 1]\n    end\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123188,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp5stcd9f2\nStarted\n.\nFinished in 0.000871987 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1146.81 tests/s, 3440.42 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if (arr[i+1] - arr[i]) < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqo8h8gwv\nStarted\n.\nFinished in 0.000403165 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2480.37 tests/s, 7441.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_742_area_tetrahedron",
  "language": "rb",
  "prompt": "# Write a function to caluclate the area of a tetrahedron.\ndef area_tetrahedron(side)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_742_area_tetrahedron.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_area_tetrahedron\n    candidate = method(:area_tetrahedron)\n    assert_equal(15.588457268119894, candidate.call(3))\n    assert_equal(692.8203230275509, candidate.call(20))\n    assert_equal(173.20508075688772, candidate.call(10))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  # area of a tetrahedron is sqrt(3) * side^2\n  Math.sqrt(3) * side**2\nend",
    "  Math.sqrt(3) * side**2\nend",
    "  area = (Math.sqrt(3) * side**2) / 4\n  return area\nend",
    "  (Math.sqrt(3) * side**2).round(2)\nend",
    "  area = (Math.sqrt(3) * side**2).round(2)\n  puts \"The area of a tetrahedron with side length #{side} is #{area}.\"\nend",
    "  Math.sqrt(3) * side**2\nend",
    "  (Math.sqrt(3) * side**2).round(2)\nend",
    "  (Math.sqrt(3) * side**2).round(2)\nend",
    "  area = (Math.sqrt(3) * side ** 2).round(2)\n  puts \"The area of a tetrahedron with side #{side} is #{area}.\"\nend",
    "  return (Math.sqrt(3) * side**2).round(2)\nend",
    "  (Math.sqrt(3) * side**2).round(2)\nend",
    "  # Area of a tetrahedron is sqrt(3) * side^2\n  Math.sqrt(3) * side**2\nend",
    "  area = (Math.sqrt(3) * side ** 2) / 4\n  return area\nend",
    "  area = Math.sqrt(3) * side ** 2\n  return area\nend",
    "  area = (Math.sqrt(3) * side**2) / 4\n  return area\nend",
    "  area = (Math.sqrt(3) * side**2).round(2)\n  puts \"The area of a tetrahedron with side length #{side} is #{area}.\"\nend",
    "  area = (Math.sqrt(3) * side**2) / 4\n  return area\nend",
    "  area = Math.sqrt(3) * side ** 2\n  area\nend",
    "  area = Math.sqrt(3) * side**2\n  return area\nend",
    "  area = Math.sqrt(3) * side ** 2\n  return area\nend"
  ]
}
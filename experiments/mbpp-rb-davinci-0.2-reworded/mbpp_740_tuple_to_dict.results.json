{
  "name": "mbpp_740_tuple_to_dict",
  "language": "rb",
  "prompt": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_740_tuple_to_dict.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_dict = Hash.new\n  test_tup.each_slice(2) { |a,b| test_dict[a] = b }\n  test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmphobxhhus\nStarted\n.\nFinished in 0.000376998 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2652.53 tests/s, 7957.60 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n    test_dict = Hash.new\n    test_tup.each_slice(2) {|a, b| test_dict[a] = b}\n    test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp55_xq_r_\nStarted\n.\nFinished in 0.000394159 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2537.05 tests/s, 7611.14 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_with_object({}) { |(k, v), h| h[k] = v }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "Loaded suite /tmp/tmp4t7g_834\nStarted\nF\n===============================================================================\nFailure: test_tuple_to_dict(TestHumanEval)\n/tmp/tmp4t7g_834.rb:9:in `test_tuple_to_dict'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_tuple_to_dict\n      8:     candidate = method(:tuple_to_dict)\n  =>  9:     assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n     10:     assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n     11:     assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n     12:   end\n<{1=>5, 7=>10, 13=>5}> expected but was\n<{1=>nil, 5=>nil, 7=>nil, 10=>nil, 13=>nil}>\n\ndiff:\n? {1=>     5     , 7=>     10     , 13=>5  }\n?     nil,  =>nil     nil,   =>nil      nil \n?     +++++ +++++     +++++  +++++      ? \n===============================================================================\n\nFinished in 0.011943161 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n83.73 tests/s, 83.73 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  dict = Hash.new\n  test_tup.each_slice(2) { |k, v| dict[k] = v }\n  dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0u9p0knj\nStarted\n.\nFinished in 0.000536785 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1862.94 tests/s, 5588.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  dict = Hash.new\n  for i in 0..test_tup.length-1\n    dict[test_tup[i][0]] = test_tup[i][1]\n  end\n  return dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "Loaded suite /tmp/tmpkq07779k\nStarted\nF\n===============================================================================\nFailure: test_tuple_to_dict(TestHumanEval)\n/tmp/tmpkq07779k.rb:13:in `test_tuple_to_dict'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_tuple_to_dict\n     12:     candidate = method(:tuple_to_dict)\n  => 13:     assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n     14:     assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n     15:     assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n     16:   end\n<{1=>5, 7=>10, 13=>5}> expected but was\n<{0=>1, 1=>0}>\n\ndiff:\n? {0=>1, 1=>5, 7=>10, 13=>5}\n===============================================================================\n\nFinished in 0.010691827 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n93.53 tests/s, 93.53 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  hash = Hash.new\n  test_tup.each_slice(2) {|a, b| hash[a] = b}\n  hash\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpq9luik5x\nStarted\n.\nFinished in 0.000435917 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2294.01 tests/s, 6882.04 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n    test_dict = Hash.new\n    test_tup.each_slice(2) {|a, b| test_dict[a] = b}\n    return test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpi5t6pdqk\nStarted\n.\nFinished in 0.000415653 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2405.85 tests/s, 7217.56 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n    test_dict = Hash.new\n    test_tup.each_with_index do |val, index|\n        test_dict[val] = test_tup[index+1]\n    end\n    test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "Loaded suite /tmp/tmpsg7xjodz\nStarted\nF\n===============================================================================\nFailure: test_tuple_to_dict(TestHumanEval)\n/tmp/tmpsg7xjodz.rb:13:in `test_tuple_to_dict'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_tuple_to_dict\n     12:     candidate = method(:tuple_to_dict)\n  => 13:     assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n     14:     assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n     15:     assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n     16:   end\n<{1=>5, 7=>10, 13=>5}> expected but was\n<{1=>5, 5=>nil, 7=>10, 10=>13, 13=>5}>\n\ndiff:\n? {1=>5, 5=>nil, 7=>10, 10=>13, 13=>5}\n===============================================================================\n\nFinished in 0.011589617 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n86.28 tests/s, 86.28 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  dict = Hash.new\n  test_tup.each_slice(2) do |key, value|\n    dict[key] = value\n  end\n  dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd_x3nqu9\nStarted\n.\nFinished in 0.000481569 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.55 tests/s, 6229.64 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  dict = Hash.new\n  test_tup.each_slice(2) do |key, value|\n    dict[key] = value\n  end\n  return dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpea70kwzd\nStarted\n.\nFinished in 0.000562853 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1776.66 tests/s, 5329.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n    dict = Hash.new\n    test_tup.each_slice(2) {|a, b| dict[a] = b}\n    return dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp3cj8w89n\nStarted\n.\nFinished in 0.000428983 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2331.09 tests/s, 6993.28 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n    test_dict = Hash.new\n    test_tup.each_slice(2) { |a, b| test_dict[a] = b }\n    return test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpvfl0w6ij\nStarted\n.\nFinished in 0.000436351 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2291.73 tests/s, 6875.20 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n    test_dict = {}\n    test_tup.each_slice(2) { |key, value| test_dict[key] = value }\n    return test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpj3l56m36\nStarted\n.\nFinished in 0.000449931 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2222.56 tests/s, 6667.69 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  dict = Hash.new\n  test_tup.each_slice(2) { |a, b| dict[a] = b }\n  dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaznpneoi\nStarted\n.\nFinished in 0.000412729 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2422.90 tests/s, 7268.69 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  dict = Hash.new\n  test_tup.each_with_index do |val, index|\n    if index % 2 == 0\n      dict[val] = test_tup[index + 1]\n    end\n  end\n  dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpkhwv524v\nStarted\n.\nFinished in 0.000461743 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2165.71 tests/s, 6497.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n    test_dict = Hash.new\n    test_tup.each_slice(2) { |key, value| test_dict[key] = value }\n    return test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9oot_9_9\nStarted\n.\nFinished in 0.00052989 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1887.18 tests/s, 5661.55 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  hash = Hash.new\n  test_tup.each_slice(2) { |key, value| hash[key] = value }\n  hash\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps2spmu67\nStarted\n.\nFinished in 0.000484511 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2063.94 tests/s, 6191.81 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n    test_dict = Hash.new\n    test_tup.each_slice(2) {|a, b| test_dict[a] = b}\n    return test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpi5t6pdqk\nStarted\n.\nFinished in 0.000415653 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2405.85 tests/s, 7217.56 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_with_object({}) do |(key, value), hash|\n    hash[key] = value\n  end\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "Loaded suite /tmp/tmprg0vsr_s\nStarted\nF\n===============================================================================\nFailure: test_tuple_to_dict(TestHumanEval)\n/tmp/tmprg0vsr_s.rb:11:in `test_tuple_to_dict'\n      8: class TestHumanEval < Test::Unit::TestCase\n      9:   def test_tuple_to_dict\n     10:     candidate = method(:tuple_to_dict)\n  => 11:     assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n     12:     assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n     13:     assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n     14:   end\n<{1=>5, 7=>10, 13=>5}> expected but was\n<{1=>nil, 5=>nil, 7=>nil, 10=>nil, 13=>nil}>\n\ndiff:\n? {1=>     5     , 7=>     10     , 13=>5  }\n?     nil,  =>nil     nil,   =>nil      nil \n?     +++++ +++++     +++++  +++++      ? \n===============================================================================\n\nFinished in 0.012050577 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n82.98 tests/s, 82.98 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_dict = Hash.new\n  test_tup.each_slice(2) { |a, b| test_dict[a] = b }\n  test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpj5mo3cn3\nStarted\n.\nFinished in 0.000670712 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1490.95 tests/s, 4472.86 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  dict = Hash.new\n  test_tup.each_slice(2) do |key, value|\n    dict[key] = value\n  end\n  dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd_x3nqu9\nStarted\n.\nFinished in 0.000481569 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.55 tests/s, 6229.64 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_dict = Hash.new\n  test_tup.each_slice(2) { |k, v| test_dict[k] = v }\n  test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp30nvidpt\nStarted\n.\nFinished in 0.000797037 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1254.65 tests/s, 3763.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_with_object({}) do |(key, value), hash|\n    hash[key] = value\n  end\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "Loaded suite /tmp/tmprg0vsr_s\nStarted\nF\n===============================================================================\nFailure: test_tuple_to_dict(TestHumanEval)\n/tmp/tmprg0vsr_s.rb:11:in `test_tuple_to_dict'\n      8: class TestHumanEval < Test::Unit::TestCase\n      9:   def test_tuple_to_dict\n     10:     candidate = method(:tuple_to_dict)\n  => 11:     assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n     12:     assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n     13:     assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n     14:   end\n<{1=>5, 7=>10, 13=>5}> expected but was\n<{1=>nil, 5=>nil, 7=>nil, 10=>nil, 13=>nil}>\n\ndiff:\n? {1=>     5     , 7=>     10     , 13=>5  }\n?     nil,  =>nil     nil,   =>nil      nil \n?     +++++ +++++     +++++  +++++      ? \n===============================================================================\n\nFinished in 0.012050577 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n82.98 tests/s, 82.98 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  dict = Hash.new\n  test_tup.each_with_index do |item, index|\n    if index % 2 == 0\n      dict[item] = test_tup[index + 1]\n    end\n  end\n  dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpwe78237u\nStarted\n.\nFinished in 0.000417675 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2394.21 tests/s, 7182.62 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  dict = Hash.new\n  test_tup.each_slice(2) { |a, b| dict[a] = b }\n  dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaznpneoi\nStarted\n.\nFinished in 0.000412729 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2422.90 tests/s, 7268.69 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n    test_dict = Hash.new\n    test_tup.each_slice(2) {|a, b| test_dict[a] = b}\n    test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp55_xq_r_\nStarted\n.\nFinished in 0.000394159 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2537.05 tests/s, 7611.14 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  dict = Hash.new\n  for i in 0..test_tup.length-1\n    dict[test_tup[i][0]] = test_tup[i][1]\n  end\n  dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "Loaded suite /tmp/tmpxmxgwrz2\nStarted\nF\n===============================================================================\nFailure: test_tuple_to_dict(TestHumanEval)\n/tmp/tmpxmxgwrz2.rb:13:in `test_tuple_to_dict'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_tuple_to_dict\n     12:     candidate = method(:tuple_to_dict)\n  => 13:     assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n     14:     assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n     15:     assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n     16:   end\n<{1=>5, 7=>10, 13=>5}> expected but was\n<{0=>1, 1=>0}>\n\ndiff:\n? {0=>1, 1=>5, 7=>10, 13=>5}\n===============================================================================\n\nFinished in 0.009938492 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n100.62 tests/s, 100.62 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  dict = Hash.new\n  for i in 0...test_tup.length\n    dict[test_tup[i][0]] = test_tup[i][1]\n  end\n  return dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "Loaded suite /tmp/tmp7fwynzkv\nStarted\nF\n===============================================================================\nFailure: test_tuple_to_dict(TestHumanEval)\n/tmp/tmp7fwynzkv.rb:13:in `test_tuple_to_dict'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_tuple_to_dict\n     12:     candidate = method(:tuple_to_dict)\n  => 13:     assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n     14:     assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n     15:     assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n     16:   end\n<{1=>5, 7=>10, 13=>5}> expected but was\n<{0=>1, 1=>0}>\n\ndiff:\n? {0=>1, 1=>5, 7=>10, 13=>5}\n===============================================================================\n\nFinished in 0.009635444 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n103.78 tests/s, 103.78 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n    test_dict = {}\n    for i in 0..test_tup.length-1\n        test_dict[test_tup[i][0]] = test_tup[i][1]\n    end\n    return test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "Loaded suite /tmp/tmpmzfvo8j1\nStarted\nF\n===============================================================================\nFailure: test_tuple_to_dict(TestHumanEval)\n/tmp/tmpmzfvo8j1.rb:13:in `test_tuple_to_dict'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_tuple_to_dict\n     12:     candidate = method(:tuple_to_dict)\n  => 13:     assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n     14:     assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n     15:     assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n     16:   end\n<{1=>5, 7=>10, 13=>5}> expected but was\n<{0=>1, 1=>0}>\n\ndiff:\n? {0=>1, 1=>5, 7=>10, 13=>5}\n===============================================================================\n\nFinished in 0.009622725 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n103.92 tests/s, 103.92 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  dict = Hash.new\n  test_tup.each_with_index do |value, index|\n    if index % 2 == 0\n      dict[value] = test_tup[index + 1]\n    end\n  end\n  dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpu9ytqui2\nStarted\n.\nFinished in 0.000432266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2313.39 tests/s, 6940.17 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  dict = Hash.new\n  test_tup.each_slice(2) { |a, b| dict[a] = b }\n  dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpaznpneoi\nStarted\n.\nFinished in 0.000412729 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2422.90 tests/s, 7268.69 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n    test_dict = Hash.new\n    test_tup.each_slice(2) { |k, v| test_dict[k] = v }\n    test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpu0353i_u\nStarted\n.\nFinished in 0.000414335 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2413.51 tests/s, 7240.52 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_dict = {}\n  test_tup.each_slice(2) do |key, value|\n    test_dict[key] = value\n  end\n  test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiszomfy6\nStarted\n.\nFinished in 0.000396133 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2524.40 tests/s, 7573.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n    test_dict = Hash.new\n    test_tup.each_slice(2) {|a,b| test_dict[a] = b}\n    return test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp3tn_h0z0\nStarted\n.\nFinished in 0.000379917 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2632.15 tests/s, 7896.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n    test_dict = Hash.new\n    test_tup.each_slice(2) { |a, b| test_dict[a] = b }\n    return test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpvfl0w6ij\nStarted\n.\nFinished in 0.000436351 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2291.73 tests/s, 6875.20 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  dict = Hash.new\n  test_tup.each_slice(2) { |key, value| dict[key] = value }\n  dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpz02hj176\nStarted\n.\nFinished in 0.000363392 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2751.85 tests/s, 8255.55 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  dict = {}\n  test_tup.each_slice(2) { |a, b| dict[a] = b }\n  dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpueno8i47\nStarted\n.\nFinished in 0.000418913 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2387.13 tests/s, 7161.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_dict = Hash.new\n  test_tup.each_slice(2) { |a, b| test_dict[a] = b }\n  test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpj5mo3cn3\nStarted\n.\nFinished in 0.000670712 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1490.95 tests/s, 4472.86 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_dict = Hash.new\n  test_tup.each_slice(2) {|a, b| test_dict[a] = b}\n  test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0vlbj4dv\nStarted\n.\nFinished in 0.000401146 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2492.86 tests/s, 7478.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  dict = Hash.new\n  for i in 0..test_tup.length-1\n    dict[test_tup[i][0]] = test_tup[i][1]\n  end\n  return dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "Loaded suite /tmp/tmpkq07779k\nStarted\nF\n===============================================================================\nFailure: test_tuple_to_dict(TestHumanEval)\n/tmp/tmpkq07779k.rb:13:in `test_tuple_to_dict'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_tuple_to_dict\n     12:     candidate = method(:tuple_to_dict)\n  => 13:     assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n     14:     assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n     15:     assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n     16:   end\n<{1=>5, 7=>10, 13=>5}> expected but was\n<{0=>1, 1=>0}>\n\ndiff:\n? {0=>1, 1=>5, 7=>10, 13=>5}\n===============================================================================\n\nFinished in 0.010691827 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n93.53 tests/s, 93.53 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  dict = Hash.new\n  for i in 0...test_tup.length\n    dict[test_tup[i][0]] = test_tup[i][1]\n  end\n  dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "Loaded suite /tmp/tmpjungdv8a\nStarted\nF\n===============================================================================\nFailure: test_tuple_to_dict(TestHumanEval)\n/tmp/tmpjungdv8a.rb:13:in `test_tuple_to_dict'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_tuple_to_dict\n     12:     candidate = method(:tuple_to_dict)\n  => 13:     assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n     14:     assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n     15:     assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n     16:   end\n<{1=>5, 7=>10, 13=>5}> expected but was\n<{0=>1, 1=>0}>\n\ndiff:\n? {0=>1, 1=>5, 7=>10, 13=>5}\n===============================================================================\n\nFinished in 0.007483048 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n133.64 tests/s, 133.64 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_with_object({}) do |(key, value), hash|\n    hash[key] = value\n  end\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "Loaded suite /tmp/tmprg0vsr_s\nStarted\nF\n===============================================================================\nFailure: test_tuple_to_dict(TestHumanEval)\n/tmp/tmprg0vsr_s.rb:11:in `test_tuple_to_dict'\n      8: class TestHumanEval < Test::Unit::TestCase\n      9:   def test_tuple_to_dict\n     10:     candidate = method(:tuple_to_dict)\n  => 11:     assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n     12:     assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n     13:     assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n     14:   end\n<{1=>5, 7=>10, 13=>5}> expected but was\n<{1=>nil, 5=>nil, 7=>nil, 10=>nil, 13=>nil}>\n\ndiff:\n? {1=>     5     , 7=>     10     , 13=>5  }\n?     nil,  =>nil     nil,   =>nil      nil \n?     +++++ +++++     +++++  +++++      ? \n===============================================================================\n\nFinished in 0.012050577 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n82.98 tests/s, 82.98 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n    test_dict = Hash.new\n    test_tup.each_slice(2) {|a,b| test_dict[a] = b}\n    return test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp3tn_h0z0\nStarted\n.\nFinished in 0.000379917 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2632.15 tests/s, 7896.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  hash = Hash.new\n  test_tup.each_slice(2) do |key, value|\n    hash[key] = value\n  end\n  hash\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpkywi09f_\nStarted\n.\nFinished in 0.000423241 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2362.72 tests/s, 7088.16 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n    test_dict = Hash.new\n    test_tup.each_slice(2) { |a, b| test_dict[a] = b }\n    return test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpvfl0w6ij\nStarted\n.\nFinished in 0.000436351 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2291.73 tests/s, 6875.20 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  dict = Hash.new\n  for i in 0..test_tup.length-1\n    dict[test_tup[i][0]] = test_tup[i][1]\n  end\n  return dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "Loaded suite /tmp/tmpkq07779k\nStarted\nF\n===============================================================================\nFailure: test_tuple_to_dict(TestHumanEval)\n/tmp/tmpkq07779k.rb:13:in `test_tuple_to_dict'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_tuple_to_dict\n     12:     candidate = method(:tuple_to_dict)\n  => 13:     assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n     14:     assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n     15:     assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n     16:   end\n<{1=>5, 7=>10, 13=>5}> expected but was\n<{0=>1, 1=>0}>\n\ndiff:\n? {0=>1, 1=>5, 7=>10, 13=>5}\n===============================================================================\n\nFinished in 0.010691827 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n93.53 tests/s, 93.53 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_a.to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm_0jykpr\nStarted\n.\nFinished in 0.000395833 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.32 tests/s, 7578.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_dict = Hash[*test_tup.flatten]\n  puts test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "Loaded suite /tmp/tmpc_l_8hz2\nStarted\n{1=>5, 7=>10, 13=>5}\nF\n===============================================================================\nFailure: test_tuple_to_dict(TestHumanEval)\n/tmp/tmpc_l_8hz2.rb:10:in `test_tuple_to_dict'\n      7: class TestHumanEval < Test::Unit::TestCase\n      8:   def test_tuple_to_dict\n      9:     candidate = method(:tuple_to_dict)\n  => 10:     assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n     11:     assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n     12:     assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n     13:   end\n<{1=>5, 7=>10, 13=>5}> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.006838693 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n146.23 tests/s, 146.23 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n    dict = Hash.new\n    test_tup.each_slice(2) { |a, b| dict[a] = b }\n    return dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122657,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpr5d3fhsq\nStarted\n.\nFinished in 0.000384088 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2603.57 tests/s, 7810.71 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  dict = Hash.new\n  test_tup.each_slice(2) { |key, value| dict[key] = value }\n  dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1666122658,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpz02hj176\nStarted\n.\nFinished in 0.000363392 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2751.85 tests/s, 8255.55 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n    test_dict = Hash.new\n    test_tup.each_slice(2) {|a, b| test_dict[a] = b}\n    test_dict\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp55_xq_r_\nStarted\n.\nFinished in 0.000394159 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2537.05 tests/s, 7611.14 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to convert the given array to a key-value hash using adjacent elements. https://www.geeksforgeeks.org/rbthon-convert-array-to-adjacent-pair-hash/\ndef tuple_to_dict(test_tup)\n  test_tup.each_slice(2).to_h\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_tuple_to_dict\n    candidate = method(:tuple_to_dict)\n    assert_equal({1 => 5, 7 => 10, 13 => 5}, candidate.call([1, 5, 7, 10, 13, 5]))\n    assert_equal({1 => 2, 3 => 4, 5 => 6}, candidate.call([1, 2, 3, 4, 5, 6]))\n    assert_equal({7 => 8, 9 => 10, 11 => 12}, candidate.call([7, 8, 9, 10, 11, 12]))\n  end\nend\n",
      "timestamp": 1665509893,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpftphhwym\nStarted\n.\nFinished in 0.000490406 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.13 tests/s, 6117.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
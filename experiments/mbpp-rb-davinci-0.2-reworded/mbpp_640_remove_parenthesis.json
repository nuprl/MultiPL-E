{
  "name": "mbpp_640_remove_parenthesis",
  "language": "rb",
  "prompt": "# Write a function to remove the parenthesis and what is inbetween them from a string.\ndef remove_parenthesis(items)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_640_remove_parenthesis.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_remove_parenthesis\n    candidate = method(:remove_parenthesis)\n    assert_equal(\"python\", candidate.call([\"python (chrome)\"]))\n    assert_equal(\"string\", candidate.call([\"string(.abc)\"]))\n    assert_equal(\"alpha\", candidate.call([\"alpha(num)\"]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  items.gsub(/\\(.*?\\)/, '')\nend",
    "  items.gsub(/\\([^()]*\\)/, '')\nend",
    "  items.gsub(/\\([^)]*\\)/, \"\")\nend",
    "  items.gsub(/\\(.*?\\)/, \"\")\nend",
    "  items.gsub(/\\(.*?\\)/, \"\")\nend",
    "  items.gsub(/\\([^()]*\\)/, '')\nend",
    "  items.gsub(/\\([^)]*\\)/, \"\")\nend",
    "  items.gsub(/\\(.*?\\)/, \"\")\nend",
    "  items.gsub(/\\(.*?\\)/, '')\nend",
    "  items.gsub(/\\(.*?\\)/, '')\nend",
    "  items.gsub(/\\(.*?\\)/, '')\nend",
    "  items.gsub(/\\(.*?\\)/, '')\nend",
    "  items.gsub(/\\(.*?\\)/, \"\")\nend",
    "  items.gsub(/\\([^()]*\\)/, '')\nend",
    "  items.gsub(/\\(.*?\\)/, '')\nend",
    "  items.gsub(/\\([^()]*\\)/, \"\")\nend",
    "  items.gsub(/\\(.*?\\)/, '')\nend",
    "  items.gsub(/\\(.*?\\)/, \"\")\nend",
    "  items.gsub(/\\([^()]*\\)/, '')\nend",
    "  items.gsub(/\\(.*?\\)/, '')\nend"
  ]
}
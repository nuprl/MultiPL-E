{
  "name": "mbpp_566_sum_digits",
  "language": "rb",
  "prompt": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_566_sum_digits.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).inject(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0ltrp2tv\nStarted\n.\nFinished in 0.000521969 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1915.82 tests/s, 5747.47 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  # Your code here\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1666123807,
      "stdout": "Loaded suite /tmp/tmp7kairvz8\nStarted\nF\n===============================================================================\nFailure: test_sum_digits(TestHumanEval)\n/tmp/tmp7kairvz8.rb:9:in `test_sum_digits'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_sum_digits\n      8:     candidate = method(:sum_digits)\n  =>  9:     assert_equal(12, candidate.call(345))\n     10:     assert_equal(3, candidate.call(12))\n     11:     assert_equal(16, candidate.call(97))\n     12:   end\n<12> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.006730772 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n148.57 tests/s, 148.57 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).inject(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp8lar8r7g\nStarted\n.\nFinished in 0.000370479 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2699.21 tests/s, 8097.62 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return n if n < 10\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsc9ghxpo\nStarted\n.\nFinished in 0.000430141 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2324.82 tests/s, 6974.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split(\"\").map(&:to_i).inject(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpih934nm4\nStarted\n.\nFinished in 0.000487657 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2050.62 tests/s, 6151.86 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  # Convert the number to a string\n  # Split the string into an array of characters\n  # Convert each character to an integer\n  # Sum the integers\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmppmzbpxh7\nStarted\n.\nFinished in 0.000372581 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2683.98 tests/s, 8051.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return n if n < 10\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsc9ghxpo\nStarted\n.\nFinished in 0.000430141 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2324.82 tests/s, 6974.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split(\"\").map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiuwy6yy1\nStarted\n.\nFinished in 0.000486855 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2054.00 tests/s, 6162.00 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp2p0li2xl\nStarted\n.\nFinished in 0.000372365 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2685.54 tests/s, 8056.61 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split(\"\").map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiuwy6yy1\nStarted\n.\nFinished in 0.000486855 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2054.00 tests/s, 6162.00 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split(\"\").map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiuwy6yy1\nStarted\n.\nFinished in 0.000486855 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2054.00 tests/s, 6162.00 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).inject(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0ltrp2tv\nStarted\n.\nFinished in 0.000521969 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1915.82 tests/s, 5747.47 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split(\"\").map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiuwy6yy1\nStarted\n.\nFinished in 0.000486855 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2054.00 tests/s, 6162.00 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
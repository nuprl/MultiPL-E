{
  "name": "mbpp_778_pack_consecutive_duplicates",
  "language": "rb",
  "prompt": "# Write a function to pack consecutive duplicates of a given array elements into subarrays.\ndef pack_consecutive_duplicates(list1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_778_pack_consecutive_duplicates.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_pack_consecutive_duplicates\n    candidate = method(:pack_consecutive_duplicates)\n    assert_equal([[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]], candidate.call([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]))\n    assert_equal([[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]], candidate.call([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]))\n    assert_equal([[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]], candidate.call([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  list1.chunk{|x| x}.map{|x,y| y}\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk{|x| x}.map{|x,y| y}\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map { |x, y| y }\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk{|x| x}.map{|x,y| y}\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk{|x| x}.map{|x,y| y}\nend",
    "  list1.chunk { |e| e }.map { |e| e[1] }\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk{|x| x}.map{|x,y| y}\nend",
    "  list1.chunk { |e| e }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk{|x| x}.map{|x,y| y}\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |e| e }.map { |e| e.last }\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map { |x, y| y }\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map { |x| x.last }\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |e| e }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map { |x| x.last }\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  result = []\n  list1.each_with_object([]) do |element, array|\n    if array.empty? || array.last.last != element\n      array << [element]\n    else\n      array.last << element\n    end\n  end\nend",
    "  list1.chunk { |x| x }.map { |x, y| y }\nend",
    "  list1.chunk { |e| e }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map { |x| x.last }\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk{|x| x}.map{|x,y| y}\nend",
    "  list1.chunk { |e| e }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk{|x| x}.map{|x, y| y}\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |e| e }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map { |x| x.last }\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |e| e }.map(&:last)\nend",
    "  list1.chunk { |e| e }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |e| e }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map { |x| x.last }\nend",
    "  list1.chunk { |x| x }.map { |x| x.last }\nend",
    "  list1.chunk { |i| i }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk {|x| x}.map {|x, y| y}\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk{|x| x}.map{|x,y| y}\nend",
    "  list1.chunk { |i| i }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map { |x, y| y }\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |i| i }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk{|x| x}.map{|x,y| y}\nend",
    "  list1.chunk { |n| n }.map { |n, a| a }\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk(&:itself).map(&:last)\nend",
    "  list1.chunk{|x| x}.map{|x,y| y}\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |e| e }.map(&:last)\nend",
    "  list1.chunk{|x| x}.map{|x,y| y}\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |e| e }.map { |e| e.last }\nend",
    "  list1.chunk{|x| x}.map{|x,y| y}\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map { |x| x[1] }\nend",
    "  list1.chunk{|n| n}.map{|n,a| a}\nend",
    "  list1.chunk { |x| x }.map { |x, y| y }\nend",
    "  list2 = []\n  list1.each_with_index do |item, index|\n    if list1[index] == list1[index+1]\n      list2 << list1[index]\n    else\n      list2 << list1[index]\n      list2 << []\n    end\n  end\n  list2.delete([])\n  list2\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk{|x| x}.map{|x,y| y}\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  result = []\n  list1.each_with_index do |item, index|\n    if index == 0\n      result << [item]\n    elsif item == list1[index - 1]\n      result[-1] << item\n    else\n      result << [item]\n    end\n  end\n  result\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk {|n| n}.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |e| e }.map(&:last)\nend",
    "  list1.chunk { |e| e }.map { |e| e.last }\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk{|x| x}.map{|x,y| y}\nend",
    "  result = []\n  list1.each_with_object([]) do |element, array|\n    if array.empty? || array.last.last != element\n      array << [element]\n    else\n      array.last << element\n    end\n  end\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk{|x| x}.map{|x, y| y}\nend",
    "  list1.chunk { |i| i }.map { |i, a| a }\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map { |x| x.last }\nend",
    "  list1.chunk { |x| x }.map { |x, y| y }\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map { |x| x.last }\nend",
    "  list1.chunk { |i| i }.map { |i, a| a }\nend",
    "  list1.chunk{|x| x}.map{|x,y| y}\nend",
    "  list1.chunk {|x| x}.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |e| e }.map(&:last)\nend",
    "  list1.chunk{|x| x}.map{|x, y| y}\nend",
    "  list1.chunk { |x| x }.map { |x| x.last }\nend",
    "  list1.chunk{|x| x}.map{|x,y| y}\nend",
    "  list1.chunk { |i| i }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk{|x| x}.map{|x,y| y}\nend",
    "  list1.chunk{|x| x}.map{|x,y| y}\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  result = []\n  list1.each_with_index do |item, index|\n    if list1[index] == list1[index + 1]\n      result << [item]\n    else\n      result << [item]\n    end\n  end\n  result\nend",
    "  list1.chunk{|x| x}.map{|x| x[1]}\nend",
    "  result = []\n  list1.each_with_object([]) do |element, array|\n    if array.empty? || array.last.last != element\n      array << [element]\n    else\n      array.last << element\n    end\n  end\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk{|x| x}.map{|x,y| y}\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk{|x| x}.map{|x,y| y}\nend",
    "  list1.chunk { |n| n }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk { |x| x }.map(&:last)\nend",
    "  list1.chunk{|x| x}.map{|x,y| y}\nend",
    "  list1.chunk { |x| x }.map { |x| x.last }\nend"
  ]
}
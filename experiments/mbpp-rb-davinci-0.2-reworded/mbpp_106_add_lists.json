{
  "name": "mbpp_106_add_lists",
  "language": "rb",
  "prompt": "# Write a function to append the given array to the given arrays.\ndef add_lists(test_list, test_tup)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_106_add_lists.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_add_lists\n    candidate = method(:add_lists)\n    assert_equal([9, 10, 5, 6, 7], candidate.call([5, 6, 7], [9, 10]))\n    assert_equal([10, 11, 6, 7, 8], candidate.call([6, 7, 8], [10, 11]))\n    assert_equal([11, 12, 7, 8, 9], candidate.call([7, 8, 9], [11, 12]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "    test_list.append(test_tup)\n    return test_list",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.push(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "    test_list.append(test_tup)\n    return test_list",
    "  new_list = []\n  test_list.each do |x|\n    new_list << x\n  end\n  test_tup.each do |x|\n    new_list << x\n  end\n  new_list\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.push(*test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "    test_list.append(test_tup)\n    return test_list",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "    test_list.append(test_tup)\n    return test_list",
    "  test_list.concat(test_tup)\nend",
    "    test_list.append(test_tup)\n    return test_list",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list + test_tup\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.push(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list + test_tup\nend",
    "  test_list.concat(test_tup)\nend",
    "    return test_list + test_tup\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.push(test_tup)\nend",
    "    test_list.append(test_tup)\n    return test_list",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.push(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.push(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.push(test_tup)\n  test_list\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "    test_list.append(test_tup)\n    return test_list",
    "  test_list.concat(test_tup)\nend",
    "    test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  # test_list.concat(test_tup)\n  test_list.push(*test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "    test_list.append(test_tup)\n    return test_list",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "    test_list.append(test_tup)\n    return test_list",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "    test_list.append(test_tup)\n    return test_list",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.push(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "    test_list.append(test_tup)\n    return test_list",
    "  test_list.concat(test_tup)\nend",
    "    test_list.append(test_tup)\n    print(test_list)",
    "  test_list.concat(test_tup)\nend",
    "    test_list.append(test_tup)\n    return test_list",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "    test_list.append(test_tup)\n    return test_list",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "    test_list.append(test_tup)\n    return test_list",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "    test_list.append(test_tup)\n    return test_list",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "    test_list.append(test_tup)\n    return test_list",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.push(test_tup)\n  return test_list\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list + test_tup\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.concat(test_tup)\nend",
    "  test_list.zip(test_tup).flatten.compact\nend",
    "  test_list.concat(test_tup)\nend"
  ]
}
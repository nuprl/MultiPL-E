{
  "name": "mbpp_558_digit_distance_nums",
  "language": "rb",
  "prompt": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  sum = 0\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |a, b| (a - b).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |a, b| (a - b).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |num, i|\n    sum += (num.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |a, b| (a - b).abs }.sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend",
    "  # Convert the numbers to strings\n  n1 = n1.to_s\n  n2 = n2.to_s",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1.to_s.split('').map(&:to_i).zip(n2.to_s.split('').map(&:to_i)).map { |x, y| (x - y).abs }.sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend",
    "  (n1 - n2).abs.to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1.to_s.chars.map(&:to_i).zip(n2.to_s.chars.map(&:to_i)).map { |a, b| (a - b).abs }.sum\nend",
    "  n1_array = n1.to_s.split('')\n  n2_array = n2.to_s.split('')\n  sum = 0\n  n1_array.each_with_index do |num, index|\n    sum += (num.to_i - n2_array[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split(\"\")\n  n2 = n2.to_s.split(\"\")\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |n, i|\n    sum += (n.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.reduce(:+)\nend",
    "  n1_digits = n1.to_s.split('').map(&:to_i)\n  n2_digits = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1_digits.each_with_index do |digit, index|\n    sum += (digit - n2_digits[index]).abs\n  end\n  sum\nend",
    "  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |num, i|\n    sum += (num.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map {|x, y| (x - y).abs}.reduce(:+)\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1.to_s.chars.map(&:to_i).zip(n2.to_s.chars.map(&:to_i)).map { |x, y| (x - y).abs }.sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend",
    "  n1 = n1.to_s.split(//)\n  n2 = n2.to_s.split(//)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend",
    "  # convert both numbers to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # make sure both strings are the same length\n  if n1.length > n2.length\n    n2 = n2.rjust(n1.length, \"0\")\n  elsif n2.length > n1.length\n    n1 = n1.rjust(n2.length, \"0\")\n  end\n  # iterate through each digit\n  sum = 0\n  n1.length.times do |i|\n    sum += (n1[i].to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |a, b| (a - b).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |num, idx|\n    sum += (num.to_i - n2_arr[idx].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  sum = 0\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  n1.length.times do |i|\n    sum += (n1[i].to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1_array = n1.to_s.split('')\n  n2_array = n2.to_s.split('')\n  sum = 0\n  n1_array.each_with_index do |num, i|\n    sum += (num.to_i - n2_array[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1_array = n1.to_s.split(\"\")\n  n2_array = n2.to_s.split(\"\")\n  sum = 0\n  n1_array.each_with_index do |num, index|\n    sum += (num.to_i - n2_array[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  sum = 0\n  n1.to_s.split('').each_with_index do |n, i|\n    sum += (n.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |n, i|\n    sum += (n.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend",
    "  n1.to_s.chars.map(&:to_i).zip(n2.to_s.chars.map(&:to_i)).map { |x, y| (x - y).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |num, index|\n    sum += (num.to_i - n2_arr[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1, n2 = n1.to_s.split(''), n2.to_s.split('')\n  n1, n2 = n1.map(&:to_i), n2.map(&:to_i)\n  n1, n2 = n1.length > n2.length ? n1 : n2, n1.length > n2.length ? n2 : n1\n  n1.zip(n2).map { |x, y| (x - y).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1.to_s.chars.map(&:to_i).zip(n2.to_s.chars.map(&:to_i)).map {|x, y| (x - y).abs}.reduce(:+)\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  sum = 0\n  n1.to_s.split('').each_with_index do |num, i|\n    sum += (num.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend",
    "  n1 = n1.to_s.chars.map(&:to_i)\n  n2 = n2.to_s.chars.map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  sum = 0\n  n1.to_s.split('').each_with_index do |num, i|\n    sum += (num.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend",
    "  sum = 0\n  n1.to_s.split('').each_with_index do |n, i|\n    sum += (n.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map{|x,y| (x-y).abs}.reduce(:+)\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  sum = 0\n  n1.to_s.split('').each_with_index do |n, i|\n    sum += (n.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  sum = 0\n  n1.to_s.split('').each_with_index do |n, i|\n    sum += (n.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  if n1.length > n2.length\n    n1.each_with_index do |num, index|\n      if n2[index]\n        sum += (num.to_i - n2[index].to_i).abs\n      else\n        sum += num.to_i\n      end\n    end\n  else\n    n2.each_with_index do |num, index|\n      if n1[index]\n        sum += (num.to_i - n1[index].to_i).abs\n      else\n        sum += num.to_i\n      end\n    end\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.chars.map(&:to_i)\n  n2 = n2.to_s.chars.map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend",
    "  n1.to_s.chars.map(&:to_i).zip(n2.to_s.chars.map(&:to_i)).map { |a, b| (a - b).abs }.sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |n, i|\n    sum += (n.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  sum = 0\n  n1.to_s.split('').each_with_index do |n, i|\n    sum += (n.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  sum = 0\n  n1.to_s.split('').each_with_index do |n, i|\n    sum += (n.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |a, b| (a - b).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  sum = 0\n  n1.to_s.split('').each_with_index do |num, i|\n    sum += (num.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |num, i|\n    sum += (num.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |a, b| (a - b).abs }.reduce(:+)\nend",
    "  n1.to_s.chars.map(&:to_i).zip(n2.to_s.chars.map(&:to_i)).map { |x, y| (x - y).abs }.sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  sum = 0\n  n1.to_s.split('').each_with_index do |n, i|\n    sum += (n.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |num, idx|\n    sum += (num.to_i - n2_arr[idx].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1_array = n1.to_s.split('').map(&:to_i)\n  n2_array = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1_array.each_with_index do |num, index|\n    sum += (num - n2_array[index]).abs\n  end\n  sum\nend",
    "  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |n, i|\n    sum += (n.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  n1.map! {|x| x.to_i}\n  n2.map! {|x| x.to_i}\n  sum = 0\n  n1.each_with_index do |x, i|\n    sum += (x - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  return sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1.to_s.chars.zip(n2.to_s.chars).map { |x, y| (x.to_i - y.to_i).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  # convert to string\n  # split to array\n  # map to integers\n  # map to abs\n  # reduce to sum\n  n1.to_s.split('').map(&:to_i).zip(n2.to_s.split('').map(&:to_i)).map { |x, y| (x - y).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |a, b| (a - b).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  sum = 0\n  n1.to_s.split('').each_with_index do |digit, index|\n    sum += (digit.to_i - n2.to_s[index].to_i).abs\n  end\n  sum\nend",
    "  n1_digits = n1.to_s.split('').map(&:to_i)\n  n2_digits = n2.to_s.split('').map(&:to_i)\n  n1_digits.zip(n2_digits).map { |a, b| (a - b).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, idx|\n    sum += (num.to_i - n2[idx].to_i).abs\n  end\n  sum\nend",
    "  sum = 0\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s\n  n2 = n2.to_s\n  sum = 0\n  n1.length.times do |i|\n    sum += (n1[i].to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  sum = 0\n  n1, n2 = n1.to_s, n2.to_s\n  n1.length > n2.length ? (n2 = n2.rjust(n1.length, '0')) : (n1 = n1.rjust(n2.length, '0'))\n  n1.length.times { |i| sum += (n1[i].to_i - n2[i].to_i).abs }\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  # convert each number into a string\n  # split each string into an array of characters\n  # convert each character into an integer\n  # subtract the two integers\n  # add the result to a sum\n  # return the sum\n  sum = 0\n  n1_array = n1.to_s.split('').map(&:to_i)\n  n2_array = n2.to_s.split('').map(&:to_i)\n  n1_array.each_with_index do |num, index|\n    sum += (num - n2_array[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  sum = 0\n  n1.to_s.split('').each_with_index do |num, index|\n    sum += (num.to_i - n2.to_s[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split(\"\")\n  n2 = n2.to_s.split(\"\")\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  # convert numbers to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # convert strings to arrays\n  n1 = n1.split('')\n  n2 = n2.split('')\n  # create empty array to store differences\n  diff = []\n  # iterate through arrays\n  n1.each_with_index do |num, index|\n    # subtract each element from the other\n    diff << (num.to_i - n2[index].to_i).abs\n  end\n  # return sum of array\n  diff.reduce(:+)\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split(//)\n  n2 = n2.to_s.split(//)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1_array = n1.to_s.split('')\n  n2_array = n2.to_s.split('')\n  sum = 0\n  n1_array.each_with_index do |num, index|\n    sum += (num.to_i - n2_array[index].to_i).abs\n  end\n  sum\nend"
  ]
}
{
  "name": "mbpp_88_freq_count",
  "language": "rb",
  "prompt": "# Write a function to get the frequency of all the elements in an array, returned as a hash.\ndef freq_count(list1)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_88_freq_count.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_freq_count\n    candidate = method(:freq_count)\n    assert_equal({10 => 4, 20 => 4, 40 => 2, 50 => 2, 30 => 1}, candidate.call([10, 10, 10, 10, 20, 20, 20, 20, 40, 40, 50, 50, 30]))\n    assert_equal({1 => 3, 2 => 2, 3 => 3, 4 => 3}, candidate.call([1, 2, 3, 4, 3, 2, 4, 1, 3, 1, 4]))\n    assert_equal({10 => 1, 5 => 3, 6 => 2, 7 => 2, 4 => 2, 9 => 2}, candidate.call([5, 6, 7, 4, 9, 10, 4, 5, 6, 7, 9, 5]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  freq_hash = {}\n  list1.each do |x|\n    if freq_hash.has_key?(x)\n      freq_hash[x] += 1\n    else\n      freq_hash[x] = 1\n    end\n  end\n  freq_hash\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq_hash = {}\n  list1.each do |item|\n    if freq_hash[item] == nil\n      freq_hash[item] = 1\n    else\n      freq_hash[item] += 1\n    end\n  end\n  return freq_hash\nend",
    "  freq = Hash.new(0)\n  list1.each { |i| freq[i] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq_hash = Hash.new(0)\n  list1.each do |element|\n    freq_hash[element] += 1\n  end\n  return freq_hash\nend",
    "  hash = Hash.new(0)\n  list1.each { |item| hash[item] += 1 }\n  hash\nend",
    "  freq_hash = Hash.new(0)\n  list1.each { |element| freq_hash[element] += 1 }\n  freq_hash\nend",
    "  freq_hash = {}\n  list1.each do |item|\n    if freq_hash[item]\n      freq_hash[item] += 1\n    else\n      freq_hash[item] = 1\n    end\n  end\n  freq_hash\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq_hash = {}\n  list1.each do |element|\n    if freq_hash.has_key?(element)\n      freq_hash[element] += 1\n    else\n      freq_hash[element] = 1\n    end\n  end\n  freq_hash\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq_hash = Hash.new(0)\n  list1.each do |item|\n    freq_hash[item] += 1\n  end\n  freq_hash\nend",
    "  freq_hash = {}\n  list1.each do |item|\n    freq_hash[item] = list1.count(item)\n  end\n  freq_hash\nend",
    "  freq_hash = {}\n  list1.each do |item|\n    freq_hash[item] = list1.count(item)\n  end\n  freq_hash\nend",
    "  list1.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  freq_hash = {}\n  list1.each do |item|\n    freq_hash[item] = list1.count(item)\n  end\n  freq_hash\nend"
  ]
}
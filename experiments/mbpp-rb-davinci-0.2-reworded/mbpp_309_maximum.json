{
  "name": "mbpp_309_maximum",
  "language": "rb",
  "prompt": "# Write a rbthon function to find the maximum of two numbers.\ndef maximum(a, b)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_309_maximum.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_maximum\n    candidate = method(:maximum)\n    assert_equal(10, candidate.call(5, 10))\n    assert_equal(-1, candidate.call(-1, -2))\n    assert_equal(9, candidate.call(9, 7))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    puts a\n  else\n    puts b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    puts a\n  else\n    puts b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    puts a\n  else\n    puts b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend",
    "  if a > b\n    a\n  else\n    b\n  end\nend",
    "  if a > b\n    return a\n  else\n    return b\n  end\nend"
  ]
}
{
  "name": "mbpp_780_find_combinations",
  "language": "rb",
  "prompt": "# Write a function to find the combinations of sums with arrays in the given array array. https://www.geeksforgeeks.org/rbthon-combinations-of-sum-with-arrays-in-array-array/\ndef find_combinations(test_list)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_780_find_combinations.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_combinations\n    candidate = method(:find_combinations)\n    assert_equal([[8, 11], [7, 5], [8, 14], [11, 8], [12, 17], [11, 11]], candidate.call([[2, 4], [6, 7], [5, 1], [6, 10]]))\n    assert_equal([[10, 13], [9, 7], [10, 16], [13, 10], [14, 19], [13, 13]], candidate.call([[3, 5], [7, 8], [6, 2], [7, 11]]))\n    assert_equal([[12, 15], [11, 9], [12, 18], [15, 12], [16, 21], [15, 15]], candidate.call([[4, 6], [8, 9], [7, 3], [8, 12]]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  result = []\n  test_list.each do |item|\n    result << item if item.sum == 0\n  end\n  result\nend",
    "  result = []\n  test_list.each do |element|\n    if element.is_a?(Array)\n      result.push(element)\n    else\n      result.push([element])\n    end\n  end\n  result\nend",
    "  result = []\n  test_list.each_with_index do |item, index|\n    test_list[index+1..-1].each do |item2|\n      result << item + item2\n    end\n  end\n  result\nend",
    "  result = []\n  test_list.each do |item|\n    result << item\n    test_list.each do |item2|\n      result << item + item2\n    end\n  end\n  result.uniq\nend",
    "  result = []\n  test_list.each do |element|\n    if element.is_a?(Array)\n      result << element\n    end\n  end\n  result\nend",
    "  result = []\n  test_list.each_with_index do |num, index|\n    test_list.each_with_index do |num2, index2|\n      next if index == index2\n      result << [num, num2]\n    end\n  end\n  result\nend",
    "  result = []\n  test_list.each do |array|\n    array.each do |num|\n      result << num\n    end\n  end\n  result\nend",
    "  result = []\n  test_list.each_with_index do |element, index|\n    if element.is_a?(Array)\n      result << element\n      test_list[index] = element.sum\n    end\n  end\n  result\nend",
    "  test_list.each do |test_array|\n    test_array.each do |test_array_element|\n      test_array.each do |test_array_element_2|\n        if test_array_element + test_array_element_2 == 0\n          puts \"The sum of #{test_array_element} and #{test_array_element_2} is 0\"\n        end\n      end\n    end\n  end\nend",
    "  result = []\n  test_list.each do |i|\n    test_list.each do |j|\n      result << i + j\n    end\n  end\n  result\nend",
    "  # test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n  # test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n  # test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]\n  # test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n  # test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,",
    "  result = []\n  test_list.each_with_index do |e, i|\n    test_list.each_with_index do |f, j|\n      next if i == j\n      result << [e, f]\n    end\n  end\n  result\nend",
    "  result = []\n  test_list.each_with_index do |element, index|\n    test_list[index+1..-1].each do |element2|\n      result << [element, element2]\n    end\n  end\n  result\nend",
    "  result = []\n  test_list.each_with_index do |item, index|\n    if item.is_a?(Array)\n      result += item.map { |i| i }\n    else\n      result << item\n    end\n  end\n  result\nend",
    "  result = []\n  test_list.each_with_index do |item, index|\n    test_list[index+1..-1].each do |item2|\n      result << [item, item2]\n    end\n  end\n  result\nend",
    "  result = []\n  test_list.each_with_index do |element, index|\n    test_list.each_with_index do |element2, index2|\n      next if index == index2\n      result << element + element2\n    end\n  end\n  result\nend",
    "  result = []\n  test_list.each do |element|\n    result << element if element.sum == 0\n  end\n  result\nend",
    "  result = []\n  test_list.each do |item|\n    result << item.combination(2).to_a\n  end\n  result.flatten(1)\nend",
    "  result = []\n  test_list.each_with_index do |element, index|\n    if element.is_a?(Array)\n      result << element\n      test_list[index] = element.sum\n    end\n  end\n  result\nend",
    "  result = []\n  test_list.each do |i|\n    test_list.each do |j|\n      result << i + j\n    end\n  end\n  result\nend"
  ]
}
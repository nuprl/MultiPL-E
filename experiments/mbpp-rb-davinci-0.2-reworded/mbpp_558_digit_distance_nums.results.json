{
  "name": "mbpp_558_digit_distance_nums",
  "language": "rb",
  "prompt": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  sum = 0\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpb5z_jg4s\nStarted\n.\nFinished in 0.000512069 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1952.86 tests/s, 5858.59 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |a, b| (a - b).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpc0x2gdv2\nStarted\n.\nFinished in 0.000495968 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2016.26 tests/s, 6048.78 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |a, b| (a - b).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpc0x2gdv2\nStarted\n.\nFinished in 0.000495968 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2016.26 tests/s, 6048.78 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |num, i|\n    sum += (num.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplusw7xa1\nStarted\n.\nFinished in 0.000398227 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2511.13 tests/s, 7533.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpeevqugky\nStarted\n.\nFinished in 0.000396239 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2523.73 tests/s, 7571.19 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7v494kw\nStarted\n.\nFinished in 0.000390151 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2563.11 tests/s, 7689.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpeevqugky\nStarted\n.\nFinished in 0.000396239 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2523.73 tests/s, 7571.19 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |a, b| (a - b).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp57f1ryb\nStarted\n.\nFinished in 0.000379106 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2637.78 tests/s, 7913.35 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpw0mq88qe\nStarted\n.\nFinished in 0.000391313 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2555.50 tests/s, 7666.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # Convert the numbers to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510378,
      "stdout": "",
      "stderr": "/tmp/tmp5q73v9jt.rb:7: class definition in method body\nclass TestHumanEval < Test::Unit::TestCase\n^~~~~~~~~~~~~~~~~~~\n/tmp/tmp5q73v9jt.rb:14: syntax error, unexpected end-of-input, expecting `end'\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmphix1xuw9\nStarted\n.\nFinished in 0.000396481 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2522.19 tests/s, 7566.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1.to_s.split('').map(&:to_i).zip(n2.to_s.split('').map(&:to_i)).map { |x, y| (x - y).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpek0_lxfv\nStarted\n.\nFinished in 0.000382236 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2616.18 tests/s, 7848.55 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmphix1xuw9\nStarted\n.\nFinished in 0.000396481 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2522.19 tests/s, 7566.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpeevqugky\nStarted\n.\nFinished in 0.000396239 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2523.73 tests/s, 7571.19 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  (n1 - n2).abs.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp87twa9zc\nStarted\n.\nFinished in 0.000963068 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1038.35 tests/s, 3115.04 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7v494kw\nStarted\n.\nFinished in 0.000390151 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2563.11 tests/s, 7689.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmphix1xuw9\nStarted\n.\nFinished in 0.000396481 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2522.19 tests/s, 7566.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7v494kw\nStarted\n.\nFinished in 0.000390151 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2563.11 tests/s, 7689.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1.to_s.chars.map(&:to_i).zip(n2.to_s.chars.map(&:to_i)).map { |a, b| (a - b).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpcx73w3x6\nStarted\n.\nFinished in 0.000679759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1471.11 tests/s, 4413.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_array = n1.to_s.split('')\n  n2_array = n2.to_s.split('')\n  sum = 0\n  n1_array.each_with_index do |num, index|\n    sum += (num.to_i - n2_array[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpb4foy20s\nStarted\n.\nFinished in 0.000842353 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1187.15 tests/s, 3561.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split(\"\")\n  n2 = n2.to_s.split(\"\")\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp_xqcq6u\nStarted\n.\nFinished in 0.000551072 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1814.64 tests/s, 5443.93 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |n, i|\n    sum += (n.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpr_1ys52o\nStarted\n.\nFinished in 0.000529721 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1887.79 tests/s, 5663.36 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp42hdkkeq\nStarted\n.\nFinished in 0.000665389 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1502.88 tests/s, 4508.64 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_digits = n1.to_s.split('').map(&:to_i)\n  n2_digits = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1_digits.each_with_index do |digit, index|\n    sum += (digit - n2_digits[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpb31yurhf\nStarted\n.\nFinished in 0.00056153 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1780.85 tests/s, 5342.55 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |num, i|\n    sum += (num.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplusw7xa1\nStarted\n.\nFinished in 0.000398227 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2511.13 tests/s, 7533.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map {|x, y| (x - y).abs}.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpuruadv6w\nStarted\n.\nFinished in 0.000790074 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1265.70 tests/s, 3797.11 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1.to_s.chars.map(&:to_i).zip(n2.to_s.chars.map(&:to_i)).map { |x, y| (x - y).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpa9ne7il8\nStarted\n.\nFinished in 0.000733537 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1363.26 tests/s, 4089.77 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpeevqugky\nStarted\n.\nFinished in 0.000396239 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2523.73 tests/s, 7571.19 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split(//)\n  n2 = n2.to_s.split(//)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpub3lo506\nStarted\n.\nFinished in 0.000646395 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1547.04 tests/s, 4641.13 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7v494kw\nStarted\n.\nFinished in 0.000390151 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2563.11 tests/s, 7689.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpkt7iblqn\nStarted\n.\nFinished in 0.000686598 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1456.46 tests/s, 4369.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpw0mq88qe\nStarted\n.\nFinished in 0.000391313 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2555.50 tests/s, 7666.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7v494kw\nStarted\n.\nFinished in 0.000390151 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2563.11 tests/s, 7689.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpw0mq88qe\nStarted\n.\nFinished in 0.000391313 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2555.50 tests/s, 7666.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # convert both numbers to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # make sure both strings are the same length\n  if n1.length > n2.length\n    n2 = n2.rjust(n1.length, \"0\")\n  elsif n2.length > n1.length\n    n1 = n1.rjust(n2.length, \"0\")\n  end\n  # iterate through each digit\n  sum = 0\n  n1.length.times do |i|\n    sum += (n1[i].to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9830vdj3\nStarted\n.\nFinished in 0.000712503 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1403.50 tests/s, 4210.51 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |a, b| (a - b).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpc0x2gdv2\nStarted\n.\nFinished in 0.000495968 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2016.26 tests/s, 6048.78 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |num, idx|\n    sum += (num.to_i - n2_arr[idx].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpb1ep8j6m\nStarted\n.\nFinished in 0.000857759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1165.83 tests/s, 3497.49 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmphix1xuw9\nStarted\n.\nFinished in 0.000396481 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2522.19 tests/s, 7566.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7v494kw\nStarted\n.\nFinished in 0.000390151 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2563.11 tests/s, 7689.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  sum = 0\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  n1.length.times do |i|\n    sum += (n1[i].to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpwv1e4d9s\nStarted\n.\nFinished in 0.000782266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1278.34 tests/s, 3835.01 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_array = n1.to_s.split('')\n  n2_array = n2.to_s.split('')\n  sum = 0\n  n1_array.each_with_index do |num, i|\n    sum += (num.to_i - n2_array[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpabrpuykz\nStarted\n.\nFinished in 0.000971721 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1029.10 tests/s, 3087.31 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7v494kw\nStarted\n.\nFinished in 0.000390151 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2563.11 tests/s, 7689.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmphix1xuw9\nStarted\n.\nFinished in 0.000396481 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2522.19 tests/s, 7566.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_array = n1.to_s.split(\"\")\n  n2_array = n2.to_s.split(\"\")\n  sum = 0\n  n1_array.each_with_index do |num, index|\n    sum += (num.to_i - n2_array[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpzhi3l0uq\nStarted\n.\nFinished in 0.000914854 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1093.07 tests/s, 3279.21 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  sum = 0\n  n1.to_s.split('').each_with_index do |n, i|\n    sum += (n.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_g5_66qn\nStarted\n.\nFinished in 0.000935719 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1068.70 tests/s, 3206.09 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpw0mq88qe\nStarted\n.\nFinished in 0.000391313 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2555.50 tests/s, 7666.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |n, i|\n    sum += (n.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpr_1ys52o\nStarted\n.\nFinished in 0.000529721 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1887.79 tests/s, 5663.36 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7v494kw\nStarted\n.\nFinished in 0.000390151 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2563.11 tests/s, 7689.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpeevqugky\nStarted\n.\nFinished in 0.000396239 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2523.73 tests/s, 7571.19 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1.to_s.chars.map(&:to_i).zip(n2.to_s.chars.map(&:to_i)).map { |x, y| (x - y).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpzpcjsrx2\nStarted\n.\nFinished in 0.000860274 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1162.42 tests/s, 3487.26 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7v494kw\nStarted\n.\nFinished in 0.000390151 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2563.11 tests/s, 7689.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |num, index|\n    sum += (num.to_i - n2_arr[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpjhlk2v8e\nStarted\n.\nFinished in 0.000652787 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1531.89 tests/s, 4595.68 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1, n2 = n1.to_s.split(''), n2.to_s.split('')\n  n1, n2 = n1.map(&:to_i), n2.map(&:to_i)\n  n1, n2 = n1.length > n2.length ? n1 : n2, n1.length > n2.length ? n2 : n1\n  n1.zip(n2).map { |x, y| (x - y).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpfq6ro5_7\nStarted\n.\nFinished in 0.000844672 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1183.89 tests/s, 3551.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpkt7iblqn\nStarted\n.\nFinished in 0.000686598 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1456.46 tests/s, 4369.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1.to_s.chars.map(&:to_i).zip(n2.to_s.chars.map(&:to_i)).map {|x, y| (x - y).abs}.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxv_rwzz5\nStarted\n.\nFinished in 0.000882062 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1133.71 tests/s, 3401.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7v494kw\nStarted\n.\nFinished in 0.000390151 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2563.11 tests/s, 7689.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  sum = 0\n  n1.to_s.split('').each_with_index do |num, i|\n    sum += (num.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpb64fnsi9\nStarted\n.\nFinished in 0.000862455 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1159.48 tests/s, 3478.44 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpw0mq88qe\nStarted\n.\nFinished in 0.000391313 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2555.50 tests/s, 7666.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7v494kw\nStarted\n.\nFinished in 0.000390151 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2563.11 tests/s, 7689.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpeevqugky\nStarted\n.\nFinished in 0.000396239 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2523.73 tests/s, 7571.19 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.chars.map(&:to_i)\n  n2 = n2.to_s.chars.map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp2_1d3h70\nStarted\n.\nFinished in 0.000858116 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1165.34 tests/s, 3496.03 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  sum = 0\n  n1.to_s.split('').each_with_index do |num, i|\n    sum += (num.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpb64fnsi9\nStarted\n.\nFinished in 0.000862455 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1159.48 tests/s, 3478.44 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  sum = 0\n  n1.to_s.split('').each_with_index do |n, i|\n    sum += (n.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_g5_66qn\nStarted\n.\nFinished in 0.000935719 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1068.70 tests/s, 3206.09 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map{|x,y| (x-y).abs}.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpn1yi3zmc\nStarted\n.\nFinished in 0.000523878 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1908.84 tests/s, 5726.52 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp42hdkkeq\nStarted\n.\nFinished in 0.000665389 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1502.88 tests/s, 4508.64 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  sum = 0\n  n1.to_s.split('').each_with_index do |n, i|\n    sum += (n.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_g5_66qn\nStarted\n.\nFinished in 0.000935719 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1068.70 tests/s, 3206.09 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmphix1xuw9\nStarted\n.\nFinished in 0.000396481 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2522.19 tests/s, 7566.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpw0mq88qe\nStarted\n.\nFinished in 0.000391313 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2555.50 tests/s, 7666.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  sum = 0\n  n1.to_s.split('').each_with_index do |n, i|\n    sum += (n.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_g5_66qn\nStarted\n.\nFinished in 0.000935719 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1068.70 tests/s, 3206.09 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  if n1.length > n2.length\n    n1.each_with_index do |num, index|\n      if n2[index]\n        sum += (num.to_i - n2[index].to_i).abs\n      else\n        sum += num.to_i\n      end\n    end\n  else\n    n2.each_with_index do |num, index|\n      if n1[index]\n        sum += (num.to_i - n1[index].to_i).abs\n      else\n        sum += num.to_i\n      end\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpfrakz6ju\nStarted\n.\nFinished in 0.000427346 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2340.02 tests/s, 7020.07 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.chars.map(&:to_i)\n  n2 = n2.to_s.chars.map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmph0k_6ct1\nStarted\n.\nFinished in 0.000767632 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1302.71 tests/s, 3908.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpw0mq88qe\nStarted\n.\nFinished in 0.000391313 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2555.50 tests/s, 7666.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1.to_s.chars.map(&:to_i).zip(n2.to_s.chars.map(&:to_i)).map { |a, b| (a - b).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpcx73w3x6\nStarted\n.\nFinished in 0.000679759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1471.11 tests/s, 4413.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7v494kw\nStarted\n.\nFinished in 0.000390151 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2563.11 tests/s, 7689.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |n, i|\n    sum += (n.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpr_1ys52o\nStarted\n.\nFinished in 0.000529721 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1887.79 tests/s, 5663.36 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmphix1xuw9\nStarted\n.\nFinished in 0.000396481 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2522.19 tests/s, 7566.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  sum = 0\n  n1.to_s.split('').each_with_index do |n, i|\n    sum += (n.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_g5_66qn\nStarted\n.\nFinished in 0.000935719 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1068.70 tests/s, 3206.09 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpeevqugky\nStarted\n.\nFinished in 0.000396239 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2523.73 tests/s, 7571.19 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpkt7iblqn\nStarted\n.\nFinished in 0.000686598 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1456.46 tests/s, 4369.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpeevqugky\nStarted\n.\nFinished in 0.000396239 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2523.73 tests/s, 7571.19 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  sum = 0\n  n1.to_s.split('').each_with_index do |n, i|\n    sum += (n.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_g5_66qn\nStarted\n.\nFinished in 0.000935719 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1068.70 tests/s, 3206.09 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |a, b| (a - b).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpc0x2gdv2\nStarted\n.\nFinished in 0.000495968 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2016.26 tests/s, 6048.78 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpeevqugky\nStarted\n.\nFinished in 0.000396239 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2523.73 tests/s, 7571.19 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7v494kw\nStarted\n.\nFinished in 0.000390151 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2563.11 tests/s, 7689.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmphix1xuw9\nStarted\n.\nFinished in 0.000396481 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2522.19 tests/s, 7566.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmphix1xuw9\nStarted\n.\nFinished in 0.000396481 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2522.19 tests/s, 7566.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpw0mq88qe\nStarted\n.\nFinished in 0.000391313 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2555.50 tests/s, 7666.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7v494kw\nStarted\n.\nFinished in 0.000390151 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2563.11 tests/s, 7689.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmphix1xuw9\nStarted\n.\nFinished in 0.000396481 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2522.19 tests/s, 7566.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmphix1xuw9\nStarted\n.\nFinished in 0.000396481 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2522.19 tests/s, 7566.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7v494kw\nStarted\n.\nFinished in 0.000390151 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2563.11 tests/s, 7689.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmphix1xuw9\nStarted\n.\nFinished in 0.000396481 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2522.19 tests/s, 7566.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpw0mq88qe\nStarted\n.\nFinished in 0.000391313 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2555.50 tests/s, 7666.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  sum = 0\n  n1.to_s.split('').each_with_index do |num, i|\n    sum += (num.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpb64fnsi9\nStarted\n.\nFinished in 0.000862455 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1159.48 tests/s, 3478.44 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7v494kw\nStarted\n.\nFinished in 0.000390151 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2563.11 tests/s, 7689.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |num, i|\n    sum += (num.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplusw7xa1\nStarted\n.\nFinished in 0.000398227 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2511.13 tests/s, 7533.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |a, b| (a - b).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpc0x2gdv2\nStarted\n.\nFinished in 0.000495968 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2016.26 tests/s, 6048.78 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1.to_s.chars.map(&:to_i).zip(n2.to_s.chars.map(&:to_i)).map { |x, y| (x - y).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpa9ne7il8\nStarted\n.\nFinished in 0.000733537 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1363.26 tests/s, 4089.77 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmphix1xuw9\nStarted\n.\nFinished in 0.000396481 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2522.19 tests/s, 7566.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  sum = 0\n  n1.to_s.split('').each_with_index do |n, i|\n    sum += (n.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_g5_66qn\nStarted\n.\nFinished in 0.000935719 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1068.70 tests/s, 3206.09 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |num, idx|\n    sum += (num.to_i - n2_arr[idx].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpb1ep8j6m\nStarted\n.\nFinished in 0.000857759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1165.83 tests/s, 3497.49 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpkt7iblqn\nStarted\n.\nFinished in 0.000686598 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1456.46 tests/s, 4369.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_array = n1.to_s.split('').map(&:to_i)\n  n2_array = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1_array.each_with_index do |num, index|\n    sum += (num - n2_array[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpngvbzf_c\nStarted\n.\nFinished in 0.00053919 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1854.63 tests/s, 5563.90 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |n, i|\n    sum += (n.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpr_1ys52o\nStarted\n.\nFinished in 0.000529721 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1887.79 tests/s, 5663.36 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  n1.map! {|x| x.to_i}\n  n2.map! {|x| x.to_i}\n  sum = 0\n  n1.each_with_index do |x, i|\n    sum += (x - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpq2boj1t7\nStarted\n.\nFinished in 0.000520731 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1920.38 tests/s, 5761.13 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmphix1xuw9\nStarted\n.\nFinished in 0.000396481 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2522.19 tests/s, 7566.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl11b352_\nStarted\n.\nFinished in 0.000812066 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1231.43 tests/s, 3694.28 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpw0mq88qe\nStarted\n.\nFinished in 0.000391313 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2555.50 tests/s, 7666.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpkt7iblqn\nStarted\n.\nFinished in 0.000686598 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1456.46 tests/s, 4369.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1.to_s.chars.zip(n2.to_s.chars).map { |x, y| (x.to_i - y.to_i).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpjbx3blxg\nStarted\n.\nFinished in 0.000723116 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1382.90 tests/s, 4148.71 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7v494kw\nStarted\n.\nFinished in 0.000390151 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2563.11 tests/s, 7689.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # convert to string\n  # split to array\n  # map to integers\n  # map to abs\n  # reduce to sum\n  n1.to_s.split('').map(&:to_i).zip(n2.to_s.split('').map(&:to_i)).map { |x, y| (x - y).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpw2eh_p4f\nStarted\n.\nFinished in 0.000483357 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2068.86 tests/s, 6206.59 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmphix1xuw9\nStarted\n.\nFinished in 0.000396481 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2522.19 tests/s, 7566.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |a, b| (a - b).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpc0x2gdv2\nStarted\n.\nFinished in 0.000495968 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2016.26 tests/s, 6048.78 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  sum = 0\n  n1.to_s.split('').each_with_index do |digit, index|\n    sum += (digit.to_i - n2.to_s[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpginn2vbp\nStarted\n.\nFinished in 0.000519403 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1925.29 tests/s, 5775.86 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_digits = n1.to_s.split('').map(&:to_i)\n  n2_digits = n2.to_s.split('').map(&:to_i)\n  n1_digits.zip(n2_digits).map { |a, b| (a - b).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpc72ye3gl\nStarted\n.\nFinished in 0.000534921 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1869.43 tests/s, 5608.30 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, idx|\n    sum += (num.to_i - n2[idx].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp8sisspao\nStarted\n.\nFinished in 0.000441672 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2264.12 tests/s, 6792.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  sum = 0\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpb5z_jg4s\nStarted\n.\nFinished in 0.000512069 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1952.86 tests/s, 5858.59 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s\n  n2 = n2.to_s\n  sum = 0\n  n1.length.times do |i|\n    sum += (n1[i].to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7unwol6g\nStarted\n.\nFinished in 0.000759674 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1316.35 tests/s, 3949.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7v494kw\nStarted\n.\nFinished in 0.000390151 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2563.11 tests/s, 7689.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7v494kw\nStarted\n.\nFinished in 0.000390151 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2563.11 tests/s, 7689.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  sum = 0\n  n1, n2 = n1.to_s, n2.to_s\n  n1.length > n2.length ? (n2 = n2.rjust(n1.length, '0')) : (n1 = n1.rjust(n2.length, '0'))\n  n1.length.times { |i| sum += (n1[i].to_i - n2[i].to_i).abs }\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqnlm1kjt\nStarted\n.\nFinished in 0.000484467 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2064.12 tests/s, 6192.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # convert each number into a string\n  # split each string into an array of characters\n  # convert each character into an integer\n  # subtract the two integers\n  # add the result to a sum\n  # return the sum\n  sum = 0\n  n1_array = n1.to_s.split('').map(&:to_i)\n  n2_array = n2.to_s.split('').map(&:to_i)\n  n1_array.each_with_index do |num, index|\n    sum += (num - n2_array[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpppzlvho5\nStarted\n.\nFinished in 0.000568144 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1760.12 tests/s, 5280.35 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7v494kw\nStarted\n.\nFinished in 0.000390151 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2563.11 tests/s, 7689.33 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  sum = 0\n  n1.to_s.split('').each_with_index do |num, index|\n    sum += (num.to_i - n2.to_s[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmprxaexspk\nStarted\n.\nFinished in 0.000484166 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2065.41 tests/s, 6196.22 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split(\"\")\n  n2 = n2.to_s.split(\"\")\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp_xqcq6u\nStarted\n.\nFinished in 0.000551072 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1814.64 tests/s, 5443.93 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp70oncqrz\nStarted\n.\nFinished in 0.000395823 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2526.38 tests/s, 7579.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # convert numbers to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # convert strings to arrays\n  n1 = n1.split('')\n  n2 = n2.split('')\n  # create empty array to store differences\n  diff = []\n  # iterate through arrays\n  n1.each_with_index do |num, index|\n    # subtract each element from the other\n    diff << (num.to_i - n2[index].to_i).abs\n  end\n  # return sum of array\n  diff.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpvh6woas0\nStarted\n.\nFinished in 0.000464059 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2154.90 tests/s, 6464.70 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split(//)\n  n2 = n2.to_s.split(//)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpub3lo506\nStarted\n.\nFinished in 0.000646395 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1547.04 tests/s, 4641.13 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_kbeohzl\nStarted\n.\nFinished in 0.000400076 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2499.53 tests/s, 7498.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_array = n1.to_s.split('')\n  n2_array = n2.to_s.split('')\n  sum = 0\n  n1_array.each_with_index do |num, index|\n    sum += (num.to_i - n2_array[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123711,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpb4foy20s\nStarted\n.\nFinished in 0.000842353 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1187.15 tests/s, 3561.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
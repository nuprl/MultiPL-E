{
  "name": "mbpp_96_divisor",
  "language": "rb",
  "prompt": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_96_divisor.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }.size\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpk8esc2uf\nStarted\n.\nFinished in 0.000618904 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1615.76 tests/s, 4847.28 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmpwf11oqs6\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpwf11oqs6.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007312325 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n136.76 tests/s, 136.76 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9ki860_g\nStarted\n.\nFinished in 0.000531187 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1882.58 tests/s, 5647.73 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  for i in 1..n\n    if n % i == 0\n      divisors << i\n    end\n  end\n  return divisors.length\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp6br22035\nStarted\n.\nFinished in 0.00039237 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2548.61 tests/s, 7645.84 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |x| n % x == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmphe7uh1st\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmphe7uh1st.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007112713 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n140.59 tests/s, 140.59 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  for i in 1..n\n    if n % i == 0\n      divisors << i\n    end\n  end\n  divisors\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmps4f812hg\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmps4f812hg.rb:15:in `test_divisor'\n     12: class TestHumanEval < Test::Unit::TestCase\n     13:   def test_divisor\n     14:     candidate = method(:divisor)\n  => 15:     assert_equal(4, candidate.call(15))\n     16:     assert_equal(6, candidate.call(12))\n     17:     assert_equal(3, candidate.call(9))\n     18:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.00734226 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n136.20 tests/s, 136.20 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = 0\n  for i in 1..n\n    if n % i == 0\n      divisors += 1\n    end\n  end\n  return divisors\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxsrt7f5l\nStarted\n.\nFinished in 0.000404366 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2473.01 tests/s, 7419.02 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  puts count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmpopoclp5o\nStarted\n4\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpopoclp5o.rb:15:in `test_divisor'\n     12: class TestHumanEval < Test::Unit::TestCase\n     13:   def test_divisor\n     14:     candidate = method(:divisor)\n  => 15:     assert_equal(4, candidate.call(15))\n     16:     assert_equal(6, candidate.call(12))\n     17:     assert_equal(3, candidate.call(9))\n     18:   end\n<4> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.00692975 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n144.31 tests/s, 144.31 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }.size\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpk8esc2uf\nStarted\n.\nFinished in 0.000618904 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1615.76 tests/s, 4847.28 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| (n % i).zero? }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmpuba6dp73\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpuba6dp73.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.00714327 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n139.99 tests/s, 139.99 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  for i in 1..n\n    if n % i == 0\n      divisors << i\n    end\n  end\n  divisors.length\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd7p7uw_y\nStarted\n.\nFinished in 0.000552493 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1809.98 tests/s, 5429.93 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }.count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9oewt5sq\nStarted\n.\nFinished in 0.000429338 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2329.17 tests/s, 6987.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmpwf11oqs6\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpwf11oqs6.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007312325 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n136.76 tests/s, 136.76 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  (1..n).each do |i|\n    divisors << i if n % i == 0\n  end\n  divisors\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmpu58wkjx3\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpu58wkjx3.rb:13:in `test_divisor'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_divisor\n     12:     candidate = method(:divisor)\n  => 13:     assert_equal(4, candidate.call(15))\n     14:     assert_equal(6, candidate.call(12))\n     15:     assert_equal(3, candidate.call(9))\n     16:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007169374 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n139.48 tests/s, 139.48 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |x| n % x == 0 }.count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9oqjlrly\nStarted\n.\nFinished in 0.000538228 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1857.95 tests/s, 5573.85 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  i = 1\n  count = 0\n  while i <= n\n    if n % i == 0\n      count += 1\n    end\n    i += 1\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpu_y9f04_\nStarted\n.\nFinished in 0.000551171 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1814.32 tests/s, 5442.96 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  (1..n).each do |x|\n    if n % x == 0\n      divisors.push(x)\n    end\n  end\n  return divisors.length\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpntvqidzy\nStarted\n.\nFinished in 0.000419136 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2385.86 tests/s, 7157.58 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9ki860_g\nStarted\n.\nFinished in 0.000531187 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1882.58 tests/s, 5647.73 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }.size\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpk8esc2uf\nStarted\n.\nFinished in 0.000618904 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1615.76 tests/s, 4847.28 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select {|x| n % x == 0}\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmpb3rzxjsh\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpb3rzxjsh.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.00727906 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n137.38 tests/s, 137.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  for i in 1..n\n    if n % i == 0\n      divisors << i\n    end\n  end\n  divisors.length\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd7p7uw_y\nStarted\n.\nFinished in 0.000552493 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1809.98 tests/s, 5429.93 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |x| n % x == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmphe7uh1st\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmphe7uh1st.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007112713 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n140.59 tests/s, 140.59 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select {|x| n % x == 0}\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmpb3rzxjsh\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpb3rzxjsh.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.00727906 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n137.38 tests/s, 137.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }.count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9oewt5sq\nStarted\n.\nFinished in 0.000429338 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2329.17 tests/s, 6987.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisor = 0\n  for i in 1..n\n    if n % i == 0\n      divisor += 1\n    end\n  end\n  return divisor\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpc5hnte56\nStarted\n.\nFinished in 0.000548072 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1824.58 tests/s, 5473.73 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmpwf11oqs6\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpwf11oqs6.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007312325 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n136.76 tests/s, 136.76 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }.count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9oewt5sq\nStarted\n.\nFinished in 0.000429338 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2329.17 tests/s, 6987.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmpwf11oqs6\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpwf11oqs6.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007312325 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n136.76 tests/s, 136.76 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  for i in 1..n\n    if n % i == 0\n      divisors << i\n    end\n  end\n  return divisors.length\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp6br22035\nStarted\n.\nFinished in 0.00039237 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2548.61 tests/s, 7645.84 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n%i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpopg5y0qg\nStarted\n.\nFinished in 0.000527529 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1895.63 tests/s, 5686.89 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  for i in 1..n\n    divisors << i if n % i == 0\n  end\n  divisors\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmpvy4vsm_w\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpvy4vsm_w.rb:13:in `test_divisor'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_divisor\n     12:     candidate = method(:divisor)\n  => 13:     assert_equal(4, candidate.call(15))\n     14:     assert_equal(6, candidate.call(12))\n     15:     assert_equal(3, candidate.call(9))\n     16:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007005177 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n142.75 tests/s, 142.75 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  (1..n).each do |i|\n    if n % i == 0\n      count += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl8k1q6zt\nStarted\n.\nFinished in 0.000543959 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1838.37 tests/s, 5515.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9ki860_g\nStarted\n.\nFinished in 0.000531187 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1882.58 tests/s, 5647.73 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }.count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9oewt5sq\nStarted\n.\nFinished in 0.000429338 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2329.17 tests/s, 6987.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9ki860_g\nStarted\n.\nFinished in 0.000531187 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1882.58 tests/s, 5647.73 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |d| n % d == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmp5a6rwg7b\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmp5a6rwg7b.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.00738845 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n135.35 tests/s, 135.35 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |x| n % x == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmphe7uh1st\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmphe7uh1st.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007112713 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n140.59 tests/s, 140.59 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmpwf11oqs6\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpwf11oqs6.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007312325 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n136.76 tests/s, 136.76 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }.count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9oewt5sq\nStarted\n.\nFinished in 0.000429338 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2329.17 tests/s, 6987.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }.size\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpk8esc2uf\nStarted\n.\nFinished in 0.000618904 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1615.76 tests/s, 4847.28 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  (1..n).each do |i|\n    if n % i == 0\n      count += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl8k1q6zt\nStarted\n.\nFinished in 0.000543959 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1838.37 tests/s, 5515.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  for i in 1..n\n    if n % i == 0\n      divisors << i\n    end\n  end\n  return divisors.length\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp6br22035\nStarted\n.\nFinished in 0.00039237 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2548.61 tests/s, 7645.84 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }.count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9oewt5sq\nStarted\n.\nFinished in 0.000429338 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2329.17 tests/s, 6987.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  for i in 1..n\n    if n % i == 0\n      divisors << i\n    end\n  end\n  return divisors.length\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp6br22035\nStarted\n.\nFinished in 0.00039237 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2548.61 tests/s, 7645.84 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  (1..n).each do |i|\n    if n % i == 0\n      divisors << i\n    end\n  end\n  divisors.length\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpul1bmfv9\nStarted\n.\nFinished in 0.000434105 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2303.59 tests/s, 6910.77 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  (1..n).each do |i|\n    divisors << i if n % i == 0\n  end\n  divisors\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmpu58wkjx3\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpu58wkjx3.rb:13:in `test_divisor'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_divisor\n     12:     candidate = method(:divisor)\n  => 13:     assert_equal(4, candidate.call(15))\n     14:     assert_equal(6, candidate.call(12))\n     15:     assert_equal(3, candidate.call(9))\n     16:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007169374 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n139.48 tests/s, 139.48 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }.count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9oewt5sq\nStarted\n.\nFinished in 0.000429338 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2329.17 tests/s, 6987.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |x| n % x == 0 }.size\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbu0ot1zk\nStarted\n.\nFinished in 0.000565721 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1767.66 tests/s, 5302.97 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  for i in 1..n\n    if n % i == 0\n      divisors << i\n    end\n  end\n  return divisors.length\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp6br22035\nStarted\n.\nFinished in 0.00039237 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2548.61 tests/s, 7645.84 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |x| n % x == 0 }.count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9oqjlrly\nStarted\n.\nFinished in 0.000538228 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1857.95 tests/s, 5573.85 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  for i in 1..n\n    if n % i == 0\n      divisors << i\n    end\n  end\n  return divisors.length\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp6br22035\nStarted\n.\nFinished in 0.00039237 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2548.61 tests/s, 7645.84 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  (1..n).each do |i|\n    if n % i == 0\n      count += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl8k1q6zt\nStarted\n.\nFinished in 0.000543959 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1838.37 tests/s, 5515.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  (1..n).each do |i|\n    count += 1 if n % i == 0\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9hu8ucri\nStarted\n.\nFinished in 0.000420215 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2379.73 tests/s, 7139.20 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |x| n % x == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmphe7uh1st\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmphe7uh1st.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007112713 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n140.59 tests/s, 140.59 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  for i in 1..n\n    if n % i == 0\n      divisors.push(i)\n    end\n  end\n  return divisors.length\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpuv52cyc1\nStarted\n.\nFinished in 0.00040954 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2441.76 tests/s, 7325.29 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmpwf11oqs6\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpwf11oqs6.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007312325 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n136.76 tests/s, 136.76 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmpwf11oqs6\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpwf11oqs6.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007312325 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n136.76 tests/s, 136.76 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |x| n % x == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmphe7uh1st\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmphe7uh1st.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007112713 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n140.59 tests/s, 140.59 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }.count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9oewt5sq\nStarted\n.\nFinished in 0.000429338 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2329.17 tests/s, 6987.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |x| n % x == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmphe7uh1st\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmphe7uh1st.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007112713 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n140.59 tests/s, 140.59 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }.count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9oewt5sq\nStarted\n.\nFinished in 0.000429338 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2329.17 tests/s, 6987.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmpwf11oqs6\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpwf11oqs6.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007312325 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n136.76 tests/s, 136.76 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }.count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9oewt5sq\nStarted\n.\nFinished in 0.000429338 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2329.17 tests/s, 6987.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  for i in 1..n\n    if n % i == 0\n      divisors << i\n    end\n  end\n  divisors\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmps4f812hg\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmps4f812hg.rb:15:in `test_divisor'\n     12: class TestHumanEval < Test::Unit::TestCase\n     13:   def test_divisor\n     14:     candidate = method(:divisor)\n  => 15:     assert_equal(4, candidate.call(15))\n     16:     assert_equal(6, candidate.call(12))\n     17:     assert_equal(3, candidate.call(9))\n     18:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.00734226 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n136.20 tests/s, 136.20 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }.count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9oewt5sq\nStarted\n.\nFinished in 0.000429338 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2329.17 tests/s, 6987.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  (1..n).each do |i|\n    count += 1 if n % i == 0\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9hu8ucri\nStarted\n.\nFinished in 0.000420215 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2379.73 tests/s, 7139.20 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  (1..n).each do |i|\n    divisors << i if n % i == 0\n  end\n  divisors\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmpu58wkjx3\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpu58wkjx3.rb:13:in `test_divisor'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_divisor\n     12:     candidate = method(:divisor)\n  => 13:     assert_equal(4, candidate.call(15))\n     14:     assert_equal(6, candidate.call(12))\n     15:     assert_equal(3, candidate.call(9))\n     16:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007169374 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n139.48 tests/s, 139.48 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = 0\n  for i in 1..n\n    if n % i == 0\n      divisors += 1\n    end\n  end\n  return divisors\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxsrt7f5l\nStarted\n.\nFinished in 0.000404366 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2473.01 tests/s, 7419.02 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  (1..n).each do |i|\n    divisors << i if n % i == 0\n  end\n  divisors\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmpu58wkjx3\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpu58wkjx3.rb:13:in `test_divisor'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_divisor\n     12:     candidate = method(:divisor)\n  => 13:     assert_equal(4, candidate.call(15))\n     14:     assert_equal(6, candidate.call(12))\n     15:     assert_equal(3, candidate.call(9))\n     16:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007169374 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n139.48 tests/s, 139.48 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |x| n % x == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmphe7uh1st\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmphe7uh1st.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007112713 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n140.59 tests/s, 140.59 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  (1..n).each do |i|\n    divisors << i if n % i == 0\n  end\n  divisors\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmpu58wkjx3\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpu58wkjx3.rb:13:in `test_divisor'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_divisor\n     12:     candidate = method(:divisor)\n  => 13:     assert_equal(4, candidate.call(15))\n     14:     assert_equal(6, candidate.call(12))\n     15:     assert_equal(3, candidate.call(9))\n     16:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007169374 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n139.48 tests/s, 139.48 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  (1..n).each do |i|\n    count += 1 if n % i == 0\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9hu8ucri\nStarted\n.\nFinished in 0.000420215 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2379.73 tests/s, 7139.20 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  (1..n).each do |i|\n    if n % i == 0\n      divisors << i\n    end\n  end\n  divisors\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmpk811z8s0\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpk811z8s0.rb:15:in `test_divisor'\n     12: class TestHumanEval < Test::Unit::TestCase\n     13:   def test_divisor\n     14:     candidate = method(:divisor)\n  => 15:     assert_equal(4, candidate.call(15))\n     16:     assert_equal(6, candidate.call(12))\n     17:     assert_equal(3, candidate.call(9))\n     18:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007077157 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n141.30 tests/s, 141.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  (1..n).each do |i|\n    divisors << i if n % i == 0\n  end\n  divisors\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmpu58wkjx3\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpu58wkjx3.rb:13:in `test_divisor'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_divisor\n     12:     candidate = method(:divisor)\n  => 13:     assert_equal(4, candidate.call(15))\n     14:     assert_equal(6, candidate.call(12))\n     15:     assert_equal(3, candidate.call(9))\n     16:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007169374 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n139.48 tests/s, 139.48 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  for i in 1..n\n    if n % i == 0\n      divisors << i\n    end\n  end\n  return divisors\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmp2gnnf2ia\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmp2gnnf2ia.rb:15:in `test_divisor'\n     12: class TestHumanEval < Test::Unit::TestCase\n     13:   def test_divisor\n     14:     candidate = method(:divisor)\n  => 15:     assert_equal(4, candidate.call(15))\n     16:     assert_equal(6, candidate.call(12))\n     17:     assert_equal(3, candidate.call(9))\n     18:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.006899805 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n144.93 tests/s, 144.93 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  (1..n).each do |i|\n    if n % i == 0\n      count += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl8k1q6zt\nStarted\n.\nFinished in 0.000543959 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1838.37 tests/s, 5515.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  (1..n).each do |i|\n    divisors << i if n % i == 0\n  end\n  divisors\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmpu58wkjx3\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpu58wkjx3.rb:13:in `test_divisor'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_divisor\n     12:     candidate = method(:divisor)\n  => 13:     assert_equal(4, candidate.call(15))\n     14:     assert_equal(6, candidate.call(12))\n     15:     assert_equal(3, candidate.call(9))\n     16:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007169374 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n139.48 tests/s, 139.48 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |x| n % x == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmphe7uh1st\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmphe7uh1st.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007112713 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n140.59 tests/s, 140.59 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  (1..n).each do |i|\n    divisors << i if n % i == 0\n  end\n  divisors\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmpu58wkjx3\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpu58wkjx3.rb:13:in `test_divisor'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_divisor\n     12:     candidate = method(:divisor)\n  => 13:     assert_equal(4, candidate.call(15))\n     14:     assert_equal(6, candidate.call(12))\n     15:     assert_equal(3, candidate.call(9))\n     16:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007169374 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n139.48 tests/s, 139.48 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  (1..n).each do |i|\n    divisors << i if n % i == 0\n  end\n  divisors\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmpu58wkjx3\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpu58wkjx3.rb:13:in `test_divisor'\n     10: class TestHumanEval < Test::Unit::TestCase\n     11:   def test_divisor\n     12:     candidate = method(:divisor)\n  => 13:     assert_equal(4, candidate.call(15))\n     14:     assert_equal(6, candidate.call(12))\n     15:     assert_equal(3, candidate.call(9))\n     16:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007169374 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n139.48 tests/s, 139.48 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  puts count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmpopoclp5o\nStarted\n4\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpopoclp5o.rb:15:in `test_divisor'\n     12: class TestHumanEval < Test::Unit::TestCase\n     13:   def test_divisor\n     14:     candidate = method(:divisor)\n  => 15:     assert_equal(4, candidate.call(15))\n     16:     assert_equal(6, candidate.call(12))\n     17:     assert_equal(3, candidate.call(9))\n     18:   end\n<4> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.00692975 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n144.31 tests/s, 144.31 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  (1..n).each do |i|\n    if n % i == 0\n      divisors << i\n    end\n  end\n  divisors\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmpk811z8s0\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpk811z8s0.rb:15:in `test_divisor'\n     12: class TestHumanEval < Test::Unit::TestCase\n     13:   def test_divisor\n     14:     candidate = method(:divisor)\n  => 15:     assert_equal(4, candidate.call(15))\n     16:     assert_equal(6, candidate.call(12))\n     17:     assert_equal(3, candidate.call(9))\n     18:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007077157 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n141.30 tests/s, 141.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |x| n % x == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmphe7uh1st\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmphe7uh1st.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007112713 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n140.59 tests/s, 140.59 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  (1..n).each do |i|\n    if n % i == 0\n      divisors << i\n    end\n  end\n  divisors\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmpk811z8s0\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpk811z8s0.rb:15:in `test_divisor'\n     12: class TestHumanEval < Test::Unit::TestCase\n     13:   def test_divisor\n     14:     candidate = method(:divisor)\n  => 15:     assert_equal(4, candidate.call(15))\n     16:     assert_equal(6, candidate.call(12))\n     17:     assert_equal(3, candidate.call(9))\n     18:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007077157 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n141.30 tests/s, 141.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  (1..n).each do |i|\n    divisors << i if n % i == 0\n  end\n  divisors.size\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp750ugjmu\nStarted\n.\nFinished in 0.000412148 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2426.31 tests/s, 7278.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }.count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9oewt5sq\nStarted\n.\nFinished in 0.000429338 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2329.17 tests/s, 6987.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |x| n % x == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmphe7uh1st\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmphe7uh1st.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007112713 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n140.59 tests/s, 140.59 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  (1..n).each do |i|\n    if n % i == 0\n      count += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl8k1q6zt\nStarted\n.\nFinished in 0.000543959 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1838.37 tests/s, 5515.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select {|x| n % x == 0}\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmpb3rzxjsh\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpb3rzxjsh.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.00727906 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n137.38 tests/s, 137.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select {|x| n % x == 0}\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmpb3rzxjsh\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpb3rzxjsh.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.00727906 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n137.38 tests/s, 137.38 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }.count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9oewt5sq\nStarted\n.\nFinished in 0.000429338 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2329.17 tests/s, 6987.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  for i in 1..n\n    if n % i == 0\n      divisors << i\n    end\n  end\n  return divisors.length\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp6br22035\nStarted\n.\nFinished in 0.00039237 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2548.61 tests/s, 7645.84 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |x| n % x == 0 }.count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9oqjlrly\nStarted\n.\nFinished in 0.000538228 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1857.95 tests/s, 5573.85 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmpwf11oqs6\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpwf11oqs6.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007312325 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n136.76 tests/s, 136.76 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmpwf11oqs6\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpwf11oqs6.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007312325 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n136.76 tests/s, 136.76 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  (1..n).each do |i|\n    if n % i == 0\n      count += 1\n    end\n  end\n  count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl8k1q6zt\nStarted\n.\nFinished in 0.000543959 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1838.37 tests/s, 5515.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmpwf11oqs6\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpwf11oqs6.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007312325 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n136.76 tests/s, 136.76 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  for i in 1..n\n    if n % i == 0\n      divisors << i\n    end\n  end\n  return divisors\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmp2gnnf2ia\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmp2gnnf2ia.rb:15:in `test_divisor'\n     12: class TestHumanEval < Test::Unit::TestCase\n     13:   def test_divisor\n     14:     candidate = method(:divisor)\n  => 15:     assert_equal(4, candidate.call(15))\n     16:     assert_equal(6, candidate.call(12))\n     17:     assert_equal(3, candidate.call(9))\n     18:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.006899805 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n144.93 tests/s, 144.93 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  divisors = []\n  (1..n).each do |i|\n    if n % i == 0\n      divisors << i\n    end\n  end\n  divisors\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "Loaded suite /tmp/tmpk811z8s0\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmpk811z8s0.rb:15:in `test_divisor'\n     12: class TestHumanEval < Test::Unit::TestCase\n     13:   def test_divisor\n     14:     candidate = method(:divisor)\n  => 15:     assert_equal(4, candidate.call(15))\n     16:     assert_equal(6, candidate.call(12))\n     17:     assert_equal(3, candidate.call(9))\n     18:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007077157 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n141.30 tests/s, 141.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }.count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9oewt5sq\nStarted\n.\nFinished in 0.000429338 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2329.17 tests/s, 6987.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count=0\n  for i in 1..n\n    if n%i==0\n      count+=1\n    end\n  end\n  return count\nend\nputs divisor(12)\nputs divisor(10)\nputs divisor(15)\nputs divisor(20)\nputs divisor(25)\nputs divisor(30)\nputs divisor(35)\nputs divisor(40)\nputs divisor(45)\nputs divisor(50)\nputs divisor(55)\nputs divisor(60)\nputs divisor(65)\nputs divisor(70)\nputs divisor(75)\nputs divisor(80)\nputs divisor(85)\nputs divisor(90)\nputs divisor(95)\nputs divisor(100)\nputs divisor(105)\nputs divisor(110)\nputs divisor(115)\nputs divisor(120)\nputs divisor(125)\nputs divisor(130)\nputs divisor(135)\nputs divisor(140)\nputs divisor(145)\nputs divisor(150)\nputs divisor(155)\nputs divisor(160)\nputs divisor(165)\nputs divisor(170)\nputs divisor(175)\nputs divisor(180)\nputs divisor(185)\nputs divisor(190)\nputs divisor(195)\nputs divisor(200)\nputs divisor(205)\nputs divisor(210)\nputs divisor(215)\nputs divisor(220)\nputs divisor(225)\nputs divisor(230)\nputs divisor(235)\nputs divisor(240)\nputs divisor(245)\nputs divisor(250)\nputs divisor(255)\nputs divisor(260)\nputs divisor\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "6\n4\n4\n6\n3\n8\n4\n8\n6\n6\n4\n12\n4\n8\n6\n10\n4\n12\n4\n9\n8\n8\n4\n16\n4\n8\n8\n12\n4\n12\n4\n12\n8\n8\n6\n18\n4\n8\n8\n12\n4\n16\n4\n12\n9\n8\n4\n20\n6\n8\n8\n12\n",
      "stderr": "/tmp/tmpptch290v.rb:2:in `divisor': wrong number of arguments (given 0, expected 1) (ArgumentError)\n\tfrom /tmp/tmpptch290v.rb:63:in `<main>'\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |i| n % i == 0 }.count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1666122643,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9oewt5sq\nStarted\n.\nFinished in 0.000429338 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2329.17 tests/s, 6987.50 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |x| n % x == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmphe7uh1st\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmphe7uh1st.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007112713 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n140.59 tests/s, 140.59 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7qezyuir\nStarted\n.\nFinished in 0.000746073 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1340.35 tests/s, 4021.05 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a rbthon function to find the number of divisors of a given integer.\ndef divisor(n)\n  (1..n).select { |x| n % x == 0 }\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
      "timestamp": 1665510043,
      "stdout": "Loaded suite /tmp/tmphe7uh1st\nStarted\nF\n===============================================================================\nFailure: test_divisor(TestHumanEval)\n/tmp/tmphe7uh1st.rb:9:in `test_divisor'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_divisor\n      8:     candidate = method(:divisor)\n  =>  9:     assert_equal(4, candidate.call(15))\n     10:     assert_equal(6, candidate.call(12))\n     11:     assert_equal(3, candidate.call(9))\n     12:   end\n<4> expected but was\n<[1, 3, 5, 15]>\n===============================================================================\n\nFinished in 0.007112713 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n140.59 tests/s, 140.59 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
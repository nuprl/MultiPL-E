{
  "name": "mbpp_69_is_sublist",
  "language": "rb",
  "prompt": "# Write a function to check whether an array contains the given subarray or not.\ndef is_sublist(l, s)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_69_is_sublist.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_is_sublist\n    candidate = method(:is_sublist)\n    assert_equal(false, candidate.call([2, 4, 3, 5, 7], [3, 7]))\n    assert_equal(true, candidate.call([2, 4, 3, 5, 7], [4, 3]))\n    assert_equal(false, candidate.call([2, 4, 3, 5, 7], [1, 6]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  s.each_with_index.all? { |e, i| e == l[i] }\nend",
    "  s.each_with_index.all? { |e, i| e == l[i] }\nend",
    "  s.each_with_index.all? { |e, i| e == l[i] }\nend",
    "  s.each_with_index.all? { |e, i| e == l[i] }\nend",
    "  s.each_with_index.all? { |e, i| e == l[i] }\nend",
    "  s.each_with_index.all? { |e, i| e == l[i] }\nend",
    "  s.each_with_index.all? { |e, i| e == l[i] }\nend",
    "  s.each_with_index.all? { |e, i| e == l[i] }\nend",
    "  s.each_with_index.all? { |e, i| e == l[i] }\nend",
    "  s.each_with_index.all? { |e, i| e == l[i] } if s.size <= l.size\nend",
    "  s.each_with_index.all? { |e, i| e == l[i] }\nend",
    "  s.each_with_index.all? { |e, i| e == l[i] }\nend",
    "  s.each_with_index.all? { |e, i| e == l[i] }\nend",
    "  s.each_with_index.all? { |e,i| e == l[i] }\nend",
    "  s.each_with_index.all? { |e, i| e == l[i] }\nend",
    "  s.each_with_index.all? { |e, i| e == l[i] }\nend",
    "  return true if s.empty?\n  return false if l.empty?\n  return l.join.include?(s.join)\nend",
    "  s.each_with_index.all? { |e, i| e == l[i] }\nend",
    "  s.each_with_index.all? { |e, i| e == l[i] }\nend",
    "  s.each_with_index.all? { |e, i| e == l[i] }\nend"
  ]
}
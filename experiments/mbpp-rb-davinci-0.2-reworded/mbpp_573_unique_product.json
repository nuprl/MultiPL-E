{
  "name": "mbpp_573_unique_product",
  "language": "rb",
  "prompt": "# Write a rbthon function to calculate the product of the unique numbers in a given array.\ndef unique_product(list_data)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_573_unique_product.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_unique_product\n    candidate = method(:unique_product)\n    assert_equal(720000000, candidate.call([10, 20, 30, 40, 20, 50, 60, 40]))\n    assert_equal(6, candidate.call([1, 2, 3, 1]))\n    assert_equal(0, candidate.call([7, 8, 9, 0, 1, 1]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  list_data.uniq.inject(:*)\nend",
    "  list_data.uniq.inject(:*)\nend",
    "  list_data.uniq.inject(:*)\nend",
    "  list_data.uniq.inject(:*)\nend",
    "  list_data.uniq.inject(:*)\nend",
    "  list_data.uniq.reduce(:*)\nend",
    "  list_data.uniq.inject(:*)\nend",
    "  list_data.uniq.inject(:*)\nend",
    "  list_data.uniq.inject(:*)\nend",
    "  list_data.uniq.reduce(:*)\nend",
    "  list_data.uniq.inject(:*)\nend",
    "  list_data.uniq.inject(:*)\nend",
    "  list_data.uniq.inject(:*)\nend",
    "  list_data.uniq.inject(:*)\nend",
    "  list_data.uniq.inject(:*)\nend",
    "  list_data.uniq.inject(:*)\nend",
    "  list_data.uniq.inject(:*)\nend",
    "  list_data.uniq.inject(:*)\nend",
    "  list_data.uniq.inject(:*)\nend",
    "  list_data.uniq.inject(:*)\nend"
  ]
}
{
  "name": "mbpp_731_lateralsurface_cone",
  "language": "rb",
  "prompt": "# Write a function to find the lateral surface area of a cone given radius r and the height h.\ndef lateralsurface_cone(r, h)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_731_lateralsurface_cone.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_lateralsurface_cone\n    candidate = method(:lateralsurface_cone)\n    assert_equal(204.20352248333654, candidate.call(5, 12))\n    assert_equal(566.3586699569488, candidate.call(10, 15))\n    assert_equal(1521.8090132193388, candidate.call(19, 17))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  (Math::PI * r * Math.sqrt(r**2 + h**2)).round(2)\nend",
    "  (Math::PI * r * Math.sqrt((r**2) + (h**2))).round(2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  (Math::PI * r * Math.sqrt((r ** 2) + (h ** 2))).round(2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return (Math::PI * r * Math.sqrt(r**2 + h**2)).round(2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  (Math::PI * r * Math.sqrt(r**2 + h**2)).round(2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  (Math::PI * r * Math.sqrt(r**2 + h**2)).round(2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "\treturn Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  (Math::PI * r * Math.sqrt(r**2 + h**2)).round(2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  (Math::PI * r * Math.sqrt(r**2 + h**2)).round(2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  (Math::PI * r * Math.sqrt(r**2 + h**2)).round(2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  return Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  (Math::PI * r * Math.sqrt((r**2) + (h**2))).round(2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend",
    "  Math::PI * r * Math.sqrt(r**2 + h**2)\nend"
  ]
}
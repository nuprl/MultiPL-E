{
  "name": "mbpp_639_sample_nam",
  "language": "rb",
  "prompt": "# Write a function to sum the length of the names of a given array of names after removing the names that start with a lowercase letter.\ndef sample_nam(sample_names)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_639_sample_nam.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sample_nam\n    candidate = method(:sample_nam)\n    assert_equal(16, candidate.call([\"sally\", \"Dylan\", \"rebecca\", \"Diana\", \"Joanne\", \"keith\"]))\n    assert_equal(10, candidate.call([\"php\", \"res\", \"Python\", \"abcd\", \"Java\", \"aaa\"]))\n    assert_equal(6, candidate.call([\"abcd\", \"Python\", \"abba\", \"aba\"]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  sample_names.select {|name| name[0] =~ /[A-Z]/}.map {|name| name.length}.reduce(:+)\nend",
    "  sample_names.select {|name| name[0].upcase == name[0]}.map {|name| name.length}.reduce(:+)\nend",
    "  sample_names.select {|name| name[0] =~ /[A-Z]/}.map {|name| name.length}.reduce(:+)\nend",
    "  sample_names.select {|name| name[0] =~ /[A-Z]/}.map {|name| name.length}.reduce(:+)\nend",
    "  sample_names.select { |name| name[0].upcase == name[0] }.map { |name| name.length }.reduce(:+)\nend",
    "  sample_names.select { |name| name[0] =~ /[A-Z]/ }.map(&:length).sum\nend",
    "  sample_names.select { |name| name[0] =~ /[A-Z]/ }.map { |name| name.length }.sum\nend",
    "  sample_names.reject {|name| name[0] =~ /[a-z]/}.map {|name| name.length}.reduce(:+)\nend",
    "  sample_names.select { |name| name[0] =~ /[A-Z]/ }.map { |name| name.length }.sum\nend",
    "  sample_names.select{|name| name[0] =~ /[A-Z]/}.map{|name| name.length}.reduce(:+)\nend",
    "  sample_names.select{|name| name[0] =~ /[A-Z]/}.map{|name| name.length}.reduce(:+)\nend",
    "  sample_names.select {|name| name[0] == name[0].upcase}.map {|name| name.length}.reduce(:+)\nend",
    "  sample_names.select{|name| name[0] =~ /[A-Z]/}.map{|name| name.length}.reduce(:+)\nend",
    "  sample_names.select {|name| name[0] =~ /[A-Z]/}.map {|name| name.length}.reduce(:+)\nend",
    "  sample_names.select {|name| name[0] =~ /[A-Z]/}.map {|name| name.length}.reduce(:+)\nend",
    "  sample_names.delete_if {|name| name =~ /^[a-z]/}\n  sample_names.map {|name| name.length}.reduce(:+)\nend",
    "  sample_names.select { |name| name[0] =~ /[A-Z]/ }.map(&:length).reduce(:+)\nend",
    "  sample_names.select { |name| name =~ /[A-Z]/ }.map(&:length).sum\nend",
    "  sample_names.select {|name| name[0].upcase == name[0]}.map {|name| name.length}.reduce(:+)\nend",
    "  sample_names.delete_if {|name| name =~ /^[a-z]/}\n  sample_names.map {|name| name.length}.reduce(:+)\nend"
  ]
}
{
  "name": "mbpp_118_string_to_list",
  "language": "rb",
  "prompt": "# Write a function to convert a string to an array of strings split on the space character.\ndef string_to_list(string)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_118_string_to_list.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_string_to_list\n    candidate = method(:string_to_list)\n    assert_equal([\"python\", \"programming\"], candidate.call(\"python programming\"))\n    assert_equal([\"lists\", \"tuples\", \"strings\"], candidate.call(\"lists tuples strings\"))\n    assert_equal([\"write\", \"a\", \"program\"], candidate.call(\"write a program\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  string.split(\" \")\nend",
    "  string.split(\" \")\nend",
    "  string.split(\" \")\nend",
    "  string.split(\" \")\nend",
    "  string.split(\" \")\nend",
    "  string.split(\" \")\nend",
    "  string.split(\" \")\nend",
    "  string.split(\" \")\nend",
    "  string.split(\" \")\nend",
    "  string.split(\" \")\nend",
    "  string.split(\" \")\nend",
    "  string.split(\" \")\nend",
    "  string.split(\" \")\nend",
    "  string.split(\" \")\nend",
    "  string.split(\" \")\nend",
    "  string.split(\" \")\nend",
    "  string.split(\" \")\nend",
    "  string.split(\" \")\nend",
    "  string.split(\" \")\nend",
    "  string.split(\" \")\nend"
  ]
}
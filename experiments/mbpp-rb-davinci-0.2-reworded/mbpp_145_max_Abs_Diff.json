{
  "name": "mbpp_145_max_Abs_Diff",
  "language": "rb",
  "prompt": "# Write a rbthon function to find the maximum difference between any two elements in a given array.\ndef max_Abs_Diff(arr)\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_145_max_Abs_Diff.py",
  "prompt_terminology": "reworded",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_max_Abs_Diff\n    candidate = method(:max_Abs_Diff)\n    assert_equal(4, candidate.call([2, 1, 5, 3]))\n    assert_equal(8, candidate.call([9, 3, 2, 5, 1]))\n    assert_equal(2, candidate.call([3, 2, 1]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  max_diff = 0\n  for i in 0..arr.length-1\n    for j in 0..arr.length-1\n      if (arr[i] - arr[j]).abs > max_diff\n        max_diff = (arr[i] - arr[j]).abs\n      end\n    end\n  end\n  return max_diff\nend",
    "  max_diff = 0\n  for i in 0..arr.length-1\n    for j in i+1..arr.length-1\n      if (arr[i] - arr[j]).abs > max_diff\n        max_diff = (arr[i] - arr[j]).abs\n      end\n    end\n  end\n  return max_diff\nend",
    "  max_diff = 0\n  for i in 0..arr.length-1\n    for j in i+1..arr.length-1\n      diff = (arr[i] - arr[j]).abs\n      if diff > max_diff\n        max_diff = diff\n      end\n    end\n  end\n  return max_diff\nend",
    "  max_diff = 0\n  for i in 0..arr.length-1\n    for j in i+1..arr.length-1\n      if (arr[i] - arr[j]).abs > max_diff\n        max_diff = (arr[i] - arr[j]).abs\n      end\n    end\n  end\n  return max_diff\nend",
    "  max_diff = 0\n  for i in 0..arr.length-1\n    for j in i+1..arr.length-1\n      diff = (arr[i] - arr[j]).abs\n      if diff > max_diff\n        max_diff = diff\n      end\n    end\n  end\n  return max_diff\nend",
    "  max_diff = 0\n  for i in 0..arr.length-1\n    for j in i+1..arr.length-1\n      if (arr[i] - arr[j]).abs > max_diff\n        max_diff = (arr[i] - arr[j]).abs\n      end\n    end\n  end\n  return max_diff\nend",
    "  max_diff = 0\n  arr.each_with_index do |x, i|\n    arr.each_with_index do |y, j|\n      if i != j\n        diff = (x - y).abs\n        max_diff = diff if diff > max_diff\n      end\n    end\n  end\n  max_diff\nend",
    "  max_diff = 0\n  for i in 0..arr.length-1\n    for j in i+1..arr.length-1\n      if (arr[i] - arr[j]).abs > max_diff\n        max_diff = (arr[i] - arr[j]).abs\n      end\n    end\n  end\n  return max_diff\nend",
    "  max_diff = arr[1] - arr[0]\n  arr.each_with_index do |num, index|\n    next if index == 0\n    diff = num - arr[index - 1]\n    max_diff = diff if diff > max_diff\n  end\n  max_diff\nend",
    "  max_diff = 0\n  arr.each_with_index do |num, index|\n    arr.each_with_index do |num2, index2|\n      if index2 > index\n        diff = (num - num2).abs\n        max_diff = diff if diff > max_diff\n      end\n    end\n  end\n  max_diff\nend",
    "  max_diff = 0\n  for i in 0..arr.length-1\n    for j in i+1..arr.length-1\n      if (arr[i] - arr[j]).abs > max_diff\n        max_diff = (arr[i] - arr[j]).abs\n      end\n    end\n  end\n  return max_diff\nend",
    "  max = 0\n  for i in 0..arr.length-1\n    for j in i+1..arr.length-1\n      if (arr[i]-arr[j]).abs > max\n        max = (arr[i]-arr[j]).abs\n      end\n    end\n  end\n  return max\nend",
    "  max_diff = 0\n  for i in 0..arr.length-1\n    for j in i+1..arr.length-1\n      diff = (arr[i] - arr[j]).abs\n      if diff > max_diff\n        max_diff = diff\n      end\n    end\n  end\n  return max_diff\nend",
    "  max_diff = 0\n  for i in 0..arr.length-1\n    for j in i+1..arr.length-1\n      diff = (arr[i] - arr[j]).abs\n      max_diff = diff if max_diff < diff\n    end\n  end\n  max_diff\nend",
    "  max_diff = 0\n  arr.each_with_index do |item, index|\n    arr.each_with_index do |item2, index2|\n      if index != index2\n        diff = (item - item2).abs\n        if diff > max_diff\n          max_diff = diff\n        end\n      end\n    end\n  end\n  return max_diff\nend",
    "  max_diff = 0\n  for i in 0..arr.length-1\n    for j in i+1..arr.length-1\n      if (arr[i] - arr[j]).abs > max_diff\n        max_diff = (arr[i] - arr[j]).abs\n      end\n    end\n  end\n  return max_diff\nend",
    "  max_diff = 0\n  for i in 0...arr.length\n    for j in i...arr.length\n      if (arr[i] - arr[j]).abs > max_diff\n        max_diff = (arr[i] - arr[j]).abs\n      end\n    end\n  end\n  return max_diff\nend",
    "  max_diff = 0\n  for i in 0..arr.length-1\n    for j in i+1..arr.length-1\n      diff = (arr[i] - arr[j]).abs\n      if diff > max_diff\n        max_diff = diff\n      end\n    end\n  end\n  return max_diff\nend",
    "  max_diff = 0\n  arr.each_with_index do |e, i|\n    arr.each_with_index do |e1, j|\n      if i != j\n        diff = (e - e1).abs\n        max_diff = diff if diff > max_diff\n      end\n    end\n  end\n  max_diff\nend",
    "  max = 0\n  arr.each_with_index do |num, i|\n    arr.each_with_index do |num2, j|\n      if i != j\n        diff = (num - num2).abs\n        max = diff if diff > max\n      end\n    end\n  end\n  max\nend"
  ]
}